/**
 * bibtex-tidy v1.11.0
 * https://github.com/FlamingTempura/bibtex-tidy
 *
 * DO NOT EDIT THIS FILE. This file is automatically generated
 * using `npm run build`. Edit files in './src' then rebuild.
 **/
"use strict";
function _array_like_to_array(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _async_to_generator(fn) {
  return function () {
    var self1 = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self1, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _iterable_to_array(iter) {
  if ((typeof Symbol !== "undefined" && iter[Symbol.iterator] != null) || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : (typeof Symbol !== "undefined" && arr[Symbol.iterator]) || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(
        Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }),
      );
    }
    ownKeys.forEach(function (key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  source = source != null ? source : {};
  if (Object.getOwnPropertyDescriptors) {
    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
  } else {
    ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _to_array(arr) {
  return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _array_like_to_array(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function _ts_generator(thisArg, body) {
  var f,
    y,
    t,
    g,
    _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: [],
    };
  return (
    (g = { next: verb(0), throw: verb(1), return: verb(2) }),
    typeof Symbol === "function" &&
      (g[Symbol.iterator] = function () {
        return this;
      }),
    g
  );
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (((f = 1), y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)) return t;
        if (((y = 0), t)) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
(() => {
  var _r,
    _class,
    _class1,
    _class2,
    _class3,
    _class4,
    _class5,
    _class6,
    _class7,
    _class8,
    _class9,
    _class10,
    _class11,
    _class12,
    _class13,
    _class14,
    _r1,
    _class15,
    _class16,
    _class17,
    _r2,
    _r3,
    _r4,
    _class18,
    _class19,
    _class20,
    _class21,
    _r5,
    _r6,
    _class22,
    _r7,
    _r8,
    _r9,
    _class23,
    _r10,
    _class24,
    _r11,
    _class25,
    _r12,
    _class26,
    _class27,
    _class28,
    _r13,
    _r14,
    _r15,
    _class29,
    _r16,
    _r17,
    _r18,
    _r19,
    _class30,
    _r20,
    _class31,
    _class32,
    _class33,
    _class34,
    _r21,
    _r22,
    _class35,
    _r23,
    _r24,
    _r25,
    _r26,
    _r27,
    _r28,
    _class36,
    _class37,
    _r29,
    _r30,
    _r31,
    _r32,
    _class38,
    _class39,
    _r33,
    _r34,
    _class40,
    _r35,
    _r36,
    _class41,
    _class42,
    _class43,
    _class44,
    _class45,
    _class46,
    _class47,
    _r37,
    _r38,
    _class48,
    _r39,
    _r40,
    _class49,
    _r41,
    _class50,
    _class51,
    _class52,
    _class53,
    _class54,
    _class55,
    _class56,
    _class57,
    _class58,
    _class59,
    _r42,
    _r43,
    _r44,
    _class60,
    _class61,
    _r45,
    _class62,
    _class63,
    _class64,
    _class65,
    _class66,
    _class67,
    _class68,
    _class69,
    _class70,
    _class71,
    _r46,
    _r47,
    _r48,
    _r49,
    _r50,
    _class72,
    _r51,
    _class73,
    _r52,
    _class74,
    _class75,
    _r53,
    _class76,
    _class77,
    _r54,
    _r55,
    _class78,
    _class79,
    _class80,
    _r56,
    _class81,
    _r57,
    _r58,
    _class82,
    _class83,
    _r59,
    _class84,
    _r60,
    _r61,
    _class85,
    _r62,
    _class86,
    _class87,
    _r63,
    _class88,
    _r64,
    _class89,
    _class90,
    _r65,
    _class91,
    _class92,
    _class93,
    _class94,
    _class95,
    _class96,
    _class97,
    _class98,
    _r66,
    _class99,
    _class100,
    _class101,
    _class102,
    _class103,
    _class104,
    _class105,
    _class106,
    _class107,
    _class108,
    _class109,
    _class110,
    _class111,
    _class112,
    _class113,
    _class114,
    _class115,
    _class116,
    _class117;
  var k1 = Object.create;
  var Ho = Object.defineProperty;
  var S1 = Object.getOwnPropertyDescriptor;
  var w1 = Object.getOwnPropertyNames;
  var Q1 = Object.getPrototypeOf,
    _1 = Object.prototype.hasOwnProperty;
  var h = (r, e) => Ho(r, "name", { value: e, configurable: !0 });
  var x = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
  var U1 = (r, e, t, i) => {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if ((e && typeof e == "object") || typeof e == "function")
      try {
        var _loop = function () {
          var n = _step.value;
          !_1.call(r, n) && n !== t && Ho(r, n, { get: () => e[n], enumerable: !(i = S1(e, n)) || i.enumerable });
        };
        for (var _iterator = w1(e)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    return r;
  };
  var Nn = (r, e, t) => ((t = r != null ? k1(Q1(r)) : {}), U1(e || !r || !r.__esModule ? Ho(t, "default", { value: r, enumerable: !0 }) : t, r));
  var tt = x((jo, hc) => {
    "use strict";
    var wr = h(function (r) {
      return r && r.Math === Math && r;
    }, "check");
    hc.exports =
      wr(typeof globalThis == "object" && globalThis) ||
      wr(typeof window == "object" && window) ||
      wr(typeof self == "object" && self) ||
      wr(typeof global == "object" && global) ||
      wr(typeof jo == "object" && jo) ||
      (function () {
        return this;
      })() ||
      Function("return this")();
  });
  var Je = x((fw, cc) => {
    "use strict";
    cc.exports = function (r) {
      try {
        return !!r();
      } catch (e) {
        return !0;
      }
    };
  });
  var Ge = x((dw, fc) => {
    "use strict";
    var L1 = Je();
    fc.exports = !L1(function () {
      return (
        Object.defineProperty({}, 1, {
          get: function get() {
            return 7;
          },
        })[1] !== 7
      );
    });
  });
  var Mn = x((pw, dc) => {
    "use strict";
    var O1 = Je();
    dc.exports = !O1(function () {
      var r = function () {}.bind();
      return typeof r != "function" || r.hasOwnProperty("prototype");
    });
  });
  var Vt = x((mw, pc) => {
    "use strict";
    var T1 = Mn(),
      Pn = Function.prototype.call;
    pc.exports = T1
      ? Pn.bind(Pn)
      : function () {
          return Pn.apply(Pn, arguments);
        };
  });
  var Fc = x((Dc) => {
    "use strict";
    var mc = {}.propertyIsEnumerable,
      gc = Object.getOwnPropertyDescriptor,
      R1 = gc && !mc.call({ 1: 2 }, 1);
    Dc.f = R1
      ? h(function (e) {
          var t = gc(this, e);
          return !!t && t.enumerable;
        }, "propertyIsEnumerable")
      : mc;
  });
  var $i = x((Fw, bc) => {
    "use strict";
    bc.exports = function (r, e) {
      return { enumerable: !(r & 1), configurable: !(r & 2), writable: !(r & 4), value: e };
    };
  });
  var Ne = x((bw, Cc) => {
    "use strict";
    var yc = Mn(),
      Ec = Function.prototype,
      Yo = Ec.call,
      N1 = yc && Ec.bind.bind(Yo, Yo);
    Cc.exports = yc
      ? N1
      : function (r) {
          return function () {
            return Yo.apply(r, arguments);
          };
        };
  });
  var Qr = x((yw, vc) => {
    "use strict";
    var Bc = Ne(),
      M1 = Bc({}.toString),
      P1 = Bc("".slice);
    vc.exports = function (r) {
      return P1(M1(r), 8, -1);
    };
  });
  var Ac = x((Ew, xc) => {
    "use strict";
    var I1 = Ne(),
      $1 = Je(),
      q1 = Qr(),
      Jo = Object,
      V1 = I1("".split);
    xc.exports = $1(function () {
      return !Jo("z").propertyIsEnumerable(0);
    })
      ? function (r) {
          return q1(r) === "String" ? V1(r, "") : Jo(r);
        }
      : Jo;
  });
  var In = x((Cw, kc) => {
    "use strict";
    kc.exports = function (r) {
      return r == null;
    };
  });
  var _r67 = x((Bw, Sc) => {
    "use strict";
    var W1 = In(),
      z1 = TypeError;
    Sc.exports = function (r) {
      if (W1(r)) throw new z1("Can't call method on " + r);
      return r;
    };
  });
  var qi = x((vw, wc) => {
    "use strict";
    var H1 = Ac(),
      j1 = _r67();
    wc.exports = function (r) {
      return H1(j1(r));
    };
  });
  var Te = x((xw, Qc) => {
    "use strict";
    var Go = typeof document == "object" && document.all;
    Qc.exports =
      typeof Go > "u" && Go !== void 0
        ? function (r) {
            return typeof r == "function" || r === Go;
          }
        : function (r) {
            return typeof r == "function";
          };
  });
  var bt = x((Aw, _c) => {
    "use strict";
    var Y1 = Te();
    _c.exports = function (r) {
      return typeof r == "object" ? r !== null : Y1(r);
    };
  });
  var Ur = x((kw, Uc) => {
    "use strict";
    var Xo = tt(),
      J1 = Te(),
      G1 = h(function (r) {
        return J1(r) ? r : void 0;
      }, "aFunction");
    Uc.exports = function (r, e) {
      return arguments.length < 2 ? G1(Xo[r]) : Xo[r] && Xo[r][e];
    };
  });
  var $n = x((ww, Lc) => {
    "use strict";
    var X1 = Ne();
    Lc.exports = X1({}.isPrototypeOf);
  });
  var Tc = x((Qw, Oc) => {
    "use strict";
    Oc.exports = (typeof navigator < "u" && String(navigator.userAgent)) || "";
  });
  var qc = x((_w, $c) => {
    "use strict";
    var Ic = tt(),
      Ko = Tc(),
      Rc = Ic.process,
      Nc = Ic.Deno,
      Mc = (Rc && Rc.versions) || (Nc && Nc.version),
      Pc = Mc && Mc.v8,
      yt,
      qn;
    Pc && ((yt = Pc.split(".")), (qn = yt[0] > 0 && yt[0] < 4 ? 1 : +(yt[0] + yt[1])));
    !qn && Ko && ((yt = Ko.match(/Edge\/(\d+)/)), (!yt || yt[1] >= 74) && ((yt = Ko.match(/Chrome\/(\d+)/)), yt && (qn = +yt[1])));
    $c.exports = qn;
  });
  var Zo = x((Uw, Wc) => {
    "use strict";
    var Vc = qc(),
      K1 = Je(),
      Z1 = tt(),
      eb = Z1.String;
    Wc.exports =
      !!Object.getOwnPropertySymbols &&
      !K1(function () {
        var r = Symbol("symbol detection");
        return !eb(r) || !(Object(r) instanceof Symbol) || (!Symbol.sham && Vc && Vc < 41);
      });
  });
  var el = x((Lw, zc) => {
    "use strict";
    var tb = Zo();
    zc.exports = tb && !Symbol.sham && typeof Symbol.iterator == "symbol";
  });
  var tl = x((Ow, Hc) => {
    "use strict";
    var ib = Ur(),
      rb = Te(),
      nb = $n(),
      sb = el(),
      ob = Object;
    Hc.exports = sb
      ? function (r) {
          return typeof r == "symbol";
        }
      : function (r) {
          var e = ib("Symbol");
          return rb(e) && nb(e.prototype, ob(r));
        };
  });
  var Vn = x((Tw, jc) => {
    "use strict";
    var lb = String;
    jc.exports = function (r) {
      try {
        return lb(r);
      } catch (e) {
        return "Object";
      }
    };
  });
  var Vi = x((Rw, Yc) => {
    "use strict";
    var ub = Te(),
      ab = Vn(),
      hb = TypeError;
    Yc.exports = function (r) {
      if (ub(r)) return r;
      throw new hb(ab(r) + " is not a function");
    };
  });
  var Wn = x((Nw, Jc) => {
    "use strict";
    var cb = Vi(),
      fb = In();
    Jc.exports = function (r, e) {
      var t = r[e];
      return fb(t) ? void 0 : cb(t);
    };
  });
  var Xc = x((Mw, Gc) => {
    "use strict";
    var il = Vt(),
      rl = Te(),
      nl = bt(),
      db = TypeError;
    Gc.exports = function (r, e) {
      var t, i;
      if ((e === "string" && rl((t = r.toString)) && !nl((i = il(t, r)))) || (rl((t = r.valueOf)) && !nl((i = il(t, r)))) || (e !== "string" && rl((t = r.toString)) && !nl((i = il(t, r))))) return i;
      throw new db("Can't convert object to primitive value");
    };
  });
  var Wi = x((Pw, Kc) => {
    "use strict";
    Kc.exports = !1;
  });
  var zn = x((Iw, ef) => {
    "use strict";
    var Zc = tt(),
      pb = Object.defineProperty;
    ef.exports = function (r, e) {
      try {
        pb(Zc, r, { value: e, configurable: !0, writable: !0 });
      } catch (e1) {
        Zc[r] = e;
      }
      return e;
    };
  });
  var Hn = x(($w, nf) => {
    "use strict";
    var mb = Wi(),
      gb = tt(),
      Db = zn(),
      tf = "__core-js_shared__",
      rf = (nf.exports = gb[tf] || Db(tf, {}));
    (rf.versions || (rf.versions = [])).push({ version: "3.37.0", mode: mb ? "pure" : "global", copyright: "\xa9 2014-2024 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.37.0/LICENSE", source: "https://github.com/zloirock/core-js" });
  });
  var sl = x((qw, of) => {
    "use strict";
    var sf = Hn();
    of.exports = function (r, e) {
      return sf[r] || (sf[r] = e || {});
    };
  });
  var jn = x((Vw, lf) => {
    "use strict";
    var Fb = _r67(),
      bb = Object;
    lf.exports = function (r) {
      return bb(Fb(r));
    };
  });
  var Et = x((Ww, uf) => {
    "use strict";
    var yb = Ne(),
      Eb = jn(),
      Cb = yb({}.hasOwnProperty);
    uf.exports =
      Object.hasOwn ||
      h(function (e, t) {
        return Cb(Eb(e), t);
      }, "hasOwn");
  });
  var ol = x((Hw, af) => {
    "use strict";
    var Bb = Ne(),
      vb = 0,
      xb = Math.random(),
      Ab = Bb((1).toString);
    af.exports = function (r) {
      return "Symbol(" + (r === void 0 ? "" : r) + ")_" + Ab(++vb + xb, 36);
    };
  });
  var it = x((jw, cf) => {
    "use strict";
    var kb = tt(),
      Sb = sl(),
      hf = Et(),
      wb = ol(),
      Qb = Zo(),
      _b = el(),
      zi = kb.Symbol,
      ll = Sb("wks"),
      Ub = _b ? zi.for || zi : (zi && zi.withoutSetter) || wb;
    cf.exports = function (r) {
      return hf(ll, r) || (ll[r] = Qb && hf(zi, r) ? zi[r] : Ub("Symbol." + r)), ll[r];
    };
  });
  var mf = x((Yw, pf) => {
    "use strict";
    var Lb = Vt(),
      ff = bt(),
      df = tl(),
      Ob = Wn(),
      Tb = Xc(),
      Rb = it(),
      Nb = TypeError,
      Mb = Rb("toPrimitive");
    pf.exports = function (r, e) {
      if (!ff(r) || df(r)) return r;
      var t = Ob(r, Mb),
        i;
      if (t) {
        if ((e === void 0 && (e = "default"), (i = Lb(t, r, e)), !ff(i) || df(i))) return i;
        throw new Nb("Can't convert object to primitive value");
      }
      return e === void 0 && (e = "number"), Tb(r, e);
    };
  });
  var ul = x((Jw, gf) => {
    "use strict";
    var Pb = mf(),
      Ib = tl();
    gf.exports = function (r) {
      var e = Pb(r, "string");
      return Ib(e) ? e : e + "";
    };
  });
  var hl = x((Gw, Ff) => {
    "use strict";
    var $b = tt(),
      Df = bt(),
      al = $b.document,
      qb = Df(al) && Df(al.createElement);
    Ff.exports = function (r) {
      return qb ? al.createElement(r) : {};
    };
  });
  var cl = x((Xw, bf) => {
    "use strict";
    var Vb = Ge(),
      Wb = Je(),
      zb = hl();
    bf.exports =
      !Vb &&
      !Wb(function () {
        return (
          Object.defineProperty(zb("div"), "a", {
            get: function get() {
              return 7;
            },
          }).a !== 7
        );
      });
  });
  var fl = x((Ef) => {
    "use strict";
    var Hb = Ge(),
      jb = Vt(),
      Yb = Fc(),
      Jb = $i(),
      Gb = qi(),
      Xb = ul(),
      Kb = Et(),
      Zb = cl(),
      yf = Object.getOwnPropertyDescriptor;
    Ef.f = Hb
      ? yf
      : h(function (e, t) {
          if (((e = Gb(e)), (t = Xb(t)), Zb))
            try {
              return yf(e, t);
            } catch (e) {}
          if (Kb(e, t)) return Jb(!jb(Yb.f, e, t), e[t]);
        }, "getOwnPropertyDescriptor");
  });
  var dl = x((e4, Cf) => {
    "use strict";
    var e2 = Ge(),
      t2 = Je();
    Cf.exports =
      e2 &&
      t2(function () {
        return Object.defineProperty(function () {}, "prototype", { value: 42, writable: !1 }).prototype !== 42;
      });
  });
  var Wt = x((t4, Bf) => {
    "use strict";
    var i2 = bt(),
      r2 = String,
      n2 = TypeError;
    Bf.exports = function (r) {
      if (i2(r)) return r;
      throw new n2(r2(r) + " is not an object");
    };
  });
  var St = x((xf) => {
    "use strict";
    var s2 = Ge(),
      o2 = cl(),
      l2 = dl(),
      Yn = Wt(),
      vf = ul(),
      u2 = TypeError,
      pl = Object.defineProperty,
      a2 = Object.getOwnPropertyDescriptor,
      ml = "enumerable",
      gl = "configurable",
      Dl = "writable";
    xf.f = s2
      ? l2
        ? h(function (e, t, i) {
            if ((Yn(e), (t = vf(t)), Yn(i), typeof e == "function" && t === "prototype" && "value" in i && Dl in i && !i[Dl])) {
              var n = a2(e, t);
              n && n[Dl] && ((e[t] = i.value), (i = { configurable: gl in i ? i[gl] : n[gl], enumerable: ml in i ? i[ml] : n[ml], writable: !1 }));
            }
            return pl(e, t, i);
          }, "defineProperty")
        : pl
      : h(function (e, t, i) {
          if ((Yn(e), (t = vf(t)), Yn(i), o2))
            try {
              return pl(e, t, i);
            } catch (e) {}
          if ("get" in i || "set" in i) throw new u2("Accessors not supported");
          return "value" in i && (e[t] = i.value), e;
        }, "defineProperty");
  });
  var Jn = x((n4, Af) => {
    "use strict";
    var h2 = Ge(),
      c2 = St(),
      f2 = $i();
    Af.exports = h2
      ? function (r, e, t) {
          return c2.f(r, e, f2(1, t));
        }
      : function (r, e, t) {
          return (r[e] = t), r;
        };
  });
  var Gn = x((s4, Sf) => {
    "use strict";
    var Fl = Ge(),
      d2 = Et(),
      kf = Function.prototype,
      p2 = Fl && Object.getOwnPropertyDescriptor,
      bl = d2(kf, "name"),
      m2 = bl && h(function () {}, "something").name === "something",
      g2 = bl && (!Fl || (Fl && p2(kf, "name").configurable));
    Sf.exports = { EXISTS: bl, PROPER: m2, CONFIGURABLE: g2 };
  });
  var El = x((l4, wf) => {
    "use strict";
    var D2 = Ne(),
      F2 = Te(),
      yl = Hn(),
      b2 = D2(Function.toString);
    F2(yl.inspectSource) ||
      (yl.inspectSource = function (r) {
        return b2(r);
      });
    wf.exports = yl.inspectSource;
  });
  var Uf = x((u4, _f) => {
    "use strict";
    var y2 = tt(),
      E2 = Te(),
      Qf = y2.WeakMap;
    _f.exports = E2(Qf) && /native code/.test(String(Qf));
  });
  var Xn = x((a4, Of) => {
    "use strict";
    var C2 = sl(),
      B2 = ol(),
      Lf = C2("keys");
    Of.exports = function (r) {
      return Lf[r] || (Lf[r] = B2(r));
    };
  });
  var Kn = x((h4, Tf) => {
    "use strict";
    Tf.exports = {};
  });
  var ts = x((c4, Mf) => {
    "use strict";
    var v2 = Uf(),
      Nf = tt(),
      x2 = bt(),
      A2 = Jn(),
      Cl = Et(),
      Bl = Hn(),
      k2 = Xn(),
      S2 = Kn(),
      Rf = "Object already initialized",
      vl = Nf.TypeError,
      w2 = Nf.WeakMap,
      Zn,
      Lr,
      es,
      Q2 = h(function (r) {
        return es(r) ? Lr(r) : Zn(r, {});
      }, "enforce"),
      _2 = h(function (r) {
        return function (e) {
          var t;
          if (!x2(e) || (t = Lr(e)).type !== r) throw new vl("Incompatible receiver, " + r + " required");
          return t;
        };
      }, "getterFor");
    v2 || Bl.state
      ? ((Ct = Bl.state || (Bl.state = new w2())),
        (Ct.get = Ct.get),
        (Ct.has = Ct.has),
        (Ct.set = Ct.set),
        (Zn = h(function (r, e) {
          if (Ct.has(r)) throw new vl(Rf);
          return (e.facade = r), Ct.set(r, e), e;
        }, "set")),
        (Lr = h(function (r) {
          return Ct.get(r) || {};
        }, "get")),
        (es = h(function (r) {
          return Ct.has(r);
        }, "has")))
      : ((Di = k2("state")),
        (S2[Di] = !0),
        (Zn = h(function (r, e) {
          if (Cl(r, Di)) throw new vl(Rf);
          return (e.facade = r), A2(r, Di, e), e;
        }, "set")),
        (Lr = h(function (r) {
          return Cl(r, Di) ? r[Di] : {};
        }, "get")),
        (es = h(function (r) {
          return Cl(r, Di);
        }, "has")));
    var Ct, Di;
    Mf.exports = { set: Zn, get: Lr, has: es, enforce: Q2, getterFor: _2 };
  });
  var kl = x((d4, $f) => {
    "use strict";
    var Al = Ne(),
      U2 = Je(),
      L2 = Te(),
      is = Et(),
      xl = Ge(),
      O2 = Gn().CONFIGURABLE,
      T2 = El(),
      If = ts(),
      R2 = If.enforce,
      N2 = If.get,
      Pf = String,
      rs = Object.defineProperty,
      M2 = Al("".slice),
      P2 = Al("".replace),
      I2 = Al([].join),
      $2 =
        xl &&
        !U2(function () {
          return rs(function () {}, "length", { value: 8 }).length !== 8;
        }),
      q2 = String(String).split("String"),
      V2 = ($f.exports = function V2(r, e, t) {
        M2(Pf(e), 0, 7) === "Symbol(" && (e = "[" + P2(Pf(e), /^Symbol\(([^)]*)\).*$/, "$1") + "]"), t && t.getter && (e = "get " + e), t && t.setter && (e = "set " + e), (!is(r, "name") || (O2 && r.name !== e)) && (xl ? rs(r, "name", { value: e, configurable: !0 }) : (r.name = e)), $2 && t && is(t, "arity") && r.length !== t.arity && rs(r, "length", { value: t.arity });
        try {
          t && is(t, "constructor") && t.constructor ? xl && rs(r, "prototype", { writable: !1 }) : r.prototype && (r.prototype = void 0);
        } catch (e) {}
        var i = R2(r);
        return is(i, "source") || (i.source = I2(q2, typeof e == "string" ? e : "")), r;
      });
    Function.prototype.toString = V2(
      h(function () {
        return (L2(this) && N2(this).source) || T2(this);
      }, "toString"),
      "toString",
    );
  });
  var Hi = x((m4, qf) => {
    "use strict";
    var W2 = Te(),
      z2 = St(),
      H2 = kl(),
      j2 = zn();
    qf.exports = function (r, e, t, i) {
      i || (i = {});
      var n = i.enumerable,
        s = i.name !== void 0 ? i.name : e;
      if ((W2(t) && H2(t, s, i), i.global)) n ? (r[e] = t) : j2(e, t);
      else {
        try {
          i.unsafe ? r[e] && (n = !0) : delete r[e];
        } catch (e) {}
        n ? (r[e] = t) : z2.f(r, e, { value: t, enumerable: !1, configurable: !i.nonConfigurable, writable: !i.nonWritable });
      }
      return r;
    };
  });
  var Wf = x((g4, Vf) => {
    "use strict";
    var Y2 = Math.ceil,
      J2 = Math.floor;
    Vf.exports =
      Math.trunc ||
      h(function (e) {
        var t = +e;
        return (t > 0 ? J2 : Y2)(t);
      }, "trunc");
  });
  var Sl = x((F4, zf) => {
    "use strict";
    var G2 = Wf();
    zf.exports = function (r) {
      var e = +r;
      return e !== e || e === 0 ? 0 : G2(e);
    };
  });
  var jf = x((b4, Hf) => {
    "use strict";
    var X2 = Sl(),
      K2 = Math.max,
      Z2 = Math.min;
    Hf.exports = function (r, e) {
      var t = X2(r);
      return t < 0 ? K2(t + e, 0) : Z2(t, e);
    };
  });
  var Jf = x((y4, Yf) => {
    "use strict";
    var ey = Sl(),
      ty = Math.min;
    Yf.exports = function (r) {
      var e = ey(r);
      return e > 0 ? ty(e, 9007199254740991) : 0;
    };
  });
  var Or = x((E4, Gf) => {
    "use strict";
    var iy = Jf();
    Gf.exports = function (r) {
      return iy(r.length);
    };
  });
  var Zf = x((C4, Kf) => {
    "use strict";
    var ry = qi(),
      ny = jf(),
      sy = Or(),
      Xf = h(function (r) {
        return function (e, t, i) {
          var n = ry(e),
            s = sy(n);
          if (s === 0) return !r && -1;
          var o = ny(i, s),
            l;
          if (r && t !== t) {
            for (; s > o; ) if (((l = n[o++]), l !== l)) return !0;
          } else for (; s > o; o++) if ((r || o in n) && n[o] === t) return r || o || 0;
          return !r && -1;
        };
      }, "createMethod");
    Kf.exports = { includes: Xf(!0), indexOf: Xf(!1) };
  });
  var Ql = x((v4, td) => {
    "use strict";
    var oy = Ne(),
      wl = Et(),
      ly = qi(),
      uy = Zf().indexOf,
      ay = Kn(),
      ed = oy([].push);
    td.exports = function (r, e) {
      var t = ly(r),
        i = 0,
        n = [],
        s;
      for (s in t) !wl(ay, s) && wl(t, s) && ed(n, s);
      for (; e.length > i; ) wl(t, (s = e[i++])) && (~uy(n, s) || ed(n, s));
      return n;
    };
  });
  var ns = x((x4, id) => {
    "use strict";
    id.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
  });
  var nd = x((rd) => {
    "use strict";
    var hy = Ql(),
      cy = ns(),
      fy = cy.concat("length", "prototype");
    rd.f =
      Object.getOwnPropertyNames ||
      h(function (e) {
        return hy(e, fy);
      }, "getOwnPropertyNames");
  });
  var od = x((sd) => {
    "use strict";
    sd.f = Object.getOwnPropertySymbols;
  });
  var ud = x((w4, ld) => {
    "use strict";
    var dy = Ur(),
      py = Ne(),
      my = nd(),
      gy = od(),
      Dy = Wt(),
      Fy = py([].concat);
    ld.exports =
      dy("Reflect", "ownKeys") ||
      h(function (e) {
        var t = my.f(Dy(e)),
          i = gy.f;
        return i ? Fy(t, i(e)) : t;
      }, "ownKeys");
  });
  var cd = x((_4, hd) => {
    "use strict";
    var ad = Et(),
      by = ud(),
      yy = fl(),
      Ey = St();
    hd.exports = function (r, e, t) {
      for (var i = by(e), n = Ey.f, s = yy.f, o = 0; o < i.length; o++) {
        var l = i[o];
        !ad(r, l) && !(t && ad(t, l)) && n(r, l, s(e, l));
      }
    };
  });
  var dd = x((U4, fd) => {
    "use strict";
    var Cy = Je(),
      By = Te(),
      vy = /#|\.prototype\./,
      Tr = h(function (r, e) {
        var t = Ay[xy(r)];
        return t === Sy ? !0 : t === ky ? !1 : By(e) ? Cy(e) : !!e;
      }, "isForced"),
      xy = (Tr.normalize = function xy(r) {
        return String(r).replace(vy, ".").toLowerCase();
      }),
      Ay = (Tr.data = {}),
      ky = (Tr.NATIVE = "N"),
      Sy = (Tr.POLYFILL = "P");
    fd.exports = Tr;
  });
  var Fi = x((O4, pd) => {
    "use strict";
    var ss = tt(),
      wy = fl().f,
      Qy = Jn(),
      _y = Hi(),
      Uy = zn(),
      Ly = cd(),
      Oy = dd();
    pd.exports = function (r, e) {
      var t = r.target,
        i = r.global,
        n = r.stat,
        s,
        o,
        l,
        u,
        a,
        c;
      if ((i ? (o = ss) : n ? (o = ss[t] || Uy(t, {})) : (o = ss[t] && ss[t].prototype), o))
        for (l in e) {
          if (((a = e[l]), r.dontCallGetSet ? ((c = wy(o, l)), (u = c && c.value)) : (u = o[l]), (s = Oy(i ? l : t + (n ? "." : "#") + l, r.forced)), !s && u !== void 0)) {
            if (typeof a == typeof u) continue;
            Ly(a, u);
          }
          (r.sham || (u && u.sham)) && Qy(a, "sham", !0), _y(o, l, a, r);
        }
    };
  });
  var _l = x((T4, md) => {
    "use strict";
    var Ty = Qr();
    md.exports =
      Array.isArray ||
      h(function (e) {
        return Ty(e) === "Array";
      }, "isArray");
  });
  var Dd = x((N4, gd) => {
    "use strict";
    var Ry = TypeError,
      Ny = 9007199254740991;
    gd.exports = function (r) {
      if (r > Ny) throw Ry("Maximum allowed index exceeded");
      return r;
    };
  });
  var bd = x((M4, Fd) => {
    "use strict";
    var My = Qr(),
      Py = Ne();
    Fd.exports = function (r) {
      if (My(r) === "Function") return Py(r);
    };
  });
  var os = x((P4, Ed) => {
    "use strict";
    var yd = bd(),
      Iy = Vi(),
      $y = Mn(),
      qy = yd(yd.bind);
    Ed.exports = function (r, e) {
      return (
        Iy(r),
        e === void 0
          ? r
          : $y
            ? qy(r, e)
            : function () {
                return r.apply(e, arguments);
              }
      );
    };
  });
  var vd = x((I4, Bd) => {
    "use strict";
    var Vy = _l(),
      Wy = Or(),
      zy = Dd(),
      Hy = os(),
      Cd = h(function (r, e, t, i, n, s, o, l) {
        for (var u = n, a = 0, c = o ? Hy(o, l) : !1, f, d; a < i; ) a in t && ((f = c ? c(t[a], a, e) : t[a]), s > 0 && Vy(f) ? ((d = Wy(f)), (u = Cd(r, e, f, d, u, s - 1) - 1)) : (zy(u + 1), (r[u] = f)), u++), a++;
        return u;
      }, "flattenIntoArray");
    Bd.exports = Cd;
  });
  var kd = x((q4, Ad) => {
    "use strict";
    var jy = it(),
      Yy = jy("toStringTag"),
      xd = {};
    xd[Yy] = "z";
    Ad.exports = String(xd) === "[object z]";
  });
  var Rr = x((V4, Sd) => {
    "use strict";
    var Jy = kd(),
      Gy = Te(),
      ls = Qr(),
      Xy = it(),
      Ky = Xy("toStringTag"),
      Zy = Object,
      eE =
        ls(
          (function () {
            return arguments;
          })(),
        ) === "Arguments",
      tE = h(function (r, e) {
        try {
          return r[e];
        } catch (e) {}
      }, "tryGet");
    Sd.exports = Jy
      ? ls
      : function (r) {
          var e, t, i;
          return r === void 0 ? "Undefined" : r === null ? "Null" : typeof (t = tE((e = Zy(r)), Ky)) == "string" ? t : eE ? ls(e) : (i = ls(e)) === "Object" && Gy(e.callee) ? "Arguments" : i;
        };
  });
  var Od = x((z4, Ld) => {
    "use strict";
    var iE = Ne(),
      rE = Je(),
      wd = Te(),
      nE = Rr(),
      sE = Ur(),
      oE = El(),
      Qd = h(function () {}, "noop"),
      _d = sE("Reflect", "construct"),
      Ul = /^\s*(?:class|function)\b/,
      lE = iE(Ul.exec),
      uE = !Ul.test(Qd),
      Nr = h(function (e) {
        if (!wd(e)) return !1;
        try {
          return _d(Qd, [], e), !0;
        } catch (e) {
          return !1;
        }
      }, "isConstructor"),
      Ud = h(function (e) {
        if (!wd(e)) return !1;
        switch (nE(e)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return !1;
        }
        try {
          return uE || !!lE(Ul, oE(e));
        } catch (e) {
          return !0;
        }
      }, "isConstructor");
    Ud.sham = !0;
    Ld.exports =
      !_d ||
      rE(function () {
        var r;
        return (
          Nr(Nr.call) ||
          !Nr(Object) ||
          !Nr(function () {
            r = !0;
          }) ||
          r
        );
      })
        ? Ud
        : Nr;
  });
  var Md = x((j4, Nd) => {
    "use strict";
    var Td = _l(),
      aE = Od(),
      hE = bt(),
      cE = it(),
      fE = cE("species"),
      Rd = Array;
    Nd.exports = function (r) {
      var e;
      return Td(r) && ((e = r.constructor), aE(e) && (e === Rd || Td(e.prototype)) ? (e = void 0) : hE(e) && ((e = e[fE]), e === null && (e = void 0))), e === void 0 ? Rd : e;
    };
  });
  var Id = x((Y4, Pd) => {
    "use strict";
    var dE = Md();
    Pd.exports = function (r, e) {
      return new (dE(r))(e === 0 ? 0 : e);
    };
  });
  var $d = x(() => {
    "use strict";
    var pE = Fi(),
      mE = vd(),
      gE = Vi(),
      DE = jn(),
      FE = Or(),
      bE = Id();
    pE(
      { target: "Array", proto: !0 },
      {
        flatMap: h(function (e) {
          var t = DE(this),
            i = FE(t),
            n;
          return gE(e), (n = bE(t, 0)), (n.length = mE(n, t, t, i, 0, 1, e, arguments.length > 1 ? arguments[1] : void 0)), n;
        }, "flatMap"),
      },
    );
  });
  var ji = x((K4, qd) => {
    "use strict";
    qd.exports = {};
  });
  var Wd = x((Z4, Vd) => {
    "use strict";
    var yE = it(),
      EE = ji(),
      CE = yE("iterator"),
      BE = Array.prototype;
    Vd.exports = function (r) {
      return r !== void 0 && (EE.Array === r || BE[CE] === r);
    };
  });
  var us = x((e3, Hd) => {
    "use strict";
    var vE = Rr(),
      zd = Wn(),
      xE = In(),
      AE = ji(),
      kE = it(),
      SE = kE("iterator");
    Hd.exports = function (r) {
      if (!xE(r)) return zd(r, SE) || zd(r, "@@iterator") || AE[vE(r)];
    };
  });
  var Ll = x((t3, jd) => {
    "use strict";
    var wE = Vt(),
      QE = Vi(),
      _E = Wt(),
      UE = Vn(),
      LE = us(),
      OE = TypeError;
    jd.exports = function (r, e) {
      var t = arguments.length < 2 ? LE(r) : e;
      if (QE(t)) return _E(wE(t, r));
      throw new OE(UE(r) + " is not iterable");
    };
  });
  var Gd = x((i3, Jd) => {
    "use strict";
    var TE = Vt(),
      Yd = Wt(),
      RE = Wn();
    Jd.exports = function (r, e, t) {
      var i, n;
      Yd(r);
      try {
        if (((i = RE(r, "return")), !i)) {
          if (e === "throw") throw t;
          return t;
        }
        i = TE(i, r);
      } catch (s) {
        (n = !0), (i = s);
      }
      if (e === "throw") throw t;
      if (n) throw i;
      return Yd(i), t;
    };
  });
  var tp = x((r3, ep) => {
    "use strict";
    var NE = os(),
      ME = Vt(),
      PE = Wt(),
      IE = Vn(),
      $E = Wd(),
      qE = Or(),
      Xd = $n(),
      VE = Ll(),
      WE = us(),
      Kd = Gd(),
      zE = TypeError,
      as = h(function (r, e) {
        (this.stopped = r), (this.result = e);
      }, "Result"),
      Zd = as.prototype;
    ep.exports = function (r, e, t) {
      var i = t && t.that,
        n = !!(t && t.AS_ENTRIES),
        s = !!(t && t.IS_RECORD),
        o = !!(t && t.IS_ITERATOR),
        l = !!(t && t.INTERRUPTED),
        u = NE(e, i),
        a,
        c,
        f,
        d,
        p,
        m,
        F,
        g = h(function (b) {
          return a && Kd(a, "normal", b), new as(!0, b);
        }, "stop"),
        D = h(function (b) {
          return n ? (PE(b), l ? u(b[0], b[1], g) : u(b[0], b[1])) : l ? u(b, g) : u(b);
        }, "callFn");
      if (s) a = r.iterator;
      else if (o) a = r;
      else {
        if (((c = WE(r)), !c)) throw new zE(IE(r) + " is not iterable");
        if ($E(c)) {
          for (f = 0, d = qE(r); d > f; f++) if (((p = D(r[f])), p && Xd(Zd, p))) return p;
          return new as(!1);
        }
        a = VE(r, c);
      }
      for (m = s ? r.next : a.next; !(F = ME(m, a)).done; ) {
        try {
          p = D(F.value);
        } catch (b) {
          Kd(a, "throw", b);
        }
        if (typeof p == "object" && p && Xd(Zd, p)) return p;
      }
      return new as(!1);
    };
  });
  var rp = x((s3, ip) => {
    "use strict";
    var HE = Ge(),
      jE = St(),
      YE = $i();
    ip.exports = function (r, e, t) {
      HE ? jE.f(r, e, YE(0, t)) : (r[e] = t);
    };
  });
  var np = x(() => {
    "use strict";
    var JE = Fi(),
      GE = tp(),
      XE = rp();
    JE(
      { target: "Object", stat: !0 },
      {
        fromEntries: h(function (e) {
          var t = {};
          return (
            GE(
              e,
              function (i, n) {
                XE(t, i, n);
              },
              { AS_ENTRIES: !0 },
            ),
            t
          );
        }, "fromEntries"),
      },
    );
  });
  var Ol = x((a3, sp) => {
    "use strict";
    var KE = Rr(),
      ZE = String;
    sp.exports = function (r) {
      if (KE(r) === "Symbol") throw new TypeError("Cannot convert a Symbol value to a string");
      return ZE(r);
    };
  });
  var Tl = x((h3, op) => {
    "use strict";
    op.exports = "	\n\v\f\r \xa0              　\u2028\u2029\uFEFF";
  });
  var ap = x((c3, up) => {
    "use strict";
    var eC = Ne(),
      tC = _r67(),
      iC = Ol(),
      Nl = Tl(),
      lp = eC("".replace),
      rC = RegExp("^[" + Nl + "]+"),
      nC = RegExp("(^|[^" + Nl + "])[" + Nl + "]+$"),
      Rl = h(function (r) {
        return function (e) {
          var t = iC(tC(e));
          return r & 1 && (t = lp(t, rC, "")), r & 2 && (t = lp(t, nC, "$1")), t;
        };
      }, "createMethod");
    up.exports = { start: Rl(1), end: Rl(2), trim: Rl(3) };
  });
  var dp = x((d3, fp) => {
    "use strict";
    var sC = Gn().PROPER,
      oC = Je(),
      hp = Tl(),
      cp = "​\x85᠎";
    fp.exports = function (r) {
      return oC(function () {
        return !!hp[r]() || cp[r]() !== cp || (sC && hp[r].name !== r);
      });
    };
  });
  var Ml = x((p3, pp) => {
    "use strict";
    var lC = ap().end,
      uC = dp();
    pp.exports = uC("trimEnd")
      ? h(function () {
          return lC(this);
        }, "trimEnd")
      : "".trimEnd;
  });
  var gp = x(() => {
    "use strict";
    var aC = Fi(),
      mp = Ml();
    aC({ target: "String", proto: !0, name: "trimEnd", forced: "".trimRight !== mp }, { trimRight: mp });
  });
  var Fp = x(() => {
    "use strict";
    gp();
    var hC = Fi(),
      Dp = Ml();
    hC({ target: "String", proto: !0, name: "trimEnd", forced: "".trimEnd !== Dp }, { trimEnd: Dp });
  });
  var yp = x((y3, bp) => {
    "use strict";
    var cC = Ql(),
      fC = ns();
    bp.exports =
      Object.keys ||
      h(function (e) {
        return cC(e, fC);
      }, "keys");
  });
  var Cp = x((Ep) => {
    "use strict";
    var dC = Ge(),
      pC = dl(),
      mC = St(),
      gC = Wt(),
      DC = qi(),
      FC = yp();
    Ep.f =
      dC && !pC
        ? Object.defineProperties
        : h(function (e, t) {
            gC(e);
            for (var i = DC(t), n = FC(t), s = n.length, o = 0, l; s > o; ) mC.f(e, (l = n[o++]), i[l]);
            return e;
          }, "defineProperties");
  });
  var vp = x((v3, Bp) => {
    "use strict";
    var bC = Ur();
    Bp.exports = bC("document", "documentElement");
  });
  var Mr = x((x3, _p) => {
    "use strict";
    var yC = Wt(),
      EC = Cp(),
      xp = ns(),
      CC = Kn(),
      BC = vp(),
      vC = hl(),
      xC = Xn(),
      Ap = ">",
      kp = "<",
      Il = "prototype",
      $l = "script",
      wp = xC("IE_PROTO"),
      Pl = h(function () {}, "EmptyConstructor"),
      Qp = h(function (r) {
        return kp + $l + Ap + r + kp + "/" + $l + Ap;
      }, "scriptTag"),
      Sp = h(function (r) {
        r.write(Qp("")), r.close();
        var e = r.parentWindow.Object;
        return (r = null), e;
      }, "NullProtoObjectViaActiveX"),
      AC = h(function () {
        var r = vC("iframe"),
          e = "java" + $l + ":",
          t;
        return (r.style.display = "none"), BC.appendChild(r), (r.src = String(e)), (t = r.contentWindow.document), t.open(), t.write(Qp("document.F=Object")), t.close(), t.F;
      }, "NullProtoObjectViaIFrame"),
      hs,
      cs = h(function () {
        try {
          hs = new ActiveXObject("htmlfile");
        } catch (e) {}
        cs = typeof document < "u" ? (document.domain && hs ? Sp(hs) : AC()) : Sp(hs);
        for (var r = xp.length; r--; ) delete cs[Il][xp[r]];
        return cs();
      }, "NullProtoObject");
    CC[wp] = !0;
    _p.exports =
      Object.create ||
      h(function (e, t) {
        var i;
        return e !== null ? ((Pl[Il] = yC(e)), (i = new Pl()), (Pl[Il] = null), (i[wp] = e)) : (i = cs()), t === void 0 ? i : EC.f(i, t);
      }, "create");
  });
  var Lp = x((k3, Up) => {
    "use strict";
    var kC = it(),
      SC = Mr(),
      wC = St().f,
      ql = kC("unscopables"),
      Vl = Array.prototype;
    Vl[ql] === void 0 && wC(Vl, ql, { configurable: !0, value: SC(null) });
    Up.exports = function (r) {
      Vl[ql][r] = !0;
    };
  });
  var Tp = x((S3, Op) => {
    "use strict";
    var QC = Je();
    Op.exports = !QC(function () {
      function r() {}
      return h(r, "F"), (r.prototype.constructor = null), Object.getPrototypeOf(new r()) !== r.prototype;
    });
  });
  var zl = x((Q3, Np) => {
    "use strict";
    var _C = Et(),
      UC = Te(),
      LC = jn(),
      OC = Xn(),
      TC = Tp(),
      Rp = OC("IE_PROTO"),
      Wl = Object,
      RC = Wl.prototype;
    Np.exports = TC
      ? Wl.getPrototypeOf
      : function (r) {
          var e = LC(r);
          if (_C(e, Rp)) return e[Rp];
          var t = e.constructor;
          return UC(t) && e instanceof t ? t.prototype : e instanceof Wl ? RC : null;
        };
  });
  var Jl = x((_3, Ip) => {
    "use strict";
    var NC = Je(),
      MC = Te(),
      PC = bt(),
      IC = Mr(),
      Mp = zl(),
      $C = Hi(),
      qC = it(),
      VC = Wi(),
      Yl = qC("iterator"),
      Pp = !1,
      zt,
      Hl,
      jl;
    [].keys && ((jl = [].keys()), "next" in jl ? ((Hl = Mp(Mp(jl))), Hl !== Object.prototype && (zt = Hl)) : (Pp = !0));
    var WC =
      !PC(zt) ||
      NC(function () {
        var r = {};
        return zt[Yl].call(r) !== r;
      });
    WC ? (zt = {}) : VC && (zt = IC(zt));
    MC(zt[Yl]) ||
      $C(zt, Yl, function () {
        return this;
      });
    Ip.exports = { IteratorPrototype: zt, BUGGY_SAFARI_ITERATORS: Pp };
  });
  var fs = x((U3, qp) => {
    "use strict";
    var zC = St().f,
      HC = Et(),
      jC = it(),
      $p = jC("toStringTag");
    qp.exports = function (r, e, t) {
      r && !t && (r = r.prototype), r && !HC(r, $p) && zC(r, $p, { configurable: !0, value: e });
    };
  });
  var Gl = x((L3, Vp) => {
    "use strict";
    var YC = Jl().IteratorPrototype,
      JC = Mr(),
      GC = $i(),
      XC = fs(),
      KC = ji(),
      ZC = h(function () {
        return this;
      }, "returnThis");
    Vp.exports = function (r, e, t, i) {
      var n = e + " Iterator";
      return (r.prototype = JC(YC, { next: GC(+!i, t) })), XC(r, n, !1, !0), (KC[n] = ZC), r;
    };
  });
  var zp = x((T3, Wp) => {
    "use strict";
    var eB = Ne(),
      tB = Vi();
    Wp.exports = function (r, e, t) {
      try {
        return eB(tB(Object.getOwnPropertyDescriptor(r, e)[t]));
      } catch (e) {}
    };
  });
  var jp = x((R3, Hp) => {
    "use strict";
    var iB = bt();
    Hp.exports = function (r) {
      return iB(r) || r === null;
    };
  });
  var Jp = x((N3, Yp) => {
    "use strict";
    var rB = jp(),
      nB = String,
      sB = TypeError;
    Yp.exports = function (r) {
      if (rB(r)) return r;
      throw new sB("Can't set " + nB(r) + " as a prototype");
    };
  });
  var Xp = x((M3, Gp) => {
    "use strict";
    var oB = zp(),
      lB = bt(),
      uB = _r67(),
      aB = Jp();
    Gp.exports =
      Object.setPrototypeOf ||
      ("__proto__" in {}
        ? (function () {
            var r = !1,
              e = {},
              t;
            try {
              (t = oB(Object.prototype, "__proto__", "set")), t(e, []), (r = e instanceof Array);
            } catch (e) {}
            return h(function (n, s) {
              return uB(n), aB(s), lB(n) && (r ? t(n, s) : (n.__proto__ = s)), n;
            }, "setPrototypeOf");
          })()
        : void 0);
  });
  var um = x((I3, lm) => {
    "use strict";
    var hB = Fi(),
      cB = Vt(),
      ds = Wi(),
      sm = Gn(),
      fB = Te(),
      dB = Gl(),
      Kp = zl(),
      Zp = Xp(),
      pB = fs(),
      mB = Jn(),
      Xl = Hi(),
      gB = it(),
      em = ji(),
      om = Jl(),
      DB = sm.PROPER,
      FB = sm.CONFIGURABLE,
      tm = om.IteratorPrototype,
      ps = om.BUGGY_SAFARI_ITERATORS,
      Pr = gB("iterator"),
      im = "keys",
      Ir = "values",
      rm = "entries",
      nm = h(function () {
        return this;
      }, "returnThis");
    lm.exports = function (r, e, t, i, n, s, o) {
      dB(t, e, i);
      var l = h(function (D) {
          if (D === n && d) return d;
          if (!ps && D && D in c) return c[D];
          switch (D) {
            case im:
              return h(function () {
                return new t(this, D);
              }, "keys");
            case Ir:
              return h(function () {
                return new t(this, D);
              }, "values");
            case rm:
              return h(function () {
                return new t(this, D);
              }, "entries");
          }
          return function () {
            return new t(this);
          };
        }, "getIterationMethod"),
        u = e + " Iterator",
        a = !1,
        c = r.prototype,
        f = c[Pr] || c["@@iterator"] || (n && c[n]),
        d = (!ps && f) || l(n),
        p = (e === "Array" && c.entries) || f,
        m,
        F,
        g;
      if (
        (p && ((m = Kp(p.call(new r()))), m !== Object.prototype && m.next && (!ds && Kp(m) !== tm && (Zp ? Zp(m, tm) : fB(m[Pr]) || Xl(m, Pr, nm)), pB(m, u, !0, !0), ds && (em[u] = nm))),
        DB &&
          n === Ir &&
          f &&
          f.name !== Ir &&
          (!ds && FB
            ? mB(c, "name", Ir)
            : ((a = !0),
              (d = h(function () {
                return cB(f, this);
              }, "values")))),
        n)
      )
        if (((F = { values: l(Ir), keys: s ? d : l(im), entries: l(rm) }), o)) for (g in F) (ps || a || !(g in c)) && Xl(c, g, F[g]);
        else hB({ target: e, proto: !0, forced: ps || a }, F);
      return (!ds || o) && c[Pr] !== d && Xl(c, Pr, d, { name: n }), (em[e] = d), F;
    };
  });
  var Kl = x((q3, am) => {
    "use strict";
    am.exports = function (r, e) {
      return { value: r, done: e };
    };
  });
  var mm = x((V3, pm) => {
    "use strict";
    var bB = qi(),
      Zl = Lp(),
      hm = ji(),
      fm = ts(),
      yB = St().f,
      EB = um(),
      ms = Kl(),
      CB = Wi(),
      BB = Ge(),
      dm = "Array Iterator",
      vB = fm.set,
      xB = fm.getterFor(dm);
    pm.exports = EB(
      Array,
      "Array",
      function (r, e) {
        vB(this, { type: dm, target: bB(r), index: 0, kind: e });
      },
      function () {
        var r = xB(this),
          e = r.target,
          t = r.index++;
        if (!e || t >= e.length) return (r.target = void 0), ms(void 0, !0);
        switch (r.kind) {
          case "keys":
            return ms(t, !1);
          case "values":
            return ms(e[t], !1);
        }
        return ms([t, e[t]], !1);
      },
      "values",
    );
    var cm = (hm.Arguments = hm.Array);
    Zl("keys");
    Zl("values");
    Zl("entries");
    if (!CB && BB && cm.name !== "values")
      try {
        yB(cm, "name", { value: "values" });
      } catch (e) {}
  });
  var Fm = x((W3, Dm) => {
    "use strict";
    var gm = tt(),
      AB = Ge(),
      kB = Object.getOwnPropertyDescriptor;
    Dm.exports = function (r) {
      if (!AB) return gm[r];
      var e = kB(gm, r);
      return e && e.value;
    };
  });
  var Em = x((z3, ym) => {
    "use strict";
    var SB = Je(),
      wB = it(),
      QB = Ge(),
      bm = Wi(),
      _B = wB("iterator");
    ym.exports = !SB(function () {
      var r = new URL("b?a=1&b=2&c=3", "http://a"),
        e = r.searchParams,
        t = new URLSearchParams("a=1&a=2&b=3"),
        i = "";
      return (
        (r.pathname = "c%20d"),
        e.forEach(function (n, s) {
          e.delete("b"), (i += s + n);
        }),
        t.delete("a", 2),
        t.delete("b", void 0),
        (bm && (!r.toJSON || !t.has("a", 1) || t.has("a", 2) || !t.has("a", void 0) || t.has("b"))) ||
          (!e.size && (bm || !QB)) ||
          !e.sort ||
          r.href !== "http://a/c%20d?a=1&c=3" ||
          e.get("c") !== "3" ||
          String(new URLSearchParams("?a=1")) !== "a=1" ||
          !e[_B] ||
          new URL("https://a@b").username !== "a" ||
          new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" ||
          new URL("http://тест").host !== "xn--e1aybc" ||
          new URL("http://a#б").hash !== "#%D0%B1" ||
          i !== "a1c3" ||
          new URL("http://x", void 0).host !== "x"
      );
    });
  });
  var vm = x((H3, Bm) => {
    "use strict";
    var Cm = kl(),
      UB = St();
    Bm.exports = function (r, e, t) {
      return t.get && Cm(t.get, e, { getter: !0 }), t.set && Cm(t.set, e, { setter: !0 }), UB.f(r, e, t);
    };
  });
  var Am = x((j3, xm) => {
    "use strict";
    var LB = Hi();
    xm.exports = function (r, e, t) {
      for (var i in e) LB(r, i, e[i], t);
      return r;
    };
  });
  var Sm = x((Y3, km) => {
    "use strict";
    var OB = $n(),
      TB = TypeError;
    km.exports = function (r, e) {
      if (OB(e, r)) return r;
      throw new TB("Incorrect invocation");
    };
  });
  var Qm = x((J3, wm) => {
    "use strict";
    var RB = TypeError;
    wm.exports = function (r, e) {
      if (r < e) throw new RB("Not enough arguments");
      return r;
    };
  });
  var Um = x((G3, _m) => {
    "use strict";
    var NB = Ne();
    _m.exports = NB([].slice);
  });
  var Tm = x((X3, Om) => {
    "use strict";
    var Lm = Um(),
      MB = Math.floor,
      eu = h(function (r, e) {
        var t = r.length;
        if (t < 8)
          for (var i = 1, n, s; i < t; ) {
            for (s = i, n = r[i]; s && e(r[s - 1], n) > 0; ) r[s] = r[--s];
            s !== i++ && (r[s] = n);
          }
        else for (var o = MB(t / 2), l = eu(Lm(r, 0, o), e), u = eu(Lm(r, o), e), a = l.length, c = u.length, f = 0, d = 0; f < a || d < c; ) r[f + d] = f < a && d < c ? (e(l[f], u[d]) <= 0 ? l[f++] : u[d++]) : f < a ? l[f++] : u[d++];
        return r;
      }, "sort");
    Om.exports = eu;
  });
  var r0 = x((Z3, i0) => {
    "use strict";
    mm();
    var su = Fi(),
      ys = tt(),
      lu = Fm(),
      gs = Vt(),
      wt = Ne(),
      $r = Ge(),
      Ym = Em(),
      Jm = Hi(),
      PB = vm(),
      IB = Am(),
      $B = fs(),
      qB = Gl(),
      uu = ts(),
      Gm = Sm(),
      tu = Te(),
      VB = Et(),
      WB = os(),
      zB = Rr(),
      HB = Wt(),
      Xm = bt(),
      $e = Ol(),
      jB = Mr(),
      Rm = $i(),
      Nm = Ll(),
      YB = us(),
      Ds = Kl(),
      Yi = Qm(),
      JB = it(),
      GB = Tm(),
      XB = JB("iterator"),
      Gi = "URLSearchParams",
      Km = Gi + "Iterator",
      Zm = uu.set,
      ut = uu.getterFor(Gi),
      KB = uu.getterFor(Km),
      Mm = lu("fetch"),
      bs = lu("Request"),
      qr = lu("Headers"),
      iu = bs && bs.prototype,
      Pm = qr && qr.prototype,
      ZB = ys.RegExp,
      ev = ys.TypeError,
      e0 = ys.decodeURIComponent,
      tv = ys.encodeURIComponent,
      iv = wt("".charAt),
      Im = wt([].join),
      bi = wt([].push),
      ou = wt("".replace),
      rv = wt([].shift),
      $m = wt([].splice),
      qm = wt("".split),
      nv = wt("".slice),
      sv = /\+/g,
      Vm = Array(4),
      ov = h(function (r) {
        return Vm[r - 1] || (Vm[r - 1] = ZB("((?:%[\\da-f]{2}){" + r + "})", "gi"));
      }, "percentSequence"),
      lv = h(function (r) {
        try {
          return e0(r);
        } catch (e) {
          return r;
        }
      }, "percentDecode"),
      Wm = h(function (r) {
        var e = ou(r, sv, " "),
          t = 4;
        try {
          return e0(e);
        } catch (e1) {
          for (; t; ) e = ou(e, ov(t--), lv);
          return e;
        }
      }, "deserialize"),
      uv = /[!'()~]|%20/g,
      av = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" },
      hv = h(function (r) {
        return av[r];
      }, "replacer"),
      zm = h(function (r) {
        return ou(tv(r), uv, hv);
      }, "serialize"),
      ru = qB(
        h(function (e, t) {
          Zm(this, { type: Km, target: ut(e).entries, index: 0, kind: t });
        }, "Iterator"),
        Gi,
        h(function () {
          var e = KB(this),
            t = e.target,
            i = e.index++;
          if (!t || i >= t.length) return (e.target = void 0), Ds(void 0, !0);
          var n = t[i];
          switch (e.kind) {
            case "keys":
              return Ds(n.key, !1);
            case "values":
              return Ds(n.value, !1);
          }
          return Ds([n.key, n.value], !1);
        }, "next"),
        !0,
      ),
      t0 = h(function (r) {
        (this.entries = []), (this.url = null), r !== void 0 && (Xm(r) ? this.parseObject(r) : this.parseQuery(typeof r == "string" ? (iv(r, 0) === "?" ? nv(r, 1) : r) : $e(r)));
      }, "URLSearchParamsState");
    t0.prototype = {
      type: Gi,
      bindURL: function bindURL(r) {
        (this.url = r), this.update();
      },
      parseObject: function parseObject(r) {
        var e = this.entries,
          t = YB(r),
          i,
          n,
          s,
          o,
          l,
          u,
          a;
        if (t)
          for (i = Nm(r, t), n = i.next; !(s = gs(n, i)).done; ) {
            if (((o = Nm(HB(s.value))), (l = o.next), (u = gs(l, o)).done || (a = gs(l, o)).done || !gs(l, o).done)) throw new ev("Expected sequence with length 2");
            bi(e, { key: $e(u.value), value: $e(a.value) });
          }
        else for (var c in r) VB(r, c) && bi(e, { key: c, value: $e(r[c]) });
      },
      parseQuery: function parseQuery(r) {
        if (r) for (var e = this.entries, t = qm(r, "&"), i = 0, n, s; i < t.length; ) (n = t[i++]), n.length && ((s = qm(n, "=")), bi(e, { key: Wm(rv(s)), value: Wm(Im(s, "=")) }));
      },
      serialize: function serialize() {
        for (var r = this.entries, e = [], t = 0, i; t < r.length; ) (i = r[t++]), bi(e, zm(i.key) + "=" + zm(i.value));
        return Im(e, "&");
      },
      update: function update() {
        (this.entries.length = 0), this.parseQuery(this.url.query);
      },
      updateURL: function updateURL() {
        this.url && this.url.update();
      },
    };
    var Es = h(function () {
        Gm(this, Ji);
        var e = arguments.length > 0 ? arguments[0] : void 0,
          t = Zm(this, new t0(e));
        $r || (this.size = t.entries.length);
      }, "URLSearchParams"),
      Ji = Es.prototype;
    IB(
      Ji,
      {
        append: h(function (e, t) {
          var i = ut(this);
          Yi(arguments.length, 2), bi(i.entries, { key: $e(e), value: $e(t) }), $r || this.length++, i.updateURL();
        }, "append"),
        delete: function _delete(r) {
          for (var e = ut(this), t = Yi(arguments.length, 1), i = e.entries, n = $e(r), s = t < 2 ? void 0 : arguments[1], o = s === void 0 ? s : $e(s), l = 0; l < i.length; ) {
            var u = i[l];
            if (u.key === n && (o === void 0 || u.value === o)) {
              if (($m(i, l, 1), o !== void 0)) break;
            } else l++;
          }
          $r || (this.size = i.length), e.updateURL();
        },
        get: h(function (e) {
          var t = ut(this).entries;
          Yi(arguments.length, 1);
          for (var i = $e(e), n = 0; n < t.length; n++) if (t[n].key === i) return t[n].value;
          return null;
        }, "get"),
        getAll: h(function (e) {
          var t = ut(this).entries;
          Yi(arguments.length, 1);
          for (var i = $e(e), n = [], s = 0; s < t.length; s++) t[s].key === i && bi(n, t[s].value);
          return n;
        }, "getAll"),
        has: h(function (e) {
          for (var t = ut(this).entries, i = Yi(arguments.length, 1), n = $e(e), s = i < 2 ? void 0 : arguments[1], o = s === void 0 ? s : $e(s), l = 0; l < t.length; ) {
            var u = t[l++];
            if (u.key === n && (o === void 0 || u.value === o)) return !0;
          }
          return !1;
        }, "has"),
        set: h(function (e, t) {
          var i = ut(this);
          Yi(arguments.length, 1);
          for (var n = i.entries, s = !1, o = $e(e), l = $e(t), u = 0, a; u < n.length; u++) (a = n[u]), a.key === o && (s ? $m(n, u--, 1) : ((s = !0), (a.value = l)));
          s || bi(n, { key: o, value: l }), $r || (this.size = n.length), i.updateURL();
        }, "set"),
        sort: h(function () {
          var e = ut(this);
          GB(e.entries, function (t, i) {
            return t.key > i.key ? 1 : -1;
          }),
            e.updateURL();
        }, "sort"),
        forEach: h(function (e) {
          for (var t = ut(this).entries, i = WB(e, arguments.length > 1 ? arguments[1] : void 0), n = 0, s; n < t.length; ) (s = t[n++]), i(s.value, s.key, this);
        }, "forEach"),
        keys: h(function () {
          return new ru(this, "keys");
        }, "keys"),
        values: h(function () {
          return new ru(this, "values");
        }, "values"),
        entries: h(function () {
          return new ru(this, "entries");
        }, "entries"),
      },
      { enumerable: !0 },
    );
    Jm(Ji, XB, Ji.entries, { name: "entries" });
    Jm(
      Ji,
      "toString",
      h(function () {
        return ut(this).serialize();
      }, "toString"),
      { enumerable: !0 },
    );
    $r &&
      PB(Ji, "size", {
        get: h(function () {
          return ut(this).entries.length;
        }, "size"),
        configurable: !0,
        enumerable: !0,
      });
    $B(Es, Gi);
    su({ global: !0, constructor: !0, forced: !Ym }, { URLSearchParams: Es });
    !Ym &&
      tu(qr) &&
      ((Hm = wt(Pm.has)),
      (jm = wt(Pm.set)),
      (nu = h(function (r) {
        if (Xm(r)) {
          var e = r.body,
            t;
          if (zB(e) === Gi) return (t = r.headers ? new qr(r.headers) : new qr()), Hm(t, "content-type") || jm(t, "content-type", "application/x-www-form-urlencoded;charset=UTF-8"), jB(r, { body: Rm(0, $e(e)), headers: Rm(0, t) });
        }
        return r;
      }, "wrapRequestOptions")),
      tu(Mm) &&
        su(
          { global: !0, enumerable: !0, dontCallGetSet: !0, forced: !0 },
          {
            fetch: h(function (e) {
              return Mm(e, arguments.length > 1 ? nu(arguments[1]) : {});
            }, "fetch"),
          },
        ),
      tu(bs) &&
        ((Fs = h(function (e) {
          return Gm(this, iu), new bs(e, arguments.length > 1 ? nu(arguments[1]) : {});
        }, "Request")),
        (iu.constructor = Fs),
        (Fs.prototype = iu),
        su({ global: !0, constructor: !0, dontCallGetSet: !0, forced: !0 }, { Request: Fs })));
    var Hm, jm, nu, Fs;
    i0.exports = { URLSearchParams: Es, getState: ut };
  });
  var n0 = x(() => {
    "use strict";
    r0();
  });
  var D9 = Nn($d()),
    F9 = Nn(np()),
    b9 = Nn(Fp()),
    y9 = Nn(n0());
  function Se() {}
  h(Se, "noop");
  function cv(r, e) {
    for (var t in e) r[t] = e[t];
    return r;
  }
  h(cv, "assign");
  function pu(r) {
    return r();
  }
  h(pu, "run");
  function s0() {
    return Object.create(null);
  }
  h(s0, "blank_object");
  function Qt(r) {
    r.forEach(pu);
  }
  h(Qt, "run_all");
  function Bs(r) {
    return typeof r == "function";
  }
  h(Bs, "is_function");
  function oe(r, e) {
    return r != r ? e == e : r !== e || (r && typeof r == "object") || typeof r == "function";
  }
  h(oe, "safe_not_equal");
  function o0(r) {
    return Object.keys(r).length === 0;
  }
  h(o0, "is_empty");
  function ti(r, e, t, i) {
    if (r) {
      var n = l0(r, e, t, i);
      return r[0](n);
    }
  }
  h(ti, "create_slot");
  function l0(r, e, t, i) {
    return r[1] && i ? cv(t.ctx.slice(), r[1](i(e))) : t.ctx;
  }
  h(l0, "get_slot_context");
  function ii(r, e, t, i) {
    if (r[2] && i) {
      var n = r[2](i(t));
      if (e.dirty === void 0) return n;
      if (typeof n == "object") {
        var s = [],
          o = Math.max(e.dirty.length, n.length);
        for (var l = 0; l < o; l += 1) s[l] = e.dirty[l] | n[l];
        return s;
      }
      return e.dirty | n;
    }
    return e.dirty;
  }
  h(ii, "get_slot_changes");
  function ri(r, e, t, i, n, s) {
    if (n) {
      var o = l0(e, t, i, s);
      r.p(o, n);
    }
  }
  h(ri, "update_slot_base");
  function ni(r) {
    if (r.ctx.length > 32) {
      var e = [],
        t = r.ctx.length / 32;
      for (var i = 0; i < t; i++) e[i] = -1;
      return e;
    }
    return -1;
  }
  h(ni, "get_all_dirty_from_scope");
  function u0(r) {
    var e = {};
    for (var t in r) e[t] = !0;
    return e;
  }
  h(u0, "compute_slots");
  var a0 = typeof window < "u" ? window : typeof globalThis < "u" ? globalThis : global,
    hu =
      ((_r = class r {
        observe(e, t) {
          return (
            this._listeners.set(e, t),
            this._getObserver().observe(e, this.options),
            () => {
              this._listeners.delete(e), this._observer.unobserve(e);
            }
          );
        }
        _getObserver() {
          var e;
          return (e = this._observer) !== null && e !== void 0
            ? e
            : (this._observer = new ResizeObserver((t) => {
                var i;
                var _iteratorNormalCompletion = true,
                  _didIteratorError = false,
                  _iteratorError = undefined;
                try {
                  for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var n = _step.value;
                    r.entries.set(n.target, n), (i = this._listeners.get(n.target)) === null || i === void 0 || i(n);
                  }
                } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion && _iterator.return != null) {
                      _iterator.return();
                    }
                  } finally {
                    if (_didIteratorError) {
                      throw _iteratorError;
                    }
                  }
                }
              }));
        }
        constructor(e) {
          (this.options = e), (this._listeners = "WeakMap" in a0 ? new WeakMap() : void 0);
        }
      }),
      h(_r, "ResizeObserverSingleton"),
      _r);
  hu.entries = "WeakMap" in a0 ? new WeakMap() : void 0;
  var h0 = !1;
  function fv() {
    h0 = !0;
  }
  h(fv, "start_hydrating");
  function dv() {
    h0 = !1;
  }
  h(dv, "end_hydrating");
  function q(r, e) {
    r.appendChild(e);
  }
  h(q, "append");
  function E(r, e, t) {
    r.insertBefore(e, t || null);
  }
  h(E, "insert");
  function y(r) {
    r.parentNode && r.parentNode.removeChild(r);
  }
  h(y, "detach");
  function zr(r, e) {
    for (var t = 0; t < r.length; t += 1) r[t] && r[t].d(e);
  }
  h(zr, "destroy_each");
  function O(r) {
    return document.createElement(r);
  }
  h(O, "element");
  function _t(r) {
    return document.createElementNS("http://www.w3.org/2000/svg", r);
  }
  h(_t, "svg_element");
  function Y(r) {
    return document.createTextNode(r);
  }
  h(Y, "text");
  function $() {
    return Y(" ");
  }
  h($, "space");
  function Ht() {
    return Y("");
  }
  h(Ht, "empty");
  function ye(r, e, t, i) {
    return r.addEventListener(e, t, i), () => r.removeEventListener(e, t, i);
  }
  h(ye, "listen");
  function v(r, e, t) {
    t == null ? r.removeAttribute(e) : r.getAttribute(e) !== t && r.setAttribute(e, t);
  }
  h(v, "attr");
  function c0(r) {
    var e;
    return {
      p() {
        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {
          t[_key] = arguments[_key];
        }
        (e = t), e.forEach((i) => r.push(i));
      },
      r() {
        e.forEach((t) => r.splice(r.indexOf(t), 1));
      },
    };
  }
  h(c0, "init_binding_group");
  function Bt(r) {
    return r === "" ? null : +r;
  }
  h(Bt, "to_number");
  function pv(r) {
    return Array.from(r.childNodes);
  }
  h(pv, "children");
  function qe(r, e) {
    (e = "" + e), r.data !== e && (r.data = e);
  }
  h(qe, "set_data");
  function Ee(r, e) {
    r.value = e !== null && e !== void 0 ? e : "";
  }
  h(Ee, "set_input_value");
  function er(r, e, t) {
    r.classList[t ? "add" : "remove"](e);
  }
  h(er, "toggle_class");
  function mv(r, e) {
    var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      tmp = _ref.bubbles,
      t = tmp === void 0 ? !1 : tmp,
      tmp1 = _ref.cancelable,
      i = tmp1 === void 0 ? !1 : tmp1;
    var n = document.createEvent("CustomEvent");
    return n.initCustomEvent(r, t, i, e), n;
  }
  h(mv, "custom_event");
  var Wr;
  function Vr(r) {
    Wr = r;
  }
  h(Vr, "set_current_component");
  function f0() {
    if (!Wr) throw new Error("Function called outside component initialization");
    return Wr;
  }
  h(f0, "get_current_component");
  function mu(r) {
    f0().$$.on_mount.push(r);
  }
  h(mu, "onMount");
  function Ei() {
    var r = f0();
    return function (e, t) {
      var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
        tmp = _ref.cancelable,
        i = tmp === void 0 ? !1 : tmp;
      var n = r.$$.callbacks[e];
      if (n) {
        var s = mv(e, t, { cancelable: i });
        return (
          n.slice().forEach((o) => {
            o.call(r, s);
          }),
          !s.defaultPrevented
        );
      }
      return !0;
    };
  }
  h(Ei, "createEventDispatcher");
  var Ki = [];
  var J = [],
    Zi = [],
    cu = [],
    gv = Promise.resolve(),
    fu = !1;
  function Dv() {
    fu || ((fu = !0), gv.then(d0));
  }
  h(Dv, "schedule_update");
  function du(r) {
    Zi.push(r);
  }
  h(du, "add_render_callback");
  function X(r) {
    cu.push(r);
  }
  h(X, "add_flush_callback");
  var au = new Set(),
    Xi = 0;
  function d0() {
    if (Xi !== 0) return;
    var r = Wr;
    do {
      try {
        for (; Xi < Ki.length; ) {
          var _$e = Ki[Xi];
          Xi++, Vr(_$e), Fv(_$e.$$);
        }
      } catch (e) {
        throw ((Ki.length = 0), (Xi = 0), e);
      }
      for (Vr(null), Ki.length = 0, Xi = 0; J.length; ) J.pop()();
      for (var _$e1 = 0; _$e1 < Zi.length; _$e1 += 1) {
        var t = Zi[_$e1];
        au.has(t) || (au.add(t), t());
      }
      Zi.length = 0;
    } while (Ki.length);
    for (; cu.length; ) cu.pop()();
    (fu = !1), au.clear(), Vr(r);
  }
  h(d0, "flush");
  function Fv(r) {
    if (r.fragment !== null) {
      r.update(), Qt(r.before_update);
      var e = r.dirty;
      (r.dirty = [-1]), r.fragment && r.fragment.p(r.ctx, e), r.after_update.forEach(du);
    }
  }
  h(Fv, "update");
  function bv(r) {
    var e = [],
      t = [];
    Zi.forEach((i) => (r.indexOf(i) === -1 ? e.push(i) : t.push(i))), t.forEach((i) => i()), (Zi = e);
  }
  h(bv, "flush_render_callbacks");
  var Cs = new Set(),
    yi;
  function jt() {
    yi = { r: 0, c: [], p: yi };
  }
  h(jt, "group_outros");
  function Yt() {
    yi.r || Qt(yi.c), (yi = yi.p);
  }
  h(Yt, "check_outros");
  function S(r, e) {
    r && r.i && (Cs.delete(r), r.i(e));
  }
  h(S, "transition_in");
  function w(r, e, t, i) {
    if (r && r.o) {
      if (Cs.has(r)) return;
      Cs.add(r),
        yi.c.push(() => {
          Cs.delete(r), i && (t && r.d(1), i());
        }),
        r.o(e);
    } else i && i();
  }
  h(w, "transition_out");
  var yv = ["allowfullscreen", "allowpaymentrequest", "async", "autofocus", "autoplay", "checked", "controls", "default", "defer", "disabled", "formnovalidate", "hidden", "inert", "ismap", "loop", "multiple", "muted", "nomodule", "novalidate", "open", "playsinline", "readonly", "required", "reversed", "selected"],
    r7 = new Set([...yv]);
  function K(r, e, t) {
    var i = r.$$.props[e];
    i !== void 0 && ((r.$$.bound[i] = t), t(r.$$.ctx[i]));
  }
  h(K, "bind");
  function M(r) {
    r && r.c();
  }
  h(M, "create_component");
  function N(r, e, t, i) {
    var _r_$$ = r.$$,
      n = _r_$$.fragment,
      s = _r_$$.after_update;
    n && n.m(e, t),
      i ||
        du(() => {
          var o = r.$$.on_mount.map(pu).filter(Bs);
          r.$$.on_destroy ? r.$$.on_destroy.push(...o) : Qt(o), (r.$$.on_mount = []);
        }),
      s.forEach(du);
  }
  h(N, "mount_component");
  function R(r, e) {
    var t = r.$$;
    t.fragment !== null && (bv(t.after_update), Qt(t.on_destroy), t.fragment && t.fragment.d(e), (t.on_destroy = t.fragment = null), (t.ctx = []));
  }
  h(R, "destroy_component");
  function Ev(r, e) {
    r.$$.dirty[0] === -1 && (Ki.push(r), Dv(), r.$$.dirty.fill(0)), (r.$$.dirty[(e / 31) | 0] |= 1 << e % 31);
  }
  h(Ev, "make_dirty");
  function le(r, e, t, i, n, s, o) {
    var l = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [-1];
    var u = Wr;
    Vr(r);
    var a = (r.$$ = { fragment: null, ctx: [], props: s, update: Se, not_equal: n, bound: s0(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(e.context || (u ? u.$$.context : [])), callbacks: s0(), dirty: l, skip_bound: !1, root: e.target || u.$$.root });
    o && o(a.root);
    var c = !1;
    if (
      ((a.ctx = t
        ? t(r, e.props || {}, function (f, d) {
            for (var _len = arguments.length, p = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              p[_key - 2] = arguments[_key];
            }
            var m = p.length ? p[0] : d;
            return a.ctx && n(a.ctx[f], (a.ctx[f] = m)) && (!a.skip_bound && a.bound[f] && a.bound[f](m), c && Ev(r, f)), d;
          })
        : []),
      a.update(),
      (c = !0),
      Qt(a.before_update),
      (a.fragment = i ? i(a.ctx) : !1),
      e.target)
    ) {
      if (e.hydrate) {
        fv();
        var f = pv(e.target);
        a.fragment && a.fragment.l(f), f.forEach(y);
      } else a.fragment && a.fragment.c();
      e.intro && S(r.$$.fragment), N(r, e.target, e.anchor, e.customElement), dv(), d0();
    }
    Vr(u);
  }
  h(le, "init");
  var Cv;
  typeof HTMLElement == "function" &&
    (Cv =
      ((_class = class _class extends HTMLElement {
        connectedCallback() {
          var _this_$$ = this.$$,
            r = _this_$$.on_mount;
          this.$$.on_disconnect = r.map(pu).filter(Bs);
          for (var e in this.$$.slotted) this.appendChild(this.$$.slotted[e]);
        }
        attributeChangedCallback(r, e, t) {
          this[r] = t;
        }
        disconnectedCallback() {
          Qt(this.$$.on_disconnect);
        }
        $destroy() {
          R(this, 1), (this.$destroy = Se);
        }
        $on(r, e) {
          if (!Bs(e)) return Se;
          var t = this.$$.callbacks[r] || (this.$$.callbacks[r] = []);
          return (
            t.push(e),
            () => {
              var i = t.indexOf(e);
              i !== -1 && t.splice(i, 1);
            }
          );
        }
        $set(r) {
          this.$$set && !o0(r) && ((this.$$.skip_bound = !0), this.$$set(r), (this.$$.skip_bound = !1));
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" });
        }
      }),
      h(_class, "SvelteElement"),
      _class));
  var se =
    ((_class1 = class _class {
      $destroy() {
        R(this, 1), (this.$destroy = Se);
      }
      $on(e, t) {
        if (!Bs(t)) return Se;
        var i = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
        return (
          i.push(t),
          () => {
            var n = i.indexOf(t);
            n !== -1 && i.splice(n, 1);
          }
        );
      }
      $set(e) {
        this.$$set && !o0(e) && ((this.$$.skip_bound = !0), this.$$set(e), (this.$$.skip_bound = !1));
      }
    }),
    h(_class1, "SvelteComponent"),
    _class1);
  var gu =
      ((_class2 = class _class {
        constructor(ref) {
          var e = ref === void 0 ? [] : ref;
          this.children = e;
          this.type = "root";
        }
      }),
      h(_class2, "RootNode"),
      _class2),
    tr =
      ((_class3 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.text = t;
          this.type = "text";
          e.children.push(this);
        }
      }),
      h(_class3, "TextNode"),
      _class3),
    xs =
      ((_class4 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "block";
          this.command = "";
          e.children.push(this);
        }
      }),
      h(_class4, "BlockNode"),
      _class4),
    Du =
      ((_class5 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "comment";
          e.block = this;
        }
      }),
      h(_class5, "CommentNode"),
      _class5),
    Fu =
      ((_class6 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "preamble";
          e.block = this;
        }
      }),
      h(_class6, "PreambleNode"),
      _class6),
    bu =
      ((_class7 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "string";
          e.block = this;
        }
      }),
      h(_class7, "StringNode"),
      _class7),
    yu =
      ((_class8 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.wrapType = t;
          this.type = "entry";
          (e.block = this), (this.fields = []);
        }
      }),
      h(_class8, "EntryNode"),
      _class8),
    Ci =
      ((_class9 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? "" : ref;
          this.parent = e;
          this.name = t;
          this.type = "field";
          this.value = new Eu(this);
        }
      }),
      h(_class9, "FieldNode"),
      _class9),
    Eu =
      ((_class10 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "concat";
          this.canConsumeValue = !0;
          this.concat = [];
        }
      }),
      h(_class10, "ConcatNode"),
      _class10),
    Cu =
      ((_class11 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.value = t;
          this.type = "literal";
          e.concat.push(this);
        }
      }),
      h(_class11, "LiteralNode"),
      _class11),
    Bu =
      ((_class12 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "braced";
          this.value = "";
          this.depth = 0;
          e.concat.push(this);
        }
      }),
      h(_class12, "BracedNode"),
      _class12),
    vu =
      ((_class13 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "quoted";
          this.value = "";
          this.depth = 0;
          e.concat.push(this);
        }
      }),
      h(_class13, "QuotedNode"),
      _class13);
  function m0(r) {
    var e = new gu(),
      t = e,
      i = 1,
      n = 0;
    for (var s = 0; s < r.length; s++) {
      var o = r[s],
        l = r[s - 1];
      switch ((o === "\n" && (i++, (n = 0)), n++, t.type)) {
        case "root": {
          t = o === "@" ? new xs(t) : new tr(t, o);
          break;
        }
        case "text": {
          o === "@" && /[\s\r\n}]/.test(l) ? (t = new xs(t.parent)) : (t.text += o);
          break;
        }
        case "block": {
          if (o === "@") {
            var u = t.parent.children[t.parent.children.length - 2];
            (u === null || u === void 0 ? void 0 : u.type) === "text" ? (u.text += "@" + t.command) : (t.parent.children.pop(), new tr(t.parent, "@" + t.command), t.parent.children.push(t)), (t.command = "");
          } else if (o === "{" || o === "(") {
            var u1 = t.command.trim();
            if (u1 === "" || /\s/.test(u1)) t.parent.children.pop(), (t = new tr(t.parent, "@" + t.command + o));
            else {
              t.command = u1;
              var a = t.command.toLowerCase(),
                _ref = _sliced_to_array(o === "{" ? [1, 0] : [0, 1], 2),
                c = _ref[0],
                f = _ref[1],
                d = "@" + a + o;
              switch (a) {
                case "string":
                  t = new bu(t, d, c, f);
                  break;
                case "preamble":
                  t = new Fu(t, d, c, f);
                  break;
                case "comment":
                  t = new Du(t, d, c, f);
                  break;
                default:
                  t = new yu(t, o);
                  break;
              }
            }
          } else o.match(/[=#,})[\]]/) ? (t.parent.children.pop(), (t = new tr(t.parent, "@" + t.command + o))) : (t.command += o);
          break;
        }
        case "comment":
        case "string":
        case "preamble":
          o === "{" ? t.braces++ : o === "}" ? t.braces-- : o === "(" ? t.parens++ : o === ")" && t.parens--, (t.raw += o), t.braces === 0 && t.parens === 0 && (t = t.parent.parent);
          break;
        case "entry": {
          if (vs(o)) t.key && (t.keyEnded = !0);
          else if (o === ",") t = new Ci(t);
          else if ((t.wrapType === "{" && o === "}") || (t.wrapType === "(" && o === ")")) t = t.parent.parent;
          else if (o === "=" && t.key && p0(t.key)) {
            var u2 = new Ci(t, t.key);
            t.fields.push(u2), (t.key = void 0), (t = u2.value);
          } else {
            if (t.keyEnded) throw new at(r, t, s, i, n, "The entry key cannot contain whitespace");
            var _t_key;
            if (Bv(o)) t.key = ((_t_key = t.key) !== null && _t_key !== void 0 ? _t_key : "") + o;
            else throw new at(r, t, s, i, n, "The entry key cannot contain the character (".concat(o, ")"));
          }
          break;
        }
        case "field": {
          if (o === "}" || o === ")") (t.name = t.name.trim()), (t = t.parent.parent.parent);
          else if (o === "=") (t.name = t.name.trim()), (t = t.value);
          else if (o === ",") (t.name = t.name.trim()), (t = new Ci(t.parent));
          else if (p0(o)) t.name ? (t.name += o) : vs(o) || (t.parent.fields.push(t), (t.name = o));
          else throw new at(r, t, s, i, n);
          break;
        }
        case "concat": {
          if (vs(o)) break;
          if (t.canConsumeValue) {
            if (/[#=,}()[\]]/.test(o)) throw new at(r, t, s, i, n);
            (t.canConsumeValue = !1), o === "{" ? (t = new Bu(t)) : o === '"' ? (t = new vu(t)) : (t = new Cu(t, o));
          } else if (o === ",") t = new Ci(t.parent.parent);
          else if (o === "}" || o === ")") t = t.parent.parent.parent.parent;
          else if (o === "#") t.canConsumeValue = !0;
          else throw new at(r, t, s, i, n);
          break;
        }
        case "literal":
          vs(o) ? (t = t.parent) : o === "," ? (t = new Ci(t.parent.parent.parent)) : o === "}" ? (t = t.parent.parent.parent.parent.parent) : o === "#" ? ((t = t.parent), (t.canConsumeValue = !0)) : (t.value += o);
          break;
        case "braced":
          if (o === "}" && t.depth === 0) {
            t = t.parent;
            break;
          } else o === "{" ? t.depth++ : o === "}" && t.depth--;
          t.value += o;
          break;
        case "quoted":
          if (o === '"' && t.depth === 0) {
            t = t.parent;
            break;
          } else if (o === "{") t.depth++;
          else if (o === "}" && (t.depth--, t.depth < 0)) throw new at(r, t, s, i, n);
          t.value += o;
          break;
      }
    }
    return e;
  }
  h(m0, "generateAST");
  function vs(r) {
    return /^[ \t\n\r]*$/.test(r);
  }
  h(vs, "isWhitespace");
  function Bv(r) {
    return !/[#%{}~$,]/.test(r);
  }
  h(Bv, "isValidKeyCharacter");
  function p0(r) {
    return !/[=,{}()[\]]/.test(r);
  }
  h(p0, "isValidFieldName");
  var at =
    ((_class14 = class _class extends Error {
      constructor(t, i, n, s, o, l) {
        super("Line ".concat(s, ":").concat(o, ": Syntax Error in ").concat(i.type, " (").concat(l, ")\n") + t.slice(Math.max(0, n - 20), n) + ">>" + t[n] + "<<" + t.slice(n + 1, n + 20));
        this.node = i;
        this.line = s;
        this.column = o;
        this.hint = l;
        (this.name = "Syntax Error"), (this.char = t[n]);
      }
    }),
    h(_class14, "BibTeXSyntaxError"),
    _class14);
  var ir =
      ((_r1 = class r {
        constructor(e, t, ref) {
          var i = ref === void 0 ? [] : ref;
          this.kind = e;
          this.parent = t;
          this.children = i;
          this.type = "block";
          t instanceof r ? t.children.push(this) : t instanceof As && t.args.push(this);
        }
      }),
      h(_r1, "BlockNode"),
      _r1),
    xu =
      ((_class15 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? "" : ref;
          this.parent = e;
          this.text = t;
          this.type = "text";
          e.children.push(this);
        }
      }),
      h(_class15, "TextNode"),
      _class15),
    As =
      ((_class16 = class _class {
        constructor(e, ref, ref1) {
          var t = ref === void 0 ? "" : ref,
            i = ref1 === void 0 ? [] : ref1;
          this.parent = e;
          this.command = t;
          this.args = i;
          this.type = "command";
          e.children.push(this);
        }
      }),
      h(_class16, "CommandNode"),
      _class16);
  function ks(r) {
    var e = new ir("root"),
      t = e;
    for (var i = 0; i < r.length; i++) {
      var n = r[i];
      switch (t.type) {
        case "block": {
          n === "\\" ? (t = new As(t)) : n === "{" ? (t = new ir("curly", t)) : ((n === "}" && t.kind === "curly") || (n === "]" && t.kind === "square")) && t.parent ? (t = t.parent) : (t = new xu(t, n));
          break;
        }
        case "text": {
          n === "\\" || n === "{" || (n === "}" && t.parent.kind === "curly") || (n === "]" && t.parent.kind === "square") ? ((t = t.parent), i--) : (t.text += n);
          break;
        }
        case "command":
          n === "{" ? (t = new ir("curly", t)) : n === "[" ? (t = new ir("square", t)) : (n === "}" && t.parent.kind === "curly") || (n === "]" && t.parent.kind === "square") || /\s/.test(n) || t.args.length > 0 ? ((t = t.parent), i--) : (t.command += n);
      }
    }
    return e;
  }
  h(ks, "parseLaTeX");
  function Ss(r) {
    return Au(r);
  }
  h(Ss, "stringifyLaTeX");
  function Au(r) {
    var e = r.children
      .map((t) => {
        switch (t.type) {
          case "block":
            return Au(t);
          case "command":
            return vv(t);
          case "text":
            return t.text;
        }
      })
      .join("");
    switch (r.kind) {
      case "root":
        return e;
      case "curly":
        return "{" + e + "}";
      case "square":
        return "[" + e + "]";
    }
  }
  h(Au, "stringifyBlock");
  function vv(r) {
    return "\\" + r.command + r.args.map(Au).join("");
  }
  h(vv, "stringifyCommand");
  function Hr(r) {
    var e = _object_spread_props(_object_spread({}, r), { children: [] });
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.type === "block" && t.kind === "curly") {
          var i = Hr(t);
          e.children.push(...i.children);
        } else e.children.push(t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(Hr, "flattenLaTeX");
  var g0 = new Map([
    ["0023", "\\#"],
    ["0024", "\\$"],
    ["0025", "\\%"],
    ["0026", "\\&"],
    ["0027", "'"],
    ["0040", "\\@"],
    ["002a", "\\textasteriskcentered"],
    ["005f", "\\_"],
    ["007c", "\\vert{}"],
    ["00a0", "~"],
    ["00a1", "\\textexclamdown{}"],
    ["00a2", "\\textcent{}"],
    ["00a3", "\\textsterling{}"],
    ["00a4", "\\textcurrency{}"],
    ["00a5", "\\textyen{}"],
    ["00a6", "\\textbrokenbar{}"],
    ["00a7", "\\textsection{}"],
    ["00a8", "\\textasciidieresis{}"],
    ["00a9", "\\textcopyright{}"],
    ["00aa", "\\textordfeminine{}"],
    ["00ab", "\\guillemotleft{}"],
    ["00ac", "\\lnot{}"],
    ["00ad", "\\-"],
    ["00ae", "\\textregistered{}"],
    ["00af", "\\textasciimacron{}"],
    ["00b0", "\\textdegree{}"],
    ["00b1", "\\pm{}"],
    ["00b2", "\\ensuremath{^2}"],
    ["00b3", "\\ensuremath{^3}"],
    ["00b4", "\\textasciiacute{}"],
    ["00b5", "\\mathrm{\\mu}"],
    ["00b6", "\\textparagraph{}"],
    ["00b7", "\\cdot{}"],
    ["00b8", "\\c{}"],
    ["00b9", "\\ensuremath{^1}"],
    ["00ba", "\\textordmasculine{}"],
    ["00bb", "\\guillemotright{}"],
    ["00bc", "\\textonequarter{}"],
    ["00bd", "\\textonehalf{}"],
    ["00be", "\\textthreequarters{}"],
    ["00bf", "\\textquestiondown{}"],
    ["00c0", "\\`{A}"],
    ["00c1", "\\'{A}"],
    ["00c2", "\\^{A}"],
    ["00c3", "\\~{A}"],
    ["00c4", '\\"{A}'],
    ["00c5", "\\AA{}"],
    ["00c6", "\\AE{}"],
    ["00c7", "\\c{C}"],
    ["00c8", "\\`{E}"],
    ["00c9", "\\'{E}"],
    ["00ca", "\\^{E}"],
    ["00cb", '\\"{E}'],
    ["00cc", "\\`{I}"],
    ["00cd", "\\'{I}"],
    ["00ce", "\\^{I}"],
    ["00cf", '\\"{I}'],
    ["00d0", "\\DH{}"],
    ["00d1", "\\~{N}"],
    ["00d2", "\\`{O}"],
    ["00d3", "\\'{O}"],
    ["00d4", "\\^{O}"],
    ["00d5", "\\~{O}"],
    ["00d6", '\\"{O}'],
    ["00d7", "\\texttimes{}"],
    ["00d8", "\\O{}"],
    ["00d9", "\\`{U}"],
    ["00da", "\\'{U}"],
    ["00db", "\\^{U}"],
    ["00dc", '\\"{U}'],
    ["00dd", "\\'{Y}"],
    ["00de", "\\TH{}"],
    ["00df", "\\ss{}"],
    ["00e0", "\\`{a}"],
    ["00e1", "\\'{a}"],
    ["00e2", "\\^{a}"],
    ["00e3", "\\~{a}"],
    ["00e4", '\\"{a}'],
    ["00e5", "\\aa{}"],
    ["00e6", "\\ae{}"],
    ["00e7", "\\c{c}"],
    ["00e8", "\\`{e}"],
    ["00e9", "\\'{e}"],
    ["00ea", "\\^{e}"],
    ["00eb", '\\"{e}'],
    ["00ec", "\\`{\\i}"],
    ["00ed", "\\'{\\i}"],
    ["00ee", "\\^{\\i}"],
    ["00ef", '\\"{\\i}'],
    ["00f0", "\\dh{}"],
    ["00f1", "\\~{n}"],
    ["00f2", "\\`{o}"],
    ["00f3", "\\'{o}"],
    ["00f4", "\\^{o}"],
    ["00f5", "\\~{o}"],
    ["00f6", '\\"{o}'],
    ["00f7", "\\div{}"],
    ["00f8", "\\o{}"],
    ["00f9", "\\`{u}"],
    ["00fa", "\\'{u}"],
    ["00fb", "\\^{u}"],
    ["00fc", '\\"{u}'],
    ["00fd", "\\'{y}"],
    ["00fe", "\\th{}"],
    ["00ff", '\\"{y}'],
    ["0100", "\\={A}"],
    ["0101", "\\={a}"],
    ["0102", "\\u{A}"],
    ["0103", "\\u{a}"],
    ["0104", "\\k{A}"],
    ["0105", "\\k{a}"],
    ["0106", "\\'{C}"],
    ["0107", "\\'{c}"],
    ["0108", "\\^{C}"],
    ["0109", "\\^{c}"],
    ["010a", "\\.{C}"],
    ["010b", "\\.{c}"],
    ["010c", "\\v{C}"],
    ["010d", "\\v{c}"],
    ["010e", "\\v{D}"],
    ["010f", "\\v{d}"],
    ["0110", "\\DJ{}"],
    ["0111", "\\dj{}"],
    ["0112", "\\={E}"],
    ["0113", "\\={e}"],
    ["0114", "\\u{E}"],
    ["0115", "\\u{e}"],
    ["0116", "\\.{E}"],
    ["0117", "\\.{e}"],
    ["0118", "\\k{E}"],
    ["0119", "\\k{e}"],
    ["011a", "\\v{E}"],
    ["011b", "\\v{e}"],
    ["011c", "\\^{G}"],
    ["011d", "\\^{g}"],
    ["011e", "\\u{G}"],
    ["011f", "\\u{g}"],
    ["0120", "\\.{G}"],
    ["0121", "\\.{g}"],
    ["0122", "\\c{G}"],
    ["0123", "\\c{g}"],
    ["0124", "\\^{H}"],
    ["0125", "\\^{h}"],
    ["0126", "{\\fontencoding{LELA}\\selectfont\\char40}"],
    ["0127", "\\Elzxh{}"],
    ["0128", "\\~{I}"],
    ["0129", "\\~{\\i}"],
    ["012a", "\\={I}"],
    ["012b", "\\={\\i}"],
    ["012c", "\\u{I}"],
    ["012d", "\\u{\\i}"],
    ["012e", "\\k{I}"],
    ["012f", "\\k{i}"],
    ["0130", "\\.{I}"],
    ["0131", "\\i{}"],
    ["0132", "IJ"],
    ["0133", "ij"],
    ["0134", "\\^{J}"],
    ["0135", "\\^{\\j}"],
    ["0136", "\\c{K}"],
    ["0137", "\\c{k}"],
    ["0138", "{\\fontencoding{LELA}\\selectfont\\char91}"],
    ["0139", "\\'{L}"],
    ["013a", "\\'{l}"],
    ["013b", "\\c{L}"],
    ["013c", "\\c{l}"],
    ["013d", "\\v{L}"],
    ["013e", "\\v{l}"],
    ["013f", "{\\fontencoding{LELA}\\selectfont\\char201}"],
    ["0140", "{\\fontencoding{LELA}\\selectfont\\char202}"],
    ["0141", "\\L{}"],
    ["0142", "\\l{}"],
    ["0143", "\\'{N}"],
    ["0144", "\\'{n}"],
    ["0145", "\\c{N}"],
    ["0146", "\\c{n}"],
    ["0147", "\\v{N}"],
    ["0148", "\\v{n}"],
    ["0149", "'n"],
    ["014a", "\\NG{}"],
    ["014b", "\\ng{}"],
    ["014c", "\\={O}"],
    ["014d", "\\={o}"],
    ["014e", "\\u{O}"],
    ["014f", "\\u{o}"],
    ["0150", "\\H{O}"],
    ["0151", "\\H{o}"],
    ["0152", "\\OE{}"],
    ["0153", "\\oe{}"],
    ["0154", "\\'{R}"],
    ["0155", "\\'{r}"],
    ["0156", "\\c{R}"],
    ["0157", "\\c{r}"],
    ["0158", "\\v{R}"],
    ["0159", "\\v{r}"],
    ["015a", "\\'{S}"],
    ["015b", "\\'{s}"],
    ["015c", "\\^{S}"],
    ["015d", "\\^{s}"],
    ["015e", "\\c{S}"],
    ["015f", "\\c{s}"],
    ["0160", "\\v{S}"],
    ["0161", "\\v{s}"],
    ["0162", "\\c{T}"],
    ["0163", "\\c{t}"],
    ["0164", "\\v{T}"],
    ["0165", "\\v{t}"],
    ["0166", "{\\fontencoding{LELA}\\selectfont\\char47}"],
    ["0167", "{\\fontencoding{LELA}\\selectfont\\char63}"],
    ["0168", "\\~{U}"],
    ["0169", "\\~{u}"],
    ["016a", "\\={U}"],
    ["016b", "\\={u}"],
    ["016c", "\\u{U}"],
    ["016d", "\\u{u}"],
    ["016e", "\\r{U}"],
    ["016f", "\\r{u}"],
    ["0170", "\\H{U}"],
    ["0171", "\\H{u}"],
    ["0172", "\\k{U}"],
    ["0173", "\\k{u}"],
    ["0174", "\\^{W}"],
    ["0175", "\\^{w}"],
    ["0176", "\\^{Y}"],
    ["0177", "\\^{y}"],
    ["0178", '\\"{Y}'],
    ["0179", "\\'{Z}"],
    ["017a", "\\'{z}"],
    ["017b", "\\.{Z}"],
    ["017c", "\\.{z}"],
    ["017d", "\\v{Z}"],
    ["017e", "\\v{z}"],
    ["0195", "\\texthvlig{}"],
    ["019e", "\\textnrleg{}"],
    ["01aa", "\\eth{}"],
    ["01ba", "{\\fontencoding{LELA}\\selectfont\\char195}"],
    ["01c2", "\\textdoublepipe{}"],
    ["01f5", "\\'{g}"],
    ["0250", "\\Elztrna{}"],
    ["0252", "\\Elztrnsa{}"],
    ["0254", "\\Elzopeno{}"],
    ["0256", "\\Elzrtld{}"],
    ["0258", "{\\fontencoding{LEIP}\\selectfont\\char61}"],
    ["0259", "\\Elzschwa{}"],
    ["025b", "\\varepsilon{}"],
    ["0263", "\\Elzpgamma{}"],
    ["0264", "\\Elzpbgam{}"],
    ["0265", "\\Elztrnh{}"],
    ["026c", "\\Elzbtdl{}"],
    ["026d", "\\Elzrtll{}"],
    ["026f", "\\Elztrnm{}"],
    ["0270", "\\Elztrnmlr{}"],
    ["0271", "\\Elzltlmr{}"],
    ["0272", "\\Elzltln{}"],
    ["0273", "\\Elzrtln{}"],
    ["0277", "\\Elzclomeg{}"],
    ["0278", "\\textphi{}"],
    ["0279", "\\Elztrnr{}"],
    ["027a", "\\Elztrnrl{}"],
    ["027b", "\\Elzrttrnr{}"],
    ["027c", "\\Elzrl{}"],
    ["027d", "\\Elzrtlr{}"],
    ["027e", "\\Elzfhr{}"],
    ["027f", "{\\fontencoding{LEIP}\\selectfont\\char202}"],
    ["0282", "\\Elzrtls{}"],
    ["0283", "\\Elzesh{}"],
    ["0287", "\\Elztrnt{}"],
    ["0288", "\\Elzrtlt{}"],
    ["028a", "\\Elzpupsil{}"],
    ["028b", "\\Elzpscrv{}"],
    ["028c", "\\Elzinvv{}"],
    ["028d", "\\Elzinvw{}"],
    ["028e", "\\Elztrny{}"],
    ["0290", "\\Elzrtlz{}"],
    ["0292", "\\Elzyogh{}"],
    ["0294", "\\Elzglst{}"],
    ["0295", "\\Elzreglst{}"],
    ["0296", "\\Elzinglst{}"],
    ["029e", "\\textturnk{}"],
    ["02a4", "\\Elzdyogh{}"],
    ["02a7", "\\Elztesh{}"],
    ["02c7", "\\textasciicaron{}"],
    ["02c8", "\\Elzverts{}"],
    ["02cc", "\\Elzverti{}"],
    ["02d0", "\\Elzlmrk{}"],
    ["02d1", "\\Elzhlmrk{}"],
    ["02d2", "\\Elzsbrhr{}"],
    ["02d3", "\\Elzsblhr{}"],
    ["02d4", "\\Elzrais{}"],
    ["02d5", "\\Elzlow{}"],
    ["02d8", "\\textasciibreve{}"],
    ["02d9", "\\textperiodcentered{}"],
    ["02da", "\\r{}"],
    ["02db", "\\k{}"],
    ["02dc", "\\texttildelow{}"],
    ["02dd", "\\H{}"],
    ["02e5", "\\tone{55}"],
    ["02e6", "\\tone{44}"],
    ["02e7", "\\tone{33}"],
    ["02e8", "\\tone{22}"],
    ["02e9", "\\tone{11}"],
    ["0300", "\\`"],
    ["0301", "\\'"],
    ["0302", "\\^"],
    ["0303", "\\~"],
    ["0304", "\\="],
    ["0306", "\\u"],
    ["0307", "\\."],
    ["0308", '\\"'],
    ["030a", "\\r"],
    ["030b", "\\H"],
    ["030c", "\\v"],
    ["030f", "\\cyrchar\\C"],
    ["0311", "{\\fontencoding{LECO}\\selectfont\\char177}"],
    ["0318", "{\\fontencoding{LECO}\\selectfont\\char184}"],
    ["0319", "{\\fontencoding{LECO}\\selectfont\\char185}"],
    ["0321", "\\Elzpalh{}"],
    ["0322", "\\Elzrh{}"],
    ["0327", "\\c"],
    ["0328", "\\k"],
    ["032a", "\\Elzsbbrg{}"],
    ["032b", "{\\fontencoding{LECO}\\selectfont\\char203}"],
    ["032f", "{\\fontencoding{LECO}\\selectfont\\char207}"],
    ["0335", "\\Elzxl{}"],
    ["0336", "\\Elzbar{}"],
    ["0337", "{\\fontencoding{LECO}\\selectfont\\char215}"],
    ["0338", "{\\fontencoding{LECO}\\selectfont\\char216}"],
    ["033a", "{\\fontencoding{LECO}\\selectfont\\char218}"],
    ["033b", "{\\fontencoding{LECO}\\selectfont\\char219}"],
    ["033c", "{\\fontencoding{LECO}\\selectfont\\char220}"],
    ["033d", "{\\fontencoding{LECO}\\selectfont\\char221}"],
    ["0361", "{\\fontencoding{LECO}\\selectfont\\char225}"],
    ["0386", "\\'{A}"],
    ["0388", "\\'{E}"],
    ["0389", "\\'{H}"],
    ["038a", "\\'{}{I}"],
    ["038c", "\\'{}O"],
    ["038e", "\\mathrm{'Y}"],
    ["038f", "\\mathrm{'\\Omega}"],
    ["0390", "\\acute{\\ddot{\\iota}}"],
    ["0391", "\\ensuremath{\\Alpha}"],
    ["0392", "\\ensuremath{\\Beta}"],
    ["0393", "\\ensuremath{\\Gamma}"],
    ["0394", "\\ensuremath{\\Delta}"],
    ["0395", "\\ensuremath{\\Epsilon}"],
    ["0396", "\\ensuremath{\\Zeta}"],
    ["0397", "\\ensuremath{\\Eta}"],
    ["0398", "\\ensuremath{\\Theta}"],
    ["0399", "\\ensuremath{\\Iota}"],
    ["039a", "\\ensuremath{\\Kappa}"],
    ["039b", "\\ensuremath{\\Lambda}"],
    ["039e", "\\ensuremath{\\Xi}"],
    ["03a0", "\\ensuremath{\\Pi}"],
    ["03a1", "\\ensuremath{\\Rho}"],
    ["03a3", "\\ensuremath{\\Sigma}"],
    ["03a4", "\\ensuremath{\\Tau}"],
    ["03a5", "\\ensuremath{\\Upsilon}"],
    ["03a6", "\\ensuremath{\\Phi}"],
    ["03a7", "\\ensuremath{\\Chi}"],
    ["03a8", "\\ensuremath{\\Psi}"],
    ["03a9", "\\ensuremath{\\Omega}"],
    ["03aa", "\\mathrm{\\ddot{I}}"],
    ["03ab", "\\mathrm{\\ddot{Y}}"],
    ["03ac", "\\'{$\\alpha$}"],
    ["03ad", "\\acute{\\epsilon}"],
    ["03ae", "\\acute{\\eta}"],
    ["03af", "\\acute{\\iota}"],
    ["03b0", "\\acute{\\ddot{\\upsilon}}"],
    ["03b1", "\\ensuremath{\\alpha}"],
    ["03b2", "\\ensuremath{\\beta}"],
    ["03b3", "\\ensuremath{\\gamma}"],
    ["03b4", "\\ensuremath{\\delta}"],
    ["03b5", "\\ensuremath{\\epsilon}"],
    ["03b6", "\\ensuremath{\\zeta}"],
    ["03b7", "\\ensuremath{\\eta}"],
    ["03b8", "\\texttheta{}"],
    ["03b9", "\\ensuremath{\\iota}"],
    ["03ba", "\\ensuremath{\\kappa}"],
    ["03bb", "\\ensuremath{\\lambda}"],
    ["03bc", "\\ensuremath{\\mu}"],
    ["03bd", "\\ensuremath{\\nu}"],
    ["03be", "\\ensuremath{\\xi}"],
    ["03c0", "\\ensuremath{\\pi}"],
    ["03c1", "\\ensuremath{\\rho}"],
    ["03c2", "\\ensuremath{\\varsigma}"],
    ["03c3", "\\ensuremath{\\sigma}"],
    ["03c4", "\\ensuremath{\\tau}"],
    ["03c5", "\\ensuremath{\\upsilon}"],
    ["03c6", "\\ensuremath{\\varphi}"],
    ["03c7", "\\ensuremath{\\chi}"],
    ["03c8", "\\ensuremath{\\psi}"],
    ["03c9", "\\ensuremath{\\omega}"],
    ["03ca", "\\ensuremath{\\ddot{\\iota}}"],
    ["03cb", "\\ensuremath{\\ddot{\\upsilon}}"],
    ["03cc", "\\'{o}"],
    ["03cd", "\\acute{\\upsilon}"],
    ["03ce", "\\acute{\\omega}"],
    ["03d0", "\\Pisymbol{ppi022}{87}"],
    ["03d1", "\\textvartheta{}"],
    ["03d2", "\\ensuremath{\\Upsilon}"],
    ["03d5", "\\ensuremath{\\phi}"],
    ["03d6", "\\ensuremath{\\varpi}"],
    ["03da", "\\Stigma{}"],
    ["03dc", "\\Digamma{}"],
    ["03dd", "\\digamma{}"],
    ["03de", "\\Koppa{}"],
    ["03e0", "\\Sampi{}"],
    ["03f0", "\\varkappa{}"],
    ["03f1", "\\varrho{}"],
    ["03f4", "\\textTheta{}"],
    ["03f6", "\\backepsilon{}"],
    ["0401", "\\cyrchar\\CYRYO{}"],
    ["0402", "\\cyrchar\\CYRDJE{}"],
    ["0403", "\\cyrchar{\\'\\CYRG}"],
    ["0404", "\\cyrchar\\CYRIE{}"],
    ["0405", "\\cyrchar\\CYRDZE{}"],
    ["0406", "\\cyrchar\\CYRII{}"],
    ["0407", "\\cyrchar\\CYRYI{}"],
    ["0408", "\\cyrchar\\CYRJE{}"],
    ["0409", "\\cyrchar\\CYRLJE{}"],
    ["040a", "\\cyrchar\\CYRNJE{}"],
    ["040b", "\\cyrchar\\CYRTSHE{}"],
    ["040c", "\\cyrchar{\\'\\CYRK}"],
    ["040e", "\\cyrchar\\CYRUSHRT{}"],
    ["040f", "\\cyrchar\\CYRDZHE{}"],
    ["0410", "\\cyrchar\\CYRA{}"],
    ["0411", "\\cyrchar\\CYRB{}"],
    ["0412", "\\cyrchar\\CYRV{}"],
    ["0413", "\\cyrchar\\CYRG{}"],
    ["0414", "\\cyrchar\\CYRD{}"],
    ["0415", "\\cyrchar\\CYRE{}"],
    ["0416", "\\cyrchar\\CYRZH{}"],
    ["0417", "\\cyrchar\\CYRZ{}"],
    ["0418", "\\cyrchar\\CYRI{}"],
    ["0419", "\\cyrchar\\CYRISHRT{}"],
    ["041a", "\\cyrchar\\CYRK{}"],
    ["041b", "\\cyrchar\\CYRL{}"],
    ["041c", "\\cyrchar\\CYRM{}"],
    ["041d", "\\cyrchar\\CYRN{}"],
    ["041e", "\\cyrchar\\CYRO{}"],
    ["041f", "\\cyrchar\\CYRP{}"],
    ["0420", "\\cyrchar\\CYRR{}"],
    ["0421", "\\cyrchar\\CYRS{}"],
    ["0422", "\\cyrchar\\CYRT{}"],
    ["0423", "\\cyrchar\\CYRU{}"],
    ["0424", "\\cyrchar\\CYRF{}"],
    ["0425", "\\cyrchar\\CYRH{}"],
    ["0426", "\\cyrchar\\CYRC{}"],
    ["0427", "\\cyrchar\\CYRCH{}"],
    ["0428", "\\cyrchar\\CYRSH{}"],
    ["0429", "\\cyrchar\\CYRSHCH{}"],
    ["042a", "\\cyrchar\\CYRHRDSN{}"],
    ["042b", "\\cyrchar\\CYRERY{}"],
    ["042c", "\\cyrchar\\CYRSFTSN{}"],
    ["042d", "\\cyrchar\\CYREREV{}"],
    ["042e", "\\cyrchar\\CYRYU{}"],
    ["042f", "\\cyrchar\\CYRYA{}"],
    ["0430", "\\cyrchar\\cyra{}"],
    ["0431", "\\cyrchar\\cyrb{}"],
    ["0432", "\\cyrchar\\cyrv{}"],
    ["0433", "\\cyrchar\\cyrg{}"],
    ["0434", "\\cyrchar\\cyrd{}"],
    ["0435", "\\cyrchar\\cyre{}"],
    ["0436", "\\cyrchar\\cyrzh{}"],
    ["0437", "\\cyrchar\\cyrz{}"],
    ["0438", "\\cyrchar\\cyri{}"],
    ["0439", "\\cyrchar\\cyrishrt{}"],
    ["043a", "\\cyrchar\\cyrk{}"],
    ["043b", "\\cyrchar\\cyrl{}"],
    ["043c", "\\cyrchar\\cyrm{}"],
    ["043d", "\\cyrchar\\cyrn{}"],
    ["043e", "\\cyrchar\\cyro{}"],
    ["043f", "\\cyrchar\\cyrp{}"],
    ["0440", "\\cyrchar\\cyrr{}"],
    ["0441", "\\cyrchar\\cyrs{}"],
    ["0442", "\\cyrchar\\cyrt{}"],
    ["0443", "\\cyrchar\\cyru{}"],
    ["0444", "\\cyrchar\\cyrf{}"],
    ["0445", "\\cyrchar\\cyrh{}"],
    ["0446", "\\cyrchar\\cyrc{}"],
    ["0447", "\\cyrchar\\cyrch{}"],
    ["0448", "\\cyrchar\\cyrsh{}"],
    ["0449", "\\cyrchar\\cyrshch{}"],
    ["044a", "\\cyrchar\\cyrhrdsn{}"],
    ["044b", "\\cyrchar\\cyrery{}"],
    ["044c", "\\cyrchar\\cyrsftsn{}"],
    ["044d", "\\cyrchar\\cyrerev{}"],
    ["044e", "\\cyrchar\\cyryu{}"],
    ["044f", "\\cyrchar\\cyrya{}"],
    ["0451", "\\cyrchar\\cyryo{}"],
    ["0452", "\\cyrchar\\cyrdje{}"],
    ["0453", "\\cyrchar{\\'\\cyrg}"],
    ["0454", "\\cyrchar\\cyrie{}"],
    ["0455", "\\cyrchar\\cyrdze{}"],
    ["0456", "\\cyrchar\\cyrii{}"],
    ["0457", "\\cyrchar\\cyryi{}"],
    ["0458", "\\cyrchar\\cyrje{}"],
    ["0459", "\\cyrchar\\cyrlje{}"],
    ["045a", "\\cyrchar\\cyrnje{}"],
    ["045b", "\\cyrchar\\cyrtshe{}"],
    ["045c", "\\cyrchar{\\'\\cyrk}"],
    ["045e", "\\cyrchar\\cyrushrt{}"],
    ["045f", "\\cyrchar\\cyrdzhe{}"],
    ["0460", "\\cyrchar\\CYROMEGA{}"],
    ["0461", "\\cyrchar\\cyromega{}"],
    ["0462", "\\cyrchar\\CYRYAT{}"],
    ["0464", "\\cyrchar\\CYRIOTE{}"],
    ["0465", "\\cyrchar\\cyriote{}"],
    ["0466", "\\cyrchar\\CYRLYUS{}"],
    ["0467", "\\cyrchar\\cyrlyus{}"],
    ["0468", "\\cyrchar\\CYRIOTLYUS{}"],
    ["0469", "\\cyrchar\\cyriotlyus{}"],
    ["046a", "\\cyrchar\\CYRBYUS{}"],
    ["046c", "\\cyrchar\\CYRIOTBYUS{}"],
    ["046d", "\\cyrchar\\cyriotbyus{}"],
    ["046e", "\\cyrchar\\CYRKSI{}"],
    ["046f", "\\cyrchar\\cyrksi{}"],
    ["0470", "\\cyrchar\\CYRPSI{}"],
    ["0471", "\\cyrchar\\cyrpsi{}"],
    ["0472", "\\cyrchar\\CYRFITA{}"],
    ["0474", "\\cyrchar\\CYRIZH{}"],
    ["0478", "\\cyrchar\\CYRUK{}"],
    ["0479", "\\cyrchar\\cyruk{}"],
    ["047a", "\\cyrchar\\CYROMEGARND{}"],
    ["047b", "\\cyrchar\\cyromegarnd{}"],
    ["047c", "\\cyrchar\\CYROMEGATITLO{}"],
    ["047d", "\\cyrchar\\cyromegatitlo{}"],
    ["047e", "\\cyrchar\\CYROT{}"],
    ["047f", "\\cyrchar\\cyrot{}"],
    ["0480", "\\cyrchar\\CYRKOPPA{}"],
    ["0481", "\\cyrchar\\cyrkoppa{}"],
    ["0482", "\\cyrchar\\cyrthousands{}"],
    ["0488", "\\cyrchar\\cyrhundredthousands{}"],
    ["0489", "\\cyrchar\\cyrmillions{}"],
    ["048c", "\\cyrchar\\CYRSEMISFTSN{}"],
    ["048d", "\\cyrchar\\cyrsemisftsn{}"],
    ["048e", "\\cyrchar\\CYRRTICK{}"],
    ["048f", "\\cyrchar\\cyrrtick{}"],
    ["0490", "\\cyrchar\\CYRGUP{}"],
    ["0491", "\\cyrchar\\cyrgup{}"],
    ["0492", "\\cyrchar\\CYRGHCRS{}"],
    ["0493", "\\cyrchar\\cyrghcrs{}"],
    ["0494", "\\cyrchar\\CYRGHK{}"],
    ["0495", "\\cyrchar\\cyrghk{}"],
    ["0496", "\\cyrchar\\CYRZHDSC{}"],
    ["0497", "\\cyrchar\\cyrzhdsc{}"],
    ["0498", "\\cyrchar\\CYRZDSC{}"],
    ["0499", "\\cyrchar\\cyrzdsc{}"],
    ["049a", "\\cyrchar\\CYRKDSC{}"],
    ["049b", "\\cyrchar\\cyrkdsc{}"],
    ["049c", "\\cyrchar\\CYRKVCRS{}"],
    ["049d", "\\cyrchar\\cyrkvcrs{}"],
    ["049e", "\\cyrchar\\CYRKHCRS{}"],
    ["049f", "\\cyrchar\\cyrkhcrs{}"],
    ["04a0", "\\cyrchar\\CYRKBEAK{}"],
    ["04a1", "\\cyrchar\\cyrkbeak{}"],
    ["04a2", "\\cyrchar\\CYRNDSC{}"],
    ["04a3", "\\cyrchar\\cyrndsc{}"],
    ["04a4", "\\cyrchar\\CYRNG{}"],
    ["04a5", "\\cyrchar\\cyrng{}"],
    ["04a6", "\\cyrchar\\CYRPHK{}"],
    ["04a7", "\\cyrchar\\cyrphk{}"],
    ["04a8", "\\cyrchar\\CYRABHHA{}"],
    ["04a9", "\\cyrchar\\cyrabhha{}"],
    ["04aa", "\\cyrchar\\CYRSDSC{}"],
    ["04ab", "\\cyrchar\\cyrsdsc{}"],
    ["04ac", "\\cyrchar\\CYRTDSC{}"],
    ["04ad", "\\cyrchar\\cyrtdsc{}"],
    ["04ae", "\\cyrchar\\CYRY{}"],
    ["04af", "\\cyrchar\\cyry{}"],
    ["04b0", "\\cyrchar\\CYRYHCRS{}"],
    ["04b1", "\\cyrchar\\cyryhcrs{}"],
    ["04b2", "\\cyrchar\\CYRHDSC{}"],
    ["04b3", "\\cyrchar\\cyrhdsc{}"],
    ["04b4", "\\cyrchar\\CYRTETSE{}"],
    ["04b5", "\\cyrchar\\cyrtetse{}"],
    ["04b6", "\\cyrchar\\CYRCHRDSC{}"],
    ["04b7", "\\cyrchar\\cyrchrdsc{}"],
    ["04b8", "\\cyrchar\\CYRCHVCRS{}"],
    ["04b9", "\\cyrchar\\cyrchvcrs{}"],
    ["04ba", "\\cyrchar\\CYRSHHA{}"],
    ["04bb", "\\cyrchar\\cyrshha{}"],
    ["04bc", "\\cyrchar\\CYRABHCH{}"],
    ["04bd", "\\cyrchar\\cyrabhch{}"],
    ["04be", "\\cyrchar\\CYRABHCHDSC{}"],
    ["04bf", "\\cyrchar\\cyrabhchdsc{}"],
    ["04c0", "\\cyrchar\\CYRpalochka{}"],
    ["04c3", "\\cyrchar\\CYRKHK{}"],
    ["04c4", "\\cyrchar\\cyrkhk{}"],
    ["04c7", "\\cyrchar\\CYRNHK{}"],
    ["04c8", "\\cyrchar\\cyrnhk{}"],
    ["04cb", "\\cyrchar\\CYRCHLDSC{}"],
    ["04cc", "\\cyrchar\\cyrchldsc{}"],
    ["04d4", "\\cyrchar\\CYRAE{}"],
    ["04d5", "\\cyrchar\\cyrae{}"],
    ["04d8", "\\cyrchar\\CYRSCHWA{}"],
    ["04d9", "\\cyrchar\\cyrschwa{}"],
    ["04e0", "\\cyrchar\\CYRABHDZE{}"],
    ["04e1", "\\cyrchar\\cyrabhdze{}"],
    ["04e8", "\\cyrchar\\CYROTLD{}"],
    ["04e9", "\\cyrchar\\cyrotld{}"],
    ["2002", "\\hspace{0.6em}"],
    ["2003", "\\hspace{1em}"],
    ["2004", "\\hspace{0.33em}"],
    ["2005", "\\hspace{0.25em}"],
    ["2006", "\\hspace{0.166em}"],
    ["2007", "\\hphantom{0}"],
    ["2008", "\\hphantom{,}"],
    ["2009", "\\hspace{0.167em}"],
    ["200a", "\\mkern1mu{}"],
    ["2010", "-"],
    ["2014", "--"],
    ["2015", "\\rule{1em}{1pt}"],
    ["2016", "\\Vert{}"],
    ["2018", "`"],
    ["2019", "'"],
    ["201b", "\\Elzreapos{}"],
    ["201c", "``"],
    ["201d", "''"],
    ["201e", ",,"],
    ["2020", "\\textdagger{}"],
    ["2021", "\\textdaggerdbl{}"],
    ["2022", "\\textbullet{}"],
    ["2025", ".."],
    ["2026", "\\ldots{}"],
    ["2030", "\\textperthousand{}"],
    ["2031", "\\textpertenthousand{}"],
    ["2032", "\\ensuremath{'}"],
    ["2033", "\\ensuremath{''}"],
    ["2034", "\\ensuremath{'''}"],
    ["2035", "\\backprime{}"],
    ["2039", "\\guilsinglleft{}"],
    ["203a", "\\guilsinglright{}"],
    ["2057", "''''"],
    ["205f", "\\mkern4mu{}"],
    ["2060", "\\nolinebreak{}"],
    ["20a7", "\\ensuremath{\\Elzpes}"],
    ["20ac", "\\mbox{\\texteuro}{}"],
    ["20db", "\\dddot{}"],
    ["20dc", "\\ddddot{}"],
    ["2102", "\\mathbb{C}"],
    ["210a", "\\mathscr{g}"],
    ["210b", "\\mathscr{H}"],
    ["210c", "\\mathfrak{H}"],
    ["210d", "\\mathbb{H}"],
    ["210f", "\\hslash{}"],
    ["2110", "\\mathscr{I}"],
    ["2111", "\\mathfrak{I}"],
    ["2112", "\\mathscr{L}"],
    ["2113", "\\mathscr{l}"],
    ["2115", "\\mathbb{N}"],
    ["2116", "\\cyrchar\\textnumero{}"],
    ["2118", "\\wp{}"],
    ["2119", "\\mathbb{P}"],
    ["211a", "\\mathbb{Q}"],
    ["211b", "\\mathscr{R}"],
    ["211c", "\\mathfrak{R}"],
    ["211d", "\\mathbb{R}"],
    ["211e", "\\Elzxrat{}"],
    ["2122", "\\texttrademark{}"],
    ["2124", "\\mathbb{Z}"],
    ["2126", "\\Omega{}"],
    ["2127", "\\mho{}"],
    ["2128", "\\mathfrak{Z}"],
    ["2129", "\\ElsevierGlyph{2129}"],
    ["212b", "\\AA{}"],
    ["212c", "\\mathscr{B}"],
    ["212d", "\\mathfrak{C}"],
    ["212f", "\\mathscr{e}"],
    ["2130", "\\mathscr{E}"],
    ["2131", "\\mathscr{F}"],
    ["2133", "\\mathscr{M}"],
    ["2134", "\\mathscr{o}"],
    ["2135", "\\aleph{}"],
    ["2136", "\\beth{}"],
    ["2137", "\\gimel{}"],
    ["2138", "\\daleth{}"],
    ["2153", "\\textfrac{1}{3}"],
    ["2154", "\\textfrac{2}{3}"],
    ["2155", "\\textfrac{1}{5}"],
    ["2156", "\\textfrac{2}{5}"],
    ["2157", "\\textfrac{3}{5}"],
    ["2158", "\\textfrac{4}{5}"],
    ["2159", "\\textfrac{1}{6}"],
    ["215a", "\\textfrac{5}{6}"],
    ["215b", "\\textfrac{1}{8}"],
    ["215c", "\\textfrac{3}{8}"],
    ["215d", "\\textfrac{5}{8}"],
    ["215e", "\\textfrac{7}{8}"],
    ["2190", "\\leftarrow{}"],
    ["2191", "\\uparrow{}"],
    ["2192", "\\rightarrow{}"],
    ["2193", "\\downarrow{}"],
    ["2194", "\\leftrightarrow{}"],
    ["2195", "\\updownarrow{}"],
    ["2196", "\\nwarrow{}"],
    ["2197", "\\nearrow{}"],
    ["2198", "\\searrow{}"],
    ["2199", "\\swarrow{}"],
    ["219a", "\\nleftarrow{}"],
    ["219b", "\\nrightarrow{}"],
    ["219c", "\\arrowwaveright{}"],
    ["219d", "\\arrowwaveright{}"],
    ["219e", "\\twoheadleftarrow{}"],
    ["21a0", "\\twoheadrightarrow{}"],
    ["21a2", "\\leftarrowtail{}"],
    ["21a3", "\\rightarrowtail{}"],
    ["21a6", "\\mapsto{}"],
    ["21a9", "\\hookleftarrow{}"],
    ["21aa", "\\hookrightarrow{}"],
    ["21ab", "\\looparrowleft{}"],
    ["21ac", "\\looparrowright{}"],
    ["21ad", "\\leftrightsquigarrow{}"],
    ["21ae", "\\nleftrightarrow{}"],
    ["21b0", "\\Lsh{}"],
    ["21b1", "\\Rsh{}"],
    ["21b3", "\\ElsevierGlyph{21B3}"],
    ["21b6", "\\curvearrowleft{}"],
    ["21b7", "\\curvearrowright{}"],
    ["21ba", "\\circlearrowleft{}"],
    ["21bb", "\\circlearrowright{}"],
    ["21bc", "\\leftharpoonup{}"],
    ["21bd", "\\leftharpoondown{}"],
    ["21be", "\\upharpoonright{}"],
    ["21bf", "\\upharpoonleft{}"],
    ["21c0", "\\rightharpoonup{}"],
    ["21c1", "\\rightharpoondown{}"],
    ["21c2", "\\downharpoonright{}"],
    ["21c3", "\\downharpoonleft{}"],
    ["21c4", "\\rightleftarrows{}"],
    ["21c5", "\\dblarrowupdown{}"],
    ["21c6", "\\leftrightarrows{}"],
    ["21c7", "\\leftleftarrows{}"],
    ["21c8", "\\upuparrows{}"],
    ["21c9", "\\rightrightarrows{}"],
    ["21ca", "\\downdownarrows{}"],
    ["21cb", "\\leftrightharpoons{}"],
    ["21cc", "\\rightleftharpoons{}"],
    ["21cd", "\\nLeftarrow{}"],
    ["21ce", "\\nLeftrightarrow{}"],
    ["21cf", "\\nRightarrow{}"],
    ["21d0", "\\Leftarrow{}"],
    ["21d1", "\\Uparrow{}"],
    ["21d2", "\\Rightarrow{}"],
    ["21d3", "\\Downarrow{}"],
    ["21d4", "\\Leftrightarrow{}"],
    ["21d5", "\\Updownarrow{}"],
    ["21da", "\\Lleftarrow{}"],
    ["21db", "\\Rrightarrow{}"],
    ["21dd", "\\rightsquigarrow{}"],
    ["21f5", "\\DownArrowUpArrow{}"],
    ["2200", "\\forall{}"],
    ["2201", "\\complement{}"],
    ["2202", "\\partial{}"],
    ["2203", "\\exists{}"],
    ["2204", "\\nexists{}"],
    ["2205", "\\varnothing{}"],
    ["2207", "\\nabla{}"],
    ["2208", "\\in{}"],
    ["2209", "\\not\\in{}"],
    ["220b", "\\ni{}"],
    ["220c", "\\not\\ni{}"],
    ["220f", "\\prod{}"],
    ["2210", "\\coprod{}"],
    ["2211", "\\sum{}"],
    ["2212", "-"],
    ["2213", "\\mp{}"],
    ["2214", "\\dotplus{}"],
    ["2216", "\\setminus{}"],
    ["2217", "{\\_\\ast}"],
    ["2218", "\\circ{}"],
    ["2219", "\\bullet{}"],
    ["221a", "\\surd{}"],
    ["221d", "\\propto{}"],
    ["221e", "\\infty{}"],
    ["221f", "\\rightangle{}"],
    ["2220", "\\angle{}"],
    ["2221", "\\measuredangle{}"],
    ["2222", "\\sphericalangle{}"],
    ["2223", "\\mid{}"],
    ["2224", "\\nmid{}"],
    ["2225", "\\parallel{}"],
    ["2226", "\\nparallel{}"],
    ["2227", "\\wedge{}"],
    ["2228", "\\vee{}"],
    ["2229", "\\cap{}"],
    ["222a", "\\cup{}"],
    ["222b", "\\int{}"],
    ["222c", "\\int\\!\\int{}"],
    ["222d", "\\int\\!\\int\\!\\int{}"],
    ["222e", "\\oint{}"],
    ["222f", "\\surfintegral{}"],
    ["2230", "\\volintegral{}"],
    ["2231", "\\clwintegral{}"],
    ["2232", "\\ElsevierGlyph{2232}"],
    ["2233", "\\ElsevierGlyph{2233}"],
    ["2234", "\\therefore{}"],
    ["2235", "\\because{}"],
    ["2237", "\\Colon{}"],
    ["2238", "\\ElsevierGlyph{2238}"],
    ["223a", "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}"],
    ["223b", "\\homothetic{}"],
    ["223c", "\\sim{}"],
    ["223d", "\\backsim{}"],
    ["223e", "\\lazysinv{}"],
    ["2240", "\\wr{}"],
    ["2241", "\\not\\sim{}"],
    ["2242", "\\ElsevierGlyph{2242}"],
    ["2243", "\\simeq{}"],
    ["2244", "\\not\\simeq{}"],
    ["2245", "\\cong{}"],
    ["2246", "\\approxnotequal{}"],
    ["2247", "\\not\\cong{}"],
    ["2248", "\\approx{}"],
    ["2249", "\\not\\approx{}"],
    ["224a", "\\approxeq{}"],
    ["224b", "\\tildetrpl{}"],
    ["224c", "\\allequal{}"],
    ["224d", "\\asymp{}"],
    ["224e", "\\Bumpeq{}"],
    ["224f", "\\bumpeq{}"],
    ["2250", "\\doteq{}"],
    ["2251", "\\doteqdot{}"],
    ["2252", "\\fallingdotseq{}"],
    ["2253", "\\risingdotseq{}"],
    ["2254", ":="],
    ["2255", "=:"],
    ["2256", "\\eqcirc{}"],
    ["2257", "\\circeq{}"],
    ["2259", "\\estimates{}"],
    ["225a", "\\ElsevierGlyph{225A}"],
    ["225b", "\\starequal{}"],
    ["225c", "\\triangleq{}"],
    ["225f", "\\ElsevierGlyph{225F}"],
    ["2260", "\\not ="],
    ["2261", "\\equiv{}"],
    ["2262", "\\not\\equiv{}"],
    ["2264", "\\leq{}"],
    ["2265", "\\geq{}"],
    ["2266", "\\leqq{}"],
    ["2267", "\\geqq{}"],
    ["2268", "\\lneqq{}"],
    ["2269", "\\gneqq{}"],
    ["226a", "\\ll{}"],
    ["226b", "\\gg{}"],
    ["226c", "\\between{}"],
    ["226d", "\\not\\kern-0.3em\\times{}"],
    ["226e", "\\not&lt;"],
    ["226f", "\\not&gt;"],
    ["2270", "\\not\\leq{}"],
    ["2271", "\\not\\geq{}"],
    ["2272", "\\lessequivlnt{}"],
    ["2273", "\\greaterequivlnt{}"],
    ["2274", "\\ElsevierGlyph{2274}"],
    ["2275", "\\ElsevierGlyph{2275}"],
    ["2276", "\\lessgtr{}"],
    ["2277", "\\gtrless{}"],
    ["2278", "\\notlessgreater{}"],
    ["2279", "\\notgreaterless{}"],
    ["227a", "\\prec{}"],
    ["227b", "\\succ{}"],
    ["227c", "\\preccurlyeq{}"],
    ["227d", "\\succcurlyeq{}"],
    ["227e", "\\precapprox{}"],
    ["227f", "\\succapprox{}"],
    ["2280", "\\not\\prec{}"],
    ["2281", "\\not\\succ{}"],
    ["2282", "\\subset{}"],
    ["2283", "\\supset{}"],
    ["2284", "\\not\\subset{}"],
    ["2285", "\\not\\supset{}"],
    ["2286", "\\subseteq{}"],
    ["2287", "\\supseteq{}"],
    ["2288", "\\not\\subseteq{}"],
    ["2289", "\\not\\supseteq{}"],
    ["228a", "\\subsetneq{}"],
    ["228b", "\\supsetneq{}"],
    ["228e", "\\uplus{}"],
    ["228f", "\\sqsubset{}"],
    ["2290", "\\sqsupset{}"],
    ["2291", "\\sqsubseteq{}"],
    ["2292", "\\sqsupseteq{}"],
    ["2293", "\\sqcap{}"],
    ["2294", "\\sqcup{}"],
    ["2295", "\\oplus{}"],
    ["2296", "\\ominus{}"],
    ["2297", "\\otimes{}"],
    ["2298", "\\oslash{}"],
    ["2299", "\\odot{}"],
    ["229a", "\\circledcirc{}"],
    ["229b", "\\circledast{}"],
    ["229d", "\\circleddash{}"],
    ["229e", "\\boxplus{}"],
    ["229f", "\\boxminus{}"],
    ["22a0", "\\boxtimes{}"],
    ["22a1", "\\boxdot{}"],
    ["22a2", "\\vdash{}"],
    ["22a3", "\\dashv{}"],
    ["22a4", "\\top{}"],
    ["22a5", "\\perp{}"],
    ["22a7", "\\truestate{}"],
    ["22a8", "\\forcesextra{}"],
    ["22a9", "\\Vdash{}"],
    ["22aa", "\\Vvdash{}"],
    ["22ab", "\\VDash{}"],
    ["22ac", "\\nvdash{}"],
    ["22ad", "\\nvDash{}"],
    ["22ae", "\\nVdash{}"],
    ["22af", "\\nVDash{}"],
    ["22b2", "\\vartriangleleft{}"],
    ["22b3", "\\vartriangleright{}"],
    ["22b4", "\\trianglelefteq{}"],
    ["22b5", "\\trianglerighteq{}"],
    ["22b6", "\\original{}"],
    ["22b7", "\\image{}"],
    ["22b8", "\\multimap{}"],
    ["22b9", "\\hermitconjmatrix{}"],
    ["22ba", "\\intercal{}"],
    ["22bb", "\\veebar{}"],
    ["22be", "\\rightanglearc{}"],
    ["22c0", "\\ElsevierGlyph{22C0}"],
    ["22c1", "\\ElsevierGlyph{22C1}"],
    ["22c2", "\\bigcap{}"],
    ["22c3", "\\bigcup{}"],
    ["22c4", "\\diamond{}"],
    ["22c5", "\\cdot{}"],
    ["22c6", "\\star{}"],
    ["22c7", "\\divideontimes{}"],
    ["22c8", "\\bowtie{}"],
    ["22c9", "\\ltimes{}"],
    ["22ca", "\\rtimes{}"],
    ["22cb", "\\leftthreetimes{}"],
    ["22cc", "\\rightthreetimes{}"],
    ["22cd", "\\backsimeq{}"],
    ["22ce", "\\curlyvee{}"],
    ["22cf", "\\curlywedge{}"],
    ["22d0", "\\Subset{}"],
    ["22d1", "\\Supset{}"],
    ["22d2", "\\Cap{}"],
    ["22d3", "\\Cup{}"],
    ["22d4", "\\pitchfork{}"],
    ["22d6", "\\lessdot{}"],
    ["22d7", "\\gtrdot{}"],
    ["22d8", "\\verymuchless{}"],
    ["22d9", "\\verymuchgreater{}"],
    ["22da", "\\lesseqgtr{}"],
    ["22db", "\\gtreqless{}"],
    ["22de", "\\curlyeqprec{}"],
    ["22df", "\\curlyeqsucc{}"],
    ["22e2", "\\not\\sqsubseteq{}"],
    ["22e3", "\\not\\sqsupseteq{}"],
    ["22e5", "\\Elzsqspne{}"],
    ["22e6", "\\lnsim{}"],
    ["22e7", "\\gnsim{}"],
    ["22e8", "\\precedesnotsimilar{}"],
    ["22e9", "\\succnsim{}"],
    ["22ea", "\\ntriangleleft{}"],
    ["22eb", "\\ntriangleright{}"],
    ["22ec", "\\ntrianglelefteq{}"],
    ["22ed", "\\ntrianglerighteq{}"],
    ["22ee", "\\vdots{}"],
    ["22ef", "\\cdots{}"],
    ["22f0", "\\upslopeellipsis{}"],
    ["22f1", "\\downslopeellipsis{}"],
    ["2305", "\\barwedge{}"],
    ["2306", "\\perspcorrespond{}"],
    ["2308", "\\lceil{}"],
    ["2309", "\\rceil{}"],
    ["230a", "\\lfloor{}"],
    ["230b", "\\rfloor{}"],
    ["2315", "\\recorder{}"],
    ["2316", '\\mathchar"2208'],
    ["231c", "\\ulcorner{}"],
    ["231d", "\\urcorner{}"],
    ["231e", "\\llcorner{}"],
    ["231f", "\\lrcorner{}"],
    ["2322", "\\frown{}"],
    ["2323", "\\smile{}"],
    ["2329", "\\langle{}"],
    ["232a", "\\rangle{}"],
    ["233d", "\\ElsevierGlyph{E838}"],
    ["23a3", "\\Elzdlcorn{}"],
    ["23b0", "\\lmoustache{}"],
    ["23b1", "\\rmoustache{}"],
    ["2423", "\\textvisiblespace{}"],
    ["2460", "\\ding{172}"],
    ["2461", "\\ding{173}"],
    ["2462", "\\ding{174}"],
    ["2463", "\\ding{175}"],
    ["2464", "\\ding{176}"],
    ["2465", "\\ding{177}"],
    ["2466", "\\ding{178}"],
    ["2467", "\\ding{179}"],
    ["2468", "\\ding{180}"],
    ["2469", "\\ding{181}"],
    ["24c8", "\\circledS{}"],
    ["2506", "\\Elzdshfnc{}"],
    ["2519", "\\Elzsqfnw{}"],
    ["2571", "\\diagup{}"],
    ["25a0", "\\ding{110}"],
    ["25a1", "\\square{}"],
    ["25aa", "\\blacksquare{}"],
    ["25ad", "\\fbox{~~}"],
    ["25af", "\\Elzvrecto{}"],
    ["25b1", "\\ElsevierGlyph{E381}"],
    ["25b2", "\\ding{115}"],
    ["25b3", "\\bigtriangleup{}"],
    ["25b4", "\\blacktriangle{}"],
    ["25b5", "\\vartriangle{}"],
    ["25b8", "\\blacktriangleright{}"],
    ["25b9", "\\triangleright{}"],
    ["25bc", "\\ding{116}"],
    ["25bd", "\\bigtriangledown{}"],
    ["25be", "\\blacktriangledown{}"],
    ["25bf", "\\triangledown{}"],
    ["25c2", "\\blacktriangleleft{}"],
    ["25c3", "\\triangleleft{}"],
    ["25c6", "\\ding{117}"],
    ["25ca", "\\lozenge{}"],
    ["25cb", "\\bigcirc{}"],
    ["25cf", "\\ding{108}"],
    ["25d0", "\\Elzcirfl{}"],
    ["25d1", "\\Elzcirfr{}"],
    ["25d2", "\\Elzcirfb{}"],
    ["25d7", "\\ding{119}"],
    ["25d8", "\\Elzrvbull{}"],
    ["25e7", "\\Elzsqfl{}"],
    ["25e8", "\\Elzsqfr{}"],
    ["25ea", "\\Elzsqfse{}"],
    ["25ef", "\\bigcirc{}"],
    ["2605", "\\ding{72}"],
    ["2606", "\\ding{73}"],
    ["260e", "\\ding{37}"],
    ["261b", "\\ding{42}"],
    ["261e", "\\ding{43}"],
    ["263e", "\\rightmoon{}"],
    ["263f", "\\mercury{}"],
    ["2640", "\\venus{}"],
    ["2642", "\\male{}"],
    ["2643", "\\jupiter{}"],
    ["2644", "\\saturn{}"],
    ["2645", "\\uranus{}"],
    ["2646", "\\neptune{}"],
    ["2647", "\\pluto{}"],
    ["2648", "\\aries{}"],
    ["2649", "\\taurus{}"],
    ["264a", "\\gemini{}"],
    ["264b", "\\cancer{}"],
    ["264c", "\\leo{}"],
    ["264d", "\\virgo{}"],
    ["264e", "\\libra{}"],
    ["264f", "\\scorpio{}"],
    ["2650", "\\sagittarius{}"],
    ["2651", "\\capricornus{}"],
    ["2652", "\\aquarius{}"],
    ["2653", "\\pisces{}"],
    ["2660", "\\ding{171}"],
    ["2662", "\\diamond{}"],
    ["2663", "\\ding{168}"],
    ["2665", "\\ding{170}"],
    ["2666", "\\ding{169}"],
    ["2669", "\\quarternote{}"],
    ["266a", "\\eighthnote{}"],
    ["266d", "\\flat{}"],
    ["266e", "\\natural{}"],
    ["266f", "\\sharp{}"],
    ["2701", "\\ding{33}"],
    ["2702", "\\ding{34}"],
    ["2703", "\\ding{35}"],
    ["2704", "\\ding{36}"],
    ["2706", "\\ding{38}"],
    ["2707", "\\ding{39}"],
    ["2708", "\\ding{40}"],
    ["2709", "\\ding{41}"],
    ["270c", "\\ding{44}"],
    ["270d", "\\ding{45}"],
    ["270e", "\\ding{46}"],
    ["270f", "\\ding{47}"],
    ["2710", "\\ding{48}"],
    ["2711", "\\ding{49}"],
    ["2712", "\\ding{50}"],
    ["2713", "\\ding{51}"],
    ["2714", "\\ding{52}"],
    ["2715", "\\ding{53}"],
    ["2716", "\\ding{54}"],
    ["2717", "\\ding{55}"],
    ["2718", "\\ding{56}"],
    ["2719", "\\ding{57}"],
    ["271a", "\\ding{58}"],
    ["271b", "\\ding{59}"],
    ["271c", "\\ding{60}"],
    ["271d", "\\ding{61}"],
    ["271e", "\\ding{62}"],
    ["271f", "\\ding{63}"],
    ["2720", "\\ding{64}"],
    ["2721", "\\ding{65}"],
    ["2722", "\\ding{66}"],
    ["2723", "\\ding{67}"],
    ["2724", "\\ding{68}"],
    ["2725", "\\ding{69}"],
    ["2726", "\\ding{70}"],
    ["2727", "\\ding{71}"],
    ["2729", "\\ding{73}"],
    ["272a", "\\ding{74}"],
    ["272b", "\\ding{75}"],
    ["272c", "\\ding{76}"],
    ["272d", "\\ding{77}"],
    ["272e", "\\ding{78}"],
    ["272f", "\\ding{79}"],
    ["2730", "\\ding{80}"],
    ["2731", "\\ding{81}"],
    ["2732", "\\ding{82}"],
    ["2733", "\\ding{83}"],
    ["2734", "\\ding{84}"],
    ["2735", "\\ding{85}"],
    ["2736", "\\ding{86}"],
    ["2737", "\\ding{87}"],
    ["2738", "\\ding{88}"],
    ["2739", "\\ding{89}"],
    ["273a", "\\ding{90}"],
    ["273b", "\\ding{91}"],
    ["273c", "\\ding{92}"],
    ["273d", "\\ding{93}"],
    ["273e", "\\ding{94}"],
    ["273f", "\\ding{95}"],
    ["2740", "\\ding{96}"],
    ["2741", "\\ding{97}"],
    ["2742", "\\ding{98}"],
    ["2743", "\\ding{99}"],
    ["2744", "\\ding{100}"],
    ["2745", "\\ding{101}"],
    ["2746", "\\ding{102}"],
    ["2747", "\\ding{103}"],
    ["2748", "\\ding{104}"],
    ["2749", "\\ding{105}"],
    ["274a", "\\ding{106}"],
    ["274b", "\\ding{107}"],
    ["274d", "\\ding{109}"],
    ["274f", "\\ding{111}"],
    ["2750", "\\ding{112}"],
    ["2751", "\\ding{113}"],
    ["2752", "\\ding{114}"],
    ["2756", "\\ding{118}"],
    ["2758", "\\ding{120}"],
    ["2759", "\\ding{121}"],
    ["275a", "\\ding{122}"],
    ["275b", "\\ding{123}"],
    ["275c", "\\ding{124}"],
    ["275d", "\\ding{125}"],
    ["275e", "\\ding{126}"],
    ["2761", "\\ding{161}"],
    ["2762", "\\ding{162}"],
    ["2763", "\\ding{163}"],
    ["2764", "\\ding{164}"],
    ["2765", "\\ding{165}"],
    ["2766", "\\ding{166}"],
    ["2767", "\\ding{167}"],
    ["2776", "\\ding{182}"],
    ["2777", "\\ding{183}"],
    ["2778", "\\ding{184}"],
    ["2779", "\\ding{185}"],
    ["277a", "\\ding{186}"],
    ["277b", "\\ding{187}"],
    ["277c", "\\ding{188}"],
    ["277d", "\\ding{189}"],
    ["277e", "\\ding{190}"],
    ["277f", "\\ding{191}"],
    ["2780", "\\ding{192}"],
    ["2781", "\\ding{193}"],
    ["2782", "\\ding{194}"],
    ["2783", "\\ding{195}"],
    ["2784", "\\ding{196}"],
    ["2785", "\\ding{197}"],
    ["2786", "\\ding{198}"],
    ["2787", "\\ding{199}"],
    ["2788", "\\ding{200}"],
    ["2789", "\\ding{201}"],
    ["278a", "\\ding{202}"],
    ["278b", "\\ding{203}"],
    ["278c", "\\ding{204}"],
    ["278d", "\\ding{205}"],
    ["278e", "\\ding{206}"],
    ["278f", "\\ding{207}"],
    ["2790", "\\ding{208}"],
    ["2791", "\\ding{209}"],
    ["2792", "\\ding{210}"],
    ["2793", "\\ding{211}"],
    ["2794", "\\ding{212}"],
    ["2798", "\\ding{216}"],
    ["2799", "\\ding{217}"],
    ["279a", "\\ding{218}"],
    ["279b", "\\ding{219}"],
    ["279c", "\\ding{220}"],
    ["279d", "\\ding{221}"],
    ["279e", "\\ding{222}"],
    ["279f", "\\ding{223}"],
    ["27a0", "\\ding{224}"],
    ["27a1", "\\ding{225}"],
    ["27a2", "\\ding{226}"],
    ["27a3", "\\ding{227}"],
    ["27a4", "\\ding{228}"],
    ["27a5", "\\ding{229}"],
    ["27a6", "\\ding{230}"],
    ["27a7", "\\ding{231}"],
    ["27a8", "\\ding{232}"],
    ["27a9", "\\ding{233}"],
    ["27aa", "\\ding{234}"],
    ["27ab", "\\ding{235}"],
    ["27ac", "\\ding{236}"],
    ["27ad", "\\ding{237}"],
    ["27ae", "\\ding{238}"],
    ["27af", "\\ding{239}"],
    ["27b1", "\\ding{241}"],
    ["27b2", "\\ding{242}"],
    ["27b3", "\\ding{243}"],
    ["27b4", "\\ding{244}"],
    ["27b5", "\\ding{245}"],
    ["27b6", "\\ding{246}"],
    ["27b7", "\\ding{247}"],
    ["27b8", "\\ding{248}"],
    ["27b9", "\\ding{249}"],
    ["27ba", "\\ding{250}"],
    ["27bb", "\\ding{251}"],
    ["27bc", "\\ding{252}"],
    ["27bd", "\\ding{253}"],
    ["27be", "\\ding{254}"],
    ["27f5", "\\longleftarrow{}"],
    ["27f6", "\\longrightarrow{}"],
    ["27f7", "\\longleftrightarrow{}"],
    ["27f8", "\\Longleftarrow{}"],
    ["27f9", "\\Longrightarrow{}"],
    ["27fa", "\\Longleftrightarrow{}"],
    ["27fc", "\\longmapsto{}"],
    ["27ff", "\\sim\\joinrel\\leadsto"],
    ["2905", "\\ElsevierGlyph{E212}"],
    ["2912", "\\UpArrowBar{}"],
    ["2913", "\\DownArrowBar{}"],
    ["2923", "\\ElsevierGlyph{E20C}"],
    ["2924", "\\ElsevierGlyph{E20D}"],
    ["2925", "\\ElsevierGlyph{E20B}"],
    ["2926", "\\ElsevierGlyph{E20A}"],
    ["2927", "\\ElsevierGlyph{E211}"],
    ["2928", "\\ElsevierGlyph{E20E}"],
    ["2929", "\\ElsevierGlyph{E20F}"],
    ["292a", "\\ElsevierGlyph{E210}"],
    ["2933", "\\ElsevierGlyph{E21C}"],
    ["2936", "\\ElsevierGlyph{E21A}"],
    ["2937", "\\ElsevierGlyph{E219}"],
    ["2940", "\\Elolarr{}"],
    ["2941", "\\Elorarr{}"],
    ["2942", "\\ElzRlarr{}"],
    ["2944", "\\ElzrLarr{}"],
    ["2947", "\\Elzrarrx{}"],
    ["294e", "\\LeftRightVector{}"],
    ["294f", "\\RightUpDownVector{}"],
    ["2950", "\\DownLeftRightVector{}"],
    ["2951", "\\LeftUpDownVector{}"],
    ["2952", "\\LeftVectorBar{}"],
    ["2953", "\\RightVectorBar{}"],
    ["2954", "\\RightUpVectorBar{}"],
    ["2955", "\\RightDownVectorBar{}"],
    ["2956", "\\DownLeftVectorBar{}"],
    ["2957", "\\DownRightVectorBar{}"],
    ["2958", "\\LeftUpVectorBar{}"],
    ["2959", "\\LeftDownVectorBar{}"],
    ["295a", "\\LeftTeeVector{}"],
    ["295b", "\\RightTeeVector{}"],
    ["295c", "\\RightUpTeeVector{}"],
    ["295d", "\\RightDownTeeVector{}"],
    ["295e", "\\DownLeftTeeVector{}"],
    ["295f", "\\DownRightTeeVector{}"],
    ["2960", "\\LeftUpTeeVector{}"],
    ["2961", "\\LeftDownTeeVector{}"],
    ["296e", "\\UpEquilibrium{}"],
    ["296f", "\\ReverseUpEquilibrium{}"],
    ["2970", "\\RoundImplies{}"],
    ["297c", "\\ElsevierGlyph{E214}"],
    ["297d", "\\ElsevierGlyph{E215}"],
    ["2980", "\\Elztfnc{}"],
    ["2985", "\\ElsevierGlyph{3018}"],
    ["2986", "\\Elroang{}"],
    ["2993", "&lt;\\kern-0.58em("],
    ["2994", "\\ElsevierGlyph{E291}"],
    ["2999", "\\Elzddfnc{}"],
    ["299c", "\\Angle{}"],
    ["29a0", "\\Elzlpargt{}"],
    ["29b5", "\\ElsevierGlyph{E260}"],
    ["29b6", "\\ElsevierGlyph{E61B}"],
    ["29ca", "\\ElzLap{}"],
    ["29cb", "\\Elzdefas{}"],
    ["29cf", "\\LeftTriangleBar{}"],
    ["29d0", "\\RightTriangleBar{}"],
    ["29dc", "\\ElsevierGlyph{E372}"],
    ["29eb", "\\blacklozenge{}"],
    ["29f4", "\\RuleDelayed{}"],
    ["2a04", "\\Elxuplus{}"],
    ["2a05", "\\ElzThr{}"],
    ["2a06", "\\Elxsqcup{}"],
    ["2a07", "\\ElzInf{}"],
    ["2a08", "\\ElzSup{}"],
    ["2a0d", "\\ElzCint{}"],
    ["2a0f", "\\clockoint{}"],
    ["2a10", "\\ElsevierGlyph{E395}"],
    ["2a16", "\\sqrint{}"],
    ["2a25", "\\ElsevierGlyph{E25A}"],
    ["2a2a", "\\ElsevierGlyph{E25B}"],
    ["2a2d", "\\ElsevierGlyph{E25C}"],
    ["2a2e", "\\ElsevierGlyph{E25D}"],
    ["2a2f", "\\ElzTimes{}"],
    ["2a34", "\\ElsevierGlyph{E25E}"],
    ["2a35", "\\ElsevierGlyph{E25E}"],
    ["2a3c", "\\ElsevierGlyph{E259}"],
    ["2a3f", "\\amalg{}"],
    ["2a53", "\\ElzAnd{}"],
    ["2a54", "\\ElzOr{}"],
    ["2a55", "\\ElsevierGlyph{E36E}"],
    ["2a56", "\\ElOr{}"],
    ["2a5e", "\\perspcorrespond{}"],
    ["2a5f", "\\Elzminhat{}"],
    ["2a63", "\\ElsevierGlyph{225A}"],
    ["2a6e", "\\stackrel{*}{=}"],
    ["2a75", "\\Equal{}"],
    ["2a7d", "\\leqslant{}"],
    ["2a7e", "\\geqslant{}"],
    ["2a85", "\\lessapprox{}"],
    ["2a86", "\\gtrapprox{}"],
    ["2a87", "\\lneq{}"],
    ["2a88", "\\gneq{}"],
    ["2a89", "\\lnapprox{}"],
    ["2a8a", "\\gnapprox{}"],
    ["2a8b", "\\lesseqqgtr{}"],
    ["2a8c", "\\gtreqqless{}"],
    ["2a95", "\\eqslantless{}"],
    ["2a96", "\\eqslantgtr{}"],
    ["2a9d", "\\Pisymbol{ppi020}{117}"],
    ["2a9e", "\\Pisymbol{ppi020}{105}"],
    ["2aa1", "\\NestedLessLess{}"],
    ["2aa2", "\\NestedGreaterGreater{}"],
    ["2aaf", "\\preceq{}"],
    ["2ab0", "\\succeq{}"],
    ["2ab5", "\\precneqq{}"],
    ["2ab6", "\\succneqq{}"],
    ["2ab7", "\\precapprox{}"],
    ["2ab8", "\\succapprox{}"],
    ["2ab9", "\\precnapprox{}"],
    ["2aba", "\\succnapprox{}"],
    ["2ac5", "\\subseteqq{}"],
    ["2ac6", "\\supseteqq{}"],
    ["2acb", "\\subsetneqq{}"],
    ["2acc", "\\supsetneqq{}"],
    ["2aeb", "\\ElsevierGlyph{E30D}"],
    ["2af6", "\\Elztdcol{}"],
    ["2afd", "{{/}\\!\\!{/}}"],
    ["300a", "\\ElsevierGlyph{300A}"],
    ["300b", "\\ElsevierGlyph{300B}"],
    ["3018", "\\ElsevierGlyph{3018}"],
    ["3019", "\\ElsevierGlyph{3019}"],
    ["301a", "\\openbracketleft{}"],
    ["301b", "\\openbracketright{}"],
    ["fb00", "ff"],
    ["fb01", "fi"],
    ["fb02", "fl"],
    ["fb03", "ffi"],
    ["fb04", "ffl"],
    ["d400", "\\mathbf{A}"],
    ["d401", "\\mathbf{B}"],
    ["d402", "\\mathbf{C}"],
    ["d403", "\\mathbf{D}"],
    ["d404", "\\mathbf{E}"],
    ["d405", "\\mathbf{F}"],
    ["d406", "\\mathbf{G}"],
    ["d407", "\\mathbf{H}"],
    ["d408", "\\mathbf{I}"],
    ["d409", "\\mathbf{J}"],
    ["d40a", "\\mathbf{K}"],
    ["d40b", "\\mathbf{L}"],
    ["d40c", "\\mathbf{M}"],
    ["d40d", "\\mathbf{N}"],
    ["d40e", "\\mathbf{O}"],
    ["d40f", "\\mathbf{P}"],
    ["d410", "\\mathbf{Q}"],
    ["d411", "\\mathbf{R}"],
    ["d412", "\\mathbf{S}"],
    ["d413", "\\mathbf{T}"],
    ["d414", "\\mathbf{U}"],
    ["d415", "\\mathbf{V}"],
    ["d416", "\\mathbf{W}"],
    ["d417", "\\mathbf{X}"],
    ["d418", "\\mathbf{Y}"],
    ["d419", "\\mathbf{Z}"],
    ["d41a", "\\mathbf{a}"],
    ["d41b", "\\mathbf{b}"],
    ["d41c", "\\mathbf{c}"],
    ["d41d", "\\mathbf{d}"],
    ["d41e", "\\mathbf{e}"],
    ["d41f", "\\mathbf{f}"],
    ["d420", "\\mathbf{g}"],
    ["d421", "\\mathbf{h}"],
    ["d422", "\\mathbf{i}"],
    ["d423", "\\mathbf{j}"],
    ["d424", "\\mathbf{k}"],
    ["d425", "\\mathbf{l}"],
    ["d426", "\\mathbf{m}"],
    ["d427", "\\mathbf{n}"],
    ["d428", "\\mathbf{o}"],
    ["d429", "\\mathbf{p}"],
    ["d42a", "\\mathbf{q}"],
    ["d42b", "\\mathbf{r}"],
    ["d42c", "\\mathbf{s}"],
    ["d42d", "\\mathbf{t}"],
    ["d42e", "\\mathbf{u}"],
    ["d42f", "\\mathbf{v}"],
    ["d430", "\\mathbf{w}"],
    ["d431", "\\mathbf{x}"],
    ["d432", "\\mathbf{y}"],
    ["d433", "\\mathbf{z}"],
    ["d434", "\\mathsl{A}"],
    ["d435", "\\mathsl{B}"],
    ["d436", "\\mathsl{C}"],
    ["d437", "\\mathsl{D}"],
    ["d438", "\\mathsl{E}"],
    ["d439", "\\mathsl{F}"],
    ["d43a", "\\mathsl{G}"],
    ["d43b", "\\mathsl{H}"],
    ["d43c", "\\mathsl{I}"],
    ["d43d", "\\mathsl{J}"],
    ["d43e", "\\mathsl{K}"],
    ["d43f", "\\mathsl{L}"],
    ["d440", "\\mathsl{M}"],
    ["d441", "\\mathsl{N}"],
    ["d442", "\\mathsl{O}"],
    ["d443", "\\mathsl{P}"],
    ["d444", "\\mathsl{Q}"],
    ["d445", "\\mathsl{R}"],
    ["d446", "\\mathsl{S}"],
    ["d447", "\\mathsl{T}"],
    ["d448", "\\mathsl{U}"],
    ["d449", "\\mathsl{V}"],
    ["d44a", "\\mathsl{W}"],
    ["d44b", "\\mathsl{X}"],
    ["d44c", "\\mathsl{Y}"],
    ["d44d", "\\mathsl{Z}"],
    ["d44e", "\\mathsl{a}"],
    ["d44f", "\\mathsl{b}"],
    ["d450", "\\mathsl{c}"],
    ["d451", "\\mathsl{d}"],
    ["d452", "\\mathsl{e}"],
    ["d453", "\\mathsl{f}"],
    ["d454", "\\mathsl{g}"],
    ["d456", "\\mathsl{i}"],
    ["d457", "\\mathsl{j}"],
    ["d458", "\\mathsl{k}"],
    ["d459", "\\mathsl{l}"],
    ["d45a", "\\mathsl{m}"],
    ["d45b", "\\mathsl{n}"],
    ["d45c", "\\mathsl{o}"],
    ["d45d", "\\mathsl{p}"],
    ["d45e", "\\mathsl{q}"],
    ["d45f", "\\mathsl{r}"],
    ["d460", "\\mathsl{s}"],
    ["d461", "\\mathsl{t}"],
    ["d462", "\\mathsl{u}"],
    ["d463", "\\mathsl{v}"],
    ["d464", "\\mathsl{w}"],
    ["d465", "\\mathsl{x}"],
    ["d466", "\\mathsl{y}"],
    ["d467", "\\mathsl{z}"],
    ["d468", "\\mathbit{A}"],
    ["d469", "\\mathbit{B}"],
    ["d46a", "\\mathbit{C}"],
    ["d46b", "\\mathbit{D}"],
    ["d46c", "\\mathbit{E}"],
    ["d46d", "\\mathbit{F}"],
    ["d46e", "\\mathbit{G}"],
    ["d46f", "\\mathbit{H}"],
    ["d470", "\\mathbit{I}"],
    ["d471", "\\mathbit{J}"],
    ["d472", "\\mathbit{K}"],
    ["d473", "\\mathbit{L}"],
    ["d474", "\\mathbit{M}"],
    ["d475", "\\mathbit{N}"],
    ["d476", "\\mathbit{O}"],
    ["d477", "\\mathbit{P}"],
    ["d478", "\\mathbit{Q}"],
    ["d479", "\\mathbit{R}"],
    ["d47a", "\\mathbit{S}"],
    ["d47b", "\\mathbit{T}"],
    ["d47c", "\\mathbit{U}"],
    ["d47d", "\\mathbit{V}"],
    ["d47e", "\\mathbit{W}"],
    ["d47f", "\\mathbit{X}"],
    ["d480", "\\mathbit{Y}"],
    ["d481", "\\mathbit{Z}"],
    ["d482", "\\mathbit{a}"],
    ["d483", "\\mathbit{b}"],
    ["d484", "\\mathbit{c}"],
    ["d485", "\\mathbit{d}"],
    ["d486", "\\mathbit{e}"],
    ["d487", "\\mathbit{f}"],
    ["d488", "\\mathbit{g}"],
    ["d489", "\\mathbit{h}"],
    ["d48a", "\\mathbit{i}"],
    ["d48b", "\\mathbit{j}"],
    ["d48c", "\\mathbit{k}"],
    ["d48d", "\\mathbit{l}"],
    ["d48e", "\\mathbit{m}"],
    ["d48f", "\\mathbit{n}"],
    ["d490", "\\mathbit{o}"],
    ["d491", "\\mathbit{p}"],
    ["d492", "\\mathbit{q}"],
    ["d493", "\\mathbit{r}"],
    ["d494", "\\mathbit{s}"],
    ["d495", "\\mathbit{t}"],
    ["d496", "\\mathbit{u}"],
    ["d497", "\\mathbit{v}"],
    ["d498", "\\mathbit{w}"],
    ["d499", "\\mathbit{x}"],
    ["d49a", "\\mathbit{y}"],
    ["d49b", "\\mathbit{z}"],
    ["d49c", "\\mathscr{A}"],
    ["d49e", "\\mathscr{C}"],
    ["d49f", "\\mathscr{D}"],
    ["d4a2", "\\mathscr{G}"],
    ["d4a5", "\\mathscr{J}"],
    ["d4a6", "\\mathscr{K}"],
    ["d4a9", "\\mathscr{N}"],
    ["d4aa", "\\mathscr{O}"],
    ["d4ab", "\\mathscr{P}"],
    ["d4ac", "\\mathscr{Q}"],
    ["d4ae", "\\mathscr{S}"],
    ["d4af", "\\mathscr{T}"],
    ["d4b0", "\\mathscr{U}"],
    ["d4b1", "\\mathscr{V}"],
    ["d4b2", "\\mathscr{W}"],
    ["d4b3", "\\mathscr{X}"],
    ["d4b4", "\\mathscr{Y}"],
    ["d4b5", "\\mathscr{Z}"],
    ["d4b6", "\\mathscr{a}"],
    ["d4b7", "\\mathscr{b}"],
    ["d4b8", "\\mathscr{c}"],
    ["d4b9", "\\mathscr{d}"],
    ["d4bb", "\\mathscr{f}"],
    ["d4bd", "\\mathscr{h}"],
    ["d4be", "\\mathscr{i}"],
    ["d4bf", "\\mathscr{j}"],
    ["d4c0", "\\mathscr{k}"],
    ["d4c1", "\\mathscr{l}"],
    ["d4c2", "\\mathscr{m}"],
    ["d4c3", "\\mathscr{n}"],
    ["d4c5", "\\mathscr{p}"],
    ["d4c6", "\\mathscr{q}"],
    ["d4c7", "\\mathscr{r}"],
    ["d4c8", "\\mathscr{s}"],
    ["d4c9", "\\mathscr{t}"],
    ["d4ca", "\\mathscr{u}"],
    ["d4cb", "\\mathscr{v}"],
    ["d4cc", "\\mathscr{w}"],
    ["d4cd", "\\mathscr{x}"],
    ["d4ce", "\\mathscr{y}"],
    ["d4cf", "\\mathscr{z}"],
    ["d4d0", "\\mathmit{A}"],
    ["d4d1", "\\mathmit{B}"],
    ["d4d2", "\\mathmit{C}"],
    ["d4d3", "\\mathmit{D}"],
    ["d4d4", "\\mathmit{E}"],
    ["d4d5", "\\mathmit{F}"],
    ["d4d6", "\\mathmit{G}"],
    ["d4d7", "\\mathmit{H}"],
    ["d4d8", "\\mathmit{I}"],
    ["d4d9", "\\mathmit{J}"],
    ["d4da", "\\mathmit{K}"],
    ["d4db", "\\mathmit{L}"],
    ["d4dc", "\\mathmit{M}"],
    ["d4dd", "\\mathmit{N}"],
    ["d4de", "\\mathmit{O}"],
    ["d4df", "\\mathmit{P}"],
    ["d4e0", "\\mathmit{Q}"],
    ["d4e1", "\\mathmit{R}"],
    ["d4e2", "\\mathmit{S}"],
    ["d4e3", "\\mathmit{T}"],
    ["d4e4", "\\mathmit{U}"],
    ["d4e5", "\\mathmit{V}"],
    ["d4e6", "\\mathmit{W}"],
    ["d4e7", "\\mathmit{X}"],
    ["d4e8", "\\mathmit{Y}"],
    ["d4e9", "\\mathmit{Z}"],
    ["d4ea", "\\mathmit{a}"],
    ["d4eb", "\\mathmit{b}"],
    ["d4ec", "\\mathmit{c}"],
    ["d4ed", "\\mathmit{d}"],
    ["d4ee", "\\mathmit{e}"],
    ["d4ef", "\\mathmit{f}"],
    ["d4f0", "\\mathmit{g}"],
    ["d4f1", "\\mathmit{h}"],
    ["d4f2", "\\mathmit{i}"],
    ["d4f3", "\\mathmit{j}"],
    ["d4f4", "\\mathmit{k}"],
    ["d4f5", "\\mathmit{l}"],
    ["d4f6", "\\mathmit{m}"],
    ["d4f7", "\\mathmit{n}"],
    ["d4f8", "\\mathmit{o}"],
    ["d4f9", "\\mathmit{p}"],
    ["d4fa", "\\mathmit{q}"],
    ["d4fb", "\\mathmit{r}"],
    ["d4fc", "\\mathmit{s}"],
    ["d4fd", "\\mathmit{t}"],
    ["d4fe", "\\mathmit{u}"],
    ["d4ff", "\\mathmit{v}"],
    ["d500", "\\mathmit{w}"],
    ["d501", "\\mathmit{x}"],
    ["d502", "\\mathmit{y}"],
    ["d503", "\\mathmit{z}"],
    ["d504", "\\mathfrak{A}"],
    ["d505", "\\mathfrak{B}"],
    ["d507", "\\mathfrak{D}"],
    ["d508", "\\mathfrak{E}"],
    ["d509", "\\mathfrak{F}"],
    ["d50a", "\\mathfrak{G}"],
    ["d50d", "\\mathfrak{J}"],
    ["d50e", "\\mathfrak{K}"],
    ["d50f", "\\mathfrak{L}"],
    ["d510", "\\mathfrak{M}"],
    ["d511", "\\mathfrak{N}"],
    ["d512", "\\mathfrak{O}"],
    ["d513", "\\mathfrak{P}"],
    ["d514", "\\mathfrak{Q}"],
    ["d516", "\\mathfrak{S}"],
    ["d517", "\\mathfrak{T}"],
    ["d518", "\\mathfrak{U}"],
    ["d519", "\\mathfrak{V}"],
    ["d51a", "\\mathfrak{W}"],
    ["d51b", "\\mathfrak{X}"],
    ["d51c", "\\mathfrak{Y}"],
    ["d51e", "\\mathfrak{a}"],
    ["d51f", "\\mathfrak{b}"],
    ["d520", "\\mathfrak{c}"],
    ["d521", "\\mathfrak{d}"],
    ["d522", "\\mathfrak{e}"],
    ["d523", "\\mathfrak{f}"],
    ["d524", "\\mathfrak{g}"],
    ["d525", "\\mathfrak{h}"],
    ["d526", "\\mathfrak{i}"],
    ["d527", "\\mathfrak{j}"],
    ["d528", "\\mathfrak{k}"],
    ["d529", "\\mathfrak{l}"],
    ["d52a", "\\mathfrak{m}"],
    ["d52b", "\\mathfrak{n}"],
    ["d52c", "\\mathfrak{o}"],
    ["d52d", "\\mathfrak{p}"],
    ["d52e", "\\mathfrak{q}"],
    ["d52f", "\\mathfrak{r}"],
    ["d530", "\\mathfrak{s}"],
    ["d531", "\\mathfrak{t}"],
    ["d532", "\\mathfrak{u}"],
    ["d533", "\\mathfrak{v}"],
    ["d534", "\\mathfrak{w}"],
    ["d535", "\\mathfrak{x}"],
    ["d536", "\\mathfrak{y}"],
    ["d537", "\\mathfrak{z}"],
    ["d538", "\\mathbb{A}"],
    ["d539", "\\mathbb{B}"],
    ["d53b", "\\mathbb{D}"],
    ["d53c", "\\mathbb{E}"],
    ["d53d", "\\mathbb{F}"],
    ["d53e", "\\mathbb{G}"],
    ["d540", "\\mathbb{I}"],
    ["d541", "\\mathbb{J}"],
    ["d542", "\\mathbb{K}"],
    ["d543", "\\mathbb{L}"],
    ["d544", "\\mathbb{M}"],
    ["d546", "\\mathbb{O}"],
    ["d54a", "\\mathbb{S}"],
    ["d54b", "\\mathbb{T}"],
    ["d54c", "\\mathbb{U}"],
    ["d54d", "\\mathbb{V}"],
    ["d54e", "\\mathbb{W}"],
    ["d54f", "\\mathbb{X}"],
    ["d550", "\\mathbb{Y}"],
    ["d552", "\\mathbb{a}"],
    ["d553", "\\mathbb{b}"],
    ["d554", "\\mathbb{c}"],
    ["d555", "\\mathbb{d}"],
    ["d556", "\\mathbb{e}"],
    ["d557", "\\mathbb{f}"],
    ["d558", "\\mathbb{g}"],
    ["d559", "\\mathbb{h}"],
    ["d55a", "\\mathbb{i}"],
    ["d55b", "\\mathbb{j}"],
    ["d55c", "\\mathbb{k}"],
    ["d55d", "\\mathbb{l}"],
    ["d55e", "\\mathbb{m}"],
    ["d55f", "\\mathbb{n}"],
    ["d560", "\\mathbb{o}"],
    ["d561", "\\mathbb{p}"],
    ["d562", "\\mathbb{q}"],
    ["d563", "\\mathbb{r}"],
    ["d564", "\\mathbb{s}"],
    ["d565", "\\mathbb{t}"],
    ["d566", "\\mathbb{u}"],
    ["d567", "\\mathbb{v}"],
    ["d568", "\\mathbb{w}"],
    ["d569", "\\mathbb{x}"],
    ["d56a", "\\mathbb{y}"],
    ["d56b", "\\mathbb{z}"],
    ["d56c", "\\mathslbb{A}"],
    ["d56d", "\\mathslbb{B}"],
    ["d56e", "\\mathslbb{C}"],
    ["d56f", "\\mathslbb{D}"],
    ["d570", "\\mathslbb{E}"],
    ["d571", "\\mathslbb{F}"],
    ["d572", "\\mathslbb{G}"],
    ["d573", "\\mathslbb{H}"],
    ["d574", "\\mathslbb{I}"],
    ["d575", "\\mathslbb{J}"],
    ["d576", "\\mathslbb{K}"],
    ["d577", "\\mathslbb{L}"],
    ["d578", "\\mathslbb{M}"],
    ["d579", "\\mathslbb{N}"],
    ["d57a", "\\mathslbb{O}"],
    ["d57b", "\\mathslbb{P}"],
    ["d57c", "\\mathslbb{Q}"],
    ["d57d", "\\mathslbb{R}"],
    ["d57e", "\\mathslbb{S}"],
    ["d57f", "\\mathslbb{T}"],
    ["d580", "\\mathslbb{U}"],
    ["d581", "\\mathslbb{V}"],
    ["d582", "\\mathslbb{W}"],
    ["d583", "\\mathslbb{X}"],
    ["d584", "\\mathslbb{Y}"],
    ["d585", "\\mathslbb{Z}"],
    ["d586", "\\mathslbb{a}"],
    ["d587", "\\mathslbb{b}"],
    ["d588", "\\mathslbb{c}"],
    ["d589", "\\mathslbb{d}"],
    ["d58a", "\\mathslbb{e}"],
    ["d58b", "\\mathslbb{f}"],
    ["d58c", "\\mathslbb{g}"],
    ["d58d", "\\mathslbb{h}"],
    ["d58e", "\\mathslbb{i}"],
    ["d58f", "\\mathslbb{j}"],
    ["d590", "\\mathslbb{k}"],
    ["d591", "\\mathslbb{l}"],
    ["d592", "\\mathslbb{m}"],
    ["d593", "\\mathslbb{n}"],
    ["d594", "\\mathslbb{o}"],
    ["d595", "\\mathslbb{p}"],
    ["d596", "\\mathslbb{q}"],
    ["d597", "\\mathslbb{r}"],
    ["d598", "\\mathslbb{s}"],
    ["d599", "\\mathslbb{t}"],
    ["d59a", "\\mathslbb{u}"],
    ["d59b", "\\mathslbb{v}"],
    ["d59c", "\\mathslbb{w}"],
    ["d59d", "\\mathslbb{x}"],
    ["d59e", "\\mathslbb{y}"],
    ["d59f", "\\mathslbb{z}"],
    ["d5a0", "\\mathsf{A}"],
    ["d5a1", "\\mathsf{B}"],
    ["d5a2", "\\mathsf{C}"],
    ["d5a3", "\\mathsf{D}"],
    ["d5a4", "\\mathsf{E}"],
    ["d5a5", "\\mathsf{F}"],
    ["d5a6", "\\mathsf{G}"],
    ["d5a7", "\\mathsf{H}"],
    ["d5a8", "\\mathsf{I}"],
    ["d5a9", "\\mathsf{J}"],
    ["d5aa", "\\mathsf{K}"],
    ["d5ab", "\\mathsf{L}"],
    ["d5ac", "\\mathsf{M}"],
    ["d5ad", "\\mathsf{N}"],
    ["d5ae", "\\mathsf{O}"],
    ["d5af", "\\mathsf{P}"],
    ["d5b0", "\\mathsf{Q}"],
    ["d5b1", "\\mathsf{R}"],
    ["d5b2", "\\mathsf{S}"],
    ["d5b3", "\\mathsf{T}"],
    ["d5b4", "\\mathsf{U}"],
    ["d5b5", "\\mathsf{V}"],
    ["d5b6", "\\mathsf{W}"],
    ["d5b7", "\\mathsf{X}"],
    ["d5b8", "\\mathsf{Y}"],
    ["d5b9", "\\mathsf{Z}"],
    ["d5ba", "\\mathsf{a}"],
    ["d5bb", "\\mathsf{b}"],
    ["d5bc", "\\mathsf{c}"],
    ["d5bd", "\\mathsf{d}"],
    ["d5be", "\\mathsf{e}"],
    ["d5bf", "\\mathsf{f}"],
    ["d5c0", "\\mathsf{g}"],
    ["d5c1", "\\mathsf{h}"],
    ["d5c2", "\\mathsf{i}"],
    ["d5c3", "\\mathsf{j}"],
    ["d5c4", "\\mathsf{k}"],
    ["d5c5", "\\mathsf{l}"],
    ["d5c6", "\\mathsf{m}"],
    ["d5c7", "\\mathsf{n}"],
    ["d5c8", "\\mathsf{o}"],
    ["d5c9", "\\mathsf{p}"],
    ["d5ca", "\\mathsf{q}"],
    ["d5cb", "\\mathsf{r}"],
    ["d5cc", "\\mathsf{s}"],
    ["d5cd", "\\mathsf{t}"],
    ["d5ce", "\\mathsf{u}"],
    ["d5cf", "\\mathsf{v}"],
    ["d5d0", "\\mathsf{w}"],
    ["d5d1", "\\mathsf{x}"],
    ["d5d2", "\\mathsf{y}"],
    ["d5d3", "\\mathsf{z}"],
    ["d5d4", "\\mathsfbf{A}"],
    ["d5d5", "\\mathsfbf{B}"],
    ["d5d6", "\\mathsfbf{C}"],
    ["d5d7", "\\mathsfbf{D}"],
    ["d5d8", "\\mathsfbf{E}"],
    ["d5d9", "\\mathsfbf{F}"],
    ["d5da", "\\mathsfbf{G}"],
    ["d5db", "\\mathsfbf{H}"],
    ["d5dc", "\\mathsfbf{I}"],
    ["d5dd", "\\mathsfbf{J}"],
    ["d5de", "\\mathsfbf{K}"],
    ["d5df", "\\mathsfbf{L}"],
    ["d5e0", "\\mathsfbf{M}"],
    ["d5e1", "\\mathsfbf{N}"],
    ["d5e2", "\\mathsfbf{O}"],
    ["d5e3", "\\mathsfbf{P}"],
    ["d5e4", "\\mathsfbf{Q}"],
    ["d5e5", "\\mathsfbf{R}"],
    ["d5e6", "\\mathsfbf{S}"],
    ["d5e7", "\\mathsfbf{T}"],
    ["d5e8", "\\mathsfbf{U}"],
    ["d5e9", "\\mathsfbf{V}"],
    ["d5ea", "\\mathsfbf{W}"],
    ["d5eb", "\\mathsfbf{X}"],
    ["d5ec", "\\mathsfbf{Y}"],
    ["d5ed", "\\mathsfbf{Z}"],
    ["d5ee", "\\mathsfbf{a}"],
    ["d5ef", "\\mathsfbf{b}"],
    ["d5f0", "\\mathsfbf{c}"],
    ["d5f1", "\\mathsfbf{d}"],
    ["d5f2", "\\mathsfbf{e}"],
    ["d5f3", "\\mathsfbf{f}"],
    ["d5f4", "\\mathsfbf{g}"],
    ["d5f5", "\\mathsfbf{h}"],
    ["d5f6", "\\mathsfbf{i}"],
    ["d5f7", "\\mathsfbf{j}"],
    ["d5f8", "\\mathsfbf{k}"],
    ["d5f9", "\\mathsfbf{l}"],
    ["d5fa", "\\mathsfbf{m}"],
    ["d5fb", "\\mathsfbf{n}"],
    ["d5fc", "\\mathsfbf{o}"],
    ["d5fd", "\\mathsfbf{p}"],
    ["d5fe", "\\mathsfbf{q}"],
    ["d5ff", "\\mathsfbf{r}"],
    ["d600", "\\mathsfbf{s}"],
    ["d601", "\\mathsfbf{t}"],
    ["d602", "\\mathsfbf{u}"],
    ["d603", "\\mathsfbf{v}"],
    ["d604", "\\mathsfbf{w}"],
    ["d605", "\\mathsfbf{x}"],
    ["d606", "\\mathsfbf{y}"],
    ["d607", "\\mathsfbf{z}"],
    ["d608", "\\mathsfsl{A}"],
    ["d609", "\\mathsfsl{B}"],
    ["d60a", "\\mathsfsl{C}"],
    ["d60b", "\\mathsfsl{D}"],
    ["d60c", "\\mathsfsl{E}"],
    ["d60d", "\\mathsfsl{F}"],
    ["d60e", "\\mathsfsl{G}"],
    ["d60f", "\\mathsfsl{H}"],
    ["d610", "\\mathsfsl{I}"],
    ["d611", "\\mathsfsl{J}"],
    ["d612", "\\mathsfsl{K}"],
    ["d613", "\\mathsfsl{L}"],
    ["d614", "\\mathsfsl{M}"],
    ["d615", "\\mathsfsl{N}"],
    ["d616", "\\mathsfsl{O}"],
    ["d617", "\\mathsfsl{P}"],
    ["d618", "\\mathsfsl{Q}"],
    ["d619", "\\mathsfsl{R}"],
    ["d61a", "\\mathsfsl{S}"],
    ["d61b", "\\mathsfsl{T}"],
    ["d61c", "\\mathsfsl{U}"],
    ["d61d", "\\mathsfsl{V}"],
    ["d61e", "\\mathsfsl{W}"],
    ["d61f", "\\mathsfsl{X}"],
    ["d620", "\\mathsfsl{Y}"],
    ["d621", "\\mathsfsl{Z}"],
    ["d622", "\\mathsfsl{a}"],
    ["d623", "\\mathsfsl{b}"],
    ["d624", "\\mathsfsl{c}"],
    ["d625", "\\mathsfsl{d}"],
    ["d626", "\\mathsfsl{e}"],
    ["d627", "\\mathsfsl{f}"],
    ["d628", "\\mathsfsl{g}"],
    ["d629", "\\mathsfsl{h}"],
    ["d62a", "\\mathsfsl{i}"],
    ["d62b", "\\mathsfsl{j}"],
    ["d62c", "\\mathsfsl{k}"],
    ["d62d", "\\mathsfsl{l}"],
    ["d62e", "\\mathsfsl{m}"],
    ["d62f", "\\mathsfsl{n}"],
    ["d630", "\\mathsfsl{o}"],
    ["d631", "\\mathsfsl{p}"],
    ["d632", "\\mathsfsl{q}"],
    ["d633", "\\mathsfsl{r}"],
    ["d634", "\\mathsfsl{s}"],
    ["d635", "\\mathsfsl{t}"],
    ["d636", "\\mathsfsl{u}"],
    ["d637", "\\mathsfsl{v}"],
    ["d638", "\\mathsfsl{w}"],
    ["d639", "\\mathsfsl{x}"],
    ["d63a", "\\mathsfsl{y}"],
    ["d63b", "\\mathsfsl{z}"],
    ["d63c", "\\mathsfbfsl{A}"],
    ["d63d", "\\mathsfbfsl{B}"],
    ["d63e", "\\mathsfbfsl{C}"],
    ["d63f", "\\mathsfbfsl{D}"],
    ["d640", "\\mathsfbfsl{E}"],
    ["d641", "\\mathsfbfsl{F}"],
    ["d642", "\\mathsfbfsl{G}"],
    ["d643", "\\mathsfbfsl{H}"],
    ["d644", "\\mathsfbfsl{I}"],
    ["d645", "\\mathsfbfsl{J}"],
    ["d646", "\\mathsfbfsl{K}"],
    ["d647", "\\mathsfbfsl{L}"],
    ["d648", "\\mathsfbfsl{M}"],
    ["d649", "\\mathsfbfsl{N}"],
    ["d64a", "\\mathsfbfsl{O}"],
    ["d64b", "\\mathsfbfsl{P}"],
    ["d64c", "\\mathsfbfsl{Q}"],
    ["d64d", "\\mathsfbfsl{R}"],
    ["d64e", "\\mathsfbfsl{S}"],
    ["d64f", "\\mathsfbfsl{T}"],
    ["d650", "\\mathsfbfsl{U}"],
    ["d651", "\\mathsfbfsl{V}"],
    ["d652", "\\mathsfbfsl{W}"],
    ["d653", "\\mathsfbfsl{X}"],
    ["d654", "\\mathsfbfsl{Y}"],
    ["d655", "\\mathsfbfsl{Z}"],
    ["d656", "\\mathsfbfsl{a}"],
    ["d657", "\\mathsfbfsl{b}"],
    ["d658", "\\mathsfbfsl{c}"],
    ["d659", "\\mathsfbfsl{d}"],
    ["d65a", "\\mathsfbfsl{e}"],
    ["d65b", "\\mathsfbfsl{f}"],
    ["d65c", "\\mathsfbfsl{g}"],
    ["d65d", "\\mathsfbfsl{h}"],
    ["d65e", "\\mathsfbfsl{i}"],
    ["d65f", "\\mathsfbfsl{j}"],
    ["d660", "\\mathsfbfsl{k}"],
    ["d661", "\\mathsfbfsl{l}"],
    ["d662", "\\mathsfbfsl{m}"],
    ["d663", "\\mathsfbfsl{n}"],
    ["d664", "\\mathsfbfsl{o}"],
    ["d665", "\\mathsfbfsl{p}"],
    ["d666", "\\mathsfbfsl{q}"],
    ["d667", "\\mathsfbfsl{r}"],
    ["d668", "\\mathsfbfsl{s}"],
    ["d669", "\\mathsfbfsl{t}"],
    ["d66a", "\\mathsfbfsl{u}"],
    ["d66b", "\\mathsfbfsl{v}"],
    ["d66c", "\\mathsfbfsl{w}"],
    ["d66d", "\\mathsfbfsl{x}"],
    ["d66e", "\\mathsfbfsl{y}"],
    ["d66f", "\\mathsfbfsl{z}"],
    ["d670", "\\mathtt{A}"],
    ["d671", "\\mathtt{B}"],
    ["d672", "\\mathtt{C}"],
    ["d673", "\\mathtt{D}"],
    ["d674", "\\mathtt{E}"],
    ["d675", "\\mathtt{F}"],
    ["d676", "\\mathtt{G}"],
    ["d677", "\\mathtt{H}"],
    ["d678", "\\mathtt{I}"],
    ["d679", "\\mathtt{J}"],
    ["d67a", "\\mathtt{K}"],
    ["d67b", "\\mathtt{L}"],
    ["d67c", "\\mathtt{M}"],
    ["d67d", "\\mathtt{N}"],
    ["d67e", "\\mathtt{O}"],
    ["d67f", "\\mathtt{P}"],
    ["d680", "\\mathtt{Q}"],
    ["d681", "\\mathtt{R}"],
    ["d682", "\\mathtt{S}"],
    ["d683", "\\mathtt{T}"],
    ["d684", "\\mathtt{U}"],
    ["d685", "\\mathtt{V}"],
    ["d686", "\\mathtt{W}"],
    ["d687", "\\mathtt{X}"],
    ["d688", "\\mathtt{Y}"],
    ["d689", "\\mathtt{Z}"],
    ["d68a", "\\mathtt{a}"],
    ["d68b", "\\mathtt{b}"],
    ["d68c", "\\mathtt{c}"],
    ["d68d", "\\mathtt{d}"],
    ["d68e", "\\mathtt{e}"],
    ["d68f", "\\mathtt{f}"],
    ["d690", "\\mathtt{g}"],
    ["d691", "\\mathtt{h}"],
    ["d692", "\\mathtt{i}"],
    ["d693", "\\mathtt{j}"],
    ["d694", "\\mathtt{k}"],
    ["d695", "\\mathtt{l}"],
    ["d696", "\\mathtt{m}"],
    ["d697", "\\mathtt{n}"],
    ["d698", "\\mathtt{o}"],
    ["d699", "\\mathtt{p}"],
    ["d69a", "\\mathtt{q}"],
    ["d69b", "\\mathtt{r}"],
    ["d69c", "\\mathtt{s}"],
    ["d69d", "\\mathtt{t}"],
    ["d69e", "\\mathtt{u}"],
    ["d69f", "\\mathtt{v}"],
    ["d6a0", "\\mathtt{w}"],
    ["d6a1", "\\mathtt{x}"],
    ["d6a2", "\\mathtt{y}"],
    ["d6a3", "\\mathtt{z}"],
    ["d6a8", "\\mathbf{\\Alpha}"],
    ["d6a9", "\\mathbf{\\Beta}"],
    ["d6aa", "\\mathbf{\\Gamma}"],
    ["d6ab", "\\mathbf{\\Delta}"],
    ["d6ac", "\\mathbf{\\Epsilon}"],
    ["d6ad", "\\mathbf{\\Zeta}"],
    ["d6ae", "\\mathbf{\\Eta}"],
    ["d6af", "\\mathbf{\\Theta}"],
    ["d6b0", "\\mathbf{\\Iota}"],
    ["d6b1", "\\mathbf{\\Kappa}"],
    ["d6b2", "\\mathbf{\\Lambda}"],
    ["d6b5", "\\mathbf{\\Xi}"],
    ["d6b7", "\\mathbf{\\Pi}"],
    ["d6b8", "\\mathbf{\\Rho}"],
    ["d6b9", "\\mathbf{\\vartheta}"],
    ["d6ba", "\\mathbf{\\Sigma}"],
    ["d6bb", "\\mathbf{\\Tau}"],
    ["d6bc", "\\mathbf{\\Upsilon}"],
    ["d6bd", "\\mathbf{\\Phi}"],
    ["d6be", "\\mathbf{\\Chi}"],
    ["d6bf", "\\mathbf{\\Psi}"],
    ["d6c0", "\\mathbf{\\Omega}"],
    ["d6c1", "\\mathbf{\\nabla}"],
    ["d6c2", "\\mathbf{\\Alpha}"],
    ["d6c3", "\\mathbf{\\Beta}"],
    ["d6c4", "\\mathbf{\\Gamma}"],
    ["d6c5", "\\mathbf{\\Delta}"],
    ["d6c6", "\\mathbf{\\Epsilon}"],
    ["d6c7", "\\mathbf{\\Zeta}"],
    ["d6c8", "\\mathbf{\\Eta}"],
    ["d6c9", "\\mathbf{\\theta}"],
    ["d6ca", "\\mathbf{\\Iota}"],
    ["d6cb", "\\mathbf{\\Kappa}"],
    ["d6cc", "\\mathbf{\\Lambda}"],
    ["d6cf", "\\mathbf{\\Xi}"],
    ["d6d1", "\\mathbf{\\Pi}"],
    ["d6d2", "\\mathbf{\\Rho}"],
    ["d6d3", "\\mathbf{\\varsigma}"],
    ["d6d4", "\\mathbf{\\Sigma}"],
    ["d6d5", "\\mathbf{\\Tau}"],
    ["d6d6", "\\mathbf{\\Upsilon}"],
    ["d6d7", "\\mathbf{\\Phi}"],
    ["d6d8", "\\mathbf{\\Chi}"],
    ["d6d9", "\\mathbf{\\Psi}"],
    ["d6da", "\\mathbf{\\Omega}"],
    ["d6db", "\\partial{}"],
    ["d6dc", "\\in"],
    ["d6dd", "\\mathbf{\\vartheta}"],
    ["d6de", "\\mathbf{\\varkappa}"],
    ["d6df", "\\mathbf{\\phi}"],
    ["d6e0", "\\mathbf{\\varrho}"],
    ["d6e1", "\\mathbf{\\varpi}"],
    ["d6e2", "\\mathsl{\\Alpha}"],
    ["d6e3", "\\mathsl{\\Beta}"],
    ["d6e4", "\\mathsl{\\Gamma}"],
    ["d6e5", "\\mathsl{\\Delta}"],
    ["d6e6", "\\mathsl{\\Epsilon}"],
    ["d6e7", "\\mathsl{\\Zeta}"],
    ["d6e8", "\\mathsl{\\Eta}"],
    ["d6e9", "\\mathsl{\\Theta}"],
    ["d6ea", "\\mathsl{\\Iota}"],
    ["d6eb", "\\mathsl{\\Kappa}"],
    ["d6ec", "\\mathsl{\\Lambda}"],
    ["d6ef", "\\mathsl{\\Xi}"],
    ["d6f1", "\\mathsl{\\Pi}"],
    ["d6f2", "\\mathsl{\\Rho}"],
    ["d6f3", "\\mathsl{\\vartheta}"],
    ["d6f4", "\\mathsl{\\Sigma}"],
    ["d6f5", "\\mathsl{\\Tau}"],
    ["d6f6", "\\mathsl{\\Upsilon}"],
    ["d6f7", "\\mathsl{\\Phi}"],
    ["d6f8", "\\mathsl{\\Chi}"],
    ["d6f9", "\\mathsl{\\Psi}"],
    ["d6fa", "\\mathsl{\\Omega}"],
    ["d6fb", "\\mathsl{\\nabla}"],
    ["d6fc", "\\mathsl{\\Alpha}"],
    ["d6fd", "\\mathsl{\\Beta}"],
    ["d6fe", "\\mathsl{\\Gamma}"],
    ["d6ff", "\\mathsl{\\Delta}"],
    ["d700", "\\mathsl{\\Epsilon}"],
    ["d701", "\\mathsl{\\Zeta}"],
    ["d702", "\\mathsl{\\Eta}"],
    ["d703", "\\mathsl{\\Theta}"],
    ["d704", "\\mathsl{\\Iota}"],
    ["d705", "\\mathsl{\\Kappa}"],
    ["d706", "\\mathsl{\\Lambda}"],
    ["d709", "\\mathsl{\\Xi}"],
    ["d70b", "\\mathsl{\\Pi}"],
    ["d70c", "\\mathsl{\\Rho}"],
    ["d70d", "\\mathsl{\\varsigma}"],
    ["d70e", "\\mathsl{\\Sigma}"],
    ["d70f", "\\mathsl{\\Tau}"],
    ["d710", "\\mathsl{\\Upsilon}"],
    ["d711", "\\mathsl{\\Phi}"],
    ["d712", "\\mathsl{\\Chi}"],
    ["d713", "\\mathsl{\\Psi}"],
    ["d714", "\\mathsl{\\Omega}"],
    ["d715", "\\partial{}"],
    ["d716", "\\in"],
    ["d717", "\\mathsl{\\vartheta}"],
    ["d718", "\\mathsl{\\varkappa}"],
    ["d719", "\\mathsl{\\phi}"],
    ["d71a", "\\mathsl{\\varrho}"],
    ["d71b", "\\mathsl{\\varpi}"],
    ["d71c", "\\mathbit{\\Alpha}"],
    ["d71d", "\\mathbit{\\Beta}"],
    ["d71e", "\\mathbit{\\Gamma}"],
    ["d71f", "\\mathbit{\\Delta}"],
    ["d720", "\\mathbit{\\Epsilon}"],
    ["d721", "\\mathbit{\\Zeta}"],
    ["d722", "\\mathbit{\\Eta}"],
    ["d723", "\\mathbit{\\Theta}"],
    ["d724", "\\mathbit{\\Iota}"],
    ["d725", "\\mathbit{\\Kappa}"],
    ["d726", "\\mathbit{\\Lambda}"],
    ["d729", "\\mathbit{\\Xi}"],
    ["d72b", "\\mathbit{\\Pi}"],
    ["d72c", "\\mathbit{\\Rho}"],
    ["d72d", "\\mathbit{O}"],
    ["d72e", "\\mathbit{\\Sigma}"],
    ["d72f", "\\mathbit{\\Tau}"],
    ["d730", "\\mathbit{\\Upsilon}"],
    ["d731", "\\mathbit{\\Phi}"],
    ["d732", "\\mathbit{\\Chi}"],
    ["d733", "\\mathbit{\\Psi}"],
    ["d734", "\\mathbit{\\Omega}"],
    ["d735", "\\mathbit{\\nabla}"],
    ["d736", "\\mathbit{\\Alpha}"],
    ["d737", "\\mathbit{\\Beta}"],
    ["d738", "\\mathbit{\\Gamma}"],
    ["d739", "\\mathbit{\\Delta}"],
    ["d73a", "\\mathbit{\\Epsilon}"],
    ["d73b", "\\mathbit{\\Zeta}"],
    ["d73c", "\\mathbit{\\Eta}"],
    ["d73d", "\\mathbit{\\Theta}"],
    ["d73e", "\\mathbit{\\Iota}"],
    ["d73f", "\\mathbit{\\Kappa}"],
    ["d740", "\\mathbit{\\Lambda}"],
    ["d743", "\\mathbit{\\Xi}"],
    ["d745", "\\mathbit{\\Pi}"],
    ["d746", "\\mathbit{\\Rho}"],
    ["d747", "\\mathbit{\\varsigma}"],
    ["d748", "\\mathbit{\\Sigma}"],
    ["d749", "\\mathbit{\\Tau}"],
    ["d74a", "\\mathbit{\\Upsilon}"],
    ["d74b", "\\mathbit{\\Phi}"],
    ["d74c", "\\mathbit{\\Chi}"],
    ["d74d", "\\mathbit{\\Psi}"],
    ["d74e", "\\mathbit{\\Omega}"],
    ["d74f", "\\partial{}"],
    ["d750", "\\in"],
    ["d751", "\\mathbit{\\vartheta}"],
    ["d752", "\\mathbit{\\varkappa}"],
    ["d753", "\\mathbit{\\phi}"],
    ["d754", "\\mathbit{\\varrho}"],
    ["d755", "\\mathbit{\\varpi}"],
    ["d756", "\\mathsfbf{\\Alpha}"],
    ["d757", "\\mathsfbf{\\Beta}"],
    ["d758", "\\mathsfbf{\\Gamma}"],
    ["d759", "\\mathsfbf{\\Delta}"],
    ["d75a", "\\mathsfbf{\\Epsilon}"],
    ["d75b", "\\mathsfbf{\\Zeta}"],
    ["d75c", "\\mathsfbf{\\Eta}"],
    ["d75d", "\\mathsfbf{\\Theta}"],
    ["d75e", "\\mathsfbf{\\Iota}"],
    ["d75f", "\\mathsfbf{\\Kappa}"],
    ["d760", "\\mathsfbf{\\Lambda}"],
    ["d763", "\\mathsfbf{\\Xi}"],
    ["d765", "\\mathsfbf{\\Pi}"],
    ["d766", "\\mathsfbf{\\Rho}"],
    ["d767", "\\mathsfbf{\\vartheta}"],
    ["d768", "\\mathsfbf{\\Sigma}"],
    ["d769", "\\mathsfbf{\\Tau}"],
    ["d76a", "\\mathsfbf{\\Upsilon}"],
    ["d76b", "\\mathsfbf{\\Phi}"],
    ["d76c", "\\mathsfbf{\\Chi}"],
    ["d76d", "\\mathsfbf{\\Psi}"],
    ["d76e", "\\mathsfbf{\\Omega}"],
    ["d76f", "\\mathsfbf{\\nabla}"],
    ["d770", "\\mathsfbf{\\Alpha}"],
    ["d771", "\\mathsfbf{\\Beta}"],
    ["d772", "\\mathsfbf{\\Gamma}"],
    ["d773", "\\mathsfbf{\\Delta}"],
    ["d774", "\\mathsfbf{\\Epsilon}"],
    ["d775", "\\mathsfbf{\\Zeta}"],
    ["d776", "\\mathsfbf{\\Eta}"],
    ["d777", "\\mathsfbf{\\Theta}"],
    ["d778", "\\mathsfbf{\\Iota}"],
    ["d779", "\\mathsfbf{\\Kappa}"],
    ["d77a", "\\mathsfbf{\\Lambda}"],
    ["d77d", "\\mathsfbf{\\Xi}"],
    ["d77f", "\\mathsfbf{\\Pi}"],
    ["d780", "\\mathsfbf{\\Rho}"],
    ["d781", "\\mathsfbf{\\varsigma}"],
    ["d782", "\\mathsfbf{\\Sigma}"],
    ["d783", "\\mathsfbf{\\Tau}"],
    ["d784", "\\mathsfbf{\\Upsilon}"],
    ["d785", "\\mathsfbf{\\Phi}"],
    ["d786", "\\mathsfbf{\\Chi}"],
    ["d787", "\\mathsfbf{\\Psi}"],
    ["d788", "\\mathsfbf{\\Omega}"],
    ["d789", "\\partial{}"],
    ["d78a", "\\in"],
    ["d78b", "\\mathsfbf{\\vartheta}"],
    ["d78c", "\\mathsfbf{\\varkappa}"],
    ["d78d", "\\mathsfbf{\\phi}"],
    ["d78e", "\\mathsfbf{\\varrho}"],
    ["d78f", "\\mathsfbf{\\varpi}"],
    ["d790", "\\mathsfbfsl{\\Alpha}"],
    ["d791", "\\mathsfbfsl{\\Beta}"],
    ["d792", "\\mathsfbfsl{\\Gamma}"],
    ["d793", "\\mathsfbfsl{\\Delta}"],
    ["d794", "\\mathsfbfsl{\\Epsilon}"],
    ["d795", "\\mathsfbfsl{\\Zeta}"],
    ["d796", "\\mathsfbfsl{\\Eta}"],
    ["d797", "\\mathsfbfsl{\\vartheta}"],
    ["d798", "\\mathsfbfsl{\\Iota}"],
    ["d799", "\\mathsfbfsl{\\Kappa}"],
    ["d79a", "\\mathsfbfsl{\\Lambda}"],
    ["d79d", "\\mathsfbfsl{\\Xi}"],
    ["d79f", "\\mathsfbfsl{\\Pi}"],
    ["d7a0", "\\mathsfbfsl{\\Rho}"],
    ["d7a1", "\\mathsfbfsl{\\vartheta}"],
    ["d7a2", "\\mathsfbfsl{\\Sigma}"],
    ["d7a3", "\\mathsfbfsl{\\Tau}"],
    ["d7a4", "\\mathsfbfsl{\\Upsilon}"],
    ["d7a5", "\\mathsfbfsl{\\Phi}"],
    ["d7a6", "\\mathsfbfsl{\\Chi}"],
    ["d7a7", "\\mathsfbfsl{\\Psi}"],
    ["d7a8", "\\mathsfbfsl{\\Omega}"],
    ["d7a9", "\\mathsfbfsl{\\nabla}"],
    ["d7aa", "\\mathsfbfsl{\\Alpha}"],
    ["d7ab", "\\mathsfbfsl{\\Beta}"],
    ["d7ac", "\\mathsfbfsl{\\Gamma}"],
    ["d7ad", "\\mathsfbfsl{\\Delta}"],
    ["d7ae", "\\mathsfbfsl{\\Epsilon}"],
    ["d7af", "\\mathsfbfsl{\\Zeta}"],
    ["d7b0", "\\mathsfbfsl{\\Eta}"],
    ["d7b1", "\\mathsfbfsl{\\vartheta}"],
    ["d7b2", "\\mathsfbfsl{\\Iota}"],
    ["d7b3", "\\mathsfbfsl{\\Kappa}"],
    ["d7b4", "\\mathsfbfsl{\\Lambda}"],
    ["d7b7", "\\mathsfbfsl{\\Xi}"],
    ["d7b9", "\\mathsfbfsl{\\Pi}"],
    ["d7ba", "\\mathsfbfsl{\\Rho}"],
    ["d7bb", "\\mathsfbfsl{\\varsigma}"],
    ["d7bc", "\\mathsfbfsl{\\Sigma}"],
    ["d7bd", "\\mathsfbfsl{\\Tau}"],
    ["d7be", "\\mathsfbfsl{\\Upsilon}"],
    ["d7bf", "\\mathsfbfsl{\\Phi}"],
    ["d7c0", "\\mathsfbfsl{\\Chi}"],
    ["d7c1", "\\mathsfbfsl{\\Psi}"],
    ["d7c2", "\\mathsfbfsl{\\Omega}"],
    ["d7c3", "\\partial{}"],
    ["d7c4", "\\in"],
    ["d7c5", "\\mathsfbfsl{\\vartheta}"],
    ["d7c6", "\\mathsfbfsl{\\varkappa}"],
    ["d7c7", "\\mathsfbfsl{\\phi}"],
    ["d7c8", "\\mathsfbfsl{\\varrho}"],
    ["d7c9", "\\mathsfbfsl{\\varpi}"],
    ["d7ce", "\\mathbf{0}"],
    ["d7cf", "\\mathbf{1}"],
    ["d7d0", "\\mathbf{2}"],
    ["d7d1", "\\mathbf{3}"],
    ["d7d2", "\\mathbf{4}"],
    ["d7d3", "\\mathbf{5}"],
    ["d7d4", "\\mathbf{6}"],
    ["d7d5", "\\mathbf{7}"],
    ["d7d6", "\\mathbf{8}"],
    ["d7d7", "\\mathbf{9}"],
    ["d7d8", "\\mathbb{0}"],
    ["d7d9", "\\mathbb{1}"],
    ["d7da", "\\mathbb{2}"],
    ["d7db", "\\mathbb{3}"],
    ["d7dc", "\\mathbb{4}"],
    ["d7dd", "\\mathbb{5}"],
    ["d7de", "\\mathbb{6}"],
    ["d7df", "\\mathbb{7}"],
    ["d7e0", "\\mathbb{8}"],
    ["d7e1", "\\mathbb{9}"],
    ["d7e2", "\\mathsf{0}"],
    ["d7e3", "\\mathsf{1}"],
    ["d7e4", "\\mathsf{2}"],
    ["d7e5", "\\mathsf{3}"],
    ["d7e6", "\\mathsf{4}"],
    ["d7e7", "\\mathsf{5}"],
    ["d7e8", "\\mathsf{6}"],
    ["d7e9", "\\mathsf{7}"],
    ["d7ea", "\\mathsf{8}"],
    ["d7eb", "\\mathsf{9}"],
    ["d7ec", "\\mathsfbf{0}"],
    ["d7ed", "\\mathsfbf{1}"],
    ["d7ee", "\\mathsfbf{2}"],
    ["d7ef", "\\mathsfbf{3}"],
    ["d7f0", "\\mathsfbf{4}"],
    ["d7f1", "\\mathsfbf{5}"],
    ["d7f2", "\\mathsfbf{6}"],
    ["d7f3", "\\mathsfbf{7}"],
    ["d7f4", "\\mathsfbf{8}"],
    ["d7f5", "\\mathsfbf{9}"],
    ["d7f6", "\\mathtt{0}"],
    ["d7f7", "\\mathtt{1}"],
    ["d7f8", "\\mathtt{2}"],
    ["d7f9", "\\mathtt{3}"],
    ["d7fa", "\\mathtt{4}"],
    ["d7fb", "\\mathtt{5}"],
    ["d7fc", "\\mathtt{6}"],
    ["d7fd", "\\mathtt{7}"],
    ["d7fe", "\\mathtt{8}"],
    ["d7ff", "\\mathtt{9}"],
  ]);
  function D0(r) {
    var e = [];
    r = r.replace(/\$[^$]+\$/, (n) => (e.push(n), "MATH.EXP.".concat(e.length - 1)));
    var t = "",
      i = !1;
    for (var n = 0; n < r.length; n++) {
      if (i) {
        (i = !1), (t += r[n]);
        continue;
      }
      if (r[n] === "\\") {
        (i = !0), (t += r[n]);
        continue;
      }
      var s = r.charCodeAt(n).toString(16).padStart(4, "0");
      var _g0_get;
      t += (_g0_get = g0.get(s)) !== null && _g0_get !== void 0 ? _g0_get : r[n];
    }
    return t.replace(/MATH\.EXP\.(\d+)/, (n, s) => {
      var _e_Number;
      return (_e_Number = e[Number(s)]) !== null && _e_Number !== void 0 ? _e_Number : "";
    });
  }
  h(D0, "escapeSpecialCharacters");
  function F0(r) {
    return r.replace(/(\w)(\S*)/g, (e, t, i) => {
      var n = t + i;
      return xv(n) ? n : t.toLocaleUpperCase() + i.toLocaleLowerCase();
    });
  }
  h(F0, "titleCase");
  function xv(r) {
    return /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/.test(r);
  }
  h(xv, "isRomanNumeral");
  function rr(r) {
    return r.replace(/[^0-9A-Za-z]/g, "").toLocaleLowerCase();
  }
  h(rr, "alphaNum");
  function b0(r) {
    return r.replace(/\r\n?/g, "\n");
  }
  h(b0, "convertCRLF");
  function y0(r, e) {
    var t = r.split(" "),
      i = [],
      n = "";
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = t.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _sliced_to_array(_step.value, 2),
          s = _step_value[0],
          o = _step_value[1];
        n.length + o.length + 1 > e && s > 0 && (i.push(n.trim()), (n = "")), (n += o + " ");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return [...i, n.trim()];
  }
  h(y0, "wrapText");
  function E0(r) {
    return r
      .replace(/\s*\n\s*\n\s*/g, "<<BIBTEX_TIDY_PARA>>")
      .replace(/\s*\n\s*/g, " ")
      .replace(/<<BIBTEX_TIDY_PARA>>/g, "\n\n");
  }
  h(E0, "unwrapText");
  function ku(r, e) {
    return e && (r = Ss(Hr(ks(r)))), "{".concat(r, "}");
  }
  h(ku, "addEnclosingBraces");
  function C0(r) {
    return r.replace(/^\{([^{}]*)\}$/g, "$1");
  }
  h(C0, "removeEnclosingBraces");
  function B0(r) {
    return r.replace(/\\?_/g, "\\%5F");
  }
  h(B0, "escapeURL");
  function v0(r, e) {
    var t = r.split(" and ");
    return t.length > e ? [...t.slice(0, e), "others"].join(" and ") : r;
  }
  h(v0, "limitAuthors");
  function x0(r) {
    for (var e = 0; e < 4; e++) r = r.replace(/(\d)\s*-\s*(\d)/g, "$1--$2");
    return r;
  }
  h(x0, "formatPageRange");
  function jr(r) {
    var _r_block;
    return r.type !== "text" && ((_r_block = r.block) === null || _r_block === void 0 ? void 0 : _r_block.type) === "entry";
  }
  h(jr, "isEntryNode");
  function A0(r, e, t, i) {
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (t)
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var f = _step.value;
          n.set(f, !!i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    n.has("key") || n.set("key", !1);
    var s = new Set(),
      o = [],
      l = new Map(),
      u = new Map(),
      a = new Map(),
      c = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = Bi(r)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var f1 = _step1.value;
        var d = e.get(f1);
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _step_value = _sliced_to_array(_step2.value, 2),
              p = _step_value[0],
              m = _step_value[1];
            var F = void 0,
              g = void 0;
            switch (p) {
              case "key": {
                if (!f1.key) continue;
                var D = f1.key.toLocaleLowerCase();
                (F = l.get(D)), F ? (g = "The citation key ".concat(f1.key, " has already been used.")) : l.set(D, f1);
                break;
              }
              case "doi": {
                var _d_get;
                var D1 = rr((_d_get = d.get("doi")) !== null && _d_get !== void 0 ? _d_get : "");
                if (!D1) continue;
                (F = u.get(D1)), F ? (g = "Entry ".concat(f1.key, " has an identical DOI to entry ").concat(F.key, ".")) : u.set(D1, f1);
                break;
              }
              case "citation": {
                var D2 = d.get("title"),
                  b = d.get("author"),
                  B = d.get("number");
                if (!D2 || !b) continue;
                var k = [rr(b.split(/,| and/)[0]), rr(D2), rr(B !== null && B !== void 0 ? B : "0")].join(":");
                (F = a.get(k)), F ? (g = "Entry ".concat(f1.key, " has similar content to entry ").concat(F.key, ".")) : a.set(k, f1);
                break;
              }
              case "abstract": {
                var _d_get1;
                var b1 = rr((_d_get1 = d.get("abstract")) !== null && _d_get1 !== void 0 ? _d_get1 : "").slice(0, 100);
                if (!b1) continue;
                (F = c.get(b1)), F ? (g = "Entry ".concat(f1.key, " has a similar abstract to entry ").concat(F.key, ".")) : c.set(b1, f1);
                break;
              }
            }
            F && m && (s.add(f1), Av(i, F, f1)), g && o.push({ code: "DUPLICATE_ENTRY", rule: p, message: "Duplicate ".concat(m ? "removed" : "detected", ". ").concat(g) });
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return { entries: s, warnings: o };
  }
  h(A0, "checkForDuplicates");
  function Av(r, e, t) {
    if (r)
      switch (r) {
        case "last":
          (e.key = t.key), (e.fields = t.fields);
          break;
        case "combine":
        case "overwrite":
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            var _loop = function () {
              var i = _step.value;
              var n = e.fields.find((s) => s.name.toLocaleLowerCase() === i.name.toLocaleLowerCase());
              n ? r === "overwrite" && (n.value = i.value) : e.fields.push(i);
            };
            for (var _iterator = t.fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          break;
        case "first":
          return;
      }
  }
  h(Av, "mergeEntries");
  var Su = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"],
    k0 = new Set(Su),
    S0 = {
      1: "jan",
      2: "feb",
      3: "mar",
      4: "apr",
      5: "may",
      6: "jun",
      7: "jul",
      8: "aug",
      9: "sep",
      10: "oct",
      11: "nov",
      12: "dec",
      jan: "jan",
      feb: "feb",
      mar: "mar",
      apr: "apr",
      may: "may",
      jun: "jun",
      jul: "jul",
      aug: "aug",
      sep: "sep",
      oct: "oct",
      nov: "nov",
      dec: "dec",
      january: "jan",
      february: "feb",
      march: "mar",
      april: "apr",
      june: "jun",
      july: "jul",
      august: "aug",
      september: "sep",
      october: "oct",
      november: "nov",
      december: "dec",
    };
  function Q0(r, e, t) {
    var i = e.omit,
      n = e.tab,
      s = e.space,
      o = n ? "	" : " ".repeat(s),
      l = new Set(i),
      u = r.children
        .map((a) => kv(a, e, o, l, t))
        .join("")
        .trimEnd();
    return u.endsWith("\n") || (u += "\n"), u;
  }
  h(Q0, "formatBibtex");
  function kv(r, e, t, i, n) {
    if (r.type === "text") return w0(r.text, e);
    if (!r.block) throw new Error("FATAL!");
    switch (r.block.type) {
      case "preamble":
      case "string":
        return "".concat(r.block.raw, "\n") + (e.blankLines ? "\n" : "");
      case "comment":
        return w0(r.block.raw, e);
      case "entry":
        return Sv(r.command, r.block, e, t, i, n === null || n === void 0 ? void 0 : n.get(r.block)) + (e.blankLines ? "\n" : "");
    }
  }
  h(kv, "formatNode");
  function Sv(r, e, t, i, n, s) {
    var o = t.align,
      l = t.trailingCommas,
      u = t.removeDuplicateFields,
      a = t.removeEmptyFields,
      c = t.lowercase,
      f = "",
      d = c ? r.toLocaleLowerCase() : r;
    f += "@".concat(d, "{");
    var p = s !== null && s !== void 0 ? s : e.key;
    p && (f += "".concat(p, ","));
    var m = new Set();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.fields.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _sliced_to_array(_step.value, 2),
          F = _step_value[0],
          g = _step_value[1];
        var D = g.name.toLocaleLowerCase(),
          b = c ? D : g.name;
        if (g.name !== "" && !n.has(D) && !(u && m.has(D))) {
          if ((m.add(D), g.value.concat.length === 0)) {
            if (a) continue;
            f += "\n".concat(i).concat(b);
          } else {
            var B = wu(g, t);
            if (a && (B === "{}" || B === '""')) continue;
            f += "\n"
              .concat(i)
              .concat(b.trim().padEnd(o - 1), " = ")
              .concat(B);
          }
          (F < e.fields.length - 1 || l) && (f += ",");
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return (f += "\n}\n"), f;
  }
  h(Sv, "formatEntry");
  function w0(r, param) {
    var e = param.stripComments,
      t = param.tidyComments;
    if (e) return "";
    if (t) {
      var i = r.trim();
      return i === "" ? "" : i + "\n";
    } else return r.replace(/^[ \t]*\n|[ \t]*$/g, "");
  }
  h(w0, "formatComment");
  function wu(r, e) {
    var t = e.curly,
      i = e.numeric,
      n = e.align,
      s = e.stripEnclosingBraces,
      o = e.dropAllCaps,
      l = e.escape,
      u = e.encodeUrls,
      a = e.wrap,
      c = e.maxAuthors,
      f = e.tab,
      d = e.space,
      p = e.enclosingBraces,
      m = e.removeBraces,
      F = e.months,
      g = r.name.toLocaleLowerCase(),
      D = f ? "	" : " ".repeat(d),
      b = new Set((p !== null && p !== void 0 ? p : []).map((k) => k.toLocaleLowerCase())),
      B = new Set((m !== null && m !== void 0 ? m : []).map((k) => k.toLocaleLowerCase()));
    return r.value.concat
      .map((param) => {
        var k = param.type,
          C = param.value;
        var L = C.match(/^[1-9][0-9]*$/);
        if ((L && t && (k = "braced"), F && g === "month")) {
          var z = S0[C.toLowerCase()];
          if (z) return z;
        }
        if (k === "literal" || (i && L)) return C;
        var Q = C.slice(0, 3).toLowerCase(),
          V = g === "month" && k0.has(Q);
        if (!t && i && V) return Q;
        if (((C = E0(C)), s && (C = C0(C)), o && !C.match(/[a-z]/) && (C = F0(C)), g === "url" && u && (C = B0(C)), l && (C = D0(C)), g === "pages" && (C = x0(C)), g === "author" && c && (C = v0(C, c)), B.has(g) && (C = Ss(Hr(ks(C)))), b.has(g) && (k === "braced" || t) && (C = ku(C, !0)), k === "braced" && r.value.concat.length === 1 && (C = C.trim()), k === "braced" || t)) {
          var z1 = "".concat(D).concat(n, "{").concat(C, "}").length,
            G = C.includes("\n\n");
          if ((a && z1 > a) || G) {
            var T = C.split("\n\n"),
              j = D.repeat(2);
            if (a) {
              var te = a;
              T = T.map((P) => y0(P, te - j.length).join("\n" + j));
            }
            C = "\n" + j + T.join("\n\n".concat(j)) + "\n" + D;
          }
          return ku(C);
        } else return '"'.concat(C, '"');
      })
      .join(" # ");
  }
  h(wu, "formatValue");
  function Yr(r, e) {
    return r
      .replace(/\s+/g, " ")
      .split(/ and /i)
      .map((t) => {
        var i = t.trim();
        e && (i = i.replace(/["{}]/g, ""));
        var n = i.indexOf(",");
        if (n > -1) return { firstNames: i.slice(n + 1).trim(), lastName: i.slice(0, n).trim() };
        {
          var s = i.lastIndexOf(" ");
          return { firstNames: i.slice(0, s).trim(), lastName: i.slice(s).trim() };
        }
      });
  }
  h(Yr, "parseAuthors");
  var wv = {
      auth: {
        description: "Last name of first authors",
        callback: (r) => {
          var _Yr_;
          var _r_get;
          var t =
            (_Yr_ = Yr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0)[0]) === null || _Yr_ === void 0
              ? void 0
              : _Yr_.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87C\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFEF]|\uD87B[\uDE5E-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF])+/g,
                  "_",
                );
          return t ? [t] : [];
        },
      },
      authEtAl: {
        description: "If 1 or 2 authors, both authors, otherwise first author and EtAl",
        callback: (r) => {
          var _r_get;
          var e = Yr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0);
          return [
            ...e
              .slice(0, 2)
              .map((t) =>
                t.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87C\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFEF]|\uD87B[\uDE5E-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF])+/g,
                  "_",
                ),
              ),
            ...(e.length > 2 ? ["Et", "Al"] : []),
          ];
        },
      },
      authors: {
        description: "Last name all authors",
        callback: (r) => {
          var _r_get;
          return Yr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0).map((t) =>
            t.lastName.replace(
              /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87C\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFEF]|\uD87B[\uDE5E-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF])+/g,
              "_",
            ),
          );
        },
      },
      authorsN: {
        description: "Last name N authors, with EtAl if more",
        callback: (r, e) => {
          var _r_get;
          var t = Yr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0);
          return [
            ...t
              .slice(0, e)
              .map((i) =>
                i.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87C\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFEF]|\uD87B[\uDE5E-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF])+/g,
                  "_",
                ),
              ),
            ...(t.length > e ? ["Et", "Al"] : []),
          ];
        },
      },
      veryshorttitle: { description: "First non-function word of the title", callback: (r) => _0(ws(r)).slice(0, 1) },
      shorttitle: { description: "First three non-function words of the title", callback: (r) => _0(ws(r)).slice(0, 3) },
      title: { description: "Full title, capitalized", callback: (r) => L0(_s(ws(r))) },
      fulltitle: { description: "Full title, verbatim", callback: (r) => _s(ws(r)) },
      year: {
        description: "Year",
        callback: (r) => {
          var _r_get;
          var e = (_r_get = r.get("year")) === null || _r_get === void 0 ? void 0 : _r_get.replace(/[^0-9]/g, "");
          return e ? [e] : [];
        },
      },
      duplicateLetter: { description: "If the multiple entries end up with the same key, then insert a letter a-z. By default this will be inserted at the end.", callback: () => ["[duplicateLetter]"] },
      duplicateNumber: { description: "If the multiple entries end up with the same key, then insert a number.", callback: () => ["[duplicateNumber]"] },
    },
    Qv = {
      required: {
        description: "If data is missing, revert to existing key",
        callback: (r) => {
          if (r.length === 0) throw new Qs();
          return r;
        },
      },
      lower: { description: "Convert to lowercase", callback: (r) => r.map((e) => e.toLocaleLowerCase()) },
      upper: { description: "Convert to uppercase", callback: (r) => r.map((e) => e.toLocaleUpperCase()) },
      capitalize: { description: "Capitalize first letter of each word", callback: L0 },
    },
    Qs = ((_class17 = class _class extends Error {}), h(_class17, "MissingRequiredData"), _class17);
  function U0(r, e, t) {
    var i = t;
    !t.includes("[duplicateLetter]") && !t.includes("[duplicateNumber]") && (i = t + "[duplicateLetter]");
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var o = _step.value;
        if (jr(o)) {
          var l = e.get(o.block);
          if (!l) continue;
          var u = _v(l, i);
          if (!u) continue;
          var _n_get;
          var a = (_n_get = n.get(u)) !== null && _n_get !== void 0 ? _n_get : [];
          n.set(u, [...a, o.block]);
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var s = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined,
      _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
        var _step_value = _sliced_to_array(_step1.value, 2),
          o1 = _step_value[0],
          l1 = _step_value[1];
        try {
          for (var _iterator2 = l1.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
            var _step_value1 = _sliced_to_array(_step2.value, 2),
              u1 = _step_value1[0],
              a1 = _step_value1[1];
            var c = l1.length > 1 ? String.fromCharCode(97 + u1) : "",
              f = l1.length > 1 ? String(u1 + 1) : "";
            a1.key = o1.replace(/\[duplicateLetter\]/g, c).replace(/\[duplicateNumber\]/g, f);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
    return s;
  }
  h(U0, "generateKeys");
  function _v(r, e) {
    try {
      var _$t = e.replace(/\[[^:\]]+(?::[^:\]]+)*\]/g, (i) => {
        var _i_slice_split = _to_array(i.slice(1, -1).split(":")),
          n = _i_slice_split[0],
          s = _i_slice_split.slice(1);
        if (!n) throw new Error("Token parse error");
        var o,
          l = n.replace(/[0-9]+/g, (c) => ((o = Number(c)), "N")),
          u = wv[l],
          a;
        if (u) a = u.callback(r, o);
        else if (l === l.toLocaleUpperCase()) {
          var c = r.get(l.toLocaleLowerCase());
          a = c ? _s(c) : [];
        } else throw new Error("Invalid citation key token ".concat(l));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var c1 = _step.value;
            var f = Qv[c1];
            if (f) a = f.callback(a);
            else throw new Error("Invalid modifier ".concat(c1));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return a.join("");
      });
      return _$t === "" ? void 0 : _$t;
    } catch (t) {
      if (t instanceof Qs) return;
      throw t;
    }
  }
  h(_v, "generateKey");
  var Uv = new Set([
    "a",
    "about",
    "above",
    "across",
    "against",
    "along",
    "among",
    "an",
    "and",
    "around",
    "at",
    "before",
    "behind",
    "below",
    "beneath",
    "beside",
    "between",
    "beyond",
    "but",
    "by",
    "down",
    "during",
    "except",
    "for",
    "for",
    "from",
    "in",
    "inside",
    "into",
    "like",
    "near",
    "nor",
    "of",
    "off",
    "on",
    "onto",
    "or",
    "since",
    "so",
    "the",
    "through",
    "to",
    "toward",
    "under",
    "until",
    "up",
    "upon",
    "with",
    "within",
    "without",
    "yet",
  ]);
  function _0(r) {
    return _s(r).filter((e) => !Uv.has(e.toLocaleLowerCase()));
  }
  h(_0, "nonFunctionWords");
  function _s(r) {
    return r
      .split(
        /(?:[\0-\/:-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87C\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFEF]|\uD87B[\uDE5E-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF])+/,
      )
      .filter((e) => e.length > 0);
  }
  h(_s, "words");
  function L0(r) {
    return r.map((e) => e.slice(0, 1).toLocaleUpperCase() + e.slice(1).toLocaleLowerCase());
  }
  h(L0, "capitalize");
  function ws(r) {
    var _r_get, _ref;
    return (_ref = (_r_get = r.get("title")) !== null && _r_get !== void 0 ? _r_get : r.get("booktitle")) !== null && _ref !== void 0 ? _ref : "";
  }
  h(ws, "title");
  var O0 = ["doi", "citation", "abstract"];
  var Us = ["title", "shorttitle", "author", "year", "month", "day", "journal", "booktitle", "location", "on", "publisher", "address", "series", "volume", "number", "pages", "doi", "isbn", "issn", "url", "urldate", "copyright", "category", "note", "metadata"],
    Qu = ["key"],
    T0 = "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]",
    Jr = [
      { key: "help", cli: { "--help": !0, "-h": !0 }, title: "Help", description: ["Show help"], type: "boolean" },
      { key: "v2", cli: { "--v2": !0 }, title: "Enable planned v2 CLI changes", description: ["Input files will no longer be modified by default. Instead, you will need to specify `--modify`/`-m` option to overwrite the file, or `--output`/`-o` to output to a different file."], type: "string", defaultValue: void 0 },
      { key: "outputPath", cli: { "--output": (r) => r[0], "-o": (r) => r[0] }, title: "Output path", description: ["Write output to specified path. When omitted (and -m/--modify is not used), the result will be printed to stdout."], type: "string", defaultValue: void 0 },
      { key: "modify", cli: { "--modify": !0, "-m": !0, "--no-modify": !1 }, title: "Modify input files", description: ["Overwrite the original input files with the tidied result. This is enabled by default but will be disabled by default in v2. For v1, use --no-modify to output to stdout instead of overwriting the input files."], type: "boolean", defaultValue: !0 },
      { key: "omit", cli: { "--omit": (r) => (r.length === 0 && (console.error("Expected a omit list"), process.exit(1)), r) }, toCLI: (r) => (Array.isArray(r) && r.length > 0 ? "--omit=".concat(r.join(",")) : void 0), title: "Remove fields", description: ["Remove specified fields from bibliography entries."], examples: ["--omit=id,name"], type: "string[]", defaultValue: [] },
      { key: "curly", cli: { "--curly": !0, "--no-curly": !1 }, toCLI: (r) => (r ? "--curly" : void 0), title: "Enclose values in braces", description: ['Enclose all property values in braces. Quoted values will be converted to braces. For example, "Journal of Tea" will become {Journal of Tea}.'], type: "boolean", defaultValue: !1 },
      { key: "numeric", cli: { "--numeric": !0, "--no-numeric": !1 }, toCLI: (r) => (r ? "--numeric" : void 0), title: "Use numeric values where possible", description: ["Strip quotes and braces from numeric/month values. For example, {1998} will become 1998."], type: "boolean", defaultValue: !1 },
      { key: "months", cli: { "--months": !0 }, toCLI: (r) => (r ? "--months" : void 0), title: "Abbreviate months", description: ["Convert all months to three letter abbreviations (jan, feb, etc)."], type: "boolean", defaultValue: !1 },
      {
        key: "space",
        cli: { "--space": (r) => (r.length > 0 ? Number(r[0]) : !0) },
        toCLI: (r, e) => {
          if (!e.tab) {
            if (typeof r == "number" && r !== 2) return "--space=".concat(r);
            if (r && r !== 2) return "--space";
          }
        },
        title: "Indent with spaces",
        description: ["Indent all fields with the specified number of spaces. Ignored if tab is set."],
        examples: ["--space=2 (default)", "--space=4"],
        type: "boolean | number",
        convertBoolean: { true: 2, false: void 0 },
        defaultValue: 2,
      },
      { key: "tab", cli: { "--tab": !0, "--no-tab": !1 }, toCLI: (r) => (r ? "--tab" : void 0), title: "Indent with tabs", description: ["Indent all fields with a tab."], type: "boolean", defaultValue: !1 },
      {
        key: "align",
        cli: { "--align": (r) => Number(r[0]), "--no-align": !1 },
        toCLI: (r) => {
          if (r === !1 || r === 1 || r === 0) return "--no-align";
          if (typeof r == "number" && r !== 14) return "--align=".concat(r);
        },
        title: "Align values",
        description: ["Insert whitespace between fields and values so that values are visually aligned."],
        examples: ["--align=14 (default)"],
        type: "boolean | number",
        convertBoolean: { true: 14, false: 1 },
        defaultValue: 14,
      },
      { key: "blankLines", cli: { "--blank-lines": !0, "--no-blank-lines": !1 }, toCLI: (r) => (r ? "--blank-lines" : void 0), title: "Insert blank lines", description: ["Insert an empty line between each entry."], type: "boolean" },
      {
        key: "sort",
        cli: { "--sort": (r) => (r.length > 0 ? r : !0), "--no-sort": !1 },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--sort=".concat(r.join(","));
          if (r === !0) return "--sort";
        },
        title: "Sort bibliography entries",
        description: [
          "Sort entries by the specified field names (citation key is used if no fields are specified). For descending order, prefix the field with a dash (-).",
          "Multiple fields may be specified to sort everything by first field, then by the second field whenever the first field for entries are equal, etc.",
          "The following additional fields are also permitted: key (entry citation key), type (sorts by the type of entry, e.g. article), and special (ensures that @string, @preamble, @set, and @xdata entries are first). ",
        ],
        examples: ["--sort (sort by citation key)", "--sort=-year,name (sort year descending then name ascending)", "--sort=name,year"],
        type: "boolean | string[]",
        convertBoolean: { true: Qu, false: void 0 },
      },
      {
        key: "duplicates",
        cli: {
          "--duplicates": (r) => {
            if (r.length === 0) return !0;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var e = _step.value;
                e !== "doi" && e !== "key" && e !== "abstract" && e !== "citation" && (console.error('Invalid key for merge option: "'.concat(e, '"')), process.exit(1));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            return r;
          },
        },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--duplicates=".concat(r.join(","));
          if (r === !0) return "--duplicates";
        },
        title: "Check for duplicates",
        description: ["Warn if duplicates are found, which are entries where DOI, abstract, or author and title are the same."],
        examples: ["--duplicates doi (same DOIs)", "--duplicates key (same IDs)", "--duplicates abstract (similar abstracts)", "--duplicates citation (similar author and titles)", "--duplicates doi, key (identical DOI or keys)", "--duplicates (same DOI, key, abstract, or citation)"],
        type: "boolean | ('doi' | 'key' | 'abstract' | 'citation')[]",
        convertBoolean: { true: O0, false: void 0 },
        defaultValue: (r) => (r.merge ? O0 : void 0),
      },
      {
        key: "merge",
        cli: { "--merge": (r) => (r.length === 0 ? !0 : (r[0] !== "first" && r[0] !== "last" && r[0] !== "combine" && r[0] !== "overwrite" && (console.error('Invalid merge strategy: "'.concat(r[0], '"')), process.exit(1)), r[0])), "--no-merge": !1 },
        toCLI: (r) => {
          if (typeof r == "string") return "--merge=".concat(r);
          if (r) return "--merge";
        },
        title: "Merge duplicate entries",
        description: [
          "Merge duplicates entries. Use the duplicates option to determine how duplicates are identified. There are different ways to merge:",
          "- first: only keep the original entry",
          "- last: only keep the last found duplicate",
          "- combine: keep original entry and merge in fields of duplicates if they do not already exist",
          "- overwrite: keep original entry and merge in fields of duplicates, overwriting existing fields if they exist",
        ],
        type: "boolean | 'first' | 'last' | 'combine' | 'overwrite'",
        convertBoolean: { true: "combine", false: void 0 },
      },
      { key: "stripEnclosingBraces", cli: { "--strip-enclosing-braces": !0 }, toCLI: (r) => (r ? "--strip-enclosing-braces" : void 0), title: "Strip double-braced values", description: ["Where an entire value is enclosed in double braces, remove the extra braces. For example, {{Journal of Tea}} will become {Journal of Tea}."], type: "boolean", defaultValue: !1 },
      { key: "dropAllCaps", cli: { "--drop-all-caps": !0 }, toCLI: (r) => (r ? "--drop-all-caps" : void 0), title: "Drop all caps", description: ["Where values are all caps, make them title case. For example, {JOURNAL OF TEA} will become {Journal of Tea}. Roman numerals will be left unchanged."], type: "boolean", defaultValue: !1 },
      { key: "escape", cli: { "--escape": !0, "--no-escape": !1 }, toCLI: (r) => (r === !1 ? "--no-escape" : void 0), title: "Escape special characters", description: ["Escape special characters, such as umlaut. This ensures correct typesetting with latex. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "sortFields",
        cli: { "--sort-fields": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return JSON.stringify(r) === JSON.stringify(Us) ? "--sort-fields" : "--sort-fields=".concat(r.join(","));
          if (r === !0) return "--sort-fields";
        },
        title: "Sort fields",
        description: ["Sort the fields within entries.", "If no fields are specified fields will be sorted by: title, shorttitle, author, year, month, day, journal, booktitle, location, on, publisher, address, series, volume, number, pages, doi, isbn, issn, url, urldate, copyright, category, note, metadata"],
        examples: ["--sort-fields=name,author"],
        type: "boolean | string[]",
        convertBoolean: { true: Us, false: void 0 },
        defaultValue: void 0,
      },
      { key: "sortProperties", cli: { "--sort-properties": (r) => (r.length > 0 ? r : !0) }, title: "Sort properties", description: ["Alias of sort fields (legacy)"], type: "boolean | string[]", deprecated: !0 },
      { key: "stripComments", cli: { "--strip-comments": !0, "--no-strip-comments": !1 }, toCLI: (r) => (r ? "--strip-comments" : void 0), title: "Remove comments", description: ["Remove all comments from the bibtex source."], type: "boolean", defaultValue: !1 },
      { key: "trailingCommas", cli: { "--trailing-commas": !0, "--no-trailing-commas": !0 }, toCLI: (r) => (r ? "--trailing-commas" : void 0), title: "Trailing commas", description: ["End the last key value pair in each entry with a comma."], type: "boolean", defaultValue: !1 },
      { key: "encodeUrls", cli: { "--encode-urls": !0, "--no-encode-urls": !0 }, toCLI: (r) => (r ? "--encode-urls" : void 0), title: "Encode URLs", description: ["Replace invalid URL characters with percent encoded values."], type: "boolean", defaultValue: !1 },
      { key: "tidyComments", cli: { "--tidy-comments": !0, "--no-tidy-comments": !1 }, toCLI: (r) => (r === !1 ? "--no-tidy-comments" : void 0), title: "Tidy comments", description: ["Remove whitespace surrounding comments."], type: "boolean", defaultValue: !0 },
      { key: "removeEmptyFields", cli: { "--remove-empty-fields": !0, "--no-remove-empty-fields": !1 }, toCLI: (r) => (r ? "--remove-empty-fields" : void 0), title: "Remove empty fields", description: ["Remove any fields that have empty values."], type: "boolean", defaultValue: !1 },
      { key: "removeDuplicateFields", cli: { "--remove-dupe-fields": !0, "--no-remove-dupe-fields": !1 }, toCLI: (r) => (r === !1 ? "--no-remove-dupe-fields" : void 0), title: "Remove duplicate fields", description: ["Only allow one of each field in each entry. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "generateKeys",
        cli: { "--generate-keys": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (r === !0 || r === T0) return "--generate-keys";
          if (typeof r == "string") return '--generate-keys="'.concat(r.replace(/"/g, '\\"'), '"');
        },
        title: "Generate citation keys [Experimental]",
        description: ["For all entries replace the key with a new key of the form <author><year><title>. A JabRef citation pattern can be provided. This is an experimental option that may change without warning."],
        type: "boolean | string",
        convertBoolean: { true: T0, false: void 0 },
        defaultValue: void 0,
      },
      { key: "maxAuthors", cli: { "--max-authors": (r) => Number(r[0]) }, toCLI: (r) => (r ? "--max-authors=".concat(r) : void 0), title: "Maximum authors", description: ['Truncate authors if above a given number into "and others".'], type: "number" },
      { key: "lowercase", cli: { "--no-lowercase": !1 }, toCLI: (r) => (r === !1 ? "--no-lowercase" : void 0), title: "Lowercase fields", description: ["Lowercase field names and entry type. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "enclosingBraces",
        cli: { "--enclosing-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--enclosing-braces=".concat(r.join(","));
          if (r === !0) return "--enclosing-braces";
        },
        title: "Enclose values in double braces",
        description: ["Enclose the given fields in double braces, such that case is preserved during BibTeX compilation."],
        examples: ["--enclosing-braces=title,journal (output title and journal fields will be of the form {{This is a title}})", "--enclosing-braces (equivalent to ---enclosing-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      {
        key: "removeBraces",
        cli: { "--remove-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--remove-braces=".concat(r.join(","));
          if (r === !0) return "--remove-braces";
        },
        title: "Remove braces",
        description: ["Remove any curly braces within the value, unless they are part of a command."],
        examples: ["--remove-braces=title,journal", "--remove-braces (equivalent to ---remove-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      { key: "wrap", cli: { "--wrap": (r) => (r.length > 0 ? Number(r[0]) : !0), "--no-wrap": !1 }, toCLI: (r) => (r ? "--wrap=".concat(r) : void 0), title: "Wrap values", description: ["Wrap long values at the given column"], examples: ["--wrap (80 by default)", "--wrap=82"], type: "boolean | number", convertBoolean: { true: 80, false: void 0 } },
      { key: "version", cli: { "--version": !0, "-v": !0 }, title: "Version", description: ["Show bibtex-tidy version."], type: "boolean" },
      { key: "quiet", cli: { "--quiet": !0 }, title: "Quiet", description: ["Suppress logs on stdout."], type: "boolean" },
      { key: "backup", cli: { "--backup": !0, "--no-backup": !1 }, title: "Backup", description: ["Make a backup <filename>.original. Enabled by default (unless --modify is explicitly provided or outputting to a different file/stdio). Deprecated but provided for backward compatibility."], type: "boolean", defaultValue: !0, deprecated: !0 },
    ],
    R0 = Object.fromEntries(Jr.map((r) => [r.key, r]));
  function Gr(r) {
    return Object.fromEntries(
      Jr.map((e) => {
        var t = e.key,
          i = r[t];
        return e.convertBoolean && typeof i == "boolean" ? [t, i ? e.convertBoolean.true : e.convertBoolean.false] : typeof i > "u" && e.defaultValue !== void 0 ? (typeof e.defaultValue == "function" ? [t, e.defaultValue(r)] : [t, e.defaultValue]) : [t, i];
      }),
    );
  }
  h(Gr, "normalizeOptions");
  function N0(r, e, t) {
    var i = new Map(),
      n = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var _s_block;
        if (s.type === "text" || (((_s_block = s.block) === null || _s_block === void 0 ? void 0 : _s_block.type) !== "entry" && !t.includes("special"))) {
          n.push(s);
          continue;
        }
        var o = new Map();
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var l = _step1.value;
            l.startsWith("-") && (l = l.slice(1));
            var u = void 0;
            switch (l) {
              case "key":
                var _s_block1;
                if (((_s_block1 = s.block) === null || _s_block1 === void 0 ? void 0 : _s_block1.type) !== "entry") continue;
                var _s_block_key;
                u = (_s_block_key = s.block.key) !== null && _s_block_key !== void 0 ? _s_block_key : "";
                break;
              case "type":
                u = s.command;
                break;
              case "month": {
                var _s_block2, _e_get;
                if (((_s_block2 = s.block) === null || _s_block2 === void 0 ? void 0 : _s_block2.type) !== "entry") continue;
                var a = (_e_get = e.get(s.block)) === null || _e_get === void 0 ? void 0 : _e_get.get(l),
                  c = a ? Su.indexOf(a) : -1;
                u = c > -1 ? c : "";
                break;
              }
              case "special":
                u = Ov(s) ? 0 : 1;
                break;
              default:
                var _s_block3, _e_get1;
                if (((_s_block3 = s.block) === null || _s_block3 === void 0 ? void 0 : _s_block3.type) !== "entry") continue;
                var _e_get_get;
                u = (_e_get_get = (_e_get1 = e.get(s.block)) === null || _e_get1 === void 0 ? void 0 : _e_get1.get(l)) !== null && _e_get_get !== void 0 ? _e_get_get : "";
            }
            o.set(l, typeof u == "string" ? u.toLowerCase() : u);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        for (i.set(s, o); n.length > 0; ) i.set(n.pop(), o);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      var _loop = function () {
        var s = _step2.value;
        var o = s.startsWith("-"),
          l = o ? s.slice(1) : s;
        r.children.sort((u, a) => {
          var _i_get, _i_get1;
          var _i_get_get, _i_get_get1;
          var c = (_i_get_get = (_i_get = i.get(u)) === null || _i_get === void 0 ? void 0 : _i_get.get(l)) !== null && _i_get_get !== void 0 ? _i_get_get : "￰",
            f = (_i_get_get1 = (_i_get1 = i.get(a)) === null || _i_get1 === void 0 ? void 0 : _i_get1.get(l)) !== null && _i_get_get1 !== void 0 ? _i_get_get1 : "￰";
          return typeof c == "number" && (c = String(c).padStart(50, "0")), typeof f == "number" && (f = String(f).padStart(50, "0")), (o ? f : c).localeCompare(o ? c : f);
        });
      };
      for (var _iterator2 = [...t].reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) _loop();
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }
  h(N0, "sortEntries");
  var Lv = new Set(["string", "preamble", "set", "xdata"]);
  function Ov(r) {
    return Lv.has(r.command.toLowerCase());
  }
  h(Ov, "isBibLaTeXSpecialEntry");
  function M0(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = Bi(r)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        t.fields.sort((i, n) => {
          var s = e.indexOf(i.name.toLocaleLowerCase()),
            o = e.indexOf(n.name.toLocaleLowerCase());
          return s === -1 && o === -1 ? 0 : s === -1 ? 1 : o === -1 ? -1 : o < s ? 1 : o > s ? -1 : 0;
        });
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(M0, "sortEntryFields");
  function P0(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = Gr(e);
    r = b0(r);
    var i = m0(r),
      n = Bi(i)
        .filter((a) => !a.key)
        .map((a) => ({ code: "MISSING_KEY", message: "".concat(a.parent.command, " entry does not have a citation key.") })),
      s = Tv(i, t),
      o = A0(i, s, t.duplicates, t.merge);
    n.push(...o.warnings), (i.children = i.children.filter((a) => !jr(a) || !o.entries.has(a.block))), t.sort && N0(i, s, t.sort), t.sortFields && M0(i, t.sortFields);
    var l = t.generateKeys ? U0(i, s, t.generateKeys) : void 0;
    return { bibtex: Q0(i, t, l), warnings: n, count: Bi(i).length };
  }
  h(P0, "tidy");
  function Bi(r) {
    return r.children.filter(jr).map((e) => e.block);
  }
  h(Bi, "getEntries");
  function Tv(r, e) {
    return new Map(
      Bi(r).map((t) => [
        t,
        new Map(
          t.fields.map((i) => {
            var _wu;
            return [i.name.toLocaleLowerCase(), (_wu = wu(i, e)) !== null && _wu !== void 0 ? _wu : ""];
          }),
        ),
      ]),
    );
  }
  h(Tv, "generateValueLookup");
  var fe =
      ((_r2 = class r {
        lineAt(e) {
          if (e < 0 || e > this.length) throw new RangeError("Invalid position ".concat(e, " in document of length ").concat(this.length));
          return this.lineInner(e, !1, 1, 0);
        }
        line(e) {
          if (e < 1 || e > this.lines) throw new RangeError("Invalid line number ".concat(e, " in ").concat(this.lines, "-line document"));
          return this.lineInner(e, !0, 1, 0);
        }
        replace(e, t, i) {
          var ref;
          (ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref;
          var n = [];
          return this.decompose(0, e, n, 2), i.length && i.decompose(0, i.length, n, 3), this.decompose(t, this.length, n, 1), sr.from(n, this.length - (t - e) + i.length);
        }
        append(e) {
          return this.replace(this.length, this.length, e);
        }
        slice(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
          var ref;
          (ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref;
          var i = [];
          return this.decompose(e, t, i, 0), sr.from(i, t - e);
        }
        eq(e) {
          if (e == this) return !0;
          if (e.length != this.length || e.lines != this.lines) return !1;
          var t = this.scanIdentical(e, 1),
            i = this.length - this.scanIdentical(e, -1),
            n = new Ai(this),
            s = new Ai(e);
          for (var o = t, l = t; ; ) {
            if ((n.next(o), s.next(o), (o = 0), n.lineBreak != s.lineBreak || n.done != s.done || n.value != s.value)) return !1;
            if (((l += n.value.length), n.done || l >= i)) return !0;
          }
        }
        iter() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          return new Ai(this, e);
        }
        iterRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
          return new Rs(this, e, t);
        }
        iterLines(e, t) {
          var i;
          if (e == null) i = this.iter();
          else {
            t == null && (t = this.lines + 1);
            var n = this.line(e).from;
            i = this.iterRange(n, Math.max(n, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
          }
          return new Ns(i);
        }
        toString() {
          return this.sliceString(0);
        }
        toJSON() {
          var e = [];
          return this.flatten(e), e;
        }
        static of(e) {
          if (e.length == 0) throw new RangeError("A document must have at least one line");
          return e.length == 1 && !e[0] ? r.empty : e.length <= 32 ? new rt(e) : sr.from(rt.split(e, []));
        }
        constructor() {}
      }),
      h(_r2, "Text"),
      _r2),
    rt =
      ((_r3 = class r extends fe {
        get lines() {
          return this.text.length;
        }
        get children() {
          return null;
        }
        lineInner(e, t, i, n) {
          for (var s = 0; ; s++) {
            var o = this.text[s],
              l = n + o.length;
            if ((t ? i : l) >= e) return new Uu(n, l, i, o);
            (n = l + 1), i++;
          }
        }
        decompose(e, t, i, n) {
          var s = e <= 0 && t >= this.length ? this : new r(I0(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
          if (n & 1) {
            var o = i.pop(),
              l = Ts(s.text, o.text.slice(), 0, s.length);
            if (l.length <= 32) i.push(new r(l, o.length + s.length));
            else {
              var u = l.length >> 1;
              i.push(new r(l.slice(0, u)), new r(l.slice(u)));
            }
          } else i.push(s);
        }
        replace(e, t, i) {
          if (!(i instanceof r)) return super.replace(e, t, i);
          var ref;
          (ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref;
          var n = Ts(this.text, Ts(i.text, I0(this.text, 0, e)), t),
            s = this.length + i.length - (t - e);
          return n.length <= 32 ? new r(n, s) : sr.from(r.split(n, []), s);
        }
        sliceString(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
          var ref;
          (ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref;
          var n = "";
          for (var s = 0, o = 0; s <= t && o < this.text.length; o++) {
            var l = this.text[o],
              u = s + l.length;
            s > e && o && (n += i), e < u && t > s && (n += l.slice(Math.max(0, e - s), t - s)), (s = u + 1);
          }
          return n;
        }
        flatten(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              e.push(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        scanIdentical() {
          return 0;
        }
        static split(e, t) {
          var i = [],
            n = -1;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              i.push(s), (n += s.length + 1), i.length == 32 && (t.push(new r(i, n)), (i = []), (n = -1));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n > -1 && t.push(new r(i, n)), t;
        }
        constructor(e, ref) {
          var t = ref === void 0 ? Rv(e) : ref;
          super(), (this.text = e), (this.length = t);
        }
      }),
      h(_r3, "TextLeaf"),
      _r3),
    sr =
      ((_r4 = class r extends fe {
        lineInner(e, t, i, n) {
          for (var s = 0; ; s++) {
            var o = this.children[s],
              l = n + o.length,
              u = i + o.lines - 1;
            if ((t ? u : l) >= e) return o.lineInner(e, t, i, n);
            (n = l + 1), (i = u + 1);
          }
        }
        decompose(e, t, i, n) {
          for (var s = 0, o = 0; o <= t && s < this.children.length; s++) {
            var l = this.children[s],
              u = o + l.length;
            if (e <= u && t >= o) {
              var a = n & ((o <= e ? 1 : 0) | (u >= t ? 2 : 0));
              o >= e && u <= t && !a ? i.push(l) : l.decompose(e - o, t - o, i, a);
            }
            o = u + 1;
          }
        }
        replace(e, t, i) {
          var ref;
          if (((ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref, i.lines < this.lines))
            for (var n = 0, s = 0; n < this.children.length; n++) {
              var o = this.children[n],
                l = s + o.length;
              if (e >= s && t <= l) {
                var u = o.replace(e - s, t - s, i),
                  a = this.lines - o.lines + u.lines;
                if (u.lines < a >> 4 && u.lines > a >> 6) {
                  var c = this.children.slice();
                  return (c[n] = u), new r(c, this.length - (t - e) + i.length);
                }
                return super.replace(s, l, u);
              }
              s = l + 1;
            }
          return super.replace(e, t, i);
        }
        sliceString(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
          var ref;
          (ref = _sliced_to_array(ar(this, e, t), 2)), (e = ref[0]), (t = ref[1]), ref;
          var n = "";
          for (var s = 0, o = 0; s < this.children.length && o <= t; s++) {
            var l = this.children[s],
              u = o + l.length;
            o > e && s && (n += i), e < u && t > o && (n += l.sliceString(e - o, t - o, i)), (o = u + 1);
          }
          return n;
        }
        flatten(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.flatten(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        scanIdentical(e, t) {
          if (!(e instanceof r)) return 0;
          var i = 0,
            _ref = _sliced_to_array(t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1], 4),
            n = _ref[0],
            s = _ref[1],
            o = _ref[2],
            l = _ref[3];
          for (; ; n += t, s += t) {
            if (n == o || s == l) return i;
            var u = this.children[n],
              a = e.children[s];
            if (u != a) return i + u.scanIdentical(a, t);
            i += u.length + 1;
          }
        }
        static from(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.reduce((i, n) => i + n.length + 1, -1);
          var i = 0;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var p = _step.value;
              i += p.lines;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if (i < 32) {
            var p1 = [];
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var m = _step1.value;
                m.flatten(p1);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            return new rt(p1, t);
          }
          var n = Math.max(32, i >> 5),
            s = n << 1,
            o = n >> 1,
            l = [],
            u = 0,
            a = -1,
            c = [];
          function f(p) {
            var m;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (p.lines > s && p instanceof r)
              try {
                for (var _iterator = p.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var F = _step.value;
                  f(F);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            else p.lines > o && (u > o || !u) ? (d(), l.push(p)) : p instanceof rt && u && (m = c[c.length - 1]) instanceof rt && p.lines + m.lines <= 32 ? ((u += p.lines), (a += p.length + 1), (c[c.length - 1] = new rt(m.text.concat(p.text), m.length + 1 + p.length))) : (u + p.lines > n && d(), (u += p.lines), (a += p.length + 1), c.push(p));
          }
          h(f, "add");
          function d() {
            u != 0 && (l.push(c.length == 1 ? c[0] : r.from(c, a)), (a = -1), (u = c.length = 0));
          }
          h(d, "flush");
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator2 = e[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var p2 = _step2.value;
              f(p2);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return d(), l.length == 1 ? l[0] : new r(l, t);
        }
        constructor(e, t) {
          super(), (this.children = e), (this.length = t), (this.lines = 0);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              this.lines += i.lines;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      h(_r4, "TextNode"),
      _r4);
  fe.empty = new rt([""], 0);
  function Rv(r) {
    var e = -1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        e += t.length + 1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(Rv, "textLength");
  function Ts(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1e9;
    for (var n = 0, s = 0, o = !0; s < r.length && n <= i; s++) {
      var l = r[s],
        u = n + l.length;
      u >= t && (u > i && (l = l.slice(0, i - n)), n < t && (l = l.slice(t - n)), o ? ((e[e.length - 1] += l), (o = !1)) : e.push(l)), (n = u + 1);
    }
    return e;
  }
  h(Ts, "appendText");
  function I0(r, e, t) {
    return Ts(r, [""], e, t);
  }
  h(I0, "sliceText");
  var Ai =
      ((_class18 = class _class {
        nextInner(e, t) {
          for (this.done = this.lineBreak = !1; ; ) {
            var i = this.nodes.length - 1,
              n = this.nodes[i],
              s = this.offsets[i],
              o = s >> 1,
              l = n instanceof rt ? n.text.length : n.children.length;
            if (o == (t > 0 ? l : 0)) {
              if (i == 0) return (this.done = !0), (this.value = ""), this;
              t > 0 && this.offsets[i - 1]++, this.nodes.pop(), this.offsets.pop();
            } else if ((s & 1) == (t > 0 ? 0 : 1)) {
              if (((this.offsets[i] += t), e == 0)) return (this.lineBreak = !0), (this.value = "\n"), this;
              e--;
            } else if (n instanceof rt) {
              var u = n.text[o + (t < 0 ? -1 : 0)];
              if (((this.offsets[i] += t), u.length > Math.max(0, e))) return (this.value = e == 0 ? u : t > 0 ? u.slice(e) : u.slice(0, u.length - e)), this;
              e -= u.length;
            } else {
              var u1 = n.children[o + (t < 0 ? -1 : 0)];
              e > u1.length ? ((e -= u1.length), (this.offsets[i] += t)) : (t < 0 && this.offsets[i]--, this.nodes.push(u1), this.offsets.push(t > 0 ? 1 : (u1 instanceof rt ? u1.text.length : u1.children.length) << 1));
            }
          }
        }
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return e < 0 && (this.nextInner(-e, -this.dir), (e = this.value.length)), this.nextInner(e, this.dir);
        }
        constructor(e, ref) {
          var t = ref === void 0 ? 1 : ref;
          (this.dir = t), (this.done = !1), (this.lineBreak = !1), (this.value = ""), (this.nodes = [e]), (this.offsets = [t > 0 ? 1 : (e instanceof rt ? e.text.length : e.children.length) << 1]);
        }
      }),
      h(_class18, "RawTextCursor"),
      _class18),
    Rs =
      ((_class19 = class _class {
        nextInner(e, t) {
          if (t < 0 ? this.pos <= this.from : this.pos >= this.to) return (this.value = ""), (this.done = !0), this;
          e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
          var i = t < 0 ? this.pos - this.from : this.to - this.pos;
          e > i && (e = i), (i -= e);
          var _this_cursor_next = this.cursor.next(e),
            n = _this_cursor_next.value;
          return (this.pos += (n.length + e) * t), (this.value = n.length <= i ? n : t < 0 ? n.slice(n.length - i) : n.slice(0, i)), (this.done = !this.value), this;
        }
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return e < 0 ? (e = Math.max(e, this.from - this.pos)) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
        }
        get lineBreak() {
          return this.cursor.lineBreak && this.value != "";
        }
        constructor(e, t, i) {
          (this.value = ""), (this.done = !1), (this.cursor = new Ai(e, t > i ? -1 : 1)), (this.pos = t > i ? e.length : 0), (this.from = Math.min(t, i)), (this.to = Math.max(t, i));
        }
      }),
      h(_class19, "PartialTextCursor"),
      _class19),
    Ns =
      ((_class20 = class _class {
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          var _this_inner_next = this.inner.next(e),
            t = _this_inner_next.done,
            i = _this_inner_next.lineBreak,
            n = _this_inner_next.value;
          return t && this.afterBreak ? ((this.value = ""), (this.afterBreak = !1)) : t ? ((this.done = !0), (this.value = "")) : i ? (this.afterBreak ? (this.value = "") : ((this.afterBreak = !0), this.next())) : ((this.value = n), (this.afterBreak = !1)), this;
        }
        get lineBreak() {
          return !1;
        }
        constructor(e) {
          (this.inner = e), (this.afterBreak = !0), (this.value = ""), (this.done = !1);
        }
      }),
      h(_class20, "LineCursor"),
      _class20);
  typeof Symbol < "u" &&
    ((fe.prototype[Symbol.iterator] = function () {
      return this.iter();
    }),
    (Ai.prototype[Symbol.iterator] =
      Rs.prototype[Symbol.iterator] =
      Ns.prototype[Symbol.iterator] =
        function () {
          return this;
        }));
  var Uu =
    ((_class21 = class _class {
      get length() {
        return this.to - this.from;
      }
      constructor(e, t, i, n) {
        (this.from = e), (this.to = t), (this.number = i), (this.text = n);
      }
    }),
    h(_class21, "Line"),
    _class21);
  function ar(r, e, t) {
    return (e = Math.max(0, Math.min(r.length, e))), [e, Math.max(e, Math.min(r.length, t))];
  }
  h(ar, "clip");
  var or =
    "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o"
      .split(",")
      .map((r) => (r ? parseInt(r, 36) : 1));
  for (var r = 1; r < or.length; r++) or[r] += or[r - 1];
  function Nv(r) {
    for (var e = 1; e < or.length; e += 2) if (or[e] > r) return or[e - 1] <= r;
    return !1;
  }
  h(Nv, "isExtendingChar");
  function $0(r) {
    return r >= 127462 && r <= 127487;
  }
  h($0, "isRegionalIndicator");
  var q0 = 8205;
  function ht(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0;
    return (t ? Y0 : Mv)(r, e, i);
  }
  h(ht, "findClusterBreak");
  function Y0(r, e, t) {
    if (e == r.length) return e;
    e && J0(r.charCodeAt(e)) && G0(r.charCodeAt(e - 1)) && e--;
    var i = Kr(r, e);
    for (e += Ms(i); e < r.length; ) {
      var n = Kr(r, e);
      if (i == q0 || n == q0 || (t && Nv(n))) (e += Ms(n)), (i = n);
      else if ($0(n)) {
        var s = 0,
          o = e - 2;
        for (; o >= 0 && $0(Kr(r, o)); ) s++, (o -= 2);
        if (s % 2 == 0) break;
        e += 2;
      } else break;
    }
    return e;
  }
  h(Y0, "nextClusterBreak");
  function Mv(r, e, t) {
    for (; e > 0; ) {
      var i = Y0(r, e - 2, t);
      if (i < e) return i;
      e--;
    }
    return 0;
  }
  h(Mv, "prevClusterBreak");
  function J0(r) {
    return r >= 56320 && r < 57344;
  }
  h(J0, "surrogateLow");
  function G0(r) {
    return r >= 55296 && r < 56320;
  }
  h(G0, "surrogateHigh");
  function Kr(r, e) {
    var t = r.charCodeAt(e);
    if (!G0(t) || e + 1 == r.length) return t;
    var i = r.charCodeAt(e + 1);
    return J0(i) ? ((t - 55296) << 10) + (i - 56320) + 65536 : t;
  }
  h(Kr, "codePointAt");
  function Ms(r) {
    return r < 65536 ? 1 : 2;
  }
  h(Ms, "codePointSize");
  var Lu = /\r\n?|\n/,
    Ve = (function (r) {
      return (r[(r.Simple = 0)] = "Simple"), (r[(r.TrackDel = 1)] = "TrackDel"), (r[(r.TrackBefore = 2)] = "TrackBefore"), (r[(r.TrackAfter = 3)] = "TrackAfter"), r;
    })(Ve || (Ve = {})),
    Jt =
      ((_r5 = class r {
        get length() {
          var e = 0;
          for (var t = 0; t < this.sections.length; t += 2) e += this.sections[t];
          return e;
        }
        get newLength() {
          var e = 0;
          for (var t = 0; t < this.sections.length; t += 2) {
            var i = this.sections[t + 1];
            e += i < 0 ? this.sections[t] : i;
          }
          return e;
        }
        get empty() {
          return this.sections.length == 0 || (this.sections.length == 2 && this.sections[1] < 0);
        }
        iterGaps(e) {
          for (var t = 0, i = 0, n = 0; t < this.sections.length; ) {
            var s = this.sections[t++],
              o = this.sections[t++];
            o < 0 ? (e(i, n, s), (n += s)) : (n += o), (i += s);
          }
        }
        iterChangedRanges(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          Ou(this, e, t);
        }
        get invertedDesc() {
          var e = [];
          for (var t = 0; t < this.sections.length; ) {
            var i = this.sections[t++],
              n = this.sections[t++];
            n < 0 ? e.push(i, n) : e.push(n, i);
          }
          return new r(e);
        }
        composeDesc(e) {
          return this.empty ? e : e.empty ? this : X0(this, e);
        }
        mapDesc(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return e.empty ? this : Tu(this, e, t);
        }
        mapPos(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Ve.Simple;
          var n = 0,
            s = 0;
          for (var o = 0; o < this.sections.length; ) {
            var l = this.sections[o++],
              u = this.sections[o++],
              a = n + l;
            if (u < 0) {
              if (a > e) return s + (e - n);
              s += l;
            } else {
              if (i != Ve.Simple && a >= e && ((i == Ve.TrackDel && n < e && a > e) || (i == Ve.TrackBefore && n < e) || (i == Ve.TrackAfter && a > e))) return null;
              if (a > e || (a == e && t < 0 && !l)) return e == n || t < 0 ? s : s + u;
              s += u;
            }
            n = a;
          }
          if (e > n) throw new RangeError("Position ".concat(e, " is out of range for changeset of length ").concat(n));
          return s;
        }
        touchesRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          for (var i = 0, n = 0; i < this.sections.length && n <= t; ) {
            var s = this.sections[i++],
              o = this.sections[i++],
              l = n + s;
            if (o >= 0 && n <= t && l >= e) return n < e && l > t ? "cover" : !0;
            n = l;
          }
          return !1;
        }
        toString() {
          var e = "";
          for (var t = 0; t < this.sections.length; ) {
            var i = this.sections[t++],
              n = this.sections[t++];
            e += (e ? " " : "") + i + (n >= 0 ? ":" + n : "");
          }
          return e;
        }
        toJSON() {
          return this.sections;
        }
        static fromJSON(e) {
          if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number")) throw new RangeError("Invalid JSON representation of ChangeDesc");
          return new r(e);
        }
        static create(e) {
          return new r(e);
        }
        constructor(e) {
          this.sections = e;
        }
      }),
      h(_r5, "ChangeDesc"),
      _r5),
    We =
      ((_r6 = class r extends Jt {
        apply(e) {
          if (this.length != e.length) throw new RangeError("Applying change set to a document with the wrong length");
          return Ou(this, (t, i, n, s, o) => (e = e.replace(n, n + (i - t), o)), !1), e;
        }
        mapDesc(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return Tu(this, e, t, !0);
        }
        invert(e) {
          var t = this.sections.slice(),
            i = [];
          for (var n = 0, s = 0; n < t.length; n += 2) {
            var o = t[n],
              l = t[n + 1];
            if (l >= 0) {
              (t[n] = l), (t[n + 1] = o);
              var u = n >> 1;
              for (; i.length < u; ) i.push(fe.empty);
              i.push(o ? e.slice(s, s + o) : fe.empty);
            }
            s += o;
          }
          return new r(t, i);
        }
        compose(e) {
          return this.empty ? e : e.empty ? this : X0(this, e, !0);
        }
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return e.empty ? this : Tu(this, e, t, !0);
        }
        iterChanges(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          Ou(this, e, t);
        }
        get desc() {
          return Jt.create(this.sections);
        }
        filter(e) {
          var t = [],
            i = [],
            n = [],
            s = new ki(this);
          e: for (var o = 0, l = 0; ; ) {
            var u = o == e.length ? 1e9 : e[o++];
            for (; l < u || (l == u && s.len == 0); ) {
              if (s.done) break e;
              var c = Math.min(s.len, u - l);
              Me(n, c, -1);
              var f = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;
              Me(t, c, f), f > 0 && si(i, t, s.text), s.forward(c), (l += c);
            }
            var a = e[o++];
            for (; l < a; ) {
              if (s.done) break e;
              var c1 = Math.min(s.len, a - l);
              Me(t, c1, -1), Me(n, c1, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(c1), (l += c1);
            }
          }
          return { changes: new r(t, i), filtered: Jt.create(n) };
        }
        toJSON() {
          var e = [];
          for (var t = 0; t < this.sections.length; t += 2) {
            var i = this.sections[t],
              n = this.sections[t + 1];
            n < 0 ? e.push(i) : n == 0 ? e.push([i]) : e.push([i].concat(this.inserted[t >> 1].toJSON()));
          }
          return e;
        }
        static of(e, t, i) {
          var n = [],
            s = [],
            o = 0,
            l = null;
          function u() {
            var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
            if (!c && !n.length) return;
            o < t && Me(n, t - o, -1);
            var f = new r(n, s);
            (l = l ? l.compose(f.map(l)) : f), (n = []), (s = []), (o = 0);
          }
          h(u, "flush");
          function a(c) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (Array.isArray(c))
              try {
                for (var _iterator = c[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var f = _step.value;
                  a(f);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            else if (c instanceof r) {
              if (c.length != t) throw new RangeError("Mismatched change set length (got ".concat(c.length, ", expected ").concat(t, ")"));
              u(), (l = l ? l.compose(c.map(l)) : c);
            } else {
              var f1 = c.from,
                tmp = c.to,
                d = tmp === void 0 ? f1 : tmp,
                p = c.insert;
              if (f1 > d || f1 < 0 || d > t) throw new RangeError("Invalid change range ".concat(f1, " to ").concat(d, " (in doc of length ").concat(t, ")"));
              var m = p ? (typeof p == "string" ? fe.of(p.split(i || Lu)) : p) : fe.empty,
                F = m.length;
              if (f1 == d && F == 0) return;
              f1 < o && u(), f1 > o && Me(n, f1 - o, -1), Me(n, d - f1, F), si(s, n, m), (o = d);
            }
          }
          return h(a, "process"), a(e), u(!l), l;
        }
        static empty(e) {
          return new r(e ? [e, -1] : [], []);
        }
        static fromJSON(e) {
          if (!Array.isArray(e)) throw new RangeError("Invalid JSON representation of ChangeSet");
          var t = [],
            i = [];
          for (var n = 0; n < e.length; n++) {
            var s = e[n];
            if (typeof s == "number") t.push(s, -1);
            else {
              if (!Array.isArray(s) || typeof s[0] != "number" || s.some((o, l) => l && typeof o != "string")) throw new RangeError("Invalid JSON representation of ChangeSet");
              if (s.length == 1) t.push(s[0], 0);
              else {
                for (; i.length < n; ) i.push(fe.empty);
                (i[n] = fe.of(s.slice(1))), t.push(s[0], i[n].length);
              }
            }
          }
          return new r(t, i);
        }
        static createSet(e, t) {
          return new r(e, t);
        }
        constructor(e, t) {
          super(e), (this.inserted = t);
        }
      }),
      h(_r6, "ChangeSet"),
      _r6);
  function Me(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    if (e == 0 && t <= 0) return;
    var n = r.length - 2;
    n >= 0 && t <= 0 && t == r[n + 1] ? (r[n] += e) : e == 0 && r[n] == 0 ? (r[n + 1] += t) : i ? ((r[n] += e), (r[n + 1] += t)) : r.push(e, t);
  }
  h(Me, "addSection");
  function si(r, e, t) {
    if (t.length == 0) return;
    var i = (e.length - 2) >> 1;
    if (i < r.length) r[r.length - 1] = r[r.length - 1].append(t);
    else {
      for (; r.length < i; ) r.push(fe.empty);
      r.push(t);
    }
  }
  h(si, "addInsert");
  function Ou(r, e, t) {
    var i = r.inserted;
    for (var n = 0, s = 0, o = 0; o < r.sections.length; ) {
      var l = r.sections[o++],
        u = r.sections[o++];
      if (u < 0) (n += l), (s += l);
      else {
        var a = n,
          c = s,
          f = fe.empty;
        for (; (a += l), (c += u), u && i && (f = f.append(i[(o - 2) >> 1])), !(t || o == r.sections.length || r.sections[o + 1] < 0); ) (l = r.sections[o++]), (u = r.sections[o++]);
        e(n, a, s, c, f), (n = a), (s = c);
      }
    }
  }
  h(Ou, "iterChanges");
  function Tu(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    var n = [],
      s = i ? [] : null,
      o = new ki(r),
      l = new ki(e);
    for (var u = -1; ; )
      if (o.ins == -1 && l.ins == -1) {
        var a = Math.min(o.len, l.len);
        Me(n, a, -1), o.forward(a), l.forward(a);
      } else if (l.ins >= 0 && (o.ins < 0 || u == o.i || (o.off == 0 && (l.len < o.len || (l.len == o.len && !t))))) {
        var a1 = l.len;
        for (Me(n, l.ins, -1); a1; ) {
          var c = Math.min(o.len, a1);
          o.ins >= 0 && u < o.i && o.len <= c && (Me(n, 0, o.ins), s && si(s, n, o.text), (u = o.i)), o.forward(c), (a1 -= c);
        }
        l.next();
      } else if (o.ins >= 0) {
        var a2 = 0,
          c1 = o.len;
        for (; c1; )
          if (l.ins == -1) {
            var f = Math.min(c1, l.len);
            (a2 += f), (c1 -= f), l.forward(f);
          } else if (l.ins == 0 && l.len < c1) (c1 -= l.len), l.next();
          else break;
        Me(n, a2, u < o.i ? o.ins : 0), s && u < o.i && si(s, n, o.text), (u = o.i), o.forward(o.len - c1);
      } else {
        if (o.done && l.done) return s ? We.createSet(n, s) : Jt.create(n);
        throw new Error("Mismatched change set lengths");
      }
  }
  h(Tu, "mapSet");
  function X0(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    var i = [],
      n = t ? [] : null,
      s = new ki(r),
      o = new ki(e);
    for (var l = !1; ; ) {
      if (s.done && o.done) return n ? We.createSet(i, n) : Jt.create(i);
      if (s.ins == 0) Me(i, s.len, 0, l), s.next();
      else if (o.len == 0 && !o.done) Me(i, 0, o.ins, l), n && si(n, i, o.text), o.next();
      else {
        if (s.done || o.done) throw new Error("Mismatched change set lengths");
        {
          var u = Math.min(s.len2, o.len),
            a = i.length;
          if (s.ins == -1) {
            var c = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
            Me(i, u, c, l), n && c && si(n, i, o.text);
          } else o.ins == -1 ? (Me(i, s.off ? 0 : s.len, u, l), n && si(n, i, s.textBit(u))) : (Me(i, s.off ? 0 : s.len, o.off ? 0 : o.ins, l), n && !o.off && si(n, i, o.text));
          (l = (s.ins > u || (o.ins >= 0 && o.len > u)) && (l || i.length > a)), s.forward2(u), o.forward(u);
        }
      }
    }
  }
  h(X0, "composeSets");
  var ki =
      ((_class22 = class _class {
        next() {
          var _this_set = this.set,
            e = _this_set.sections;
          this.i < e.length ? ((this.len = e[this.i++]), (this.ins = e[this.i++])) : ((this.len = 0), (this.ins = -2)), (this.off = 0);
        }
        get done() {
          return this.ins == -2;
        }
        get len2() {
          return this.ins < 0 ? this.len : this.ins;
        }
        get text() {
          var _this_set = this.set,
            e = _this_set.inserted,
            t = (this.i - 2) >> 1;
          return t >= e.length ? fe.empty : e[t];
        }
        textBit(e) {
          var _this_set = this.set,
            t = _this_set.inserted,
            i = (this.i - 2) >> 1;
          return i >= t.length && !e ? fe.empty : t[i].slice(this.off, e == null ? void 0 : this.off + e);
        }
        forward(e) {
          e == this.len ? this.next() : ((this.len -= e), (this.off += e));
        }
        forward2(e) {
          this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : ((this.ins -= e), (this.off += e));
        }
        constructor(e) {
          (this.set = e), (this.i = 0), this.next();
        }
      }),
      h(_class22, "SectionIter"),
      _class22),
    nr =
      ((_r7 = class r {
        get anchor() {
          return this.flags & 32 ? this.to : this.from;
        }
        get head() {
          return this.flags & 32 ? this.from : this.to;
        }
        get empty() {
          return this.from == this.to;
        }
        get assoc() {
          return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
        }
        get bidiLevel() {
          var e = this.flags & 7;
          return e == 7 ? null : e;
        }
        get goalColumn() {
          var e = this.flags >> 6;
          return e == 16777215 ? void 0 : e;
        }
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
          var i, n;
          return this.empty ? (i = n = e.mapPos(this.from, t)) : ((i = e.mapPos(this.from, 1)), (n = e.mapPos(this.to, -1))), i == this.from && n == this.to ? this : new r(i, n, this.flags);
        }
        extend(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          if (e <= this.anchor && t >= this.anchor) return Z.range(e, t);
          var i = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
          return Z.range(this.anchor, i);
        }
        eq(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return this.anchor == e.anchor && this.head == e.head && (!t || !this.empty || this.assoc == e.assoc);
        }
        toJSON() {
          return { anchor: this.anchor, head: this.head };
        }
        static fromJSON(e) {
          if (!e || typeof e.anchor != "number" || typeof e.head != "number") throw new RangeError("Invalid JSON representation for SelectionRange");
          return Z.range(e.anchor, e.head);
        }
        static create(e, t, i) {
          return new r(e, t, i);
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.flags = i);
        }
      }),
      h(_r7, "SelectionRange"),
      _r7),
    Z =
      ((_r8 = class r {
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
          return e.empty
            ? this
            : r.create(
                this.ranges.map((i) => i.map(e, t)),
                this.mainIndex,
              );
        }
        eq(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex) return !1;
          for (var i = 0; i < this.ranges.length; i++) if (!this.ranges[i].eq(e.ranges[i], t)) return !1;
          return !0;
        }
        get main() {
          return this.ranges[this.mainIndex];
        }
        asSingle() {
          return this.ranges.length == 1 ? this : new r([this.main], 0);
        }
        addRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
          return r.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
        }
        replaceRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.mainIndex;
          var i = this.ranges.slice();
          return (i[t] = e), r.create(i, this.mainIndex);
        }
        toJSON() {
          return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
        }
        static fromJSON(e) {
          if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length) throw new RangeError("Invalid JSON representation for EditorSelection");
          return new r(
            e.ranges.map((t) => nr.fromJSON(t)),
            e.main,
          );
        }
        static single(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          return new r([r.range(e, t)], 0);
        }
        static create(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (e.length == 0) throw new RangeError("A selection needs at least one range");
          for (var i = 0, n = 0; n < e.length; n++) {
            var s = e[n];
            if (s.empty ? s.from <= i : s.from < i) return r.normalized(e.slice(), t);
            i = s.to;
          }
          return new r(e, t);
        }
        static cursor(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 ? arguments[2] : void 0,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return nr.create(e, e, (t == 0 ? 0 : t < 0 ? 8 : 16) | (i == null ? 7 : Math.min(6, i)) | ((n !== null && n !== void 0 ? n : 16777215) << 6));
        }
        static range(e, t, i, n) {
          var s = ((i !== null && i !== void 0 ? i : 16777215) << 6) | (n == null ? 7 : Math.min(6, n));
          return t < e ? nr.create(t, e, 48 | s) : nr.create(e, t, (t > e ? 8 : 0) | s);
        }
        static normalized(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var i = e[t];
          e.sort((n, s) => n.from - s.from), (t = e.indexOf(i));
          for (var n = 1; n < e.length; n++) {
            var s = e[n],
              o = e[n - 1];
            if (s.empty ? s.from <= o.to : s.from < o.to) {
              var l = o.from,
                u = Math.max(s.to, o.to);
              n <= t && t--, e.splice(--n, 2, s.anchor > s.head ? r.range(u, l) : r.range(l, u));
            }
          }
          return new r(e, t);
        }
        constructor(e, t) {
          (this.ranges = e), (this.mainIndex = t);
        }
      }),
      h(_r8, "EditorSelection"),
      _r8);
  function K0(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.to > e) throw new RangeError("Selection points outside of document");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(K0, "checkSelection");
  var zu = 0,
    H =
      ((_r9 = class r {
        get reader() {
          return this;
        }
        static define() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return new r(e.combine || ((t) => t), e.compareInput || ((t, i) => t === i), e.compare || (e.combine ? (t, i) => t === i : Hu), !!e.static, e.enables);
        }
        of(e) {
          return new lr([], this, 0, e);
        }
        compute(e, t) {
          if (this.isStatic) throw new Error("Can't compute a static facet");
          return new lr(e, this, 1, t);
        }
        computeN(e, t) {
          if (this.isStatic) throw new Error("Can't compute a static facet");
          return new lr(e, this, 2, t);
        }
        from(e, t) {
          return t || (t = h((i) => i, "get")), this.compute([e], (i) => t(i.field(e)));
        }
        constructor(e, t, i, n, s) {
          (this.combine = e), (this.compareInput = t), (this.compare = i), (this.isStatic = n), (this.id = zu++), (this.default = e([])), (this.extensions = typeof s == "function" ? s(this) : s);
        }
      }),
      h(_r9, "Facet"),
      _r9);
  function Hu(r, e) {
    return r == e || (r.length == e.length && r.every((t, i) => t === e[i]));
  }
  h(Hu, "sameArray");
  var lr =
    ((_class23 = class _class {
      dynamicSlot(e) {
        var t;
        var i = this.value,
          n = this.facet.compareInput,
          s = this.id,
          o = e[s] >> 1,
          l = this.type == 2,
          u = !1,
          a = !1,
          c = [];
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.dependencies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var f = _step.value;
            f == "doc" ? (u = !0) : f == "selection" ? (a = !0) : ((t = e[f.id]) !== null && t !== void 0 ? t : 1) & 1 || c.push(e[f.id]);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return {
          create(f) {
            return (f.values[o] = i(f)), 1;
          },
          update(f, d) {
            if ((u && d.docChanged) || (a && (d.docChanged || d.selection)) || Ru(f, c)) {
              var p = i(f);
              if (l ? !V0(p, f.values[o], n) : !n(p, f.values[o])) return (f.values[o] = p), 1;
            }
            return 0;
          },
          reconfigure: (f, d) => {
            var p,
              m = d.config.address[s];
            if (m != null) {
              var F = $s(d, m);
              if (this.dependencies.every((g) => (g instanceof H ? d.facet(g) === f.facet(g) : g instanceof Pe ? d.field(g, !1) == f.field(g, !1) : !0)) || (l ? V0((p = i(f)), F, n) : n((p = i(f)), F))) return (f.values[o] = F), 0;
            } else p = i(f);
            return (f.values[o] = p), 1;
          },
        };
      }
      constructor(e, t, i, n) {
        (this.dependencies = e), (this.facet = t), (this.type = i), (this.value = n), (this.id = zu++);
      }
    }),
    h(_class23, "FacetProvider"),
    _class23);
  function V0(r, e, t) {
    if (r.length != e.length) return !1;
    for (var i = 0; i < r.length; i++) if (!t(r[i], e[i])) return !1;
    return !0;
  }
  h(V0, "compareArray");
  function Ru(r, e) {
    var t = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        Zr(r, i) & 1 && (t = !0);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(Ru, "ensureAll");
  function Pv(r, e, t) {
    var i = t.map((u) => r[u.id]),
      n = t.map((u) => u.type),
      s = i.filter((u) => !(u & 1)),
      o = r[e.id] >> 1;
    function l(u) {
      var a = [];
      for (var c = 0; c < i.length; c++) {
        var f = $s(u, i[c]);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (n[c] == 2)
          try {
            for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              a.push(d);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else a.push(f);
      }
      return e.combine(a);
    }
    return (
      h(l, "get"),
      {
        create(u) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a = _step.value;
              Zr(u, a);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return (u.values[o] = l(u)), 1;
        },
        update(u, a) {
          if (!Ru(u, s)) return 0;
          var c = l(u);
          return e.compare(c, u.values[o]) ? 0 : ((u.values[o] = c), 1);
        },
        reconfigure(u, a) {
          var c = Ru(u, i),
            f = a.config.facets[e.id],
            d = a.facet(e);
          if (f && !c && Hu(t, f)) return (u.values[o] = d), 0;
          var p = l(u);
          return e.compare(p, d) ? ((u.values[o] = d), 0) : ((u.values[o] = p), 1);
        },
      }
    );
  }
  h(Pv, "dynamicFacetSlot");
  var W0 = H.define({ static: !0 }),
    Pe =
      ((_r10 = class r {
        static define(e) {
          var t = new r(zu++, e.create, e.update, e.compare || ((i, n) => i === n), e);
          return e.provide && (t.provides = e.provide(t)), t;
        }
        create(e) {
          var t = e.facet(W0).find((i) => i.field == this);
          return ((t === null || t === void 0 ? void 0 : t.create) || this.createF)(e);
        }
        slot(e) {
          var t = e[this.id] >> 1;
          return {
            create: (i) => ((i.values[t] = this.create(i)), 1),
            update: (i, n) => {
              var s = i.values[t],
                o = this.updateF(s, n);
              return this.compareF(s, o) ? 0 : ((i.values[t] = o), 1);
            },
            reconfigure: (i, n) => (n.config.address[this.id] != null ? ((i.values[t] = n.field(this)), 0) : ((i.values[t] = this.create(i)), 1)),
          };
        }
        init(e) {
          return [this, W0.of({ field: this, create: e })];
        }
        get extension() {
          return this;
        }
        constructor(e, t, i, n, s) {
          (this.id = e), (this.createF = t), (this.updateF = i), (this.compareF = n), (this.spec = s), (this.provides = void 0);
        }
      }),
      h(_r10, "StateField"),
      _r10),
    vi = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
  function Xr(r) {
    return (e) => new Ps(e, r);
  }
  h(Xr, "prec");
  var cr = { highest: Xr(vi.highest), high: Xr(vi.high), default: Xr(vi.default), low: Xr(vi.low), lowest: Xr(vi.lowest) },
    Ps =
      ((_class24 = class _class {
        constructor(e, t) {
          (this.inner = e), (this.prec = t);
        }
      }),
      h(_class24, "PrecExtension"),
      _class24),
    hr =
      ((_r11 = class r {
        of(e) {
          return new en(this, e);
        }
        reconfigure(e) {
          return r.reconfigure.of({ compartment: this, extension: e });
        }
        get(e) {
          return e.config.compartments.get(this);
        }
      }),
      h(_r11, "Compartment"),
      _r11),
    en =
      ((_class25 = class _class {
        constructor(e, t) {
          (this.compartment = e), (this.inner = t);
        }
      }),
      h(_class25, "CompartmentInstance"),
      _class25),
    Is =
      ((_r12 = class r {
        staticFacet(e) {
          var t = this.address[e.id];
          return t == null ? e.default : this.staticValues[t >> 1];
        }
        static resolve(e, t, i) {
          var _loop = function (d1) {
            var p = s[d1],
              m = p[0].facet,
              F = (c && c[d1]) || [];
            if (p.every((g) => g.type == 0))
              if (((l[m.id] = (u.length << 1) | 1), Hu(F, p))) u.push(i.facet(m));
              else {
                var g = m.combine(p.map((D) => D.value));
                u.push(i && m.compare(g, i.facet(m)) ? i.facet(m) : g);
              }
            else {
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                var _loop = function () {
                  var g = _step.value;
                  g.type == 0 ? ((l[g.id] = (u.length << 1) | 1), u.push(g.value)) : ((l[g.id] = a.length << 1), a.push((D) => g.dynamicSlot(D)));
                };
                for (var _iterator = p[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              (l[m.id] = a.length << 1), a.push((g) => Pv(g, m, p));
            }
          };
          var n = [],
            s = Object.create(null),
            o = new Map();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = Iv(e, t, o)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              d instanceof Pe ? n.push(d) : (s[d.facet.id] || (s[d.facet.id] = [])).push(d);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var l = Object.create(null),
            u = [],
            a = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            var _loop1 = function () {
              var d = _step1.value;
              (l[d.id] = a.length << 1), a.push((p) => d.slot(p));
            };
            for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) _loop1();
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var c = i === null || i === void 0 ? void 0 : i.config.facets;
          for (var d1 in s) _loop(d1);
          var f = a.map((d) => d(l));
          return new r(e, o, f, l, u, s);
        }
        constructor(e, t, i, n, s, o) {
          for (this.base = e, this.compartments = t, this.dynamicSlots = i, this.address = n, this.staticValues = s, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < i.length; ) this.statusTemplate.push(0);
        }
      }),
      h(_r12, "Configuration"),
      _r12);
  function Iv(r, e, t) {
    var i = [[], [], [], [], []],
      n = new Map();
    function s(o, l) {
      var u = n.get(o);
      if (u != null) {
        if (u <= l) return;
        var a = i[u].indexOf(o);
        a > -1 && i[u].splice(a, 1), o instanceof en && t.delete(o.compartment);
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if ((n.set(o, l), Array.isArray(o)))
        try {
          for (var _iterator = o[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var a1 = _step.value;
            s(a1, l);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      else if (o instanceof en) {
        if (t.has(o.compartment)) throw new RangeError("Duplicate use of compartment in extensions");
        var a2 = e.get(o.compartment) || o.inner;
        t.set(o.compartment, a2), s(a2, l);
      } else if (o instanceof Ps) s(o.inner, o.prec);
      else if (o instanceof Pe) i[l].push(o), o.provides && s(o.provides, l);
      else if (o instanceof lr) i[l].push(o), o.facet.extensions && s(o.facet.extensions, vi.default);
      else {
        var a3 = o.extension;
        if (!a3) throw new Error("Unrecognized extension value in extension set (".concat(o, "). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks."));
        s(a3, l);
      }
    }
    return h(s, "inner"), s(r, vi.default), i.reduce((o, l) => o.concat(l));
  }
  h(Iv, "flatten");
  function Zr(r, e) {
    if (e & 1) return 2;
    var t = e >> 1,
      i = r.status[t];
    if (i == 4) throw new Error("Cyclic dependency between fields and/or facets");
    if (i & 2) return i;
    r.status[t] = 4;
    var n = r.computeSlot(r, r.config.dynamicSlots[t]);
    return (r.status[t] = 2 | n);
  }
  h(Zr, "ensureAddr");
  function $s(r, e) {
    return e & 1 ? r.config.staticValues[e >> 1] : r.values[e >> 1];
  }
  h($s, "getAddr");
  var Z0 = H.define(),
    Nu = H.define({ combine: (r) => r.some((e) => e), static: !0 }),
    eg = H.define({ combine: (r) => (r.length ? r[0] : void 0), static: !0 }),
    tg = H.define(),
    ig = H.define(),
    rg = H.define(),
    ng = H.define({ combine: (r) => (r.length ? r[0] : !1) }),
    ct =
      ((_class26 = class _class {
        static define() {
          return new Mu();
        }
        constructor(e, t) {
          (this.type = e), (this.value = t);
        }
      }),
      h(_class26, "Annotation"),
      _class26),
    Mu =
      ((_class27 = class _class {
        of(e) {
          return new ct(this, e);
        }
      }),
      h(_class27, "AnnotationType"),
      _class27),
    Pu =
      ((_class28 = class _class {
        of(e) {
          return new de(this, e);
        }
        constructor(e) {
          this.map = e;
        }
      }),
      h(_class28, "StateEffectType"),
      _class28),
    de =
      ((_r13 = class r {
        map(e) {
          var t = this.type.map(this.value, e);
          return t === void 0 ? void 0 : t == this.value ? this : new r(this.type, t);
        }
        is(e) {
          return this.type == e;
        }
        static define() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return new Pu(e.map || ((t) => t));
        }
        static mapEffects(e, t) {
          if (!e.length) return e;
          var i = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              var s = n.map(t);
              s && i.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        constructor(e, t) {
          (this.type = e), (this.value = t);
        }
      }),
      h(_r13, "StateEffect"),
      _r13);
  de.reconfigure = de.define();
  de.appendConfig = de.define();
  var Le =
    ((_r14 = class r {
      static create(e, t, i, n, s, o) {
        return new r(e, t, i, n, s, o);
      }
      get newDoc() {
        return this._doc || (this._doc = this.changes.apply(this.startState.doc));
      }
      get newSelection() {
        return this.selection || this.startState.selection.map(this.changes);
      }
      get state() {
        return this._state || this.startState.applyTransaction(this), this._state;
      }
      annotation(e) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.annotations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            if (t.type == e) return t.value;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      get docChanged() {
        return !this.changes.empty;
      }
      get reconfigured() {
        return this.startState.config != this.state.config;
      }
      isUserEvent(e) {
        var t = this.annotation(r.userEvent);
        return !!(t && (t == e || (t.length > e.length && t.slice(0, e.length) == e && t[e.length] == ".")));
      }
      constructor(e, t, i, n, s, o) {
        (this.startState = e), (this.changes = t), (this.selection = i), (this.effects = n), (this.annotations = s), (this.scrollIntoView = o), (this._doc = null), (this._state = null), i && K0(i, t.newLength), s.some((l) => l.type == r.time) || (this.annotations = s.concat(r.time.of(Date.now())));
      }
    }),
    h(_r14, "Transaction"),
    _r14);
  Le.time = ct.define();
  Le.userEvent = ct.define();
  Le.addToHistory = ct.define();
  Le.remote = ct.define();
  function $v(r, e) {
    var t = [];
    for (var i = 0, n = 0; ; ) {
      var s = void 0,
        o = void 0;
      if (i < r.length && (n == e.length || e[n] >= r[i])) (s = r[i++]), (o = r[i++]);
      else if (n < e.length) (s = e[n++]), (o = e[n++]);
      else return t;
      !t.length || t[t.length - 1] < s ? t.push(s, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
    }
  }
  h($v, "joinRanges");
  function sg(r, e, t) {
    var i;
    var n, s, o;
    return (
      t ? ((n = e.changes), (s = We.empty(e.changes.length)), (o = r.changes.compose(e.changes))) : ((n = e.changes.map(r.changes)), (s = r.changes.mapDesc(e.changes, !0)), (o = r.changes.compose(n))),
      { changes: o, selection: e.selection ? e.selection.map(s) : (i = r.selection) === null || i === void 0 ? void 0 : i.map(n), effects: de.mapEffects(r.effects, n).concat(de.mapEffects(e.effects, s)), annotations: r.annotations.length ? r.annotations.concat(e.annotations) : e.annotations, scrollIntoView: r.scrollIntoView || e.scrollIntoView }
    );
  }
  h(sg, "mergeTransaction");
  function Iu(r, e, t) {
    var i = e.selection,
      n = ur(e.annotations);
    return e.userEvent && (n = n.concat(Le.userEvent.of(e.userEvent))), { changes: e.changes instanceof We ? e.changes : We.of(e.changes || [], t, r.facet(eg)), selection: i && (i instanceof Z ? i : Z.single(i.anchor, i.head)), effects: ur(e.effects), annotations: n, scrollIntoView: !!e.scrollIntoView };
  }
  h(Iu, "resolveTransactionInner");
  function og(r, e, t) {
    var i = Iu(r, e.length ? e[0] : {}, r.doc.length);
    e.length && e[0].filter === !1 && (t = !1);
    for (var s = 1; s < e.length; s++) {
      e[s].filter === !1 && (t = !1);
      var o = !!e[s].sequential;
      i = sg(i, Iu(r, e[s], o ? i.changes.newLength : r.doc.length), o);
    }
    var n = Le.create(r, i.changes, i.selection, i.effects, i.annotations, i.scrollIntoView);
    return Vv(t ? qv(n) : n);
  }
  h(og, "resolveTransaction");
  function qv(r) {
    var e = r.startState,
      t = !0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.facet(tg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        var s = n(r);
        if (s === !1) {
          t = !1;
          break;
        }
        Array.isArray(s) && (t = t === !0 ? s : $v(t, s));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (t !== !0) {
      var n1, s1;
      if (t === !1) (s1 = r.changes.invertedDesc), (n1 = We.empty(e.doc.length));
      else {
        var o = r.changes.filter(t);
        (n1 = o.changes), (s1 = o.filtered.mapDesc(o.changes).invertedDesc);
      }
      r = Le.create(e, n1, r.selection && r.selection.map(s1), de.mapEffects(r.effects, s1), r.annotations, r.scrollIntoView);
    }
    var i = e.facet(ig);
    for (var n2 = i.length - 1; n2 >= 0; n2--) {
      var s2 = i[n2](r);
      s2 instanceof Le ? (r = s2) : Array.isArray(s2) && s2.length == 1 && s2[0] instanceof Le ? (r = s2[0]) : (r = og(e, ur(s2), !1));
    }
    return r;
  }
  h(qv, "filterTransaction");
  function Vv(r) {
    var e = r.startState,
      t = e.facet(rg),
      i = r;
    for (var n = t.length - 1; n >= 0; n--) {
      var s = t[n](r);
      s && Object.keys(s).length && (i = sg(i, Iu(e, s, r.changes.newLength), !0));
    }
    return i == r ? r : Le.create(e, r.changes, r.selection, i.effects, i.annotations, i.scrollIntoView);
  }
  h(Vv, "extendTransaction");
  var Wv = [];
  function ur(r) {
    return r == null ? Wv : Array.isArray(r) ? r : [r];
  }
  h(ur, "asArray");
  var vt = (function (r) {
      return (r[(r.Word = 0)] = "Word"), (r[(r.Space = 1)] = "Space"), (r[(r.Other = 2)] = "Other"), r;
    })(vt || (vt = {})),
    zv = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/,
    $u;
  try {
    $u = new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
  } catch (e) {}
  function Hv(r) {
    if ($u) return $u.test(r);
    for (var e = 0; e < r.length; e++) {
      var t = r[e];
      if (/\w/.test(t) || (t > "\x80" && (t.toUpperCase() != t.toLowerCase() || zv.test(t)))) return !0;
    }
    return !1;
  }
  h(Hv, "hasWordChar");
  function jv(r) {
    return (e) => {
      if (!/\S/.test(e)) return vt.Space;
      if (Hv(e)) return vt.Word;
      for (var t = 0; t < r.length; t++) if (e.indexOf(r[t]) > -1) return vt.Word;
      return vt.Other;
    };
  }
  h(jv, "makeCategorizer");
  var Ae =
    ((_r15 = class r {
      field(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        var i = this.config.address[e.id];
        if (i == null) {
          if (t) throw new RangeError("Field is not present in this state");
          return;
        }
        return Zr(this, i), $s(this, i);
      }
      update() {
        for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
          e[_key] = arguments[_key];
        }
        return og(this, e, !0);
      }
      applyTransaction(e) {
        var t = this.config,
          i = t.base,
          n = t.compartments;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var l = _step.value;
            l.is(hr.reconfigure) ? (t && ((n = new Map()), t.compartments.forEach((u, a) => n.set(a, u)), (t = null)), n.set(l.value.compartment, l.value.extension)) : l.is(de.reconfigure) ? ((t = null), (i = l.value)) : l.is(de.appendConfig) && ((t = null), (i = ur(i).concat(l.value)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var s;
        t
          ? (s = e.startState.values.slice())
          : ((t = Is.resolve(i, n, this)),
            (s = new r(
              t,
              this.doc,
              this.selection,
              t.dynamicSlots.map(() => null),
              (u, a) => a.reconfigure(u, this),
              null,
            ).values));
        var o = e.startState.facet(Nu) ? e.newSelection : e.newSelection.asSingle();
        new r(t, e.newDoc, o, s, (l, u) => u.update(l, e), e);
      }
      replaceSelection(e) {
        return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({ changes: { from: t.from, to: t.to, insert: e }, range: Z.cursor(t.from + e.length) }));
      }
      changeByRange(e) {
        var t = this.selection,
          i = e(t.ranges[0]),
          n = this.changes(i.changes),
          s = [i.range],
          o = ur(i.effects);
        for (var l = 1; l < t.ranges.length; l++) {
          var u = e(t.ranges[l]),
            a = this.changes(u.changes),
            c = a.map(n);
          for (var d = 0; d < l; d++) s[d] = s[d].map(c);
          var f = n.mapDesc(a, !0);
          s.push(u.range.map(f)), (n = n.compose(c)), (o = de.mapEffects(o, c).concat(de.mapEffects(ur(u.effects), f)));
        }
        return { changes: n, selection: Z.create(s, t.mainIndex), effects: o };
      }
      changes() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return e instanceof We ? e : We.of(e, this.doc.length, this.facet(r.lineSeparator));
      }
      toText(e) {
        return fe.of(e.split(this.facet(r.lineSeparator) || Lu));
      }
      sliceDoc() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,
          t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.doc.length;
        return this.doc.sliceString(e, t, this.lineBreak);
      }
      facet(e) {
        var t = this.config.address[e.id];
        return t == null ? e.default : (Zr(this, t), $s(this, t));
      }
      toJSON(e) {
        var t = { doc: this.sliceDoc(), selection: this.selection.toJSON() };
        if (e)
          for (var i in e) {
            var n = e[i];
            n instanceof Pe && this.config.address[n.id] != null && (t[i] = n.spec.toJSON(this.field(e[i]), this));
          }
        return t;
      }
      static fromJSON(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
          i = arguments.length > 2 ? arguments[2] : void 0;
        if (!e || typeof e.doc != "string") throw new RangeError("Invalid JSON representation for EditorState");
        var n = [];
        if (i) {
          var _loop = function (s) {
            if (Object.prototype.hasOwnProperty.call(e, s)) {
              var o = i[s],
                l = e[s];
              n.push(o.init((u) => o.spec.fromJSON(l, u)));
            }
          };
          for (var s in i) _loop(s);
        }
        return r.create({ doc: e.doc, selection: Z.fromJSON(e.selection), extensions: t.extensions ? n.concat([t.extensions]) : n });
      }
      static create() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var t = Is.resolve(e.extensions || [], new Map()),
          i = e.doc instanceof fe ? e.doc : fe.of((e.doc || "").split(t.staticFacet(r.lineSeparator) || Lu)),
          n = e.selection ? (e.selection instanceof Z ? e.selection : Z.single(e.selection.anchor, e.selection.head)) : Z.single(0);
        return (
          K0(n, i.length),
          t.staticFacet(Nu) || (n = n.asSingle()),
          new r(
            t,
            i,
            n,
            t.dynamicSlots.map(() => null),
            (s, o) => o.create(s),
            null,
          )
        );
      }
      get tabSize() {
        return this.facet(r.tabSize);
      }
      get lineBreak() {
        return this.facet(r.lineSeparator) || "\n";
      }
      get readOnly() {
        return this.facet(ng);
      }
      phrase(e) {
        for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          t[_key - 1] = arguments[_key];
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.facet(r.phrases)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            if (Object.prototype.hasOwnProperty.call(i, e)) {
              e = i[e];
              break;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return (
          t.length &&
            (e = e.replace(/\$(\$|\d*)/g, (i, n) => {
              if (n == "$") return "$";
              var s = +(n || 1);
              return !s || s > t.length ? i : t[s - 1];
            })),
          e
        );
      }
      languageDataAt(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
        var n = [];
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = this.facet(Z0)[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var s = _step.value;
            try {
              for (var _iterator1 = s(this, t, i)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var o = _step1.value;
                Object.prototype.hasOwnProperty.call(o, e) && n.push(o[e]);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return n;
      }
      charCategorizer(e) {
        return jv(this.languageDataAt("wordChars", e).join(""));
      }
      wordAt(e) {
        var _this_doc_lineAt = this.doc.lineAt(e),
          t = _this_doc_lineAt.text,
          i = _this_doc_lineAt.from,
          n = _this_doc_lineAt.length,
          s = this.charCategorizer(e),
          o = e - i,
          l = e - i;
        for (; o > 0; ) {
          var u = ht(t, o, !1);
          if (s(t.slice(u, o)) != vt.Word) break;
          o = u;
        }
        for (; l < n; ) {
          var u1 = ht(t, l);
          if (s(t.slice(l, u1)) != vt.Word) break;
          l = u1;
        }
        return o == l ? null : Z.range(o + i, l + i);
      }
      constructor(e, t, i, n, s, o) {
        (this.config = e), (this.doc = t), (this.selection = i), (this.values = n), (this.status = e.statusTemplate.slice()), (this.computeSlot = s), o && (o._state = this);
        for (var l = 0; l < this.config.dynamicSlots.length; l++) Zr(this, l << 1);
        this.computeSlot = null;
      }
    }),
    h(_r15, "EditorState"),
    _r15);
  Ae.allowMultipleSelections = Nu;
  Ae.tabSize = H.define({ combine: (r) => (r.length ? r[0] : 4) });
  Ae.lineSeparator = eg;
  Ae.readOnly = ng;
  Ae.phrases = H.define({
    compare(r, e) {
      var t = Object.keys(r),
        i = Object.keys(e);
      return t.length == i.length && t.every((n) => r[n] == e[n]);
    },
  });
  Ae.languageData = Z0;
  Ae.changeFilter = tg;
  Ae.transactionFilter = ig;
  Ae.transactionExtender = rg;
  hr.reconfigure = de.define();
  function Xt(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var i = {};
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var n = _step.value;
        try {
          for (var _iterator1 = Object.keys(n)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
            var s = _step1.value;
            var o = n[s],
              l = i[s];
            if (l === void 0) i[s] = o;
            else if (!(l === o || o === void 0))
              if (Object.hasOwnProperty.call(t, s)) i[s] = t[s](l, o);
              else throw new Error("Config merge conflict for field " + s);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    for (var n1 in e) i[n1] === void 0 && (i[n1] = e[n1]);
    return i;
  }
  h(Xt, "combineConfig");
  var Gt =
    ((_class29 = class _class {
      eq(e) {
        return this == e;
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        return tn.create(e, t, this);
      }
    }),
    h(_class29, "RangeValue"),
    _class29);
  Gt.prototype.startSide = Gt.prototype.endSide = 0;
  Gt.prototype.point = !1;
  Gt.prototype.mapMode = Ve.TrackDel;
  var tn =
    ((_r16 = class r {
      static create(e, t, i) {
        return new r(e, t, i);
      }
      constructor(e, t, i) {
        (this.from = e), (this.to = t), (this.value = i);
      }
    }),
    h(_r16, "Range"),
    _r16);
  function qu(r, e) {
    return r.from - e.from || r.value.startSide - e.value.startSide;
  }
  h(qu, "cmpRange");
  var Vu =
      ((_r17 = class r {
        get length() {
          return this.to[this.to.length - 1];
        }
        findIndex(e, t, i) {
          var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          var s = i ? this.to : this.from;
          for (var o = n, l = s.length; ; ) {
            if (o == l) return o;
            var u = (o + l) >> 1,
              a = s[u] - e || (i ? this.value[u].endSide : this.value[u].startSide) - t;
            if (u == o) return a >= 0 ? o : l;
            a >= 0 ? (l = u) : (o = u + 1);
          }
        }
        between(e, t, i, n) {
          for (var s = this.findIndex(t, -1e9, !0), o = this.findIndex(i, 1e9, !1, s); s < o; s++) if (n(this.from[s] + e, this.to[s] + e, this.value[s]) === !1) return !1;
        }
        map(e, t) {
          var i = [],
            n = [],
            s = [],
            o = -1,
            l = -1;
          for (var u = 0; u < this.value.length; u++) {
            var a = this.value[u],
              c = this.from[u] + e,
              f = this.to[u] + e,
              d = void 0,
              p = void 0;
            if (c == f) {
              var m = t.mapPos(c, a.startSide, a.mapMode);
              if (m == null || ((d = p = m), a.startSide != a.endSide && ((p = t.mapPos(c, a.endSide)), p < d))) continue;
            } else if (((d = t.mapPos(c, a.startSide)), (p = t.mapPos(f, a.endSide)), d > p || (d == p && a.startSide > 0 && a.endSide <= 0))) continue;
            (p - d || a.endSide - a.startSide) < 0 || (o < 0 && (o = d), a.point && (l = Math.max(l, p - d)), i.push(a), n.push(d - o), s.push(p - o));
          }
          return { mapped: i.length ? new r(n, s, i, l) : null, pos: o };
        }
        constructor(e, t, i, n) {
          (this.from = e), (this.to = t), (this.value = i), (this.maxPoint = n);
        }
      }),
      h(_r17, "Chunk"),
      _r17),
    De =
      ((_r18 = class r {
        static create(e, t, i, n) {
          return new r(e, t, i, n);
        }
        get length() {
          var e = this.chunk.length - 1;
          return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
        }
        get size() {
          if (this.isEmpty) return 0;
          var e = this.nextLayer.size;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.chunk[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              e += t.value.length;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return e;
        }
        chunkEnd(e) {
          return this.chunkPos[e] + this.chunk[e].length;
        }
        update(e) {
          var tmp = e.add,
            t = tmp === void 0 ? [] : tmp,
            tmp1 = e.sort,
            i = tmp1 === void 0 ? !1 : tmp1,
            tmp2 = e.filterFrom,
            n = tmp2 === void 0 ? 0 : tmp2,
            tmp3 = e.filterTo,
            s = tmp3 === void 0 ? this.length : tmp3,
            o = e.filter;
          if (t.length == 0 && !o) return this;
          if ((i && (t = t.slice().sort(qu)), this.isEmpty)) return t.length ? r.of(t) : this;
          var l = new qs(this, null, -1).goto(0),
            u = 0,
            a = [],
            c = new Si();
          for (; l.value || u < t.length; )
            if (u < t.length && (l.from - t[u].from || l.startSide - t[u].value.startSide) >= 0) {
              var f = t[u++];
              c.addInner(f.from, f.to, f.value) || a.push(f);
            } else
              l.rangeIndex == 1 && l.chunkIndex < this.chunk.length && (u == t.length || this.chunkEnd(l.chunkIndex) < t[u].from) && (!o || n > this.chunkEnd(l.chunkIndex) || s < this.chunkPos[l.chunkIndex]) && c.addChunk(this.chunkPos[l.chunkIndex], this.chunk[l.chunkIndex])
                ? l.nextChunk()
                : ((!o || n > l.to || s < l.from || o(l.from, l.to, l.value)) && (c.addInner(l.from, l.to, l.value) || a.push(tn.create(l.from, l.to, l.value))), l.next());
          return c.finishInner(this.nextLayer.isEmpty && !a.length ? r.empty : this.nextLayer.update({ add: a, filter: o, filterFrom: n, filterTo: s }));
        }
        map(e) {
          if (e.empty || this.isEmpty) return this;
          var t = [],
            i = [],
            n = -1;
          for (var o = 0; o < this.chunk.length; o++) {
            var l = this.chunkPos[o],
              u = this.chunk[o],
              a = e.touchesRange(l, l + u.length);
            if (a === !1) (n = Math.max(n, u.maxPoint)), t.push(u), i.push(e.mapPos(l));
            else if (a === !0) {
              var _u_map = u.map(l, e),
                c = _u_map.mapped,
                f = _u_map.pos;
              c && ((n = Math.max(n, c.maxPoint)), t.push(c), i.push(f));
            }
          }
          var s = this.nextLayer.map(e);
          return t.length == 0 ? s : new r(i, t, s || r.empty, n);
        }
        between(e, t, i) {
          if (!this.isEmpty) {
            for (var n = 0; n < this.chunk.length; n++) {
              var s = this.chunkPos[n],
                o = this.chunk[n];
              if (t >= s && e <= s + o.length && o.between(s, e - s, t - s, i) === !1) return;
            }
            this.nextLayer.between(e, t, i);
          }
        }
        iter() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return rn.from([this]).goto(e);
        }
        get isEmpty() {
          return this.nextLayer == this;
        }
        static iter(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return rn.from(e).goto(t);
        }
        static compare(e, t, i, n) {
          var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
          var o = e.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
            l = t.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
            u = z0(o, l, i),
            a = new xi(o, u, s),
            c = new xi(l, u, s);
          i.iterGaps((f, d, p) => H0(a, f, c, d, p, n)), i.empty && i.length == 0 && H0(a, 0, c, 0, 0, n);
        }
        static eq(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
            n = arguments.length > 3 ? arguments[3] : void 0;
          n == null && (n = 999999999);
          var s = e.filter((c) => !c.isEmpty && t.indexOf(c) < 0),
            o = t.filter((c) => !c.isEmpty && e.indexOf(c) < 0);
          if (s.length != o.length) return !1;
          if (!s.length) return !0;
          var l = z0(s, o),
            u = new xi(s, l, 0).goto(i),
            a = new xi(o, l, 0).goto(i);
          for (;;) {
            if (u.to != a.to || !Wu(u.active, a.active) || (u.point && (!a.point || !u.point.eq(a.point)))) return !1;
            if (u.to > n) return !0;
            u.next(), a.next();
          }
        }
        static spans(e, t, i, n) {
          var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
          var o = new xi(e, null, s).goto(t),
            l = t,
            u = o.openStart;
          for (;;) {
            var a = Math.min(o.to, i);
            if (o.point) {
              var c = o.activeForPoint(o.to),
                f = o.pointFrom < t ? c.length + 1 : o.point.startSide < 0 ? c.length : Math.min(c.length, u);
              n.point(l, a, o.point, c, f, o.pointRank), (u = Math.min(o.openEnd(a), c.length));
            } else a > l && (n.span(l, a, o.active, u), (u = o.openEnd(a)));
            if (o.to > i) return u + (o.point && o.to > i ? 1 : 0);
            (l = o.to), o.next();
          }
        }
        static of(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          var i = new Si();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = (e instanceof tn ? [e] : t ? Yv(e) : e)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              i.add(n.from, n.to, n.value);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i.finish();
        }
        static join(e) {
          if (!e.length) return r.empty;
          var t = e[e.length - 1];
          for (var i = e.length - 2; i >= 0; i--) for (var n = e[i]; n != r.empty; n = n.nextLayer) t = new r(n.chunkPos, n.chunk, t, Math.max(n.maxPoint, t.maxPoint));
          return t;
        }
        constructor(e, t, i, n) {
          (this.chunkPos = e), (this.chunk = t), (this.nextLayer = i), (this.maxPoint = n);
        }
      }),
      h(_r18, "RangeSet"),
      _r18);
  De.empty = new De([], [], null, -1);
  function Yv(r) {
    if (r.length > 1)
      for (var e = r[0], t = 1; t < r.length; t++) {
        var i = r[t];
        if (qu(e, i) > 0) return r.slice().sort(qu);
        e = i;
      }
    return r;
  }
  h(Yv, "lazySort");
  De.empty.nextLayer = De.empty;
  var Si =
    ((_r19 = class r {
      finishChunk(e) {
        this.chunks.push(new Vu(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), (this.chunkStart = -1), (this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint)), (this.maxPoint = -1), e && ((this.from = []), (this.to = []), (this.value = []));
      }
      add(e, t, i) {
        this.addInner(e, t, i) || (this.nextLayer || (this.nextLayer = new r())).add(e, t, i);
      }
      addInner(e, t, i) {
        var n = e - this.lastTo || i.startSide - this.last.endSide;
        if (n <= 0 && (e - this.lastFrom || i.startSide - this.last.startSide) < 0) throw new Error("Ranges must be added sorted by `from` position and `startSide`");
        return n < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), (this.last = i), (this.lastFrom = e), (this.lastTo = t), this.value.push(i), i.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
      }
      addChunk(e, t) {
        if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0) return !1;
        this.from.length && this.finishChunk(!0), (this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint)), this.chunks.push(t), this.chunkPos.push(e);
        var i = t.value.length - 1;
        return (this.last = t.value[i]), (this.lastFrom = t.from[i] + e), (this.lastTo = t.to[i] + e), !0;
      }
      finish() {
        return this.finishInner(De.empty);
      }
      finishInner(e) {
        if ((this.from.length && this.finishChunk(!1), this.chunks.length == 0)) return e;
        var t = De.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
        return (this.from = null), t;
      }
      constructor() {
        (this.chunks = []), (this.chunkPos = []), (this.chunkStart = -1), (this.last = null), (this.lastFrom = -1e9), (this.lastTo = -1e9), (this.from = []), (this.to = []), (this.value = []), (this.maxPoint = -1), (this.setMaxPoint = -1), (this.nextLayer = null);
      }
    }),
    h(_r19, "RangeSetBuilder"),
    _r19);
  function z0(r, e, t) {
    var i = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        for (var o = 0; o < s.chunk.length; o++) s.chunk[o].maxPoint <= 0 && i.set(s.chunk[o], s.chunkPos[o]);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var n = new Set();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var s1 = _step1.value;
        for (var o1 = 0; o1 < s1.chunk.length; o1++) {
          var l = i.get(s1.chunk[o1]);
          l != null && (t ? t.mapPos(l) : l) == s1.chunkPos[o1] && !(t === null || t === void 0 ? void 0 : t.touchesRange(l, l + s1.chunk[o1].length)) && n.add(s1.chunk[o1]);
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return n;
  }
  h(z0, "findSharedChunks");
  var qs =
      ((_class30 = class _class {
        get startSide() {
          return this.value ? this.value.startSide : 0;
        }
        get endSide() {
          return this.value ? this.value.endSide : 0;
        }
        goto(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
          return (this.chunkIndex = this.rangeIndex = 0), this.gotoInner(e, t, !1), this;
        }
        gotoInner(e, t, i) {
          for (; this.chunkIndex < this.layer.chunk.length; ) {
            var n = this.layer.chunk[this.chunkIndex];
            if (!((this.skip && this.skip.has(n)) || this.layer.chunkEnd(this.chunkIndex) < e || n.maxPoint < this.minPoint)) break;
            this.chunkIndex++, (i = !1);
          }
          if (this.chunkIndex < this.layer.chunk.length) {
            var n1 = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
            (!i || this.rangeIndex < n1) && this.setRangeIndex(n1);
          }
          this.next();
        }
        forward(e, t) {
          (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
        }
        next() {
          for (;;)
            if (this.chunkIndex == this.layer.chunk.length) {
              (this.from = this.to = 1e9), (this.value = null);
              break;
            } else {
              var e = this.layer.chunkPos[this.chunkIndex],
                t = this.layer.chunk[this.chunkIndex],
                i = e + t.from[this.rangeIndex];
              if (((this.from = i), (this.to = e + t.to[this.rangeIndex]), (this.value = t.value[this.rangeIndex]), this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || (this.value.point && this.to - this.from >= this.minPoint))) break;
            }
        }
        setRangeIndex(e) {
          if (e == this.layer.chunk[this.chunkIndex].value.length) {
            if ((this.chunkIndex++, this.skip)) for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); ) this.chunkIndex++;
            this.rangeIndex = 0;
          } else this.rangeIndex = e;
        }
        nextChunk() {
          this.chunkIndex++, (this.rangeIndex = 0), this.next();
        }
        compare(e) {
          return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
        }
        constructor(e, t, i, ref) {
          var n = ref === void 0 ? 0 : ref;
          (this.layer = e), (this.skip = t), (this.minPoint = i), (this.rank = n);
        }
      }),
      h(_class30, "LayerCursor"),
      _class30),
    rn =
      ((_r20 = class r {
        static from(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
          var n = [];
          for (var s = 0; s < e.length; s++) for (var o = e[s]; !o.isEmpty; o = o.nextLayer) o.maxPoint >= i && n.push(new qs(o, t, i, s));
          return n.length == 1 ? n[0] : new r(n);
        }
        get startSide() {
          return this.value ? this.value.startSide : 0;
        }
        goto(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.goto(e, t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) _u(this.heap, i1);
          return this.next(), this;
        }
        forward(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.forward(e, t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) _u(this.heap, i1);
          (this.to - e || this.value.endSide - t) < 0 && this.next();
        }
        next() {
          if (this.heap.length == 0) (this.from = this.to = 1e9), (this.value = null), (this.rank = -1);
          else {
            var e = this.heap[0];
            (this.from = e.from), (this.to = e.to), (this.value = e.value), (this.rank = e.rank), e.value && e.next(), _u(this.heap, 0);
          }
        }
        constructor(e) {
          this.heap = e;
        }
      }),
      h(_r20, "HeapCursor"),
      _r20);
  function _u(r, e) {
    for (var t = r[e]; ; ) {
      var i = (e << 1) + 1;
      if (i >= r.length) break;
      var n = r[i];
      if ((i + 1 < r.length && n.compare(r[i + 1]) >= 0 && ((n = r[i + 1]), i++), t.compare(n) < 0)) break;
      (r[i] = t), (r[e] = n), (e = i);
    }
  }
  h(_u, "heapBubble");
  var xi =
    ((_class31 = class _class {
      goto(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
        return this.cursor.goto(e, t), (this.active.length = this.activeTo.length = this.activeRank.length = 0), (this.minActive = -1), (this.to = e), (this.endSide = t), (this.openStart = -1), this.next(), this;
      }
      forward(e, t) {
        for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; ) this.removeActive(this.minActive);
        this.cursor.forward(e, t);
      }
      removeActive(e) {
        Ls(this.active, e), Ls(this.activeTo, e), Ls(this.activeRank, e), (this.minActive = j0(this.active, this.activeTo));
      }
      addActive(e) {
        var t = 0,
          _this_cursor = this.cursor,
          i = _this_cursor.value,
          n = _this_cursor.to,
          s = _this_cursor.rank;
        for (; t < this.activeRank.length && (s - this.activeRank[t] || n - this.activeTo[t]) > 0; ) t++;
        Os(this.active, t, i), Os(this.activeTo, t, n), Os(this.activeRank, t, s), e && Os(e, t, this.cursor.from), (this.minActive = j0(this.active, this.activeTo));
      }
      next() {
        var e = this.to,
          t = this.point;
        this.point = null;
        var i = this.openStart < 0 ? [] : null;
        for (;;) {
          var n = this.minActive;
          if (n > -1 && (this.activeTo[n] - this.cursor.from || this.active[n].endSide - this.cursor.startSide) < 0) {
            if (this.activeTo[n] > e) {
              (this.to = this.activeTo[n]), (this.endSide = this.active[n].endSide);
              break;
            }
            this.removeActive(n), i && Ls(i, n);
          } else if (this.cursor.value)
            if (this.cursor.from > e) {
              (this.to = this.cursor.from), (this.endSide = this.cursor.startSide);
              break;
            } else {
              var s = this.cursor.value;
              if (!s.point) this.addActive(i), this.cursor.next();
              else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to) this.cursor.next();
              else {
                (this.point = s), (this.pointFrom = this.cursor.from), (this.pointRank = this.cursor.rank), (this.to = this.cursor.to), (this.endSide = s.endSide), this.cursor.next(), this.forward(this.to, this.endSide);
                break;
              }
            }
          else {
            this.to = this.endSide = 1e9;
            break;
          }
        }
        if (i) {
          this.openStart = 0;
          for (var n1 = i.length - 1; n1 >= 0 && i[n1] < e; n1--) this.openStart++;
        }
      }
      activeForPoint(e) {
        if (!this.active.length) return this.active;
        var t = [];
        for (var i = this.active.length - 1; i >= 0 && !(this.activeRank[i] < this.pointRank); i--) (this.activeTo[i] > e || (this.activeTo[i] == e && this.active[i].endSide >= this.point.endSide)) && t.push(this.active[i]);
        return t.reverse();
      }
      openEnd(e) {
        var t = 0;
        for (var i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > e; i--) t++;
        return t;
      }
      constructor(e, t, i) {
        (this.minPoint = i), (this.active = []), (this.activeTo = []), (this.activeRank = []), (this.minActive = -1), (this.point = null), (this.pointFrom = 0), (this.pointRank = 0), (this.to = -1e9), (this.endSide = 0), (this.openStart = -1), (this.cursor = rn.from(e, t, i));
      }
    }),
    h(_class31, "SpanCursor"),
    _class31);
  function H0(r, e, t, i, n, s) {
    r.goto(e), t.goto(i);
    var o = i + n,
      l = i,
      u = i - e;
    for (;;) {
      var a = r.to + u - t.to || r.endSide - t.endSide,
        c = a < 0 ? r.to + u : t.to,
        f = Math.min(c, o);
      if ((r.point || t.point ? (r.point && t.point && (r.point == t.point || r.point.eq(t.point)) && Wu(r.activeForPoint(r.to), t.activeForPoint(t.to))) || s.comparePoint(l, f, r.point, t.point) : f > l && !Wu(r.active, t.active) && s.compareRange(l, f, r.active, t.active), c > o)) break;
      (l = c), a <= 0 && r.next(), a >= 0 && t.next();
    }
  }
  h(H0, "compare");
  function Wu(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (r[t] != e[t] && !r[t].eq(e[t])) return !1;
    return !0;
  }
  h(Wu, "sameValues");
  function Ls(r, e) {
    for (var t = e, i = r.length - 1; t < i; t++) r[t] = r[t + 1];
    r.pop();
  }
  h(Ls, "remove");
  function Os(r, e, t) {
    for (var i = r.length - 1; i >= e; i--) r[i + 1] = r[i];
    r[e] = t;
  }
  h(Os, "insert");
  function j0(r, e) {
    var t = -1,
      i = 1e9;
    for (var n = 0; n < e.length; n++) (e[n] - i || r[n].endSide - r[t].endSide) < 0 && ((t = n), (i = e[n]));
    return t;
  }
  h(j0, "findMinIndex");
  function Vs(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : r.length;
    var i = 0;
    for (var n = 0; n < t; ) r.charCodeAt(n) == 9 ? ((i += e - (i % e)), n++) : (i++, (n = ht(r, n)));
    return i;
  }
  h(Vs, "countColumn");
  function lg(r, e, t, i) {
    for (var n = 0, s = 0; ; ) {
      if (s >= e) return n;
      if (n == r.length) break;
      (s += r.charCodeAt(n) == 9 ? t - (s % t) : 1), (n = ht(r, n));
    }
    return i === !0 ? -1 : r.length;
  }
  h(lg, "findColumn");
  var ju = "ͼ",
    ug = typeof Symbol > "u" ? "__" + ju : Symbol.for(ju),
    Yu = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"),
    ag = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {},
    ft =
      ((_class32 = class _class {
        getRules() {
          return this.rules.join("\n");
        }
        static newName() {
          var e = ag[ug] || 1;
          return (ag[ug] = e + 1), ju + e.toString(36);
        }
        static mount(e, t, i) {
          var n = e[Yu],
            s = i && i.nonce;
          n ? s && n.setNonce(s) : (n = new Ju(e, s)), n.mount(Array.isArray(t) ? t : [t], e);
        }
        constructor(e, t) {
          this.rules = [];
          var _ref = t || {},
            i = _ref.finish;
          function n(o) {
            return /^@/.test(o) ? [o] : o.split(/,\s*/);
          }
          h(n, "splitSelector");
          function s(o, l, u, a) {
            var c = [],
              f = /^@(\w+)\b/.exec(o[0]),
              d = f && f[1] == "keyframes";
            if (f && l == null) return u.push(o[0] + ";");
            for (var p in l) {
              var m = l[p];
              if (/&/.test(p))
                s(
                  p
                    .split(/,\s*/)
                    .map((F) => o.map((g) => F.replace(/&/, g)))
                    .reduce((F, g) => F.concat(g)),
                  m,
                  u,
                );
              else if (m && typeof m == "object") {
                if (!f) throw new RangeError("The value of a property (" + p + ") should be a primitive value.");
                s(n(p), m, c, d);
              } else m != null && c.push(p.replace(/_.*/, "").replace(/[A-Z]/g, (F) => "-" + F.toLowerCase()) + ": " + m + ";");
            }
            (c.length || d) && u.push((i && !f && !a ? o.map(i) : o).join(", ") + " {" + c.join(" ") + "}");
          }
          h(s, "render");
          for (var o in e) s(n(o), e[o], this.rules);
        }
      }),
      h(_class32, "StyleModule"),
      _class32),
    hg = new Map(),
    Ju =
      ((_class33 = class _class {
        mount(e, t) {
          var i = this.sheet,
            n = 0,
            s = 0;
          for (var o = 0; o < e.length; o++) {
            var l = e[o],
              u = this.modules.indexOf(l);
            if ((u < s && u > -1 && (this.modules.splice(u, 1), s--, (u = -1)), u == -1)) {
              if ((this.modules.splice(s++, 0, l), i)) for (var a = 0; a < l.rules.length; a++) i.insertRule(l.rules[a], n++);
            } else {
              for (; s < u; ) n += this.modules[s++].rules.length;
              (n += l.rules.length), s++;
            }
          }
          if (i) t.adoptedStyleSheets.indexOf(this.sheet) < 0 && (t.adoptedStyleSheets = [this.sheet, ...t.adoptedStyleSheets]);
          else {
            var o1 = "";
            for (var u1 = 0; u1 < this.modules.length; u1++) o1 += this.modules[u1].getRules() + "\n";
            this.styleTag.textContent = o1;
            var l1 = t.head || t;
            this.styleTag.parentNode != l1 && l1.insertBefore(this.styleTag, l1.firstChild);
          }
        }
        setNonce(e) {
          this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
        }
        constructor(e, t) {
          var i = e.ownerDocument || e,
            n = i.defaultView;
          if (!e.head && e.adoptedStyleSheets && n.CSSStyleSheet) {
            var s = hg.get(i);
            if (s) return (e[Yu] = s);
            (this.sheet = new n.CSSStyleSheet()), hg.set(i, this);
          } else (this.styleTag = i.createElement("style")), t && this.styleTag.setAttribute("nonce", t);
          (this.modules = []), (e[Yu] = this);
        }
      }),
      h(_class33, "StyleSet"),
      _class33);
  var Kt = {
      8: "Backspace",
      9: "Tab",
      10: "Enter",
      12: "NumLock",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      44: "PrintScreen",
      45: "Insert",
      46: "Delete",
      59: ";",
      61: "=",
      91: "Meta",
      92: "Meta",
      106: "*",
      107: "+",
      108: ",",
      109: "-",
      110: ".",
      111: "/",
      144: "NumLock",
      145: "ScrollLock",
      160: "Shift",
      161: "Shift",
      162: "Control",
      163: "Control",
      164: "Alt",
      165: "Alt",
      173: "-",
      186: ";",
      187: "=",
      188: ",",
      189: "-",
      190: ".",
      191: "/",
      192: "`",
      219: "[",
      220: "\\",
      221: "]",
      222: "'",
    },
    fr = { 48: ")", 49: "!", 50: "@", 51: "#", 52: "$", 53: "%", 54: "^", 55: "&", 56: "*", 57: "(", 59: ":", 61: "+", 173: "_", 186: ":", 187: "+", 188: "<", 189: "_", 190: ">", 191: "?", 192: "~", 219: "{", 220: "|", 221: "}", 222: '"' },
    Jv = typeof navigator < "u" && /Mac/.test(navigator.platform),
    Gv = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
  for (_e = 0; _e < 10; _e++) Kt[48 + _e] = Kt[96 + _e] = String(_e);
  var _e;
  for (_e = 1; _e <= 24; _e++) Kt[_e + 111] = "F" + _e;
  var _e;
  for (_e = 65; _e <= 90; _e++) (Kt[_e] = String.fromCharCode(_e + 32)), (fr[_e] = String.fromCharCode(_e));
  var _e;
  for (Ws in Kt) fr.hasOwnProperty(Ws) || (fr[Ws] = Kt[Ws]);
  var Ws;
  function cg(r) {
    var e = (Jv && r.metaKey && r.shiftKey && !r.ctrlKey && !r.altKey) || (Gv && r.shiftKey && r.key && r.key.length == 1) || r.key == "Unidentified",
      t = (!e && r.key) || (r.shiftKey ? fr : Kt)[r.keyCode] || r.key || "Unidentified";
    return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
  }
  h(cg, "keyName");
  function oo(r) {
    var e;
    return r.nodeType == 11 ? (e = r.getSelection ? r : r.ownerDocument) : (e = r), e.getSelection();
  }
  h(oo, "getSelection");
  function ia(r, e) {
    return e ? r == e || r.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
  }
  h(ia, "contains");
  function Xv(r) {
    var e = r.activeElement;
    for (; e && e.shadowRoot; ) e = e.shadowRoot.activeElement;
    return e;
  }
  h(Xv, "deepActiveElement");
  function eo(r, e) {
    if (!e.anchorNode) return !1;
    try {
      return ia(r, e.anchorNode);
    } catch (e) {
      return !1;
    }
  }
  h(eo, "hasSelection");
  function gn(r) {
    return r.nodeType == 3 ? Qi(r, 0, r.nodeValue.length).getClientRects() : r.nodeType == 1 ? r.getClientRects() : [];
  }
  h(gn, "clientRectsFor");
  function hn(r, e, t, i) {
    return t ? fg(r, e, t, i, -1) || fg(r, e, t, i, 1) : !1;
  }
  h(hn, "isEquivalentPosition");
  function wi(r) {
    for (var e = 0; ; e++) if (((r = r.previousSibling), !r)) return e;
  }
  h(wi, "domIndex");
  function lo(r) {
    return r.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(r.nodeName);
  }
  h(lo, "isBlockElement");
  function fg(r, e, t, i, n) {
    for (;;) {
      if (r == t && e == i) return !0;
      if (e == (n < 0 ? 0 : Zt(r))) {
        if (r.nodeName == "DIV") return !1;
        var s = r.parentNode;
        if (!s || s.nodeType != 1) return !1;
        (e = wi(r) + (n < 0 ? 0 : 1)), (r = s);
      } else if (r.nodeType == 1) {
        if (((r = r.childNodes[e + (n < 0 ? -1 : 0)]), r.nodeType == 1 && r.contentEditable == "false")) return !1;
        e = n < 0 ? Zt(r) : 0;
      } else return !1;
    }
  }
  h(fg, "scanFor");
  function Zt(r) {
    return r.nodeType == 3 ? r.nodeValue.length : r.childNodes.length;
  }
  h(Zt, "maxOffset");
  function Ma(r, e) {
    var t = e ? r.left : r.right;
    return { left: t, right: t, top: r.top, bottom: r.bottom };
  }
  h(Ma, "flattenRect");
  function Kv(r) {
    var e = r.visualViewport;
    return e ? { left: 0, right: e.width, top: 0, bottom: e.height } : { left: 0, right: r.innerWidth, top: 0, bottom: r.innerHeight };
  }
  h(Kv, "windowRect");
  function Jg(r, e) {
    var t = e.width / r.offsetWidth,
      i = e.height / r.offsetHeight;
    return ((t > 0.995 && t < 1.005) || !isFinite(t) || Math.abs(e.width - r.offsetWidth) < 1) && (t = 1), ((i > 0.995 && i < 1.005) || !isFinite(i) || Math.abs(e.height - r.offsetHeight) < 1) && (i = 1), { scaleX: t, scaleY: i };
  }
  h(Jg, "getScale");
  function Zv(r, e, t, i, n, s, o, l) {
    var u = r.ownerDocument,
      a = u.defaultView || window;
    for (var c = r, f = !1; c && !f; )
      if (c.nodeType == 1) {
        var d = void 0,
          p = c == u.body,
          m = 1,
          F = 1;
        if (p) d = Kv(a);
        else {
          if ((/^(fixed|sticky)$/.test(getComputedStyle(c).position) && (f = !0), c.scrollHeight <= c.clientHeight && c.scrollWidth <= c.clientWidth)) {
            c = c.assignedSlot || c.parentNode;
            continue;
          }
          var b = c.getBoundingClientRect();
          var ref;
          (ref = Jg(c, b)), (m = ref.scaleX), (F = ref.scaleY), ref, (d = { left: b.left, right: b.left + c.clientWidth * m, top: b.top, bottom: b.top + c.clientHeight * F });
        }
        var g = 0,
          D = 0;
        if (n == "nearest") e.top < d.top ? ((D = -(d.top - e.top + o)), t > 0 && e.bottom > d.bottom + D && (D = e.bottom - d.bottom + D + o)) : e.bottom > d.bottom && ((D = e.bottom - d.bottom + o), t < 0 && e.top - D < d.top && (D = -(d.top + D - e.top + o)));
        else {
          var b1 = e.bottom - e.top,
            B = d.bottom - d.top;
          D = (n == "center" && b1 <= B ? e.top + b1 / 2 - B / 2 : n == "start" || (n == "center" && t < 0) ? e.top - o : e.bottom - B + o) - d.top;
        }
        if (
          (i == "nearest"
            ? e.left < d.left
              ? ((g = -(d.left - e.left + s)), t > 0 && e.right > d.right + g && (g = e.right - d.right + g + s))
              : e.right > d.right && ((g = e.right - d.right + s), t < 0 && e.left < d.left + g && (g = -(d.left + g - e.left + s)))
            : (g = (i == "center" ? e.left + (e.right - e.left) / 2 - (d.right - d.left) / 2 : (i == "start") == l ? e.left - s : e.right - (d.right - d.left) + s) - d.left),
          g || D)
        )
          if (p) a.scrollBy(g, D);
          else {
            var b2 = 0,
              B1 = 0;
            if (D) {
              var k = c.scrollTop;
              (c.scrollTop += D / F), (B1 = (c.scrollTop - k) * F);
            }
            if (g) {
              var k1 = c.scrollLeft;
              (c.scrollLeft += g / m), (b2 = (c.scrollLeft - k1) * m);
            }
            (e = { left: e.left - b2, top: e.top - B1, right: e.right - b2, bottom: e.bottom - B1 }), b2 && Math.abs(b2 - g) < 1 && (i = "nearest"), B1 && Math.abs(B1 - D) < 1 && (n = "nearest");
          }
        if (p) break;
        c = c.assignedSlot || c.parentNode;
      } else if (c.nodeType == 11) c = c.host;
      else break;
  }
  h(Zv, "scrollRectIntoView");
  function ex(r) {
    var e = r.ownerDocument;
    for (var t = r.parentNode; t && t != e.body; )
      if (t.nodeType == 1) {
        if (t.scrollHeight > t.clientHeight || t.scrollWidth > t.clientWidth) return t;
        t = t.assignedSlot || t.parentNode;
      } else if (t.nodeType == 11) t = t.host;
      else break;
    return null;
  }
  h(ex, "scrollableParent");
  var ra =
      ((_class34 = class _class {
        eq(e) {
          return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
        }
        setRange(e) {
          var t = e.anchorNode,
            i = e.focusNode;
          this.set(t, Math.min(e.anchorOffset, t ? Zt(t) : 0), i, Math.min(e.focusOffset, i ? Zt(i) : 0));
        }
        set(e, t, i, n) {
          (this.anchorNode = e), (this.anchorOffset = t), (this.focusNode = i), (this.focusOffset = n);
        }
        constructor() {
          (this.anchorNode = null), (this.anchorOffset = 0), (this.focusNode = null), (this.focusOffset = 0);
        }
      }),
      h(_class34, "DOMSelectionState"),
      _class34),
    dr = null;
  function Gg(r) {
    if (r.setActive) return r.setActive();
    if (dr) return r.focus(dr);
    var e = [];
    for (var t = r; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode);
    if (
      (r.focus(
        dr == null
          ? {
              get preventScroll() {
                return (dr = { preventScroll: !0 }), !0;
              },
            }
          : void 0,
      ),
      !dr)
    ) {
      dr = !1;
      for (var t1 = 0; t1 < e.length; ) {
        var i = e[t1++],
          n = e[t1++],
          s = e[t1++];
        i.scrollTop != n && (i.scrollTop = n), i.scrollLeft != s && (i.scrollLeft = s);
      }
    }
  }
  h(Gg, "focusPreventScroll");
  var dg;
  function Qi(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e;
    var i = dg || (dg = document.createRange());
    return i.setEnd(r, t), i.setStart(r, e), i;
  }
  h(Qi, "textRange");
  function Dr(r, e, t, i) {
    var n = { key: e, code: e, keyCode: t, which: t, cancelable: !0 };
    var ref;
    i && ((ref = i), (n.altKey = ref.altKey), (n.ctrlKey = ref.ctrlKey), (n.shiftKey = ref.shiftKey), (n.metaKey = ref.metaKey), ref);
    var s = new KeyboardEvent("keydown", n);
    (s.synthetic = !0), r.dispatchEvent(s);
    var o = new KeyboardEvent("keyup", n);
    return (o.synthetic = !0), r.dispatchEvent(o), s.defaultPrevented || o.defaultPrevented;
  }
  h(Dr, "dispatchKey");
  function tx(r) {
    for (; r; ) {
      if (r && (r.nodeType == 9 || (r.nodeType == 11 && r.host))) return r;
      r = r.assignedSlot || r.parentNode;
    }
    return null;
  }
  h(tx, "getRoot");
  function Xg(r) {
    for (; r.attributes.length; ) r.removeAttributeNode(r.attributes[0]);
  }
  h(Xg, "clearAttributes");
  function ix(r, e) {
    var t = e.focusNode,
      i = e.focusOffset;
    if (!t || e.anchorNode != t || e.anchorOffset != i) return !1;
    for (i = Math.min(i, Zt(t)); ; )
      if (i) {
        if (t.nodeType != 1) return !1;
        var n = t.childNodes[i - 1];
        n.contentEditable == "false" ? i-- : ((t = n), (i = Zt(t)));
      } else {
        if (t == r) return !0;
        (i = wi(t)), (t = t.parentNode);
      }
  }
  h(ix, "atElementStart");
  function Kg(r) {
    return r.scrollTop > Math.max(1, r.scrollHeight - r.clientHeight - 4);
  }
  h(Kg, "isScrolledToBottom");
  function Zg(r, e) {
    for (var t = r, i = e; ; ) {
      if (t.nodeType == 3 && i > 0) return { node: t, offset: i };
      if (t.nodeType == 1 && i > 0) {
        if (t.contentEditable == "false") return null;
        (t = t.childNodes[i - 1]), (i = Zt(t));
      } else if (t.parentNode && !lo(t)) (i = wi(t)), (t = t.parentNode);
      else return null;
    }
  }
  h(Zg, "textNodeBefore");
  function eD(r, e) {
    for (var t = r, i = e; ; ) {
      if (t.nodeType == 3 && i < t.nodeValue.length) return { node: t, offset: i };
      if (t.nodeType == 1 && i < t.childNodes.length) {
        if (t.contentEditable == "false") return null;
        (t = t.childNodes[i]), (i = 0);
      } else if (t.parentNode && !lo(t)) (i = wi(t) + 1), (t = t.parentNode);
      else return null;
    }
  }
  h(eD, "textNodeAfter");
  var ze =
      ((_r21 = class r {
        static before(e, t) {
          return new r(e.parentNode, wi(e), t);
        }
        static after(e, t) {
          return new r(e.parentNode, wi(e) + 1, t);
        }
        constructor(e, t, ref) {
          var i = ref === void 0 ? !0 : ref;
          (this.node = e), (this.offset = t), (this.precise = i);
        }
      }),
      h(_r21, "DOMPos"),
      _r21),
    Pa = [],
    Fe =
      ((_r22 = class r {
        get overrideDOMText() {
          return null;
        }
        get posAtStart() {
          return this.parent ? this.parent.posBefore(this) : 0;
        }
        get posAtEnd() {
          return this.posAtStart + this.length;
        }
        posBefore(e) {
          var t = this.posAtStart;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (i == e) return t;
              t += i.length + i.breakAfter;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          throw new RangeError("Invalid child in posBefore");
        }
        posAfter(e) {
          return this.posBefore(e) + e.length;
        }
        sync(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.flags & 2) {
            var i = this.dom,
              n = null,
              s;
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
                var o = _step.value;
                if (o.flags & 7) {
                  if (!o.dom && (s = n ? n.nextSibling : i.firstChild)) {
                    var l = r.get(s);
                    (!l || (!l.parent && l.canReuseDOM(o))) && o.reuseDOM(s);
                  }
                  o.sync(e, t), (o.flags &= -8);
                }
                if (((s = n ? n.nextSibling : i.firstChild), t && !t.written && t.node == i && s != o.dom && (t.written = !0), o.dom.parentNode == i)) for (; s && s != o.dom; ) s = pg(s);
                else i.insertBefore(o.dom, s);
                n = o.dom;
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            for (s = n ? n.nextSibling : i.firstChild, s && t && t.node == i && (t.written = !0); s; ) s = pg(s);
          } else if (this.flags & 1)
            try {
              for (var _iterator1 = this.children[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step1.value;
                i1.flags & 7 && (i1.sync(e, t), (i1.flags &= -8));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        reuseDOM(e) {}
        localPosFromDOM(e, t) {
          var i;
          if (e == this.dom) i = this.dom.childNodes[t];
          else {
            var n = Zt(e) == 0 ? 0 : t == 0 ? -1 : 1;
            for (;;) {
              var s = e.parentNode;
              if (s == this.dom) break;
              n == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? (n = -1) : (n = 1)), (e = s);
            }
            n < 0 ? (i = e) : (i = e.nextSibling);
          }
          if (i == this.dom.firstChild) return 0;
          for (; i && !r.get(i); ) i = i.nextSibling;
          if (!i) return this.length;
          for (var n1 = 0, s1 = 0; ; n1++) {
            var o = this.children[n1];
            if (o.dom == i) return s1;
            s1 += o.length + o.breakAfter;
          }
        }
        domBoundsAround(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          var n = -1,
            s = -1,
            o = -1,
            l = -1;
          for (var u = 0, a = i, c = i; u < this.children.length; u++) {
            var f = this.children[u],
              d = a + f.length;
            if (a < e && d > t) return f.domBoundsAround(e, t, a);
            if ((d >= e && n == -1 && ((n = u), (s = a)), a > t && f.dom.parentNode == this.dom)) {
              (o = u), (l = c);
              break;
            }
            (c = d), (a = d + f.breakAfter);
          }
          return { from: s, to: l < 0 ? i + this.length : l, startDOM: (n ? this.children[n - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null };
        }
        markDirty() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
          (this.flags |= 2), this.markParentsDirty(e);
        }
        markParentsDirty(e) {
          for (var t = this.parent; t; t = t.parent) {
            if ((e && (t.flags |= 2), t.flags & 1)) return;
            (t.flags |= 1), (e = !1);
          }
        }
        setParent(e) {
          this.parent != e && ((this.parent = e), this.flags & 7 && this.markParentsDirty(!0));
        }
        setDOM(e) {
          this.dom != e && (this.dom && (this.dom.cmView = null), (this.dom = e), (e.cmView = this));
        }
        get rootView() {
          for (var e = this; ; ) {
            var t = e.parent;
            if (!t) return e;
            e = t;
          }
        }
        replaceChildren(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Pa;
          this.markDirty();
          for (var n = e; n < t; n++) {
            var s = this.children[n];
            s.parent == this && i.indexOf(s) < 0 && s.destroy();
          }
          this.children.splice(e, t - e, ...i);
          for (var n1 = 0; n1 < i.length; n1++) i[n1].setParent(this);
        }
        ignoreMutation(e) {
          return !1;
        }
        ignoreEvent(e) {
          return !1;
        }
        childCursor() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
          return new uo(this.children, e, this.children.length);
        }
        childPos(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
          return this.childCursor().findPos(e, t);
        }
        toString() {
          var e = this.constructor.name.replace("View", "");
          return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
        }
        static get(e) {
          return e.cmView;
        }
        get isEditable() {
          return !0;
        }
        get isWidget() {
          return !1;
        }
        get isHidden() {
          return !1;
        }
        merge(e, t, i, n, s, o) {
          return !1;
        }
        become(e) {
          return !1;
        }
        canReuseDOM(e) {
          return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
        }
        getSide() {
          return 0;
        }
        destroy() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              e.parent == this && e.destroy();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.parent = null;
        }
        constructor() {
          (this.parent = null), (this.dom = null), (this.flags = 2);
        }
      }),
      h(_r22, "ContentView"),
      _r22);
  Fe.prototype.breakAfter = 0;
  function pg(r) {
    var e = r.nextSibling;
    return r.parentNode.removeChild(r), e;
  }
  h(pg, "rm$1");
  var uo =
    ((_class35 = class _class {
      findPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
        for (;;) {
          if (e > this.pos || (e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))) return (this.off = e - this.pos), this;
          var i = this.children[--this.i];
          this.pos -= i.length + i.breakAfter;
        }
      }
      constructor(e, t, i) {
        (this.children = e), (this.pos = t), (this.i = i), (this.off = 0);
      }
    }),
    h(_class35, "ChildCursor"),
    _class35);
  function tD(r, e, t, i, n, s, o, l, u) {
    var a = r.children,
      c = a.length ? a[e] : null,
      f = s.length ? s[s.length - 1] : null,
      d = f ? f.breakAfter : o;
    if (!(e == i && c && !o && !d && s.length < 2 && c.merge(t, n, s.length ? f : null, t == 0, l, u))) {
      if (i < a.length) {
        var p = a[i];
        p && (n < p.length || (p.breakAfter && (f === null || f === void 0 ? void 0 : f.breakAfter))) ? (e == i && ((p = p.split(n)), (n = 0)), !d && f && p.merge(0, n, f, !0, 0, u) ? (s[s.length - 1] = p) : ((n || (p.children.length && !p.children[0].length)) && p.merge(0, n, null, !1, 0, u), s.push(p))) : (p === null || p === void 0 ? void 0 : p.breakAfter) && (f ? (f.breakAfter = 1) : (o = 1)),
          i++;
      }
      for (c && ((c.breakAfter = o), t > 0 && (!o && s.length && c.merge(t, c.length, s[0], !1, l, 0) ? (c.breakAfter = s.shift().breakAfter) : (t < c.length || (c.children.length && c.children[c.children.length - 1].length == 0)) && c.merge(t, c.length, null, !1, l, 0), e++)); e < i && s.length; )
        if (a[i - 1].become(s[s.length - 1])) i--, s.pop(), (u = s.length ? 0 : l);
        else if (a[e].become(s[0])) e++, s.shift(), (l = s.length ? 0 : u);
        else break;
      !s.length && e && i < a.length && !a[e - 1].breakAfter && a[i].merge(0, 0, a[e - 1], !1, l, u) && e--, (e < i || s.length) && r.replaceChildren(e, i, s);
    }
  }
  h(tD, "replaceRange");
  function iD(r, e, t, i, n, s) {
    var o = r.childCursor(),
      _o_findPos = o.findPos(t, 1),
      l = _o_findPos.i,
      u = _o_findPos.off,
      _o_findPos1 = o.findPos(e, -1),
      a = _o_findPos1.i,
      c = _o_findPos1.off,
      f = e - t;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var d = _step.value;
        f += d.length;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    (r.length += f), tD(r, a, c, l, u, i, 0, n, s);
  }
  h(iD, "mergeChildrenInto");
  var nt = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" },
    na = typeof document < "u" ? document : { documentElement: { style: {} } },
    sa = /Edge\/(\d+)/.exec(nt.userAgent),
    rD = /MSIE \d/.test(nt.userAgent),
    oa = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(nt.userAgent),
    Bo = !!(rD || oa || sa),
    mg = !Bo && /gecko\/(\d+)/i.test(nt.userAgent),
    Gu = !Bo && /Chrome\/(\d+)/.exec(nt.userAgent),
    gg = "webkitFontSmoothing" in na.documentElement.style,
    nD = !Bo && /Apple Computer/.test(nt.vendor),
    Dg = nD && (/Mobile\/\w+/.test(nt.userAgent) || nt.maxTouchPoints > 2),
    W = {
      mac: Dg || /Mac/.test(nt.platform),
      windows: /Win/.test(nt.platform),
      linux: /Linux|X11/.test(nt.platform),
      ie: Bo,
      ie_version: rD ? na.documentMode || 6 : oa ? +oa[1] : sa ? +sa[1] : 0,
      gecko: mg,
      gecko_version: mg ? +(/Firefox\/(\d+)/.exec(nt.userAgent) || [0, 0])[1] : 0,
      chrome: !!Gu,
      chrome_version: Gu ? +Gu[1] : 0,
      ios: Dg,
      android: /Android\b/.test(nt.userAgent),
      webkit: gg,
      safari: nD,
      webkit_version: gg ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
      tabSize: na.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size",
    },
    rx = 256,
    Rt =
      ((_r23 = class r extends Fe {
        get length() {
          return this.text.length;
        }
        createDOM(e) {
          this.setDOM(e || document.createTextNode(this.text));
        }
        sync(e, t) {
          this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), (this.dom.nodeValue = this.text));
        }
        reuseDOM(e) {
          e.nodeType == 3 && this.createDOM(e);
        }
        merge(e, t, i) {
          return this.flags & 8 || (i && (!(i instanceof r) || this.length - (t - e) + i.length > rx || i.flags & 8)) ? !1 : ((this.text = this.text.slice(0, e) + (i ? i.text : "") + this.text.slice(t)), this.markDirty(), !0);
        }
        split(e) {
          var t = new r(this.text.slice(e));
          return (this.text = this.text.slice(0, e)), this.markDirty(), (t.flags |= this.flags & 8), t;
        }
        localPosFromDOM(e, t) {
          return e == this.dom ? t : t ? this.text.length : 0;
        }
        domAtPos(e) {
          return new ze(this.dom, e);
        }
        domBoundsAround(e, t, i) {
          return { from: i, to: i + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
        }
        coordsAt(e, t) {
          return nx(this.dom, e, t);
        }
        constructor(e) {
          super(), (this.text = e);
        }
      }),
      h(_r23, "TextView"),
      _r23),
    ui =
      ((_r24 = class r extends Fe {
        setAttrs(e) {
          if ((Xg(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)) for (var t in this.mark.attrs) e.setAttribute(t, this.mark.attrs[t]);
          return e;
        }
        canReuseDOM(e) {
          return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
        }
        reuseDOM(e) {
          e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), (this.flags |= 6));
        }
        sync(e, t) {
          this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
        }
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r && i.mark.eq(this.mark)) || (e && s <= 0) || (t < this.length && o <= 0)) ? !1 : (iD(this, e, t, i ? i.children.slice() : [], s - 1, o - 1), this.markDirty(), !0);
        }
        split(e) {
          var t = [],
            i = 0,
            n = -1,
            s = 0;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l = _step.value;
              var u = i + l.length;
              u > e && t.push(i < e ? l.split(e - i) : l), n < 0 && i >= e && (n = s), (i = u), s++;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var o = this.length - e;
          return (this.length = e), n > -1 && ((this.children.length = n), this.markDirty()), new r(this.mark, t, o);
        }
        domAtPos(e) {
          return sD(this, e);
        }
        coordsAt(e, t) {
          return lD(this, e, t);
        }
        constructor(e, ref, ref1) {
          var t = ref === void 0 ? [] : ref,
            i = ref1 === void 0 ? 0 : ref1;
          super(), (this.mark = e), (this.children = t), (this.length = i);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.setParent(this);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      h(_r24, "MarkView"),
      _r24);
  function nx(r, e, t) {
    var i = r.nodeValue.length;
    e > i && (e = i);
    var n = e,
      s = e,
      o = 0;
    (e == 0 && t < 0) || (e == i && t >= 0) ? W.chrome || W.gecko || (e ? (n--, (o = 1)) : s < i && (s++, (o = -1))) : t < 0 ? n-- : s < i && s++;
    var l = Qi(r, n, s).getClientRects();
    if (!l.length) return null;
    var u = l[(o ? o < 0 : t >= 0) ? 0 : l.length - 1];
    return W.safari && !o && u.width == 0 && (u = Array.prototype.find.call(l, (a) => a.width) || u), o ? Ma(u, o < 0) : u || null;
  }
  h(nx, "textCoords");
  var Dn =
      ((_r25 = class r extends Fe {
        static create(e, t, i) {
          return new r(e, t, i);
        }
        split(e) {
          var t = r.create(this.widget, this.length - e, this.side);
          return (this.length -= e), t;
        }
        sync(e) {
          (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
        }
        getSide() {
          return this.side;
        }
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
        }
        become(e) {
          return e instanceof r && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), (this.length = e.length), !0) : !1;
        }
        ignoreMutation() {
          return !0;
        }
        ignoreEvent(e) {
          return this.widget.ignoreEvent(e);
        }
        get overrideDOMText() {
          if (this.length == 0) return fe.empty;
          var e = this;
          for (; e.parent; ) e = e.parent;
          var t = e.view,
            i = t && t.state.doc,
            n = this.posAtStart;
          return i ? i.slice(n, n + this.length) : fe.empty;
        }
        domAtPos(e) {
          return (this.length ? e == 0 : this.side > 0) ? ze.before(this.dom) : ze.after(this.dom, e == this.length);
        }
        domBoundsAround() {
          return null;
        }
        coordsAt(e, t) {
          var i = this.widget.coordsAt(this.dom, e, t);
          if (i) return i;
          var n = this.dom.getClientRects(),
            s = null;
          if (!n.length) return null;
          var o = this.side ? this.side < 0 : e > 0;
          for (var l = o ? n.length - 1 : 0; (s = n[l]), !(e > 0 ? l == 0 : l == n.length - 1 || s.top < s.bottom); l += o ? -1 : 1);
          return Ma(s, !o);
        }
        get isEditable() {
          return !1;
        }
        get isWidget() {
          return !0;
        }
        get isHidden() {
          return this.widget.isHidden;
        }
        destroy() {
          super.destroy(), this.dom && this.widget.destroy(this.dom);
        }
        constructor(e, t, i) {
          super(), (this.widget = e), (this.length = t), (this.side = i), (this.prevWidget = null);
        }
      }),
      h(_r25, "WidgetView"),
      _r25),
    Fn =
      ((_r26 = class r extends Fe {
        get length() {
          return 0;
        }
        merge() {
          return !1;
        }
        become(e) {
          return e instanceof r && e.side == this.side;
        }
        split() {
          return new r(this.side);
        }
        sync() {
          if (!this.dom) {
            var e = document.createElement("img");
            (e.className = "cm-widgetBuffer"), e.setAttribute("aria-hidden", "true"), this.setDOM(e);
          }
        }
        getSide() {
          return this.side;
        }
        domAtPos(e) {
          return this.side > 0 ? ze.before(this.dom) : ze.after(this.dom);
        }
        localPosFromDOM() {
          return 0;
        }
        domBoundsAround() {
          return null;
        }
        coordsAt(e) {
          return this.dom.getBoundingClientRect();
        }
        get overrideDOMText() {
          return fe.empty;
        }
        get isHidden() {
          return !0;
        }
        constructor(e) {
          super(), (this.side = e);
        }
      }),
      h(_r26, "WidgetBufferView"),
      _r26);
  Rt.prototype.children = Dn.prototype.children = Fn.prototype.children = Pa;
  function sD(r, e) {
    var t = r.dom,
      i = r.children,
      n = 0;
    for (var s = 0; n < i.length; n++) {
      var o = i[n],
        l = s + o.length;
      if (!(l == s && o.getSide() <= 0)) {
        if (e > s && e < l && o.dom.parentNode == t) return o.domAtPos(e - s);
        if (e <= s) break;
        s = l;
      }
    }
    for (var s1 = n; s1 > 0; s1--) {
      var o1 = i[s1 - 1];
      if (o1.dom.parentNode == t) return o1.domAtPos(o1.length);
    }
    for (var s2 = n; s2 < i.length; s2++) {
      var o2 = i[s2];
      if (o2.dom.parentNode == t) return o2.domAtPos(0);
    }
    return new ze(t, 0);
  }
  h(sD, "inlineDOMAtPos");
  function oD(r, e, t) {
    var i,
      n = r.children;
    t > 0 && e instanceof ui && n.length && (i = n[n.length - 1]) instanceof ui && i.mark.eq(e.mark) ? oD(i, e.children[0], t - 1) : (n.push(e), e.setParent(r)), (r.length += e.length);
  }
  h(oD, "joinInlineInto");
  function lD(r, e, t) {
    var i = null,
      n = -1,
      s = null,
      o = -1;
    function l(a, c) {
      for (var f = 0, d = 0; f < a.children.length && d <= c; f++) {
        var p = a.children[f],
          m = d + p.length;
        m >= c && (p.children.length ? l(p, c - d) : (!s || (s.isHidden && t > 0)) && (m > c || (d == m && p.getSide() > 0)) ? ((s = p), (o = c - d)) : (d < c || (d == m && p.getSide() < 0 && !p.isHidden)) && ((i = p), (n = c - d))), (d = m);
      }
    }
    h(l, "scan"), l(r, e);
    var u = (t < 0 ? i : s) || i || s;
    return u ? u.coordsAt(Math.max(0, u == i ? n : o), t) : sx(r);
  }
  h(lD, "coordsInChildren");
  function sx(r) {
    var e = r.dom.lastChild;
    if (!e) return r.dom.getBoundingClientRect();
    var t = gn(e);
    return t[t.length - 1] || null;
  }
  h(sx, "fallbackRect");
  function la(r, e) {
    for (var t in r) t == "class" && e.class ? (e.class += " " + r.class) : t == "style" && e.style ? (e.style += ";" + r.style) : (e[t] = r[t]);
    return e;
  }
  h(la, "combineAttrs");
  var Fg = Object.create(null);
  function Ia(r, e, t) {
    if (r == e) return !0;
    r || (r = Fg), e || (e = Fg);
    var i = Object.keys(r),
      n = Object.keys(e);
    if (i.length - (t && i.indexOf(t) > -1 ? 1 : 0) != n.length - (t && n.indexOf(t) > -1 ? 1 : 0)) return !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        if (s != t && (n.indexOf(s) == -1 || r[s] !== e[s])) return !1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return !0;
  }
  h(Ia, "attrsEq");
  function ua(r, e, t) {
    var i = !1;
    if (e) for (var n in e) (t && n in t) || ((i = !0), n == "style" ? (r.style.cssText = "") : r.removeAttribute(n));
    if (t) for (var n1 in t) (e && e[n1] == t[n1]) || ((i = !0), n1 == "style" ? (r.style.cssText = t[n1]) : r.setAttribute(n1, t[n1]));
    return i;
  }
  h(ua, "updateAttrs");
  function ox(r) {
    var e = Object.create(null);
    for (var t = 0; t < r.attributes.length; t++) {
      var i = r.attributes[t];
      e[i.name] = i.value;
    }
    return e;
  }
  h(ox, "getAttrs");
  var Re =
      ((_r27 = class r extends Fe {
        merge(e, t, i, n, s, o) {
          if (i) {
            if (!(i instanceof r)) return !1;
            this.dom || i.transferDOM(this);
          }
          return n && this.setDeco(i ? i.attrs : null), iD(this, e, t, i ? i.children.slice() : [], s, o), !0;
        }
        split(e) {
          var t = new r();
          if (((t.breakAfter = this.breakAfter), this.length == 0)) return t;
          var _this_childPos = this.childPos(e),
            i = _this_childPos.i,
            n = _this_childPos.off;
          n && (t.append(this.children[i].split(n), 0), this.children[i].merge(n, this.children[i].length, null, !1, 0, 0), i++);
          for (var s = i; s < this.children.length; s++) t.append(this.children[s], 0);
          for (; i > 0 && this.children[i - 1].length == 0; ) this.children[--i].destroy();
          return (this.children.length = i), this.markDirty(), (this.length = e), t;
        }
        transferDOM(e) {
          this.dom && (this.markDirty(), e.setDOM(this.dom), (e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs), (this.prevAttrs = void 0), (this.dom = null));
        }
        setDeco(e) {
          Ia(this.attrs, e) || (this.dom && ((this.prevAttrs = this.attrs), this.markDirty()), (this.attrs = e));
        }
        append(e, t) {
          oD(this, e, t);
        }
        addLineDeco(e) {
          var t = e.spec.attributes,
            i = e.spec.class;
          t && (this.attrs = la(t, this.attrs || {})), i && (this.attrs = la({ class: i }, this.attrs || {}));
        }
        domAtPos(e) {
          return sD(this, e);
        }
        reuseDOM(e) {
          e.nodeName == "DIV" && (this.setDOM(e), (this.flags |= 6));
        }
        sync(e, t) {
          var i;
          this.dom ? this.flags & 4 && (Xg(this.dom), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)) : (this.setDOM(document.createElement("div")), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)),
            this.prevAttrs !== void 0 && (ua(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), (this.prevAttrs = void 0)),
            super.sync(e, t);
          var n = this.dom.lastChild;
          for (; n && Fe.get(n) instanceof ui; ) n = n.lastChild;
          if (!n || !this.length || (n.nodeName != "BR" && ((i = Fe.get(n)) === null || i === void 0 ? void 0 : i.isEditable) == !1 && (!W.ios || !this.children.some((s) => s instanceof Rt)))) {
            var s = document.createElement("BR");
            (s.cmIgnore = !0), this.dom.appendChild(s);
          }
        }
        measureTextSize() {
          if (this.children.length == 0 || this.length > 20) return null;
          var e = 0,
            t;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (!(i instanceof Rt) || /[^ -~]/.test(i.text)) return null;
              var n = gn(i.dom);
              if (n.length != 1) return null;
              (e += n[0].width), (t = n[0].height);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return e ? { lineHeight: this.dom.getBoundingClientRect().height, charWidth: e / this.length, textHeight: t } : null;
        }
        coordsAt(e, t) {
          var i = lD(this, e, t);
          if (!this.children.length && i && this.parent) {
            var _this_parent_view_viewState = this.parent.view.viewState,
              n = _this_parent_view_viewState.heightOracle,
              s = i.bottom - i.top;
            if (Math.abs(s - n.lineHeight) < 2 && n.textHeight < s) {
              var o = (s - n.textHeight) / 2;
              return { top: i.top + o, bottom: i.bottom - o, left: i.left, right: i.left };
            }
          }
          return i;
        }
        become(e) {
          return !1;
        }
        covers() {
          return !0;
        }
        static find(e, t) {
          for (var i = 0, n = 0; i < e.children.length; i++) {
            var s = e.children[i],
              o = n + s.length;
            if (o >= t) {
              if (s instanceof r) return s;
              if (o > t) break;
            }
            n = o + s.breakAfter;
          }
          return null;
        }
        constructor() {
          super(...arguments), (this.children = []), (this.length = 0), (this.prevAttrs = void 0), (this.attrs = null), (this.breakAfter = 0);
        }
      }),
      h(_r27, "LineView"),
      _r27),
    Fr =
      ((_r28 = class r extends Fe {
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
        }
        domAtPos(e) {
          return e == 0 ? ze.before(this.dom) : ze.after(this.dom, e == this.length);
        }
        split(e) {
          var t = this.length - e;
          this.length = e;
          var i = new r(this.widget, t, this.deco);
          return (i.breakAfter = this.breakAfter), i;
        }
        get children() {
          return Pa;
        }
        sync(e) {
          (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
        }
        get overrideDOMText() {
          return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : fe.empty;
        }
        domBoundsAround() {
          return null;
        }
        become(e) {
          return e instanceof r && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), (this.length = e.length), (this.deco = e.deco), (this.breakAfter = e.breakAfter), !0) : !1;
        }
        ignoreMutation() {
          return !0;
        }
        ignoreEvent(e) {
          return this.widget.ignoreEvent(e);
        }
        get isEditable() {
          return !1;
        }
        get isWidget() {
          return !0;
        }
        coordsAt(e, t) {
          return this.widget.coordsAt(this.dom, e, t);
        }
        destroy() {
          super.destroy(), this.dom && this.widget.destroy(this.dom);
        }
        covers(e) {
          var _this_deco = this.deco,
            t = _this_deco.startSide,
            i = _this_deco.endSide;
          return t == i ? !1 : e < 0 ? t < 0 : i > 0;
        }
        constructor(e, t, i) {
          super(), (this.widget = e), (this.length = t), (this.deco = i), (this.breakAfter = 0), (this.prevWidget = null);
        }
      }),
      h(_r28, "BlockWidgetView"),
      _r28),
    ai =
      ((_class36 = class _class {
        eq(e) {
          return !1;
        }
        updateDOM(e, t) {
          return !1;
        }
        compare(e) {
          return this == e || (this.constructor == e.constructor && this.eq(e));
        }
        get estimatedHeight() {
          return -1;
        }
        get lineBreaks() {
          return 0;
        }
        ignoreEvent(e) {
          return !0;
        }
        coordsAt(e, t, i) {
          return null;
        }
        get isHidden() {
          return !1;
        }
        get editable() {
          return !1;
        }
        destroy(e) {}
      }),
      h(_class36, "WidgetType"),
      _class36),
    He = (function (r) {
      return (r[(r.Text = 0)] = "Text"), (r[(r.WidgetBefore = 1)] = "WidgetBefore"), (r[(r.WidgetAfter = 2)] = "WidgetAfter"), (r[(r.WidgetRange = 3)] = "WidgetRange"), r;
    })(He || (He = {})),
    pe =
      ((_class37 = class _class extends Gt {
        get heightRelevant() {
          return !1;
        }
        static mark(e) {
          return new bn(e);
        }
        static widget(e) {
          var t = Math.max(-1e4, Math.min(1e4, e.side || 0)),
            i = !!e.block;
          return (t += i && !e.inlineOrder ? (t > 0 ? 3e8 : -4e8) : t > 0 ? 1e8 : -1e8), new hi(e, t, t, i, e.widget || null, !1);
        }
        static replace(e) {
          var t = !!e.block,
            i,
            n;
          if (e.isBlockGap) (i = -5e8), (n = 4e8);
          else {
            var _uD = uD(e, t),
              s = _uD.start,
              o = _uD.end;
            (i = (s ? (t ? -3e8 : -1) : 5e8) - 1), (n = (o ? (t ? 2e8 : 1) : -6e8) + 1);
          }
          return new hi(e, i, n, t, e.widget || null, !0);
        }
        static line(e) {
          return new yn(e);
        }
        static set(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return De.of(e, t);
        }
        hasHeight() {
          return this.widget ? this.widget.estimatedHeight > -1 : !1;
        }
        constructor(e, t, i, n) {
          super(), (this.startSide = e), (this.endSide = t), (this.widget = i), (this.spec = n);
        }
      }),
      h(_class37, "Decoration"),
      _class37);
  pe.none = De.empty;
  var bn =
    ((_r29 = class r extends pe {
      eq(e) {
        var t, i;
        return this == e || (e instanceof r && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((i = e.attrs) === null || i === void 0 ? void 0 : i.class)) && Ia(this.attrs, e.attrs, "class"));
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (e >= t) throw new RangeError("Mark decorations may not be empty");
        return super.range(e, t);
      }
      constructor(e) {
        var _uD = uD(e),
          t = _uD.start,
          i = _uD.end;
        super(t ? -1 : 5e8, i ? 1 : -6e8, null, e), (this.tagName = e.tagName || "span"), (this.class = e.class || ""), (this.attrs = e.attributes || null);
      }
    }),
    h(_r29, "MarkDecoration"),
    _r29);
  bn.prototype.point = !1;
  var yn =
    ((_r30 = class r extends pe {
      eq(e) {
        return e instanceof r && this.spec.class == e.spec.class && Ia(this.spec.attributes, e.spec.attributes);
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (t != e) throw new RangeError("Line decoration ranges must be zero-length");
        return super.range(e, t);
      }
      constructor(e) {
        super(-2e8, -2e8, null, e);
      }
    }),
    h(_r30, "LineDecoration"),
    _r30);
  yn.prototype.mapMode = Ve.TrackBefore;
  yn.prototype.point = !0;
  var hi =
    ((_r31 = class r extends pe {
      get type() {
        return this.startSide != this.endSide ? He.WidgetRange : this.startSide <= 0 ? He.WidgetBefore : He.WidgetAfter;
      }
      get heightRelevant() {
        return this.block || (!!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0));
      }
      eq(e) {
        return e instanceof r && lx(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (this.isReplace && (e > t || (e == t && this.startSide > 0 && this.endSide <= 0))) throw new RangeError("Invalid range for replacement decoration");
        if (!this.isReplace && t != e) throw new RangeError("Widget decorations can only have zero-length ranges");
        return super.range(e, t);
      }
      constructor(e, t, i, n, s, o) {
        super(t, i, s, e), (this.block = n), (this.isReplace = o), (this.mapMode = n ? (t <= 0 ? Ve.TrackBefore : Ve.TrackAfter) : Ve.TrackDel);
      }
    }),
    h(_r31, "PointDecoration"),
    _r31);
  hi.prototype.point = !0;
  function uD(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    var t = r.inclusiveStart,
      i = r.inclusiveEnd;
    return t == null && (t = r.inclusive), i == null && (i = r.inclusive), { start: t !== null && t !== void 0 ? t : e, end: i !== null && i !== void 0 ? i : e };
  }
  h(uD, "getInclusive");
  function lx(r, e) {
    return r == e || !!(r && e && r.compare(e));
  }
  h(lx, "widgetsEq");
  function aa(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    var n = t.length - 1;
    n >= 0 && t[n] + i >= r ? (t[n] = Math.max(t[n], e)) : t.push(r, e);
  }
  h(aa, "addRange");
  var cn =
    ((_r32 = class r {
      posCovered() {
        if (this.content.length == 0) return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
        var e = this.content[this.content.length - 1];
        return !(e.breakAfter || (e instanceof Fr && e.deco.endSide < 0));
      }
      getLine() {
        return this.curLine || (this.content.push((this.curLine = new Re())), (this.atCursorPos = !0)), this.curLine;
      }
      flushBuffer() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.bufferMarks;
        this.pendingBuffer && (this.curLine.append(zs(new Fn(-1), e), e.length), (this.pendingBuffer = 0));
      }
      addBlockWidget(e) {
        this.flushBuffer(), (this.curLine = null), this.content.push(e);
      }
      finish(e) {
        this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : (this.pendingBuffer = 0), !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof Fr) && this.getLine();
      }
      buildText(e, t, i) {
        for (; e > 0; ) {
          if (this.textOff == this.text.length) {
            var _this_cursor_next = this.cursor.next(this.skip),
              s = _this_cursor_next.value,
              o = _this_cursor_next.lineBreak,
              l = _this_cursor_next.done;
            if (((this.skip = 0), l)) throw new Error("Ran out of text content when drawing inline views");
            if (o) {
              this.posCovered() || this.getLine(), this.content.length ? (this.content[this.content.length - 1].breakAfter = 1) : (this.breakAtStart = 1), this.flushBuffer(), (this.curLine = null), (this.atCursorPos = !0), e--;
              continue;
            } else (this.text = s), (this.textOff = 0);
          }
          var n = Math.min(this.text.length - this.textOff, e, 512);
          this.flushBuffer(t.slice(t.length - i)), this.getLine().append(zs(new Rt(this.text.slice(this.textOff, this.textOff + n)), t), i), (this.atCursorPos = !0), (this.textOff += n), (e -= n), (i = 0);
        }
      }
      span(e, t, i, n) {
        this.buildText(t - e, i, n), (this.pos = t), this.openStart < 0 && (this.openStart = n);
      }
      point(e, t, i, n, s, o) {
        if (this.disallowBlockEffectsFor[o] && i instanceof hi) {
          if (i.block) throw new RangeError("Block decorations may not be specified via plugins");
          if (t > this.doc.lineAt(this.pos).to) throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
        }
        var l = t - e;
        if (i instanceof hi)
          if (i.block) i.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new Fr(i.widget || ci.block, l, i));
          else {
            var u = Dn.create(i.widget || ci.inline, l, l ? 0 : i.startSide),
              a = this.atCursorPos && !u.isEditable && s <= n.length && (e < t || i.startSide > 0),
              c = !u.isEditable && (e < t || s > n.length || i.startSide <= 0),
              f = this.getLine();
            this.pendingBuffer == 2 && !a && !u.isEditable && (this.pendingBuffer = 0), this.flushBuffer(n), a && (f.append(zs(new Fn(1), n), s), (s = n.length + Math.max(0, s - n.length))), f.append(zs(u, n), s), (this.atCursorPos = c), (this.pendingBuffer = c ? (e < t || s > n.length ? 1 : 2) : 0), this.pendingBuffer && (this.bufferMarks = n.slice());
          }
        else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(i);
        l && (this.textOff + l <= this.text.length ? (this.textOff += l) : ((this.skip += l - (this.text.length - this.textOff)), (this.text = ""), (this.textOff = 0)), (this.pos = t)), this.openStart < 0 && (this.openStart = s);
      }
      static build(e, t, i, n, s) {
        var o = new r(e, t, i, s);
        return (o.openEnd = De.spans(n, t, i, o)), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
      }
      constructor(e, t, i, n) {
        (this.doc = e), (this.pos = t), (this.end = i), (this.disallowBlockEffectsFor = n), (this.content = []), (this.curLine = null), (this.breakAtStart = 0), (this.pendingBuffer = 0), (this.bufferMarks = []), (this.atCursorPos = !0), (this.openStart = -1), (this.openEnd = -1), (this.text = ""), (this.textOff = 0), (this.cursor = e.iter()), (this.skip = t);
      }
    }),
    h(_r32, "ContentBuilder"),
    _r32);
  function zs(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        r = new ui(t, [r], r.length);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return r;
  }
  h(zs, "wrapMarks");
  var ci =
    ((_class38 = class _class extends ai {
      eq(e) {
        return e.tag == this.tag;
      }
      toDOM() {
        return document.createElement(this.tag);
      }
      updateDOM(e) {
        return e.nodeName.toLowerCase() == this.tag;
      }
      get isHidden() {
        return !0;
      }
      constructor(e) {
        super(), (this.tag = e);
      }
    }),
    h(_class38, "NullWidget"),
    _class38);
  ci.inline = new ci("span");
  ci.block = new ci("div");
  var Be = (function (r) {
      return (r[(r.LTR = 0)] = "LTR"), (r[(r.RTL = 1)] = "RTL"), r;
    })(Be || (Be = {})),
    _i = Be.LTR,
    $a = Be.RTL;
  function aD(r) {
    var e = [];
    for (var t = 0; t < r.length; t++) e.push(1 << +r[t]);
    return e;
  }
  h(aD, "dec");
  var ux = aD("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),
    ax = aD("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),
    ha = Object.create(null),
    Ut = [];
  for (var _i1 = 0, _iter = ["()", "[]", "{}"]; _i1 < _iter.length; _i1++) {
    var r1 = _iter[_i1];
    var e = r1.charCodeAt(0),
      t = r1.charCodeAt(1);
    (ha[e] = t), (ha[t] = -e);
  }
  function hD(r) {
    return r <= 247 ? ux[r] : 1424 <= r && r <= 1524 ? 2 : 1536 <= r && r <= 1785 ? ax[r - 1536] : 1774 <= r && r <= 2220 ? 4 : 8192 <= r && r <= 8204 ? 256 : 64336 <= r && r <= 65023 ? 4 : 1;
  }
  h(hD, "charType");
  var hx = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/,
    Ot =
      ((_class39 = class _class {
        get dir() {
          return this.level % 2 ? $a : _i;
        }
        side(e, t) {
          return (this.dir == t) == e ? this.to : this.from;
        }
        forward(e, t) {
          return e == (this.dir == t);
        }
        static find(e, t, i, n) {
          var s = -1;
          for (var o = 0; o < e.length; o++) {
            var l = e[o];
            if (l.from <= t && l.to >= t) {
              if (l.level == i) return o;
              (s < 0 || (n != 0 ? (n < 0 ? l.from < t : l.to > t) : e[s].level > l.level)) && (s = o);
            }
          }
          if (s < 0) throw new RangeError("Index out of range");
          return s;
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.level = i);
        }
      }),
      h(_class39, "BidiSpan"),
      _class39);
  function cD(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) {
      var i = r[t],
        n = e[t];
      if (i.from != n.from || i.to != n.to || i.direction != n.direction || !cD(i.inner, n.inner)) return !1;
    }
    return !0;
  }
  h(cD, "isolatesEq");
  var ge = [];
  function cx(r, e, t, i, n) {
    for (var s = 0; s <= i.length; s++) {
      var o = s ? i[s - 1].to : e,
        l = s < i.length ? i[s].from : t,
        u = s ? 256 : n;
      for (var a = o, c = u, f = u; a < l; a++) {
        var d = hD(r.charCodeAt(a));
        d == 512 ? (d = c) : d == 8 && f == 4 && (d = 16), (ge[a] = d == 4 ? 2 : d), d & 7 && (f = d), (c = d);
      }
      for (var a1 = o, c1 = u, f1 = u; a1 < l; a1++) {
        var d1 = ge[a1];
        if (d1 == 128) a1 < l - 1 && c1 == ge[a1 + 1] && c1 & 24 ? (d1 = ge[a1] = c1) : (ge[a1] = 256);
        else if (d1 == 64) {
          var p = a1 + 1;
          for (; p < l && ge[p] == 64; ) p++;
          var m = (a1 && c1 == 8) || (p < t && ge[p] == 8) ? (f1 == 1 ? 1 : 8) : 256;
          for (var F = a1; F < p; F++) ge[F] = m;
          a1 = p - 1;
        } else d1 == 8 && f1 == 1 && (ge[a1] = 1);
        (c1 = d1), d1 & 7 && (f1 = d1);
      }
    }
  }
  h(cx, "computeCharTypes");
  function fx(r, e, t, i, n) {
    var s = n == 1 ? 2 : 1;
    for (var o = 0, l = 0, u = 0; o <= i.length; o++) {
      var a = o ? i[o - 1].to : e,
        c = o < i.length ? i[o].from : t;
      for (var f = a, d = void 0, p = void 0, m = void 0; f < c; f++)
        if ((p = ha[(d = r.charCodeAt(f))]))
          if (p < 0) {
            for (var F = l - 3; F >= 0; F -= 3)
              if (Ut[F + 1] == -p) {
                var g = Ut[F + 2],
                  D = g & 2 ? n : g & 4 ? (g & 1 ? s : n) : 0;
                D && (ge[f] = ge[Ut[F]] = D), (l = F);
                break;
              }
          } else {
            if (Ut.length == 189) break;
            (Ut[l++] = f), (Ut[l++] = d), (Ut[l++] = u);
          }
        else if ((m = ge[f]) == 2 || m == 1) {
          var F1 = m == n;
          u = F1 ? 0 : 1;
          for (var g1 = l - 3; g1 >= 0; g1 -= 3) {
            var D1 = Ut[g1 + 2];
            if (D1 & 2) break;
            if (F1) Ut[g1 + 2] |= 2;
            else {
              if (D1 & 4) break;
              Ut[g1 + 2] |= 4;
            }
          }
        }
    }
  }
  h(fx, "processBracketPairs");
  function dx(r, e, t, i) {
    for (var n = 0, s = i; n <= t.length; n++) {
      var o = n ? t[n - 1].to : r,
        l = n < t.length ? t[n].from : e;
      for (var u = o; u < l; ) {
        var a = ge[u];
        if (a == 256) {
          var c = u + 1;
          for (;;)
            if (c == l) {
              if (n == t.length) break;
              (c = t[n++].to), (l = n < t.length ? t[n].from : e);
            } else if (ge[c] == 256) c++;
            else break;
          var f = s == 1,
            d = (c < e ? ge[c] : i) == 1,
            p = f == d ? (f ? 1 : 2) : i;
          for (var m = c, F = n, g = F ? t[F - 1].to : r; m > u; ) m == g && ((m = t[--F].from), (g = F ? t[F - 1].to : r)), (ge[--m] = p);
          u = c;
        } else (s = a), u++;
      }
    }
  }
  h(dx, "processNeutrals");
  function ca(r, e, t, i, n, s, o) {
    var l = i % 2 ? 2 : 1;
    if (i % 2 == n % 2)
      for (var u = e, a = 0; u < t; ) {
        var c = !0,
          f = !1;
        if (a == s.length || u < s[a].from) {
          var F = ge[u];
          F != l && ((c = !1), (f = F == 16));
        }
        var d = !c && l == 1 ? [] : null,
          p = c ? i : i + 1,
          m = u;
        e: for (;;)
          if (a < s.length && m == s[a].from) {
            if (f) break e;
            var F1 = s[a];
            if (!c)
              for (var g = F1.to, D = a + 1; ; ) {
                if (g == t) break e;
                if (D < s.length && s[D].from == g) g = s[D++].to;
                else {
                  if (ge[g] == l) break e;
                  break;
                }
              }
            if ((a++, d)) d.push(F1);
            else {
              F1.from > u && o.push(new Ot(u, F1.from, p));
              var g1 = (F1.direction == _i) != !(p % 2);
              fa(r, g1 ? i + 1 : i, n, F1.inner, F1.from, F1.to, o), (u = F1.to);
            }
            m = F1.to;
          } else {
            if (m == t || (c ? ge[m] != l : ge[m] == l)) break;
            m++;
          }
        d ? ca(r, u, m, i + 1, n, d, o) : u < m && o.push(new Ot(u, m, p)), (u = m);
      }
    else
      for (var u1 = t, a1 = s.length; u1 > e; ) {
        var c1 = !0,
          f1 = !1;
        if (!a1 || u1 > s[a1 - 1].to) {
          var F2 = ge[u1 - 1];
          F2 != l && ((c1 = !1), (f1 = F2 == 16));
        }
        var d1 = !c1 && l == 1 ? [] : null,
          p1 = c1 ? i : i + 1,
          m1 = u1;
        e: for (;;)
          if (a1 && m1 == s[a1 - 1].to) {
            if (f1) break e;
            var F3 = s[--a1];
            if (!c1)
              for (var g2 = F3.from, D1 = a1; ; ) {
                if (g2 == e) break e;
                if (D1 && s[D1 - 1].to == g2) g2 = s[--D1].from;
                else {
                  if (ge[g2 - 1] == l) break e;
                  break;
                }
              }
            if (d1) d1.push(F3);
            else {
              F3.to < u1 && o.push(new Ot(F3.to, u1, p1));
              var g3 = (F3.direction == _i) != !(p1 % 2);
              fa(r, g3 ? i + 1 : i, n, F3.inner, F3.from, F3.to, o), (u1 = F3.from);
            }
            m1 = F3.from;
          } else {
            if (m1 == e || (c1 ? ge[m1 - 1] != l : ge[m1 - 1] == l)) break;
            m1--;
          }
        d1 ? ca(r, m1, u1, i + 1, n, d1, o) : m1 < u1 && o.push(new Ot(m1, u1, p1)), (u1 = m1);
      }
  }
  h(ca, "emitSpans");
  function fa(r, e, t, i, n, s, o) {
    var l = e % 2 ? 2 : 1;
    cx(r, n, s, i, l), fx(r, n, s, i, l), dx(n, s, i, l), ca(r, n, s, e, t, i, o);
  }
  h(fa, "computeSectionOrder");
  function px(r, e, t) {
    if (!r) return [new Ot(0, 0, e == $a ? 1 : 0)];
    if (e == _i && !t.length && !hx.test(r)) return fD(r.length);
    if (t.length) for (; r.length > ge.length; ) ge[ge.length] = 256;
    var i = [],
      n = e == _i ? 0 : 1;
    return fa(r, n, n, t, 0, r.length, i), i;
  }
  h(px, "computeOrder");
  function fD(r) {
    return [new Ot(0, r, 0)];
  }
  h(fD, "trivialOrder");
  var dD = "";
  function mx(r, e, t, i, n) {
    var s;
    var o = i.head - r.from,
      l = Ot.find(e, o, (s = i.bidiLevel) !== null && s !== void 0 ? s : -1, i.assoc),
      u = e[l],
      a = u.side(n, t);
    if (o == a) {
      var d = (l += n ? 1 : -1);
      if (d < 0 || d >= e.length) return null;
      (u = e[(l = d)]), (o = u.side(!n, t)), (a = u.side(n, t));
    }
    var c = ht(r.text, o, u.forward(n, t));
    (c < u.from || c > u.to) && (c = a), (dD = r.text.slice(Math.min(o, c), Math.max(o, c)));
    var f = l == (n ? e.length - 1 : 0) ? null : e[l + (n ? 1 : -1)];
    return f && c == a && f.level + (n ? 0 : 1) < u.level ? Z.cursor(f.side(!n, t) + r.from, f.forward(n, t) ? 1 : -1, f.level) : Z.cursor(c + r.from, u.forward(n, t) ? -1 : 1, u.level);
  }
  h(mx, "moveVisually");
  function gx(r, e, t) {
    for (var i = e; i < t; i++) {
      var n = hD(r.charCodeAt(i));
      if (n == 1) return _i;
      if (n == 2 || n == 4) return $a;
    }
    return _i;
  }
  h(gx, "autoDirection");
  var pD = H.define(),
    mD = H.define(),
    gD = H.define(),
    DD = H.define(),
    da = H.define(),
    FD = H.define(),
    bD = H.define(),
    yD = H.define({ combine: (r) => r.some((e) => e) }),
    ED = H.define({ combine: (r) => r.some((e) => e) }),
    CD = H.define(),
    fn =
      ((_r33 = class r {
        map(e) {
          return e.empty ? this : new r(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
        }
        clip(e) {
          return this.range.to <= e.doc.length ? this : new r(Z.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
        }
        constructor(e, ref, ref1, ref2, ref3, ref4) {
          var t = ref === void 0 ? "nearest" : ref,
            i = ref1 === void 0 ? "nearest" : ref1,
            n = ref2 === void 0 ? 5 : ref2,
            s = ref3 === void 0 ? 5 : ref3,
            o = ref4 === void 0 ? !1 : ref4;
          (this.range = e), (this.y = t), (this.x = i), (this.yMargin = n), (this.xMargin = s), (this.isSnapshot = o);
        }
      }),
      h(_r33, "ScrollTarget"),
      _r33),
    Hs = de.define({ map: (r, e) => r.map(e) });
  function Xe(r, e, t) {
    var i = r.facet(DD);
    i.length ? i[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
  }
  h(Xe, "logException");
  var vo = H.define({ combine: (r) => (r.length ? r[0] : !0) }),
    Dx = 0,
    sn = H.define(),
    je =
      ((_r34 = class r {
        static define(e, t) {
          var _ref = t || {},
            i = _ref.eventHandlers,
            n = _ref.eventObservers,
            s = _ref.provide,
            o = _ref.decorations;
          return new r(Dx++, e, i, n, (l) => {
            var u = [sn.of(l)];
            return (
              o &&
                u.push(
                  En.of((a) => {
                    var c = a.plugin(l);
                    return c ? o(c) : pe.none;
                  }),
                ),
              s && u.push(s(l)),
              u
            );
          });
        }
        static fromClass(e, t) {
          return r.define((i) => new e(i), t);
        }
        constructor(e, t, i, n, s) {
          (this.id = e), (this.create = t), (this.domEventHandlers = i), (this.domEventObservers = n), (this.extension = s(this));
        }
      }),
      h(_r34, "ViewPlugin"),
      _r34),
    dn =
      ((_class40 = class _class {
        update(e) {
          if (this.value) {
            if (this.mustUpdate) {
              var _$t = this.mustUpdate;
              if (((this.mustUpdate = null), this.value.update))
                try {
                  this.value.update(_$t);
                } catch (i) {
                  if ((Xe(_$t.state, i, "CodeMirror plugin crashed"), this.value.destroy))
                    try {
                      this.value.destroy();
                    } catch (e) {}
                  this.deactivate();
                }
            }
          } else if (this.spec)
            try {
              this.value = this.spec.create(e);
            } catch (t) {
              Xe(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
            }
          return this;
        }
        destroy(e) {
          var t;
          if (!((t = this.value) === null || t === void 0) && t.destroy)
            try {
              this.value.destroy();
            } catch (i) {
              Xe(e.state, i, "CodeMirror plugin crashed");
            }
        }
        deactivate() {
          this.spec = this.value = null;
        }
        constructor(e) {
          (this.spec = e), (this.mustUpdate = null), (this.value = null);
        }
      }),
      h(_class40, "PluginInstance"),
      _class40),
    BD = H.define(),
    qa = H.define(),
    En = H.define(),
    vD = H.define(),
    Va = H.define(),
    xD = H.define();
  function bg(r, e) {
    var t = r.state.facet(xD);
    if (!t.length) return t;
    var i = t.map((s) => (s instanceof Function ? s(r) : s)),
      n = [];
    return (
      De.spans(i, e.from, e.to, {
        point() {},
        span(s, o, l, u) {
          var a = s - e.from,
            c = o - e.from,
            f = n;
          for (var d = l.length - 1; d >= 0; d--, u--) {
            var p = l[d].spec.bidiIsolate,
              m = void 0;
            if ((p == null && (p = gx(e.text, a, c)), u > 0 && f.length && (m = f[f.length - 1]).to == a && m.direction == p)) (m.to = c), (f = m.inner);
            else {
              var F = { from: a, to: c, direction: p, inner: [] };
              f.push(F), (f = F.inner);
            }
          }
        },
      }),
      n
    );
  }
  h(bg, "getIsolatedRanges");
  var AD = H.define();
  function kD(r) {
    var e = 0,
      t = 0,
      i = 0,
      n = 0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.state.facet(AD)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var o = s(r);
        o && (o.left != null && (e = Math.max(e, o.left)), o.right != null && (t = Math.max(t, o.right)), o.top != null && (i = Math.max(i, o.top)), o.bottom != null && (n = Math.max(n, o.bottom)));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return { left: e, right: t, top: i, bottom: n };
  }
  h(kD, "getScrollMargins");
  var on = H.define(),
    Tt =
      ((_r35 = class r {
        join(e) {
          return new r(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
        }
        addToSet(e) {
          var t = e.length,
            i = this;
          for (; t > 0; t--) {
            var n = e[t - 1];
            if (!(n.fromA > i.toA)) {
              if (n.toA < i.fromA) break;
              (i = i.join(n)), e.splice(t - 1, 1);
            }
          }
          return e.splice(t, 0, i), e;
        }
        static extendWithRanges(e, t) {
          if (t.length == 0) return e;
          var i = [];
          for (var n = 0, s = 0, o = 0, l = 0; ; n++) {
            var u = n == e.length ? null : e[n],
              a = o - l,
              c = u ? u.fromB : 1e9;
            for (; s < t.length && t[s] < c; ) {
              var f = t[s],
                d = t[s + 1],
                p = Math.max(l, f),
                m = Math.min(c, d);
              if ((p <= m && new r(p + a, m + a, p, m).addToSet(i), d > c)) break;
              s += 2;
            }
            if (!u) return i;
            new r(u.fromA, u.toA, u.fromB, u.toB).addToSet(i), (o = u.toA), (l = u.toB);
          }
        }
        constructor(e, t, i, n) {
          (this.fromA = e), (this.toA = t), (this.fromB = i), (this.toB = n);
        }
      }),
      h(_r35, "ChangedRange"),
      _r35),
    ao =
      ((_r36 = class r {
        static create(e, t, i) {
          return new r(e, t, i);
        }
        get viewportChanged() {
          return (this.flags & 4) > 0;
        }
        get heightChanged() {
          return (this.flags & 2) > 0;
        }
        get geometryChanged() {
          return this.docChanged || (this.flags & 10) > 0;
        }
        get focusChanged() {
          return (this.flags & 1) > 0;
        }
        get docChanged() {
          return !this.changes.empty;
        }
        get selectionSet() {
          return this.transactions.some((e) => e.selection);
        }
        get empty() {
          return this.flags == 0 && this.transactions.length == 0;
        }
        constructor(e, t, i) {
          (this.view = e), (this.state = t), (this.transactions = i), (this.flags = 0), (this.startState = e.state), (this.changes = We.empty(this.startState.doc.length));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              this.changes = this.changes.compose(s.changes);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var n = [];
          this.changes.iterChangedRanges((s, o, l, u) => n.push(new Tt(s, o, l, u))), (this.changedRanges = n);
        }
      }),
      h(_r36, "ViewUpdate"),
      _r36),
    ho =
      ((_class41 = class _class extends Fe {
        get length() {
          return this.view.state.doc.length;
        }
        update(e) {
          var t;
          var i = e.changedRanges;
          this.minWidth > 0 &&
            i.length &&
            (i.every((param) => {
              var a = param.fromA,
                c = param.toA;
              return c < this.minWidthFrom || a > this.minWidthTo;
            })
              ? ((this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1)), (this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)))
              : (this.minWidth = this.minWidthFrom = this.minWidthTo = 0));
          var n = -1;
          this.view.inputState.composing >= 0 && (!((t = this.domChanged) === null || t === void 0) && t.newSel ? (n = this.domChanged.newSel.head) : !vx(e.changes, this.hasComposition) && !e.selectionSet && (n = e.state.selection.main.head));
          var s = n > -1 ? bx(this.view, e.changes, n) : null;
          if (((this.domChanged = null), this.hasComposition)) {
            this.markedForComposition.clear();
            var _this_hasComposition = this.hasComposition,
              a = _this_hasComposition.from,
              c = _this_hasComposition.to;
            i = new Tt(a, c, e.changes.mapPos(a, -1), e.changes.mapPos(c, 1)).addToSet(i.slice());
          }
          (this.hasComposition = s ? { from: s.range.fromB, to: s.range.toB } : null), (W.ie || W.chrome) && !s && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
          var o = this.decorations,
            l = this.updateDeco(),
            u = Cx(o, l, e.changes);
          return (i = Tt.extendWithRanges(i, u)), !(this.flags & 7) && i.length == 0 ? !1 : (this.updateInner(i, e.startState.doc.length, s), e.transactions.length && (this.lastUpdate = Date.now()), !0);
        }
        updateInner(e, t, i) {
          (this.view.viewState.mustMeasureContent = !0), this.updateChildren(e, t, i);
          var _this_view = this.view,
            n = _this_view.observer;
          n.ignore(() => {
            (this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px"), (this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "");
            var o = W.chrome || W.ios ? { node: n.selectionRange.focusNode, written: !1 } : void 0;
            this.sync(this.view, o), (this.flags &= -8), o && (o.written || n.selectionRange.focusNode != o.node) && (this.forceSelection = !0), (this.dom.style.height = "");
          }),
            this.markedForComposition.forEach((o) => (o.flags &= -9));
          var s = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
            try {
              for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var o = _step.value;
                o instanceof Fr && o.widget instanceof co && s.push(o.dom);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          n.updateGaps(s);
        }
        updateChildren(e, t, i) {
          var n = i ? i.range.addToSet(e.slice()) : e,
            s = this.childCursor(t);
          for (var o = n.length - 1; ; o--) {
            var l = o >= 0 ? n[o] : null;
            if (!l) break;
            var u = l.fromA,
              a = l.toA,
              c = l.fromB,
              f = l.toB,
              d = void 0,
              p = void 0,
              m = void 0,
              F = void 0;
            var ref;
            if (i && i.range.fromB < f && i.range.toB > c) {
              var k = cn.build(this.view.state.doc, c, i.range.fromB, this.decorations, this.dynamicDecorationMap),
                C = cn.build(this.view.state.doc, i.range.toB, f, this.decorations, this.dynamicDecorationMap);
              (p = k.breakAtStart), (m = k.openStart), (F = C.openEnd);
              var L = this.compositionView(i);
              C.breakAtStart ? (L.breakAfter = 1) : C.content.length && L.merge(L.length, L.length, C.content[0], !1, C.openStart, 0) && ((L.breakAfter = C.content[0].breakAfter), C.content.shift()), k.content.length && L.merge(0, 0, k.content[k.content.length - 1], !0, 0, k.openEnd) && k.content.pop(), (d = k.content.concat(L).concat(C.content));
            } else (ref = cn.build(this.view.state.doc, c, f, this.decorations, this.dynamicDecorationMap)), (d = ref.content), (p = ref.breakAtStart), (m = ref.openStart), (F = ref.openEnd), ref;
            var _s_findPos = s.findPos(a, 1),
              g = _s_findPos.i,
              D = _s_findPos.off,
              _s_findPos1 = s.findPos(u, -1),
              b = _s_findPos1.i,
              B = _s_findPos1.off;
            tD(this, b, B, g, D, d, p, m, F);
          }
          i && this.fixCompositionDOM(i);
        }
        compositionView(e) {
          var t = new Rt(e.text.nodeValue);
          t.flags |= 8;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e.marks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _step.value,
                n = _step_value.deco;
              t = new ui(n, [t], t.length);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var i = new Re();
          return i.append(t, 0), i;
        }
        fixCompositionDOM(e) {
          var t = h((s, o) => {
              (o.flags |= 8 | (o.children.some((u) => u.flags & 7) ? 1 : 0)), this.markedForComposition.add(o);
              var l = Fe.get(s);
              l && l != o && (l.dom = null), o.setDOM(s);
            }, "fix"),
            i = this.childPos(e.range.fromB, 1),
            n = this.children[i.i];
          t(e.line, n);
          for (var s = e.marks.length - 1; s >= -1; s--) (i = n.childPos(i.off, 1)), (n = n.children[i.i]), t(s >= 0 ? e.marks[s].node : e.text, n);
        }
        updateSelection() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
            t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
          var i = this.view.root.activeElement,
            n = i == this.dom,
            s = !n && eo(this.dom, this.view.observer.selectionRange) && !(i && this.dom.contains(i));
          if (!(n || t || s)) return;
          var o = this.forceSelection;
          this.forceSelection = !1;
          var l = this.view.state.selection.main,
            u = this.moveToLine(this.domAtPos(l.anchor)),
            a = l.empty ? u : this.moveToLine(this.domAtPos(l.head));
          if (W.gecko && l.empty && !this.hasComposition && Fx(u)) {
            var f = document.createTextNode("");
            this.view.observer.ignore(() => u.node.insertBefore(f, u.node.childNodes[u.offset] || null)), (u = a = new ze(f, 0)), (o = !0);
          }
          var c = this.view.observer.selectionRange;
          (o || !c.focusNode || ((!hn(u.node, u.offset, c.anchorNode, c.anchorOffset) || !hn(a.node, a.offset, c.focusNode, c.focusOffset)) && !this.suppressWidgetCursorChange(c, l))) &&
            (this.view.observer.ignore(() => {
              W.android && W.chrome && this.dom.contains(c.focusNode) && Bx(c.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
              var f = oo(this.view.root);
              if (f)
                if (l.empty) {
                  if (W.gecko) {
                    var d = yx(u.node, u.offset);
                    if (d && d != 3) {
                      var p = (d == 1 ? Zg : eD)(u.node, u.offset);
                      p && (u = new ze(p.node, p.offset));
                    }
                  }
                  f.collapse(u.node, u.offset), l.bidiLevel != null && f.caretBidiLevel !== void 0 && (f.caretBidiLevel = l.bidiLevel);
                } else if (f.extend) {
                  f.collapse(u.node, u.offset);
                  try {
                    f.extend(a.node, a.offset);
                  } catch (e) {}
                } else {
                  var d1 = document.createRange();
                  var ref;
                  l.anchor > l.head && ((ref = [a, u]), (u = ref[0]), (a = ref[1]), ref), d1.setEnd(a.node, a.offset), d1.setStart(u.node, u.offset), f.removeAllRanges(), f.addRange(d1);
                }
              s && this.view.root.activeElement == this.dom && (this.dom.blur(), i && i.focus());
            }),
            this.view.observer.setSelectionRange(u, a)),
            (this.impreciseAnchor = u.precise ? null : new ze(c.anchorNode, c.anchorOffset)),
            (this.impreciseHead = a.precise ? null : new ze(c.focusNode, c.focusOffset));
        }
        suppressWidgetCursorChange(e, t) {
          return this.hasComposition && t.empty && hn(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == t.head;
        }
        enforceCursorAssoc() {
          if (this.hasComposition) return;
          var _this = this,
            e = _this.view,
            t = e.state.selection.main,
            i = oo(e.root),
            _e_observer_selectionRange = e.observer.selectionRange,
            n = _e_observer_selectionRange.anchorNode,
            s = _e_observer_selectionRange.anchorOffset;
          if (!i || !t.empty || !t.assoc || !i.modify) return;
          var o = Re.find(this, t.head);
          if (!o) return;
          var l = o.posAtStart;
          if (t.head == l || t.head == l + o.length) return;
          var u = this.coordsAt(t.head, -1),
            a = this.coordsAt(t.head, 1);
          if (!u || !a || u.bottom > a.top) return;
          var c = this.domAtPos(t.head + t.assoc);
          i.collapse(c.node, c.offset), i.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
          var f = e.observer.selectionRange;
          e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != t.from && i.collapse(n, s);
        }
        moveToLine(e) {
          var t = this.dom,
            i;
          if (e.node != t) return e;
          for (var n = e.offset; !i && n < t.childNodes.length; n++) {
            var s = Fe.get(t.childNodes[n]);
            s instanceof Re && (i = s.domAtPos(0));
          }
          for (var n1 = e.offset - 1; !i && n1 >= 0; n1--) {
            var s1 = Fe.get(t.childNodes[n1]);
            s1 instanceof Re && (i = s1.domAtPos(s1.length));
          }
          return i ? new ze(i.node, i.offset, !0) : e;
        }
        nearest(e) {
          for (var t = e; t; ) {
            var i = Fe.get(t);
            if (i && i.rootView == this) return i;
            t = t.parentNode;
          }
          return null;
        }
        posFromDOM(e, t) {
          var i = this.nearest(e);
          if (!i) throw new RangeError("Trying to find position for a DOM position outside of the document");
          return i.localPosFromDOM(e, t) + i.posAtStart;
        }
        domAtPos(e) {
          var _this_childCursor_findPos = this.childCursor().findPos(e, -1),
            t = _this_childCursor_findPos.i,
            i = _this_childCursor_findPos.off;
          for (; t < this.children.length - 1; ) {
            var n = this.children[t];
            if (i < n.length || n instanceof Re) break;
            t++, (i = 0);
          }
          return this.children[t].domAtPos(i);
        }
        coordsAt(e, t) {
          var i = null,
            n = 0;
          for (var s = this.length, o = this.children.length - 1; o >= 0; o--) {
            var l = this.children[o],
              u = s - l.breakAfter,
              a = u - l.length;
            if (u < e) break;
            a <= e && (a < e || l.covers(-1)) && (u > e || l.covers(1)) && (!i || (l instanceof Re && !(i instanceof Re && t >= 0))) && ((i = l), (n = a)), (s = a);
          }
          return i ? i.coordsAt(e - n, t) : null;
        }
        coordsForChar(e) {
          var _this_childPos = this.childPos(e, 1),
            t = _this_childPos.i,
            i = _this_childPos.off,
            n = this.children[t];
          if (!(n instanceof Re)) return null;
          for (; n.children.length; ) {
            var _n_childPos = n.childPos(i, 1),
              l = _n_childPos.i,
              u = _n_childPos.off;
            for (; ; l++) {
              if (l == n.children.length) return null;
              if ((n = n.children[l]).length) break;
            }
            i = u;
          }
          if (!(n instanceof Rt)) return null;
          var s = ht(n.text, i);
          if (s == i) return null;
          var o = Qi(n.dom, i, s).getClientRects();
          for (var l1 = 0; l1 < o.length; l1++) {
            var u1 = o[l1];
            if (l1 == o.length - 1 || (u1.top < u1.bottom && u1.left < u1.right)) return u1;
          }
          return null;
        }
        measureVisibleLineHeights(e) {
          var t = [],
            i = e.from,
            n = e.to,
            s = this.view.contentDOM.clientWidth,
            o = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1,
            l = -1,
            u = this.view.textDirection == Be.LTR;
          for (var a = 0, c = 0; c < this.children.length; c++) {
            var f = this.children[c],
              d = a + f.length;
            if (d > n) break;
            if (a >= i) {
              var p = f.dom.getBoundingClientRect();
              if ((t.push(p.height), o)) {
                var m = f.dom.lastChild,
                  F = m ? gn(m) : [];
                if (F.length) {
                  var g = F[F.length - 1],
                    D = u ? g.right - p.left : p.right - g.left;
                  D > l && ((l = D), (this.minWidth = s), (this.minWidthFrom = a), (this.minWidthTo = d));
                }
              }
            }
            a = d + f.breakAfter;
          }
          return t;
        }
        textDirectionAt(e) {
          var _this_childPos = this.childPos(e, 1),
            t = _this_childPos.i;
          return getComputedStyle(this.children[t].dom).direction == "rtl" ? Be.RTL : Be.LTR;
        }
        measureTextSize() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              if (s instanceof Re) {
                var o = s.measureTextSize();
                if (o) return o;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var e = document.createElement("div"),
            t,
            i,
            n;
          return (
            (e.className = "cm-line"),
            (e.style.width = "99999px"),
            (e.style.position = "absolute"),
            (e.textContent = "abc def ghi jkl mno pqr stu"),
            this.view.observer.ignore(() => {
              this.dom.appendChild(e);
              var s = gn(e.firstChild)[0];
              (t = e.getBoundingClientRect().height), (i = s ? s.width / 27 : 7), (n = s ? s.height : t), e.remove();
            }),
            { lineHeight: t, charWidth: i, textHeight: n }
          );
        }
        childCursor() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
          var t = this.children.length;
          return t && (e -= this.children[--t].length), new uo(this.children, e, t);
        }
        computeBlockGapDeco() {
          var e = [],
            t = this.view.viewState;
          for (var i = 0, n = 0; ; n++) {
            var s = n == t.viewports.length ? null : t.viewports[n],
              o = s ? s.from - 1 : this.length;
            if (o > i) {
              var l = (t.lineBlockAt(o).bottom - t.lineBlockAt(i).top) / this.view.scaleY;
              e.push(pe.replace({ widget: new co(l), block: !0, inclusive: !0, isBlockGap: !0 }).range(i, o));
            }
            if (!s) break;
            i = s.to + 1;
          }
          return pe.set(e);
        }
        updateDeco() {
          var e = 0,
            t = this.view.state.facet(En).map((s) => ((this.dynamicDecorationMap[e++] = typeof s == "function") ? s(this.view) : s)),
            i = !1,
            n = this.view.state.facet(vD).map((s, o) => {
              var l = typeof s == "function";
              return l && (i = !0), l ? s(this.view) : s;
            });
          for (n.length && ((this.dynamicDecorationMap[e++] = i), t.push(De.join(n))), this.decorations = [...t, this.computeBlockGapDeco(), this.view.viewState.lineGapDeco]; e < this.decorations.length; ) this.dynamicDecorationMap[e++] = !1;
          return this.decorations;
        }
        scrollIntoView(e) {
          if (e.isSnapshot) {
            var a = this.view.viewState.lineBlockAt(e.range.head);
            (this.view.scrollDOM.scrollTop = a.top - e.yMargin), (this.view.scrollDOM.scrollLeft = e.xMargin);
            return;
          }
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.view.state.facet(CD)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a1 = _step.value;
              try {
                if (a1(this.view, e.range, e)) return !0;
              } catch (c) {
                Xe(this.view.state, c, "scroll handler");
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var t = e.range,
            i = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1),
            n;
          if (!i) return;
          !t.empty && (n = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (i = { left: Math.min(i.left, n.left), top: Math.min(i.top, n.top), right: Math.max(i.right, n.right), bottom: Math.max(i.bottom, n.bottom) });
          var s = kD(this.view),
            o = { left: i.left - s.left, top: i.top - s.top, right: i.right + s.right, bottom: i.bottom + s.bottom },
            _this_view_scrollDOM = this.view.scrollDOM,
            l = _this_view_scrollDOM.offsetWidth,
            u = _this_view_scrollDOM.offsetHeight;
          Zv(this.view.scrollDOM, o, t.head < t.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, l), -l), Math.max(Math.min(e.yMargin, u), -u), this.view.textDirection == Be.LTR);
        }
        constructor(e) {
          super(),
            (this.view = e),
            (this.decorations = []),
            (this.dynamicDecorationMap = []),
            (this.domChanged = null),
            (this.hasComposition = null),
            (this.markedForComposition = new Set()),
            (this.lastCompositionAfterCursor = !1),
            (this.minWidth = 0),
            (this.minWidthFrom = 0),
            (this.minWidthTo = 0),
            (this.impreciseAnchor = null),
            (this.impreciseHead = null),
            (this.forceSelection = !1),
            (this.lastUpdate = Date.now()),
            this.setDOM(e.contentDOM),
            (this.children = [new Re()]),
            this.children[0].setParent(this),
            this.updateDeco(),
            this.updateInner([new Tt(0, 0, 0, e.state.doc.length)], 0, null);
        }
      }),
      h(_class41, "DocView"),
      _class41);
  function Fx(r) {
    return r.node.nodeType == 1 && r.node.firstChild && (r.offset == 0 || r.node.childNodes[r.offset - 1].contentEditable == "false") && (r.offset == r.node.childNodes.length || r.node.childNodes[r.offset].contentEditable == "false");
  }
  h(Fx, "betweenUneditable");
  var co =
    ((_class42 = class _class extends ai {
      toDOM() {
        var e = document.createElement("div");
        return (e.className = "cm-gap"), this.updateDOM(e), e;
      }
      eq(e) {
        return e.height == this.height;
      }
      updateDOM(e) {
        return (e.style.height = this.height + "px"), !0;
      }
      get editable() {
        return !0;
      }
      get estimatedHeight() {
        return this.height;
      }
      ignoreEvent() {
        return !1;
      }
      constructor(e) {
        super(), (this.height = e);
      }
    }),
    h(_class42, "BlockGapWidget"),
    _class42);
  function SD(r, e) {
    var t = r.observer.selectionRange;
    if (!t.focusNode) return null;
    var i = Zg(t.focusNode, t.focusOffset),
      n = eD(t.focusNode, t.focusOffset),
      s = i || n;
    if (n && i && n.node != i.node) {
      var l = Fe.get(n.node);
      if (!l || (l instanceof Rt && l.text != n.node.nodeValue)) s = n;
      else if (r.docView.lastCompositionAfterCursor) {
        var u = Fe.get(i.node);
        !u || (u instanceof Rt && u.text != i.node.nodeValue) || (s = n);
      }
    }
    if (((r.docView.lastCompositionAfterCursor = s != i), !s)) return null;
    var o = e - s.offset;
    return { from: o, to: o + s.node.nodeValue.length, node: s.node };
  }
  h(SD, "findCompositionNode");
  function bx(r, e, t) {
    var i = SD(r, t);
    if (!i) return null;
    var n = i.node,
      s = i.from,
      o = i.to,
      l = n.nodeValue;
    if (/[\n\r]/.test(l) || r.state.doc.sliceString(i.from, i.to) != l) return null;
    var u = e.invertedDesc,
      a = new Tt(u.mapPos(s), u.mapPos(o), s, o),
      c = [];
    for (var f = n.parentNode; ; f = f.parentNode) {
      var d = Fe.get(f);
      if (d instanceof ui) c.push({ node: f, deco: d.mark });
      else {
        if (d instanceof Re || (f.nodeName == "DIV" && f.parentNode == r.contentDOM)) return { range: a, text: n, marks: c, line: f };
        if (f != r.contentDOM) c.push({ node: f, deco: new bn({ inclusive: !0, attributes: ox(f), tagName: f.tagName.toLowerCase() }) });
        else return null;
      }
    }
  }
  h(bx, "findCompositionRange");
  function yx(r, e) {
    return r.nodeType != 1 ? 0 : (e && r.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < r.childNodes.length && r.childNodes[e].contentEditable == "false" ? 2 : 0);
  }
  h(yx, "nextToUneditable");
  var Ex =
    ((_class43 = class _class {
      compareRange(e, t) {
        aa(e, t, this.changes);
      }
      comparePoint(e, t) {
        aa(e, t, this.changes);
      }
      constructor() {
        this.changes = [];
      }
    }),
    h(_class43, "DecorationComparator"),
    _class43);
  function Cx(r, e, t) {
    var i = new Ex();
    return De.compare(r, e, t, i), i.changes;
  }
  h(Cx, "findChangedDeco");
  function Bx(r, e) {
    for (var t = r; t && t != e; t = t.assignedSlot || t.parentNode) if (t.nodeType == 1 && t.contentEditable == "false") return !0;
    return !1;
  }
  h(Bx, "inUneditable");
  function vx(r, e) {
    var t = !1;
    return (
      e &&
        r.iterChangedRanges((i, n) => {
          i < e.to && n > e.from && (t = !0);
        }),
      t
    );
  }
  h(vx, "touchesComposition");
  function xx(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    var i = r.charCategorizer(e),
      n = r.doc.lineAt(e),
      s = e - n.from;
    if (n.length == 0) return Z.cursor(e);
    s == 0 ? (t = 1) : s == n.length && (t = -1);
    var o = s,
      l = s;
    t < 0 ? (o = ht(n.text, s, !1)) : (l = ht(n.text, s));
    var u = i(n.text.slice(o, l));
    for (; o > 0; ) {
      var a = ht(n.text, o, !1);
      if (i(n.text.slice(a, o)) != u) break;
      o = a;
    }
    for (; l < n.length; ) {
      var a1 = ht(n.text, l);
      if (i(n.text.slice(l, a1)) != u) break;
      l = a1;
    }
    return Z.range(o + n.from, l + n.from);
  }
  h(xx, "groupAt");
  function Ax(r, e) {
    return e.left > r ? e.left - r : Math.max(0, r - e.right);
  }
  h(Ax, "getdx");
  function kx(r, e) {
    return e.top > r ? e.top - r : Math.max(0, r - e.bottom);
  }
  h(kx, "getdy");
  function Xu(r, e) {
    return r.top < e.bottom - 1 && r.bottom > e.top + 1;
  }
  h(Xu, "yOverlap");
  function yg(r, e) {
    return e < r.top ? { top: e, left: r.left, right: r.right, bottom: r.bottom } : r;
  }
  h(yg, "upTop");
  function Eg(r, e) {
    return e > r.bottom ? { top: r.top, left: r.left, right: r.right, bottom: e } : r;
  }
  h(Eg, "upBot");
  function pa(r, e, t) {
    var i,
      n,
      s,
      o,
      l = !1,
      u,
      a,
      c,
      f;
    for (var m = r.firstChild; m; m = m.nextSibling) {
      var F = gn(m);
      for (var g = 0; g < F.length; g++) {
        var D = F[g];
        n && Xu(n, D) && (D = yg(Eg(D, n.bottom), n.top));
        var b = Ax(e, D),
          B = kx(t, D);
        if (b == 0 && B == 0) return m.nodeType == 3 ? Cg(m, e, t) : pa(m, e, t);
        if (!i || o > B || (o == B && s > b)) {
          (i = m), (n = D), (s = b), (o = B);
          var k = B ? (t < D.top ? -1 : 1) : b ? (e < D.left ? -1 : 1) : 0;
          l = !k || (k > 0 ? g < F.length - 1 : g > 0);
        }
        b == 0 ? (t > D.bottom && (!c || c.bottom < D.bottom) ? ((u = m), (c = D)) : t < D.top && (!f || f.top > D.top) && ((a = m), (f = D))) : c && Xu(c, D) ? (c = Eg(c, D.bottom)) : f && Xu(f, D) && (f = yg(f, D.top));
      }
    }
    if ((c && c.bottom >= t ? ((i = u), (n = c)) : f && f.top <= t && ((i = a), (n = f)), !i)) return { node: r, offset: 0 };
    var d = Math.max(n.left, Math.min(n.right, e));
    if (i.nodeType == 3) return Cg(i, d, t);
    if (l && i.contentEditable != "false") return pa(i, d, t);
    var p = Array.prototype.indexOf.call(r.childNodes, i) + (e >= (n.left + n.right) / 2 ? 1 : 0);
    return { node: r, offset: p };
  }
  h(pa, "domPosAtCoords");
  function Cg(r, e, t) {
    var i = r.nodeValue.length,
      n = -1,
      s = 1e9,
      o = 0;
    for (var l = 0; l < i; l++) {
      var u = Qi(r, l, l + 1).getClientRects();
      for (var a = 0; a < u.length; a++) {
        var c = u[a];
        if (c.top == c.bottom) continue;
        o || (o = e - c.left);
        var f = (c.top > t ? c.top - t : t - c.bottom) - 1;
        if (c.left - 1 <= e && c.right + 1 >= e && f < s) {
          var d = e >= (c.left + c.right) / 2,
            p = d;
          if (((W.chrome || W.gecko) && Qi(r, l).getBoundingClientRect().left == c.right && (p = !d), f <= 0)) return { node: r, offset: l + (p ? 1 : 0) };
          (n = l + (p ? 1 : 0)), (s = f);
        }
      }
    }
    return { node: r, offset: n > -1 ? n : o > 0 ? r.nodeValue.length : 0 };
  }
  h(Cg, "domPosInText");
  function wD(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : -1;
    var n, s;
    var o = r.contentDOM.getBoundingClientRect(),
      l = o.top + r.viewState.paddingTop,
      u,
      _r_viewState = r.viewState,
      a = _r_viewState.docHeight,
      c = e.x,
      f = e.y,
      d = f - l;
    if (d < 0) return 0;
    if (d > a) return r.state.doc.length;
    for (var k = r.viewState.heightOracle.textHeight / 2, C = !1; (u = r.elementAtHeight(d)), u.type != He.Text; )
      for (; (d = i > 0 ? u.bottom + k : u.top - k), !(d >= 0 && d <= a); ) {
        if (C) return t ? null : 0;
        (C = !0), (i = -i);
      }
    f = l + d;
    var p = u.from;
    if (p < r.viewport.from) return r.viewport.from == 0 ? 0 : t ? null : Bg(r, o, u, c, f);
    if (p > r.viewport.to) return r.viewport.to == r.state.doc.length ? r.state.doc.length : t ? null : Bg(r, o, u, c, f);
    var m = r.dom.ownerDocument,
      F = r.root.elementFromPoint ? r.root : m,
      g = F.elementFromPoint(c, f);
    g && !r.contentDOM.contains(g) && (g = null), g || ((c = Math.max(o.left + 1, Math.min(o.right - 1, c))), (g = F.elementFromPoint(c, f)), g && !r.contentDOM.contains(g) && (g = null));
    var D,
      b = -1;
    if (g && ((n = r.docView.nearest(g)) === null || n === void 0 ? void 0 : n.isEditable) != !1) {
      if (m.caretPositionFromPoint) {
        var k1 = m.caretPositionFromPoint(c, f);
        var ref;
        k1 && ((ref = k1), (D = ref.offsetNode), (b = ref.offset), ref);
      } else if (m.caretRangeFromPoint) {
        var k2 = m.caretRangeFromPoint(c, f);
        var ref1;
        k2 && ((ref1 = k2), (D = ref1.startContainer), (b = ref1.startOffset), ref1, (!r.contentDOM.contains(D) || (W.safari && Sx(D, b, c)) || (W.chrome && wx(D, b, c))) && (D = void 0));
      }
    }
    if (!D || !r.docView.dom.contains(D)) {
      var k3 = Re.find(r.docView, p);
      if (!k3) return d > u.top + u.height / 2 ? u.to : u.from;
      var ref2;
      (ref2 = pa(k3.dom, c, f)), (D = ref2.node), (b = ref2.offset), ref2;
    }
    var B = r.docView.nearest(D);
    if (!B) return null;
    if (B.isWidget && ((s = B.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {
      var k4 = B.dom.getBoundingClientRect();
      return e.y < k4.top || (e.y <= k4.bottom && e.x <= (k4.left + k4.right) / 2) ? B.posAtStart : B.posAtEnd;
    } else return B.localPosFromDOM(D, b) + B.posAtStart;
  }
  h(wD, "posAtCoords");
  function Bg(r, e, t, i, n) {
    var s = Math.round((i - e.left) * r.defaultCharacterWidth);
    if (r.lineWrapping && t.height > r.defaultLineHeight * 1.5) {
      var l = r.viewState.heightOracle.textHeight,
        u = Math.floor((n - t.top - (r.defaultLineHeight - l) * 0.5) / l);
      s += u * r.viewState.heightOracle.lineLength;
    }
    var o = r.state.sliceDoc(t.from, t.to);
    return t.from + lg(o, s, r.state.tabSize);
  }
  h(Bg, "posAtCoordsImprecise");
  function Sx(r, e, t) {
    var i;
    if (r.nodeType != 3 || e != (i = r.nodeValue.length)) return !1;
    for (var n = r.nextSibling; n; n = n.nextSibling) if (n.nodeType != 1 || n.nodeName != "BR") return !1;
    return Qi(r, i - 1, i).getBoundingClientRect().left > t;
  }
  h(Sx, "isSuspiciousSafariCaretResult");
  function wx(r, e, t) {
    if (e != 0) return !1;
    for (var n = r; ; ) {
      var s = n.parentNode;
      if (!s || s.nodeType != 1 || s.firstChild != n) return !1;
      if (s.classList.contains("cm-line")) break;
      n = s;
    }
    var i = r.nodeType == 1 ? r.getBoundingClientRect() : Qi(r, 0, Math.max(r.nodeValue.length, 1)).getBoundingClientRect();
    return t - i.left > 5;
  }
  h(wx, "isSuspiciousChromeCaretResult");
  function ma(r, e) {
    var t = r.lineBlockAt(e);
    if (Array.isArray(t.type)) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.type[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.to > e || (i.to == e && (i.to == t.to || i.type == He.Text))) return i;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return t;
  }
  h(ma, "blockAt");
  function Qx(r, e, t, i) {
    var n = ma(r, e.head),
      s = !i || n.type != He.Text || !(r.lineWrapping || n.widgetLineBreaks) ? null : r.coordsAtPos(e.assoc < 0 && e.head > n.from ? e.head - 1 : e.head);
    if (s) {
      var o = r.dom.getBoundingClientRect(),
        l = r.textDirectionAt(n.from),
        u = r.posAtCoords({ x: t == (l == Be.LTR) ? o.right - 1 : o.left + 1, y: (s.top + s.bottom) / 2 });
      if (u != null) return Z.cursor(u, t ? -1 : 1);
    }
    return Z.cursor(t ? n.to : n.from, t ? -1 : 1);
  }
  h(Qx, "moveToLineBoundary");
  function vg(r, e, t, i) {
    var n = r.state.doc.lineAt(e.head),
      s = r.bidiSpans(n),
      o = r.textDirectionAt(n.from);
    for (var l = e, u = null; ; ) {
      var a = mx(n, s, o, l, t),
        c = dD;
      if (!a) {
        if (n.number == (t ? r.state.doc.lines : 1)) return l;
        (c = "\n"), (n = r.state.doc.line(n.number + (t ? 1 : -1))), (s = r.bidiSpans(n)), (a = r.visualLineSide(n, !t));
      }
      if (u) {
        if (!u(c)) return l;
      } else {
        if (!i) return a;
        u = i(c);
      }
      l = a;
    }
  }
  h(vg, "moveByChar");
  function _x(r, e, t) {
    var i = r.state.charCategorizer(e),
      n = i(t);
    return (s) => {
      var o = i(s);
      return n == vt.Space && (n = o), n == o;
    };
  }
  h(_x, "byGroup");
  function Ux(r, e, t, i) {
    var n = e.head,
      s = t ? 1 : -1;
    if (n == (t ? r.state.doc.length : 0)) return Z.cursor(n, e.assoc);
    var o = e.goalColumn,
      l,
      u = r.contentDOM.getBoundingClientRect(),
      a = r.coordsAtPos(n, e.assoc || -1),
      c = r.documentTop;
    if (a) o == null && (o = a.left - u.left), (l = s < 0 ? a.top : a.bottom);
    else {
      var p = r.viewState.lineBlockAt(n);
      o == null && (o = Math.min(u.right - u.left, r.defaultCharacterWidth * (n - p.from))), (l = (s < 0 ? p.top : p.bottom) + c);
    }
    var f = u.left + o,
      d = i !== null && i !== void 0 ? i : r.viewState.heightOracle.textHeight >> 1;
    for (var p1 = 0; ; p1 += 10) {
      var m = l + (d + p1) * s,
        F = wD(r, { x: f, y: m }, !1, s);
      if (m < u.top || m > u.bottom || (s < 0 ? F < n : F > n)) {
        var g = r.docView.coordsForChar(F),
          D = !g || m < g.top ? -1 : 1;
        return Z.cursor(F, D, void 0, o);
      }
    }
  }
  h(Ux, "moveVertically");
  function to(r, e, t) {
    for (;;) {
      var i = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          n.between(e - 1, e + 1, (s, o, l) => {
            if (e > s && e < o) {
              var u = i || t || (e - s < o - e ? -1 : 1);
              (e = u < 0 ? s : o), (i = u);
            }
          });
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if (!i) return e;
    }
  }
  h(to, "skipAtomicRanges");
  function Ku(r, e, t) {
    var i = to(
      r.state.facet(Va).map((n) => n(r)),
      t.from,
      e.head > t.from ? -1 : 1,
    );
    return i == t.from ? t : Z.cursor(i, i < t.from ? 1 : -1);
  }
  h(Ku, "skipAtoms");
  var ga =
    ((_class44 = class _class {
      setSelectionOrigin(e) {
        (this.lastSelectionOrigin = e), (this.lastSelectionTime = Date.now());
      }
      handleEvent(e) {
        !Px(this.view, e) || this.ignoreDuringComposition(e) || (e.type == "keydown" && this.keydown(e)) || this.runHandlers(e.type, e);
      }
      runHandlers(e, t) {
        var i = this.handlers[e];
        if (i) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i.observers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n(this.view, t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = i.handlers[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var n1 = _step1.value;
              if (t.defaultPrevented) break;
              if (n1(this.view, t)) {
                t.preventDefault();
                break;
              }
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        }
      }
      ensureHandlers(e) {
        var t = Lx(e),
          i = this.handlers,
          n = this.view.contentDOM;
        for (var s in t)
          if (s != "scroll") {
            var o = !t[s].handlers.length,
              l = i[s];
            l && o != !l.handlers.length && (n.removeEventListener(s, this.handleEvent), (l = null)), l || n.addEventListener(s, this.handleEvent, { passive: o });
          }
        for (var s1 in i) s1 != "scroll" && !t[s1] && n.removeEventListener(s1, this.handleEvent);
        this.handlers = t;
      }
      keydown(e) {
        if (((this.lastKeyCode = e.keyCode), (this.lastKeyTime = Date.now()), e.keyCode == 9 && Date.now() < this.lastEscPress + 2e3)) return !0;
        if ((e.keyCode != 27 && _D.indexOf(e.keyCode) < 0 && (this.view.inputState.lastEscPress = 0), W.android && W.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))) return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
        var t;
        return W.ios && !e.synthetic && !e.altKey && !e.metaKey && (((t = QD.find((i) => i.keyCode == e.keyCode)) && !e.ctrlKey) || (Ox.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey)) ? ((this.pendingIOSKey = t || e), setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
      }
      flushIOSKey(e) {
        var t = this.pendingIOSKey;
        return !t || (t.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString())) ? !1 : ((this.pendingIOSKey = void 0), Dr(this.view.contentDOM, t.key, t.keyCode, t instanceof KeyboardEvent ? t : void 0));
      }
      ignoreDuringComposition(e) {
        return /^key/.test(e.type) ? (this.composing > 0 ? !0 : W.safari && !W.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? ((this.compositionPendingKey = !1), !0) : !1) : !1;
      }
      startMouseSelection(e) {
        this.mouseSelection && this.mouseSelection.destroy(), (this.mouseSelection = e);
      }
      update(e) {
        this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
      }
      destroy() {
        this.mouseSelection && this.mouseSelection.destroy();
      }
      constructor(e) {
        (this.view = e),
          (this.lastKeyCode = 0),
          (this.lastKeyTime = 0),
          (this.lastTouchTime = 0),
          (this.lastFocusTime = 0),
          (this.lastScrollTop = 0),
          (this.lastScrollLeft = 0),
          (this.pendingIOSKey = void 0),
          (this.lastSelectionOrigin = null),
          (this.lastSelectionTime = 0),
          (this.lastEscPress = 0),
          (this.lastContextMenu = 0),
          (this.scrollHandlers = []),
          (this.handlers = Object.create(null)),
          (this.composing = -1),
          (this.compositionFirstChange = null),
          (this.compositionEndedAt = 0),
          (this.compositionPendingKey = !1),
          (this.compositionPendingChange = !1),
          (this.mouseSelection = null),
          (this.draggedContent = null),
          (this.handleEvent = this.handleEvent.bind(this)),
          (this.notifiedFocused = e.hasFocus),
          W.safari && e.contentDOM.addEventListener("input", () => null),
          W.gecko && jx(e.contentDOM.ownerDocument);
      }
    }),
    h(_class44, "InputState"),
    _class44);
  function xg(r, e) {
    return (t, i) => {
      try {
        return e.call(r, i, t);
      } catch (n) {
        Xe(t.state, n);
      }
    };
  }
  h(xg, "bindHandler");
  function Lx(r) {
    var e = Object.create(null);
    function t(i) {
      return e[i] || (e[i] = { observers: [], handlers: [] });
    }
    h(t, "record");
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i.spec;
        if (n && n.domEventHandlers)
          for (var s in n.domEventHandlers) {
            var o = n.domEventHandlers[s];
            o && t(s).handlers.push(xg(i.value, o));
          }
        if (n && n.domEventObservers)
          for (var s1 in n.domEventObservers) {
            var o1 = n.domEventObservers[s1];
            o1 && t(s1).observers.push(xg(i.value, o1));
          }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    for (var i1 in xt) t(i1).handlers.push(xt[i1]);
    for (var i2 in pt) t(i2).observers.push(pt[i2]);
    return e;
  }
  h(Lx, "computeHandlers");
  var QD = [
      { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
      { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
      { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
      { key: "Delete", keyCode: 46, inputType: "deleteContentForward" },
    ],
    Ox = "dthko",
    _D = [16, 17, 18, 20, 91, 92, 224, 225],
    js = 6;
  function Ys(r) {
    return Math.max(0, r) * 0.7 + 8;
  }
  h(Ys, "dragScrollSpeed");
  function Tx(r, e) {
    return Math.max(Math.abs(r.clientX - e.clientX), Math.abs(r.clientY - e.clientY));
  }
  h(Tx, "dist");
  var Da =
    ((_class45 = class _class {
      start(e) {
        this.dragging === !1 && this.select(e);
      }
      move(e) {
        var t;
        if (e.buttons == 0) return this.destroy();
        if (this.dragging || (this.dragging == null && Tx(this.startEvent, e) < 10)) return;
        this.select((this.lastEvent = e));
        var i = 0,
          n = 0,
          s = ((t = this.scrollParent) === null || t === void 0 ? void 0 : t.getBoundingClientRect()) || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight },
          o = kD(this.view);
        e.clientX - o.left <= s.left + js ? (i = -Ys(s.left - e.clientX)) : e.clientX + o.right >= s.right - js && (i = Ys(e.clientX - s.right)), e.clientY - o.top <= s.top + js ? (n = -Ys(s.top - e.clientY)) : e.clientY + o.bottom >= s.bottom - js && (n = Ys(e.clientY - s.bottom)), this.setScrollSpeed(i, n);
      }
      up(e) {
        this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
      }
      destroy() {
        this.setScrollSpeed(0, 0);
        var e = this.view.contentDOM.ownerDocument;
        e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), (this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null);
      }
      setScrollSpeed(e, t) {
        (this.scrollSpeed = { x: e, y: t }), e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), (this.scrolling = -1));
      }
      scroll() {
        this.scrollParent ? ((this.scrollParent.scrollLeft += this.scrollSpeed.x), (this.scrollParent.scrollTop += this.scrollSpeed.y)) : this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y), this.dragging === !1 && this.select(this.lastEvent);
      }
      skipAtoms(e) {
        var t = null;
        for (var i = 0; i < e.ranges.length; i++) {
          var n = e.ranges[i],
            s = null;
          if (n.empty) {
            var o = to(this.atoms, n.from, 0);
            o != n.from && (s = Z.cursor(o, -1));
          } else {
            var o1 = to(this.atoms, n.from, -1),
              l = to(this.atoms, n.to, 1);
            (o1 != n.from || l != n.to) && (s = Z.range(n.from == n.anchor ? o1 : l, n.from == n.head ? o1 : l));
          }
          s && (t || (t = e.ranges.slice()), (t[i] = s));
        }
        return t ? Z.create(t, e.mainIndex) : e;
      }
      select(e) {
        var _this = this,
          t = _this.view,
          i = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
        (this.mustSelect || !i.eq(t.state.selection, this.dragging === !1)) && this.view.dispatch({ selection: i, userEvent: "select.pointer" }), (this.mustSelect = !1);
      }
      update(e) {
        this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
      }
      constructor(e, t, i, n) {
        (this.view = e), (this.startEvent = t), (this.style = i), (this.mustSelect = n), (this.scrollSpeed = { x: 0, y: 0 }), (this.scrolling = -1), (this.lastEvent = t), (this.scrollParent = ex(e.contentDOM)), (this.atoms = e.state.facet(Va).map((o) => o(e)));
        var s = e.contentDOM.ownerDocument;
        s.addEventListener("mousemove", (this.move = this.move.bind(this))), s.addEventListener("mouseup", (this.up = this.up.bind(this))), (this.extend = t.shiftKey), (this.multiple = e.state.facet(Ae.allowMultipleSelections) && Rx(e, t)), (this.dragging = Mx(e, t) && TD(t) == 1 ? null : !1);
      }
    }),
    h(_class45, "MouseSelection"),
    _class45);
  function Rx(r, e) {
    var t = r.state.facet(pD);
    return t.length ? t[0](e) : W.mac ? e.metaKey : e.ctrlKey;
  }
  h(Rx, "addsSelectionRange");
  function Nx(r, e) {
    var t = r.state.facet(mD);
    return t.length ? t[0](e) : W.mac ? !e.altKey : !e.ctrlKey;
  }
  h(Nx, "dragMovesSelection");
  function Mx(r, e) {
    var _r_state_selection = r.state.selection,
      t = _r_state_selection.main;
    if (t.empty) return !1;
    var i = oo(r.root);
    if (!i || i.rangeCount == 0) return !0;
    var n = i.getRangeAt(0).getClientRects();
    for (var s = 0; s < n.length; s++) {
      var o = n[s];
      if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY) return !0;
    }
    return !1;
  }
  h(Mx, "isInPrimarySelection");
  function Px(r, e) {
    if (!e.bubbles) return !0;
    if (e.defaultPrevented) return !1;
    for (var t = e.target, i; t != r.contentDOM; t = t.parentNode) if (!t || t.nodeType == 11 || ((i = Fe.get(t)) && i.ignoreEvent(e))) return !1;
    return !0;
  }
  h(Px, "eventBelongsToEditor");
  var xt = Object.create(null),
    pt = Object.create(null),
    UD = (W.ie && W.ie_version < 15) || (W.ios && W.webkit_version < 604);
  function Ix(r) {
    var e = r.dom.parentNode;
    if (!e) return;
    var t = e.appendChild(document.createElement("textarea"));
    (t.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      t.focus(),
      setTimeout(() => {
        r.focus(), t.remove(), LD(r, t.value);
      }, 50);
  }
  h(Ix, "capturePaste");
  function LD(r, e) {
    var t = r.state,
      i,
      n = 1,
      s = t.toText(e),
      o = s.lines == t.selection.ranges.length;
    if (Fa != null && t.selection.ranges.every((u) => u.empty) && Fa == s.toString()) {
      var u = -1;
      i = t.changeByRange((a) => {
        var c = t.doc.lineAt(a.from);
        if (c.from == u) return { range: a };
        u = c.from;
        var f = t.toText((o ? s.line(n++).text : e) + t.lineBreak);
        return { changes: { from: c.from, insert: f }, range: Z.cursor(a.from + f.length) };
      });
    } else
      o
        ? (i = t.changeByRange((u) => {
            var a = s.line(n++);
            return { changes: { from: u.from, to: u.to, insert: a.text }, range: Z.cursor(u.from + a.length) };
          }))
        : (i = t.replaceSelection(s));
    r.dispatch(i, { userEvent: "input.paste", scrollIntoView: !0 });
  }
  h(LD, "doPaste");
  pt.scroll = (r) => {
    (r.inputState.lastScrollTop = r.scrollDOM.scrollTop), (r.inputState.lastScrollLeft = r.scrollDOM.scrollLeft);
  };
  xt.keydown = (r, e) => (r.inputState.setSelectionOrigin("select"), e.keyCode == 27 && (r.inputState.lastEscPress = Date.now()), !1);
  pt.touchstart = (r, e) => {
    (r.inputState.lastTouchTime = Date.now()), r.inputState.setSelectionOrigin("select.pointer");
  };
  pt.touchmove = (r) => {
    r.inputState.setSelectionOrigin("select.pointer");
  };
  xt.mousedown = (r, e) => {
    if ((r.observer.flush(), r.inputState.lastTouchTime > Date.now() - 2e3)) return !1;
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.state.facet(gD)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        if (((t = i(r, e)), t)) break;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if ((!t && e.button == 0 && (t = Vx(r, e)), t)) {
      var i1 = !r.hasFocus;
      r.inputState.startMouseSelection(new Da(r, e, t, i1)), i1 && r.observer.ignore(() => Gg(r.contentDOM));
      var n = r.inputState.mouseSelection;
      if (n) return n.start(e), n.dragging === !1;
    }
    return !1;
  };
  function Ag(r, e, t, i) {
    if (i == 1) return Z.cursor(e, t);
    if (i == 2) return xx(r.state, e, t);
    {
      var n = Re.find(r.docView, e),
        s = r.state.doc.lineAt(n ? n.posAtEnd : e),
        o = n ? n.posAtStart : s.from,
        l = n ? n.posAtEnd : s.to;
      return l < r.state.doc.length && l == s.to && l++, Z.range(o, l);
    }
  }
  h(Ag, "rangeForClick");
  var OD = h((r, e) => r >= e.top && r <= e.bottom, "insideY"),
    kg = h((r, e, t) => OD(e, t) && r >= t.left && r <= t.right, "inside");
  function $x(r, e, t, i) {
    var n = Re.find(r.docView, e);
    if (!n) return 1;
    var s = e - n.posAtStart;
    if (s == 0) return 1;
    if (s == n.length) return -1;
    var o = n.coordsAt(s, -1);
    if (o && kg(t, i, o)) return -1;
    var l = n.coordsAt(s, 1);
    return l && kg(t, i, l) ? 1 : o && OD(i, o) ? -1 : 1;
  }
  h($x, "findPositionSide");
  function Sg(r, e) {
    var t = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
    return { pos: t, bias: $x(r, t, e.clientX, e.clientY) };
  }
  h(Sg, "queryPos");
  var qx = W.ie && W.ie_version <= 11,
    wg = null,
    Qg = 0,
    _g = 0;
  function TD(r) {
    if (!qx) return r.detail;
    var e = wg,
      t = _g;
    return (wg = r), (_g = Date.now()), (Qg = !e || (t > Date.now() - 400 && Math.abs(e.clientX - r.clientX) < 2 && Math.abs(e.clientY - r.clientY) < 2) ? (Qg + 1) % 3 : 1);
  }
  h(TD, "getClickType");
  function Vx(r, e) {
    var t = Sg(r, e),
      i = TD(e),
      n = r.state.selection;
    return {
      update(s) {
        s.docChanged && ((t.pos = s.changes.mapPos(t.pos)), (n = n.map(s.changes)));
      },
      get(s, o, l) {
        var u = Sg(r, s),
          a,
          c = Ag(r, u.pos, u.bias, i);
        if (t.pos != u.pos && !o) {
          var f = Ag(r, t.pos, t.bias, i),
            d = Math.min(f.from, c.from),
            p = Math.max(f.to, c.to);
          c = d < c.from ? Z.range(d, p) : Z.range(p, d);
        }
        return o ? n.replaceRange(n.main.extend(c.from, c.to)) : l && i == 1 && n.ranges.length > 1 && (a = Wx(n, u.pos)) ? a : l ? n.addRange(c) : Z.create([c]);
      },
    };
  }
  h(Vx, "basicMouseSelection");
  function Wx(r, e) {
    for (var t = 0; t < r.ranges.length; t++) {
      var _r_ranges_t = r.ranges[t],
        i = _r_ranges_t.from,
        n = _r_ranges_t.to;
      if (i <= e && n >= e) return Z.create(r.ranges.slice(0, t).concat(r.ranges.slice(t + 1)), r.mainIndex == t ? 0 : r.mainIndex - (r.mainIndex > t ? 1 : 0));
    }
    return null;
  }
  h(Wx, "removeRangeAround");
  xt.dragstart = (r, e) => {
    var _r_state = r.state,
      _r_state_selection = _r_state.selection,
      t = _r_state_selection.main;
    if (e.target.draggable) {
      var n = r.docView.nearest(e.target);
      if (n && n.isWidget) {
        var s = n.posAtStart,
          o = s + n.length;
        (s >= t.to || o <= t.from) && (t = Z.range(s, o));
      }
    }
    var i = r.inputState;
    return i.mouseSelection && (i.mouseSelection.dragging = !0), (i.draggedContent = t), e.dataTransfer && (e.dataTransfer.setData("Text", r.state.sliceDoc(t.from, t.to)), (e.dataTransfer.effectAllowed = "copyMove")), !1;
  };
  xt.dragend = (r) => ((r.inputState.draggedContent = null), !1);
  function Ug(r, e, t, i) {
    if (!t) return;
    var n = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1),
      _r_inputState = r.inputState,
      s = _r_inputState.draggedContent,
      o = i && s && Nx(r, e) ? { from: s.from, to: s.to } : null,
      l = { from: n, insert: t },
      u = r.state.changes(o ? [o, l] : l);
    r.focus(), r.dispatch({ changes: u, selection: { anchor: u.mapPos(n, -1), head: u.mapPos(n, 1) }, userEvent: o ? "move.drop" : "input.drop" }), (r.inputState.draggedContent = null);
  }
  h(Ug, "dropText");
  xt.drop = (r, e) => {
    if (!e.dataTransfer) return !1;
    if (r.state.readOnly) return !0;
    var t = e.dataTransfer.files;
    if (t && t.length) {
      var _loop = function (o) {
        var l = new FileReader();
        (l.onerror = s),
          (l.onload = () => {
            /[\x00-\x08\x0e-\x1f]{2}/.test(l.result) || (i[o] = l.result), s();
          }),
          l.readAsText(t[o]);
      };
      var i = Array(t.length),
        n = 0,
        s = h(() => {
          ++n == t.length && Ug(r, e, i.filter((o) => o != null).join(r.state.lineBreak), !1);
        }, "finishFile");
      for (var o = 0; o < t.length; o++) _loop(o);
      return !0;
    } else {
      var i1 = e.dataTransfer.getData("Text");
      if (i1) return Ug(r, e, i1, !0), !0;
    }
    return !1;
  };
  xt.paste = (r, e) => {
    if (r.state.readOnly) return !0;
    r.observer.flush();
    var t = UD ? null : e.clipboardData;
    return t ? (LD(r, t.getData("text/plain") || t.getData("text/uri-list")), !0) : (Ix(r), !1);
  };
  function zx(r, e) {
    var t = r.dom.parentNode;
    if (!t) return;
    var i = t.appendChild(document.createElement("textarea"));
    (i.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      (i.value = e),
      i.focus(),
      (i.selectionEnd = e.length),
      (i.selectionStart = 0),
      setTimeout(() => {
        i.remove(), r.focus();
      }, 50);
  }
  h(zx, "captureCopy");
  function Hx(r) {
    var e = [],
      t = [],
      i = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        n.empty || (e.push(r.sliceDoc(n.from, n.to)), t.push(n));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!e.length) {
      var n1 = -1;
      var _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        for (var _iterator1 = r.selection.ranges[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
          var _step_value = _step1.value,
            s = _step_value.from;
          var o = r.doc.lineAt(s);
          o.number > n1 && (e.push(o.text), t.push({ from: o.from, to: Math.min(r.doc.length, o.to + 1) })), (n1 = o.number);
        }
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
            _iterator1.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
      i = !0;
    }
    return { text: e.join(r.lineBreak), ranges: t, linewise: i };
  }
  h(Hx, "copiedRange");
  var Fa = null;
  xt.copy = xt.cut = (r, e) => {
    var _Hx = Hx(r.state),
      t = _Hx.text,
      i = _Hx.ranges,
      n = _Hx.linewise;
    if (!t && !n) return !1;
    (Fa = n ? t : null), e.type == "cut" && !r.state.readOnly && r.dispatch({ changes: i, scrollIntoView: !0, userEvent: "delete.cut" });
    var s = UD ? null : e.clipboardData;
    return s ? (s.clearData(), s.setData("text/plain", t), !0) : (zx(r, t), !1);
  };
  var RD = ct.define();
  function ND(r, e) {
    var t = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.facet(bD)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i(r, e);
        n && t.push(n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t ? r.update({ effects: t, annotations: RD.of(!0) }) : null;
  }
  h(ND, "focusChangeTransaction");
  function MD(r) {
    setTimeout(() => {
      var e = r.hasFocus;
      if (e != r.inputState.notifiedFocused) {
        var t = ND(r.state, e);
        t ? r.dispatch(t) : r.update([]);
      }
    }, 10);
  }
  h(MD, "updateForFocusChange");
  pt.focus = (r) => {
    (r.inputState.lastFocusTime = Date.now()), !r.scrollDOM.scrollTop && (r.inputState.lastScrollTop || r.inputState.lastScrollLeft) && ((r.scrollDOM.scrollTop = r.inputState.lastScrollTop), (r.scrollDOM.scrollLeft = r.inputState.lastScrollLeft)), MD(r);
  };
  pt.blur = (r) => {
    r.observer.clearSelectionRange(), MD(r);
  };
  pt.compositionstart = pt.compositionupdate = (r) => {
    r.inputState.compositionFirstChange == null && (r.inputState.compositionFirstChange = !0), r.inputState.composing < 0 && (r.inputState.composing = 0);
  };
  pt.compositionend = (r) => {
    (r.inputState.composing = -1),
      (r.inputState.compositionEndedAt = Date.now()),
      (r.inputState.compositionPendingKey = !0),
      (r.inputState.compositionPendingChange = r.observer.pendingRecords().length > 0),
      (r.inputState.compositionFirstChange = null),
      W.chrome && W.android
        ? r.observer.flushSoon()
        : r.inputState.compositionPendingChange
          ? Promise.resolve().then(() => r.observer.flush())
          : setTimeout(() => {
              r.inputState.composing < 0 && r.docView.hasComposition && r.update([]);
            }, 50);
  };
  pt.contextmenu = (r) => {
    r.inputState.lastContextMenu = Date.now();
  };
  xt.beforeinput = (r, e) => {
    var t;
    var i;
    if (W.chrome && W.android && (i = QD.find((n) => n.inputType == e.inputType)) && (r.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
      var n = ((t = window.visualViewport) === null || t === void 0 ? void 0 : t.height) || 0;
      setTimeout(() => {
        var s;
        (((s = window.visualViewport) === null || s === void 0 ? void 0 : s.height) || 0) > n + 10 && r.hasFocus && (r.contentDOM.blur(), r.focus());
      }, 100);
    }
    return W.ios && e.inputType == "deleteContentForward" && r.observer.flushSoon(), W.safari && e.inputType == "insertText" && r.inputState.composing >= 0 && setTimeout(() => pt.compositionend(r, e), 20), !1;
  };
  var Lg = new Set();
  function jx(r) {
    Lg.has(r) || (Lg.add(r), r.addEventListener("copy", () => {}), r.addEventListener("cut", () => {}));
  }
  h(jx, "firefoxCopyCutHack");
  var Og = ["pre-wrap", "normal", "pre-line", "break-spaces"],
    ba =
      ((_class46 = class _class {
        heightForGap(e, t) {
          var i = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
          return this.lineWrapping && (i += Math.max(0, Math.ceil((t - e - i * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * i;
        }
        heightForLine(e) {
          return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
        }
        setDoc(e) {
          return (this.doc = e), this;
        }
        mustRefreshForWrapping(e) {
          return Og.indexOf(e) > -1 != this.lineWrapping;
        }
        mustRefreshForHeights(e) {
          var t = !1;
          for (var i = 0; i < e.length; i++) {
            var n = e[i];
            n < 0 ? i++ : this.heightSamples[Math.floor(n * 10)] || ((t = !0), (this.heightSamples[Math.floor(n * 10)] = !0));
          }
          return t;
        }
        refresh(e, t, i, n, s, o) {
          var l = Og.indexOf(e) > -1,
            u = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != l;
          if (((this.lineWrapping = l), (this.lineHeight = t), (this.charWidth = i), (this.textHeight = n), (this.lineLength = s), u)) {
            this.heightSamples = {};
            for (var a = 0; a < o.length; a++) {
              var c = o[a];
              c < 0 ? a++ : (this.heightSamples[Math.floor(c * 10)] = !0);
            }
          }
          return u;
        }
        constructor(e) {
          (this.lineWrapping = e), (this.doc = fe.empty), (this.heightSamples = {}), (this.lineHeight = 14), (this.charWidth = 7), (this.textHeight = 14), (this.lineLength = 30), (this.heightChanged = !1);
        }
      }),
      h(_class46, "HeightOracle"),
      _class46),
    ya =
      ((_class47 = class _class {
        get more() {
          return this.index < this.heights.length;
        }
        constructor(e, t) {
          (this.from = e), (this.heights = t), (this.index = 0);
        }
      }),
      h(_class47, "MeasuredHeights"),
      _class47),
    Lt =
      ((_r37 = class r {
        get type() {
          return typeof this._content == "number" ? He.Text : Array.isArray(this._content) ? this._content : this._content.type;
        }
        get to() {
          return this.from + this.length;
        }
        get bottom() {
          return this.top + this.height;
        }
        get widget() {
          return this._content instanceof hi ? this._content.widget : null;
        }
        get widgetLineBreaks() {
          return typeof this._content == "number" ? this._content : 0;
        }
        join(e) {
          var t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
          return new r(this.from, this.length + e.length, this.top, this.height + e.height, t);
        }
        constructor(e, t, i, n, s) {
          (this.from = e), (this.length = t), (this.top = i), (this.height = n), (this._content = s);
        }
      }),
      h(_r37, "BlockInfo"),
      _r37),
    Ce = (function (r) {
      return (r[(r.ByPos = 0)] = "ByPos"), (r[(r.ByHeight = 1)] = "ByHeight"), (r[(r.ByPosNoHeight = 2)] = "ByPosNoHeight"), r;
    })(Ce || (Ce = {})),
    io = 0.001,
    st =
      ((_r38 = class r {
        get outdated() {
          return (this.flags & 2) > 0;
        }
        set outdated(e) {
          this.flags = (e ? 2 : 0) | (this.flags & -3);
        }
        setHeight(e, t) {
          this.height != t && (Math.abs(this.height - t) > io && (e.heightChanged = !0), (this.height = t));
        }
        replace(e, t, i) {
          return r.of(i);
        }
        decomposeLeft(e, t) {
          t.push(this);
        }
        decomposeRight(e, t) {
          t.push(this);
        }
        applyChanges(e, t, i, n) {
          var s = this,
            o = i.doc;
          for (var l = n.length - 1; l >= 0; l--) {
            var _n_l = n[l],
              u = _n_l.fromA,
              a = _n_l.toA,
              c = _n_l.fromB,
              f = _n_l.toB,
              d = s.lineAt(u, Ce.ByPosNoHeight, i.setDoc(t), 0, 0),
              p = d.to >= a ? d : s.lineAt(a, Ce.ByPosNoHeight, i, 0, 0);
            for (f += p.to - a, a = p.to; l > 0 && d.from <= n[l - 1].toA; ) (u = n[l - 1].fromA), (c = n[l - 1].fromB), l--, u < d.from && (d = s.lineAt(u, Ce.ByPosNoHeight, i, 0, 0));
            (c += d.from - u), (u = d.from);
            var m = Ca.build(i.setDoc(o), e, c, f);
            s = s.replace(u, a, m);
          }
          return s.updateHeight(i, 0);
        }
        static empty() {
          return new dt(0, 0);
        }
        static of(e) {
          if (e.length == 1) return e[0];
          var t = 0,
            i = e.length,
            n = 0,
            s = 0;
          for (;;)
            if (t == i)
              if (n > s * 2) {
                var l = e[t - 1];
                l.break ? e.splice(--t, 1, l.left, null, l.right) : e.splice(--t, 1, l.left, l.right), (i += 1 + l.break), (n -= l.size);
              } else if (s > n * 2) {
                var l1 = e[i];
                l1.break ? e.splice(i, 1, l1.left, null, l1.right) : e.splice(i, 1, l1.left, l1.right), (i += 2 + l1.break), (s -= l1.size);
              } else break;
            else if (n < s) {
              var l2 = e[t++];
              l2 && (n += l2.size);
            } else {
              var l3 = e[--i];
              l3 && (s += l3.size);
            }
          var o = 0;
          return e[t - 1] == null ? ((o = 1), t--) : e[t] == null && ((o = 1), i++), new Ea(r.of(e.slice(0, t)), o, r.of(e.slice(i)));
        }
        constructor(e, t, ref) {
          var i = ref === void 0 ? 2 : ref;
          (this.length = e), (this.height = t), (this.flags = i);
        }
      }),
      h(_r38, "HeightMap"),
      _r38);
  st.prototype.size = 1;
  var fo =
      ((_class48 = class _class extends st {
        blockAt(e, t, i, n) {
          return new Lt(n, this.length, i, this.height, this.deco || 0);
        }
        lineAt(e, t, i, n, s) {
          return this.blockAt(0, i, n, s);
        }
        forEachLine(e, t, i, n, s, o) {
          e <= s + this.length && t >= s && o(this.blockAt(0, i, n, s));
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return n && n.from <= t && n.more && this.setHeight(e, n.heights[n.index++]), (this.outdated = !1), this;
        }
        toString() {
          return "block(".concat(this.length, ")");
        }
        constructor(e, t, i) {
          super(e, t), (this.deco = i);
        }
      }),
      h(_class48, "HeightMapBlock"),
      _class48),
    dt =
      ((_r39 = class r extends fo {
        blockAt(e, t, i, n) {
          return new Lt(n, this.length, i, this.height, this.breaks);
        }
        replace(e, t, i) {
          var n = i[0];
          return i.length == 1 && (n instanceof r || (n instanceof li && n.flags & 4)) && Math.abs(this.length - n.length) < 10 ? (n instanceof li ? (n = new r(n.length, this.height)) : (n.height = this.height), this.outdated || (n.outdated = !1), n) : st.of(i);
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return n && n.from <= t && n.more ? this.setHeight(e, n.heights[n.index++]) : (i || this.outdated) && this.setHeight(e, Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), (this.outdated = !1), this;
        }
        toString() {
          return "line("
            .concat(this.length)
            .concat(this.collapsed ? -this.collapsed : "")
            .concat(this.widgetHeight ? ":" + this.widgetHeight : "", ")");
        }
        constructor(e, t) {
          super(e, t, null), (this.collapsed = 0), (this.widgetHeight = 0), (this.breaks = 0);
        }
      }),
      h(_r39, "HeightMapText"),
      _r39),
    li =
      ((_r40 = class r extends st {
        heightMetrics(e, t) {
          var i = e.doc.lineAt(t).number,
            n = e.doc.lineAt(t + this.length).number,
            s = n - i + 1,
            o,
            l = 0;
          if (e.lineWrapping) {
            var u = Math.min(this.height, e.lineHeight * s);
            (o = u / s), this.length > s + 1 && (l = (this.height - u) / (this.length - s - 1));
          } else o = this.height / s;
          return { firstLine: i, lastLine: n, perLine: o, perChar: l };
        }
        blockAt(e, t, i, n) {
          var _this_heightMetrics = this.heightMetrics(t, n),
            s = _this_heightMetrics.firstLine,
            o = _this_heightMetrics.lastLine,
            l = _this_heightMetrics.perLine,
            u = _this_heightMetrics.perChar;
          if (t.lineWrapping) {
            var a = n + (e < t.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - i) / this.height)) * this.length)),
              c = t.doc.lineAt(a),
              f = l + c.length * u,
              d = Math.max(i, e - f / 2);
            return new Lt(c.from, c.length, d, f, 0);
          } else {
            var a1 = Math.max(0, Math.min(o - s, Math.floor((e - i) / l))),
              _t_doc_line = t.doc.line(s + a1),
              c1 = _t_doc_line.from,
              f1 = _t_doc_line.length;
            return new Lt(c1, f1, i + l * a1, l, 0);
          }
        }
        lineAt(e, t, i, n, s) {
          if (t == Ce.ByHeight) return this.blockAt(e, i, n, s);
          if (t == Ce.ByPosNoHeight) {
            var _i_doc_lineAt = i.doc.lineAt(e),
              p = _i_doc_lineAt.from,
              m = _i_doc_lineAt.to;
            return new Lt(p, m - p, 0, 0, 0);
          }
          var _this_heightMetrics = this.heightMetrics(i, s),
            o = _this_heightMetrics.firstLine,
            l = _this_heightMetrics.perLine,
            u = _this_heightMetrics.perChar,
            a = i.doc.lineAt(e),
            c = l + a.length * u,
            f = a.number - o,
            d = n + l * f + u * (a.from - s - f);
          return new Lt(a.from, a.length, Math.max(n, Math.min(d, n + this.height - c)), c, 0);
        }
        forEachLine(e, t, i, n, s, o) {
          (e = Math.max(e, s)), (t = Math.min(t, s + this.length));
          var _this_heightMetrics = this.heightMetrics(i, s),
            l = _this_heightMetrics.firstLine,
            u = _this_heightMetrics.perLine,
            a = _this_heightMetrics.perChar;
          for (var c = e, f = n; c <= t; ) {
            var d = i.doc.lineAt(c);
            if (c == e) {
              var m = d.number - l;
              f += u * m + a * (e - s - m);
            }
            var p = u + a * d.length;
            o(new Lt(d.from, d.length, f, p, 0)), (f += p), (c = d.to + 1);
          }
        }
        replace(e, t, i) {
          var n = this.length - t;
          if (n > 0) {
            var s = i[i.length - 1];
            s instanceof r ? (i[i.length - 1] = new r(s.length + n)) : i.push(null, new r(n - 1));
          }
          if (e > 0) {
            var s1 = i[0];
            s1 instanceof r ? (i[0] = new r(e + s1.length)) : i.unshift(new r(e - 1), null);
          }
          return st.of(i);
        }
        decomposeLeft(e, t) {
          t.push(new r(e - 1), null);
        }
        decomposeRight(e, t) {
          t.push(null, new r(this.length - e - 1));
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          var s = t + this.length;
          if (n && n.from <= t + this.length && n.more) {
            var o = [],
              l = Math.max(t, n.from),
              u = -1;
            for (n.from > t && o.push(new r(n.from - t - 1).updateHeight(e, t)); l <= s && n.more; ) {
              var c = e.doc.lineAt(l).length;
              o.length && o.push(null);
              var f = n.heights[n.index++];
              u == -1 ? (u = f) : Math.abs(f - u) >= io && (u = -2);
              var d = new dt(c, f);
              (d.outdated = !1), o.push(d), (l += c + 1);
            }
            l <= s && o.push(null, new r(s - l).updateHeight(e, l));
            var a = st.of(o);
            return (u < 0 || Math.abs(a.height - this.height) >= io || Math.abs(u - this.heightMetrics(e, t).perLine) >= io) && (e.heightChanged = !0), a;
          } else (i || this.outdated) && (this.setHeight(e, e.heightForGap(t, t + this.length)), (this.outdated = !1));
          return this;
        }
        toString() {
          return "gap(".concat(this.length, ")");
        }
        constructor(e) {
          super(e, 0);
        }
      }),
      h(_r40, "HeightMapGap"),
      _r40),
    Ea =
      ((_class49 = class _class extends st {
        get break() {
          return this.flags & 1;
        }
        blockAt(e, t, i, n) {
          var s = i + this.left.height;
          return e < s ? this.left.blockAt(e, t, i, n) : this.right.blockAt(e, t, s, n + this.left.length + this.break);
        }
        lineAt(e, t, i, n, s) {
          var o = n + this.left.height,
            l = s + this.left.length + this.break,
            u = t == Ce.ByHeight ? e < o : e < l,
            a = u ? this.left.lineAt(e, t, i, n, s) : this.right.lineAt(e, t, i, o, l);
          if (this.break || (u ? a.to < l : a.from > l)) return a;
          var c = t == Ce.ByPosNoHeight ? Ce.ByPosNoHeight : Ce.ByPos;
          return u ? a.join(this.right.lineAt(l, c, i, o, l)) : this.left.lineAt(l, c, i, n, s).join(a);
        }
        forEachLine(e, t, i, n, s, o) {
          var l = n + this.left.height,
            u = s + this.left.length + this.break;
          if (this.break) e < u && this.left.forEachLine(e, t, i, n, s, o), t >= u && this.right.forEachLine(e, t, i, l, u, o);
          else {
            var a = this.lineAt(u, Ce.ByPos, i, n, s);
            e < a.from && this.left.forEachLine(e, a.from - 1, i, n, s, o), a.to >= e && a.from <= t && o(a), t > a.to && this.right.forEachLine(a.to + 1, t, i, l, u, o);
          }
        }
        replace(e, t, i) {
          var n = this.left.length + this.break;
          if (t < n) return this.balanced(this.left.replace(e, t, i), this.right);
          if (e > this.left.length) return this.balanced(this.left, this.right.replace(e - n, t - n, i));
          var s = [];
          e > 0 && this.decomposeLeft(e, s);
          var o = s.length;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l = _step.value;
              s.push(l);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if ((e > 0 && Tg(s, o - 1), t < this.length)) {
            var l1 = s.length;
            this.decomposeRight(t, s), Tg(s, l1);
          }
          return st.of(s);
        }
        decomposeLeft(e, t) {
          var i = this.left.length;
          if (e <= i) return this.left.decomposeLeft(e, t);
          t.push(this.left), this.break && (i++, e >= i && t.push(null)), e > i && this.right.decomposeLeft(e - i, t);
        }
        decomposeRight(e, t) {
          var i = this.left.length,
            n = i + this.break;
          if (e >= n) return this.right.decomposeRight(e - n, t);
          e < i && this.left.decomposeRight(e, t), this.break && e < n && t.push(null), t.push(this.right);
        }
        balanced(e, t) {
          return e.size > 2 * t.size || t.size > 2 * e.size ? st.of(this.break ? [e, null, t] : [e, t]) : ((this.left = e), (this.right = t), (this.height = e.height + t.height), (this.outdated = e.outdated || t.outdated), (this.size = e.size + t.size), (this.length = e.length + this.break + t.length), this);
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          var _this = this,
            s = _this.left,
            o = _this.right,
            l = t + s.length + this.break,
            u = null;
          return n && n.from <= t + s.length && n.more ? (u = s = s.updateHeight(e, t, i, n)) : s.updateHeight(e, t, i), n && n.from <= l + o.length && n.more ? (u = o = o.updateHeight(e, l, i, n)) : o.updateHeight(e, l, i), u ? this.balanced(s, o) : ((this.height = this.left.height + this.right.height), (this.outdated = !1), this);
        }
        toString() {
          return this.left + (this.break ? " " : "-") + this.right;
        }
        constructor(e, t, i) {
          super(e.length + t + i.length, e.height + i.height, t | (e.outdated || i.outdated ? 2 : 0)), (this.left = e), (this.right = i), (this.size = e.size + i.size);
        }
      }),
      h(_class49, "HeightMapBranch"),
      _class49);
  function Tg(r, e) {
    var t, i;
    r[e] == null && (t = r[e - 1]) instanceof li && (i = r[e + 1]) instanceof li && r.splice(e - 1, 3, new li(t.length + 1 + i.length));
  }
  h(Tg, "mergeGaps");
  var Yx = 5,
    Ca =
      ((_r41 = class r {
        get isCovered() {
          return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
        }
        span(e, t) {
          if (this.lineStart > -1) {
            var i = Math.min(t, this.lineEnd),
              n = this.nodes[this.nodes.length - 1];
            n instanceof dt ? (n.length += i - this.pos) : (i > this.pos || !this.isCovered) && this.nodes.push(new dt(i - this.pos, -1)), (this.writtenTo = i), t > i && (this.nodes.push(null), this.writtenTo++, (this.lineStart = -1));
          }
          this.pos = t;
        }
        point(e, t, i) {
          if (e < t || i.heightRelevant) {
            var n = i.widget ? i.widget.estimatedHeight : 0,
              s = i.widget ? i.widget.lineBreaks : 0;
            n < 0 && (n = this.oracle.lineHeight);
            var o = t - e;
            i.block ? this.addBlock(new fo(o, n, i)) : (o || s || n >= Yx) && this.addLineDeco(n, s, o);
          } else t > e && this.span(e, t);
          this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
        }
        enterLine() {
          if (this.lineStart > -1) return;
          var _this_oracle_doc_lineAt = this.oracle.doc.lineAt(this.pos),
            e = _this_oracle_doc_lineAt.from,
            t = _this_oracle_doc_lineAt.to;
          (this.lineStart = e), (this.lineEnd = t), this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new dt(this.pos - e, -1)), (this.writtenTo = this.pos);
        }
        blankContent(e, t) {
          var i = new li(t - e);
          return this.oracle.doc.lineAt(e).to == t && (i.flags |= 4), i;
        }
        ensureLine() {
          this.enterLine();
          var e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
          if (e instanceof dt) return e;
          var t = new dt(0, -1);
          return this.nodes.push(t), t;
        }
        addBlock(e) {
          this.enterLine();
          var t = e.deco;
          t && t.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), (this.writtenTo = this.pos = this.pos + e.length), t && t.endSide > 0 && (this.covering = e);
        }
        addLineDeco(e, t, i) {
          var n = this.ensureLine();
          (n.length += i), (n.collapsed += i), (n.widgetHeight = Math.max(n.widgetHeight, e)), (n.breaks += t), (this.writtenTo = this.pos = this.pos + i);
        }
        finish(e) {
          var t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
          this.lineStart > -1 && !(t instanceof dt) && !this.isCovered ? this.nodes.push(new dt(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
          var i = e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n instanceof dt && n.updateHeight(this.oracle, i), (i += n ? n.length : 1);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.nodes;
        }
        static build(e, t, i, n) {
          var s = new r(i, e);
          return De.spans(t, i, n, s, 0), s.finish(i);
        }
        constructor(e, t) {
          (this.pos = e), (this.oracle = t), (this.nodes = []), (this.lineStart = -1), (this.lineEnd = -1), (this.covering = null), (this.writtenTo = e);
        }
      }),
      h(_r41, "NodeBuilder"),
      _r41);
  function Jx(r, e, t) {
    var i = new Ba();
    return De.compare(r, e, t, i, 0), i.changes;
  }
  h(Jx, "heightRelevantDecoChanges");
  var Ba =
    ((_class50 = class _class {
      compareRange() {}
      comparePoint(e, t, i, n) {
        (e < t || (i && i.heightRelevant) || (n && n.heightRelevant)) && aa(e, t, this.changes, 5);
      }
      constructor() {
        this.changes = [];
      }
    }),
    h(_class50, "DecorationComparator"),
    _class50);
  function Gx(r, e) {
    var t = r.getBoundingClientRect(),
      i = r.ownerDocument,
      n = i.defaultView || window,
      s = Math.max(0, t.left),
      o = Math.min(n.innerWidth, t.right),
      l = Math.max(0, t.top),
      u = Math.min(n.innerHeight, t.bottom);
    for (var a = r.parentNode; a && a != i.body; )
      if (a.nodeType == 1) {
        var c = a,
          f = window.getComputedStyle(c);
        if ((c.scrollHeight > c.clientHeight || c.scrollWidth > c.clientWidth) && f.overflow != "visible") {
          var d = c.getBoundingClientRect();
          (s = Math.max(s, d.left)), (o = Math.min(o, d.right)), (l = Math.max(l, d.top)), (u = a == r.parentNode ? d.bottom : Math.min(u, d.bottom));
        }
        a = f.position == "absolute" || f.position == "fixed" ? c.offsetParent : c.parentNode;
      } else if (a.nodeType == 11) a = a.host;
      else break;
    return { left: s - t.left, right: Math.max(s, o) - t.left, top: l - (t.top + e), bottom: Math.max(l, u) - (t.top + e) };
  }
  h(Gx, "visiblePixelRange");
  function Xx(r, e) {
    var t = r.getBoundingClientRect();
    return { left: 0, right: t.right - t.left, top: e, bottom: t.bottom - (t.top + e) };
  }
  h(Xx, "fullPixelRange");
  var pn =
      ((_class51 = class _class {
        static same(e, t) {
          if (e.length != t.length) return !1;
          for (var i = 0; i < e.length; i++) {
            var n = e[i],
              s = t[i];
            if (n.from != s.from || n.to != s.to || n.size != s.size) return !1;
          }
          return !0;
        }
        draw(e, t) {
          return pe.replace({ widget: new va(this.size * (t ? e.scaleY : e.scaleX), t) }).range(this.from, this.to);
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.size = i);
        }
      }),
      h(_class51, "LineGap"),
      _class51),
    va =
      ((_class52 = class _class extends ai {
        eq(e) {
          return e.size == this.size && e.vertical == this.vertical;
        }
        toDOM() {
          var e = document.createElement("div");
          return this.vertical ? (e.style.height = this.size + "px") : ((e.style.width = this.size + "px"), (e.style.height = "2px"), (e.style.display = "inline-block")), e;
        }
        get estimatedHeight() {
          return this.vertical ? this.size : -1;
        }
        constructor(e, t) {
          super(), (this.size = e), (this.vertical = t);
        }
      }),
      h(_class52, "LineGapWidget"),
      _class52),
    po =
      ((_class53 = class _class {
        updateForViewport() {
          var _this,
            _loop = function (i) {
              var n = i ? t.head : t.anchor;
              if (
                !e.some((param) => {
                  var s = param.from,
                    o = param.to;
                  return n >= s && n <= o;
                })
              ) {
                var _this_lineBlockAt = _this.lineBlockAt(n),
                  s = _this_lineBlockAt.from,
                  o = _this_lineBlockAt.to;
                e.push(new pr(s, o));
              }
            };
          var e = [this.viewport],
            _this_state_selection = this.state.selection,
            t = _this_state_selection.main;
          for (var i = 0; i <= 1; i++) (_this = this), _loop(i);
          (this.viewports = e.sort((i, n) => i.from - n.from)), (this.scaler = this.heightMap.height <= 7e6 ? Rg : new xa(this.heightOracle, this.heightMap, this.viewports));
        }
        updateViewportLines() {
          (this.viewportLines = []),
            this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
              this.viewportLines.push(this.scaler.scale == 1 ? e : ln(e, this.scaler));
            });
        }
        update(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
          this.state = e.state;
          var i = this.stateDeco;
          this.stateDeco = this.state.facet(En).filter((c) => typeof c != "function");
          var n = e.changedRanges,
            s = Tt.extendWithRanges(n, Jx(i, this.stateDeco, e ? e.changes : We.empty(this.state.doc.length))),
            o = this.heightMap.height,
            l = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
          (this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s)), this.heightMap.height != o && (e.flags |= 2), l ? ((this.scrollAnchorPos = e.changes.mapPos(l.from, -1)), (this.scrollAnchorHeight = l.top)) : ((this.scrollAnchorPos = -1), (this.scrollAnchorHeight = this.heightMap.height));
          var u = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
          ((t && (t.range.head < u.from || t.range.head > u.to)) || !this.viewportIsAppropriate(u)) && (u = this.getViewport(0, t));
          var a = !e.changes.empty || e.flags & 2 || u.from != this.viewport.from || u.to != this.viewport.to;
          (this.viewport = u),
            this.updateForViewport(),
            a && this.updateViewportLines(),
            (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))),
            (e.flags |= this.computeVisibleRanges()),
            t && (this.scrollTarget = t),
            !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(ED) && (this.mustEnforceCursorAssoc = !0);
        }
        measure(e) {
          var t = e.contentDOM,
            i = window.getComputedStyle(t),
            n = this.heightOracle,
            s = i.whiteSpace;
          this.defaultTextDirection = i.direction == "rtl" ? Be.RTL : Be.LTR;
          var o = this.heightOracle.mustRefreshForWrapping(s),
            l = t.getBoundingClientRect(),
            u = o || this.mustMeasureContent || this.contentDOMHeight != l.height;
          (this.contentDOMHeight = l.height), (this.mustMeasureContent = !1);
          var a = 0,
            c = 0;
          if (l.width && l.height) {
            var _Jg = Jg(t, l),
              k = _Jg.scaleX,
              C = _Jg.scaleY;
            ((k > 0.005 && Math.abs(this.scaleX - k) > 0.005) || (C > 0.005 && Math.abs(this.scaleY - C) > 0.005)) && ((this.scaleX = k), (this.scaleY = C), (a |= 8), (o = u = !0));
          }
          var f = (parseInt(i.paddingTop) || 0) * this.scaleY,
            d = (parseInt(i.paddingBottom) || 0) * this.scaleY;
          (this.paddingTop != f || this.paddingBottom != d) && ((this.paddingTop = f), (this.paddingBottom = d), (a |= 10)), this.editorWidth != e.scrollDOM.clientWidth && (n.lineWrapping && (u = !0), (this.editorWidth = e.scrollDOM.clientWidth), (a |= 8));
          var p = e.scrollDOM.scrollTop * this.scaleY;
          this.scrollTop != p && ((this.scrollAnchorHeight = -1), (this.scrollTop = p)), (this.scrolledToBottom = Kg(e.scrollDOM));
          var m = (this.printing ? Xx : Gx)(t, this.paddingTop),
            F = m.top - this.pixelViewport.top,
            g = m.bottom - this.pixelViewport.bottom;
          this.pixelViewport = m;
          var D = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
          if ((D != this.inView && ((this.inView = D), D && (u = !0)), !this.inView && !this.scrollTarget)) return 0;
          var b = l.width;
          if (((this.contentDOMWidth != b || this.editorHeight != e.scrollDOM.clientHeight) && ((this.contentDOMWidth = l.width), (this.editorHeight = e.scrollDOM.clientHeight), (a |= 8)), u)) {
            var k1 = e.docView.measureVisibleLineHeights(this.viewport);
            if ((n.mustRefreshForHeights(k1) && (o = !0), o || (n.lineWrapping && Math.abs(b - this.contentDOMWidth) > n.charWidth))) {
              var _e_docView_measureTextSize = e.docView.measureTextSize(),
                C1 = _e_docView_measureTextSize.lineHeight,
                L = _e_docView_measureTextSize.charWidth,
                Q = _e_docView_measureTextSize.textHeight;
              (o = C1 > 0 && n.refresh(s, C1, L, Q, b / L, k1)), o && ((e.docView.minWidth = 0), (a |= 8));
            }
            F > 0 && g > 0 ? (c = Math.max(F, g)) : F < 0 && g < 0 && (c = Math.min(F, g)), (n.heightChanged = !1);
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var C2 = _step.value;
                var L1 = C2.from == this.viewport.from ? k1 : e.docView.measureVisibleLineHeights(C2);
                this.heightMap = (o ? st.empty().applyChanges(this.stateDeco, fe.empty, this.heightOracle, [new Tt(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(n, 0, o, new ya(C2.from, L1));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            n.heightChanged && (a |= 2);
          }
          var B = !this.viewportIsAppropriate(this.viewport, c) || (this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to));
          return (
            B && (this.viewport = this.getViewport(c, this.scrollTarget)),
            this.updateForViewport(),
            (a & 2 || B) && this.updateViewportLines(),
            (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)),
            (a |= this.computeVisibleRanges()),
            this.mustEnforceCursorAssoc && ((this.mustEnforceCursorAssoc = !1), e.docView.enforceCursorAssoc()),
            a
          );
        }
        get visibleTop() {
          return this.scaler.fromDOM(this.pixelViewport.top);
        }
        get visibleBottom() {
          return this.scaler.fromDOM(this.pixelViewport.bottom);
        }
        getViewport(e, t) {
          var i = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)),
            n = this.heightMap,
            s = this.heightOracle,
            _this = this,
            o = _this.visibleTop,
            l = _this.visibleBottom,
            u = new pr(n.lineAt(o - i * 1e3, Ce.ByHeight, s, 0, 0).from, n.lineAt(l + (1 - i) * 1e3, Ce.ByHeight, s, 0, 0).to);
          if (t) {
            var _t_range = t.range,
              a = _t_range.head;
            if (a < u.from || a > u.to) {
              var c = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top),
                f = n.lineAt(a, Ce.ByPos, s, 0, 0),
                d;
              t.y == "center" ? (d = (f.top + f.bottom) / 2 - c / 2) : t.y == "start" || (t.y == "nearest" && a < u.from) ? (d = f.top) : (d = f.bottom - c), (u = new pr(n.lineAt(d - 1e3 / 2, Ce.ByHeight, s, 0, 0).from, n.lineAt(d + c + 1e3 / 2, Ce.ByHeight, s, 0, 0).to));
            }
          }
          return u;
        }
        mapViewport(e, t) {
          var i = t.mapPos(e.from, -1),
            n = t.mapPos(e.to, 1);
          return new pr(this.heightMap.lineAt(i, Ce.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(n, Ce.ByPos, this.heightOracle, 0, 0).to);
        }
        viewportIsAppropriate(param) {
          var e = param.from,
            t = param.to,
            i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (!this.inView) return !0;
          var _this_heightMap_lineAt = this.heightMap.lineAt(e, Ce.ByPos, this.heightOracle, 0, 0),
            n = _this_heightMap_lineAt.top,
            _this_heightMap_lineAt1 = this.heightMap.lineAt(t, Ce.ByPos, this.heightOracle, 0, 0),
            s = _this_heightMap_lineAt1.bottom,
            _this = this,
            o = _this.visibleTop,
            l = _this.visibleBottom;
          return (e == 0 || n <= o - Math.max(10, Math.min(-i, 250))) && (t == this.state.doc.length || s >= l + Math.max(10, Math.min(i, 250))) && n > o - 2 * 1e3 && s < l + 2 * 1e3;
        }
        mapLineGaps(e, t) {
          if (!e.length || t.empty) return e;
          var i = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              t.touchesRange(n.from, n.to) || i.push(new pn(t.mapPos(n.from), t.mapPos(n.to), n.size));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        ensureLineGaps(e, t) {
          var i = this.heightOracle.lineWrapping,
            n = i ? 1e4 : 2e3,
            s = n >> 1,
            o = n << 1;
          if (this.defaultTextDirection != Be.LTR && !i) return [];
          var l = [],
            u = h((a, c, f, d) => {
              if (c - a < s) return;
              var p = this.state.selection.main,
                m = [p.from];
              p.empty || m.push(p.to);
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = m[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var g = _step.value;
                  if (g > a && g < c) {
                    u(a, g - 10, f, d), u(g + 10, c, f, d);
                    return;
                  }
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              var F = Zx(e, (g) => g.from >= f.from && g.to <= f.to && Math.abs(g.from - a) < s && Math.abs(g.to - c) < s && !m.some((D) => g.from < D && g.to > D));
              if (!F) {
                if (c < f.to && t && i && t.visibleRanges.some((g) => g.from <= c && g.to >= c)) {
                  var g1 = t.moveToLineBoundary(Z.cursor(c), !1, !0).head;
                  g1 > a && (c = g1);
                }
                F = new pn(a, c, this.gapSize(f, a, c, d));
              }
              l.push(F);
            }, "addGap");
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.viewportLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a = _step.value;
              if (a.length < o) continue;
              var c = Kx(a.from, a.to, this.stateDeco);
              if (c.total < o) continue;
              var f = this.scrollTarget ? this.scrollTarget.range.head : null,
                d = void 0,
                p = void 0;
              if (i) {
                var m = (n / this.heightOracle.lineLength) * this.heightOracle.lineHeight,
                  F = void 0,
                  g = void 0;
                if (f != null) {
                  var D = Gs(c, f),
                    b = ((this.visibleBottom - this.visibleTop) / 2 + m) / a.height;
                  (F = D - b), (g = D + b);
                } else (F = (this.visibleTop - a.top - m) / a.height), (g = (this.visibleBottom - a.top + m) / a.height);
                (d = Js(c, F)), (p = Js(c, g));
              } else {
                var m1 = c.total * this.heightOracle.charWidth,
                  F1 = n * this.heightOracle.charWidth,
                  g1 = void 0,
                  D1 = void 0;
                if (f != null) {
                  var b1 = Gs(c, f),
                    B = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + F1) / m1;
                  (g1 = b1 - B), (D1 = b1 + B);
                } else (g1 = (this.pixelViewport.left - F1) / m1), (D1 = (this.pixelViewport.right + F1) / m1);
                (d = Js(c, g1)), (p = Js(c, D1));
              }
              d > a.from && u(a.from, d, a, c), p < a.to && u(p, a.to, a, c);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return l;
        }
        gapSize(e, t, i, n) {
          var s = Gs(n, i) - Gs(n, t);
          return this.heightOracle.lineWrapping ? e.height * s : n.total * this.heightOracle.charWidth * s;
        }
        updateLineGaps(e) {
          pn.same(e, this.lineGaps) || ((this.lineGaps = e), (this.lineGapDeco = pe.set(e.map((t) => t.draw(this, this.heightOracle.lineWrapping)))));
        }
        computeVisibleRanges() {
          var e = this.stateDeco;
          this.lineGaps.length && (e = e.concat(this.lineGapDeco));
          var t = [];
          De.spans(
            e,
            this.viewport.from,
            this.viewport.to,
            {
              span(n, s) {
                t.push({ from: n, to: s });
              },
              point() {},
            },
            20,
          );
          var i = t.length != this.visibleRanges.length || this.visibleRanges.some((n, s) => n.from != t[s].from || n.to != t[s].to);
          return (this.visibleRanges = t), i ? 4 : 0;
        }
        lineBlockAt(e) {
          return (e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e)) || ln(this.heightMap.lineAt(e, Ce.ByPos, this.heightOracle, 0, 0), this.scaler);
        }
        lineBlockAtHeight(e) {
          return ln(this.heightMap.lineAt(this.scaler.fromDOM(e), Ce.ByHeight, this.heightOracle, 0, 0), this.scaler);
        }
        scrollAnchorAt(e) {
          var t = this.lineBlockAtHeight(e + 8);
          return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
        }
        elementAtHeight(e) {
          return ln(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
        }
        get docHeight() {
          return this.scaler.toDOM(this.heightMap.height);
        }
        get contentHeight() {
          return this.docHeight + this.paddingTop + this.paddingBottom;
        }
        constructor(e) {
          (this.state = e),
            (this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }),
            (this.inView = !0),
            (this.paddingTop = 0),
            (this.paddingBottom = 0),
            (this.contentDOMWidth = 0),
            (this.contentDOMHeight = 0),
            (this.editorHeight = 0),
            (this.editorWidth = 0),
            (this.scrollTop = 0),
            (this.scrolledToBottom = !1),
            (this.scaleX = 1),
            (this.scaleY = 1),
            (this.scrollAnchorPos = 0),
            (this.scrollAnchorHeight = -1),
            (this.scaler = Rg),
            (this.scrollTarget = null),
            (this.printing = !1),
            (this.mustMeasureContent = !0),
            (this.defaultTextDirection = Be.LTR),
            (this.visibleRanges = []),
            (this.mustEnforceCursorAssoc = !1);
          var t = e.facet(qa).some((i) => typeof i != "function" && i.class == "cm-lineWrapping");
          (this.heightOracle = new ba(t)),
            (this.stateDeco = e.facet(En).filter((i) => typeof i != "function")),
            (this.heightMap = st.empty().applyChanges(this.stateDeco, fe.empty, this.heightOracle.setDoc(e.doc), [new Tt(0, 0, 0, e.doc.length)])),
            (this.viewport = this.getViewport(0, null)),
            this.updateViewportLines(),
            this.updateForViewport(),
            (this.lineGaps = this.ensureLineGaps([])),
            (this.lineGapDeco = pe.set(this.lineGaps.map((i) => i.draw(this, !1)))),
            this.computeVisibleRanges();
        }
      }),
      h(_class53, "ViewState"),
      _class53),
    pr =
      ((_class54 = class _class {
        constructor(e, t) {
          (this.from = e), (this.to = t);
        }
      }),
      h(_class54, "Viewport"),
      _class54);
  function Kx(r, e, t) {
    var i = [],
      n = r,
      s = 0;
    return (
      De.spans(
        t,
        r,
        e,
        {
          span() {},
          point(o, l) {
            o > n && (i.push({ from: n, to: o }), (s += o - n)), (n = l);
          },
        },
        20,
      ),
      n < e && (i.push({ from: n, to: e }), (s += e - n)),
      { total: s, ranges: i }
    );
  }
  h(Kx, "lineStructure");
  function Js(param, t) {
    var r = param.total,
      e = param.ranges;
    if (t <= 0) return e[0].from;
    if (t >= 1) return e[e.length - 1].to;
    var i = Math.floor(r * t);
    for (var n = 0; ; n++) {
      var _e_n = e[n],
        s = _e_n.from,
        o = _e_n.to,
        l = o - s;
      if (i <= l) return s + i;
      i -= l;
    }
  }
  h(Js, "findPosition");
  function Gs(r, e) {
    var t = 0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _step.value,
          i = _step_value.from,
          n = _step_value.to;
        if (e <= n) {
          t += e - i;
          break;
        }
        t += n - i;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t / r.total;
  }
  h(Gs, "findFraction");
  function Zx(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (e(t)) return t;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(Zx, "find");
  var Rg = {
      toDOM(r) {
        return r;
      },
      fromDOM(r) {
        return r;
      },
      scale: 1,
    },
    xa =
      ((_class55 = class _class {
        toDOM(e) {
          for (var t = 0, i = 0, n = 0; ; t++) {
            var s = t < this.viewports.length ? this.viewports[t] : null;
            if (!s || e < s.top) return n + (e - i) * this.scale;
            if (e <= s.bottom) return s.domTop + (e - s.top);
            (i = s.bottom), (n = s.domBottom);
          }
        }
        fromDOM(e) {
          for (var t = 0, i = 0, n = 0; ; t++) {
            var s = t < this.viewports.length ? this.viewports[t] : null;
            if (!s || e < s.domTop) return i + (e - n) / this.scale;
            if (e <= s.domBottom) return s.top + (e - s.domTop);
            (i = s.bottom), (n = s.domBottom);
          }
        }
        constructor(e, t, i) {
          var n = 0,
            s = 0,
            o = 0;
          (this.viewports = i.map((param) => {
            var l = param.from,
              u = param.to;
            var a = t.lineAt(l, Ce.ByPos, e, 0, 0).top,
              c = t.lineAt(u, Ce.ByPos, e, 0, 0).bottom;
            return (n += c - a), { from: l, to: u, top: a, bottom: c, domTop: 0, domBottom: 0 };
          })),
            (this.scale = (7e6 - n) / (t.height - n));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l = _step.value;
              (l.domTop = o + (l.top - s) * this.scale), (o = l.domBottom = l.domTop + (l.bottom - l.top)), (s = l.bottom);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      h(_class55, "BigScaler"),
      _class55);
  function ln(r, e) {
    if (e.scale == 1) return r;
    var t = e.toDOM(r.top),
      i = e.toDOM(r.bottom);
    return new Lt(r.from, r.length, t, i - t, Array.isArray(r._content) ? r._content.map((n) => ln(n, e)) : r._content);
  }
  h(ln, "scaleBlock");
  var Xs = H.define({ combine: (r) => r.join(" ") }),
    Aa = H.define({ combine: (r) => r.indexOf(!0) > -1 }),
    ka = ft.newName(),
    PD = ft.newName(),
    ID = ft.newName(),
    $D = { "&light": "." + PD, "&dark": "." + ID };
  function Sa(r, e, t) {
    return new ft(e, {
      finish(i) {
        return /&/.test(i)
          ? i.replace(/&\w*/, (n) => {
              if (n == "&") return r;
              if (!t || !t[n]) throw new RangeError("Unsupported selector: ".concat(n));
              return t[n];
            })
          : r + " " + i;
      },
    });
  }
  h(Sa, "buildTheme");
  var eA = Sa(
      "." + ka,
      {
        "&": { position: "relative !important", boxSizing: "border-box", "&.cm-focused": { outline: "1px dotted #212121" }, display: "flex !important", flexDirection: "column" },
        ".cm-scroller": { display: "flex !important", alignItems: "flex-start !important", fontFamily: "monospace", lineHeight: 1.4, height: "100%", overflowX: "auto", position: "relative", zIndex: 0 },
        ".cm-content": { margin: 0, flexGrow: 2, flexShrink: 0, display: "block", whiteSpace: "pre", wordWrap: "normal", boxSizing: "border-box", minHeight: "100%", padding: "4px 0", outline: "none", "&[contenteditable=true]": { WebkitUserModify: "read-write-plaintext-only" } },
        ".cm-lineWrapping": { whiteSpace_fallback: "pre-wrap", whiteSpace: "break-spaces", wordBreak: "break-word", overflowWrap: "anywhere", flexShrink: 1 },
        "&light .cm-content": { caretColor: "black" },
        "&dark .cm-content": { caretColor: "white" },
        ".cm-line": { display: "block", padding: "0 2px 0 6px" },
        ".cm-layer": { position: "absolute", left: 0, top: 0, contain: "size style", "& > *": { position: "absolute" } },
        "&light .cm-selectionBackground": { background: "#d9d9d9" },
        "&dark .cm-selectionBackground": { background: "#222" },
        "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": { background: "#d7d4f0" },
        "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": { background: "#233" },
        ".cm-cursorLayer": { pointerEvents: "none" },
        "&.cm-focused > .cm-scroller > .cm-cursorLayer": { animation: "steps(1) cm-blink 1.2s infinite" },
        "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        ".cm-cursor, .cm-dropCursor": { borderLeft: "1.2px solid black", marginLeft: "-0.6px", pointerEvents: "none" },
        ".cm-cursor": { display: "none" },
        "&dark .cm-cursor": { borderLeftColor: "#444" },
        ".cm-dropCursor": { position: "absolute" },
        "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": { display: "block" },
        ".cm-iso": { unicodeBidi: "isolate" },
        ".cm-announced": { position: "fixed", top: "-10000px" },
        "@media print": { ".cm-announced": { display: "none" } },
        "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
        "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
        "&light .cm-specialChar": { color: "red" },
        "&dark .cm-specialChar": { color: "#f78" },
        ".cm-gutters": { flexShrink: 0, display: "flex", height: "100%", boxSizing: "border-box", insetInlineStart: 0, zIndex: 200 },
        "&light .cm-gutters": { backgroundColor: "#f5f5f5", color: "#6c6c6c", borderRight: "1px solid #ddd" },
        "&dark .cm-gutters": { backgroundColor: "#333338", color: "#ccc" },
        ".cm-gutter": { display: "flex !important", flexDirection: "column", flexShrink: 0, boxSizing: "border-box", minHeight: "100%", overflow: "hidden" },
        ".cm-gutterElement": { boxSizing: "border-box" },
        ".cm-lineNumbers .cm-gutterElement": { padding: "0 3px 0 5px", minWidth: "20px", textAlign: "right", whiteSpace: "nowrap" },
        "&light .cm-activeLineGutter": { backgroundColor: "#e2f2ff" },
        "&dark .cm-activeLineGutter": { backgroundColor: "#222227" },
        ".cm-panels": { boxSizing: "border-box", position: "sticky", left: 0, right: 0 },
        "&light .cm-panels": { backgroundColor: "#f5f5f5", color: "black" },
        "&light .cm-panels-top": { borderBottom: "1px solid #ddd" },
        "&light .cm-panels-bottom": { borderTop: "1px solid #ddd" },
        "&dark .cm-panels": { backgroundColor: "#333338", color: "white" },
        ".cm-tab": { display: "inline-block", overflow: "hidden", verticalAlign: "bottom" },
        ".cm-widgetBuffer": { verticalAlign: "text-top", height: "1em", width: 0, display: "inline" },
        ".cm-placeholder": { color: "#888", display: "inline-block", verticalAlign: "top" },
        ".cm-highlightSpace:before": { content: "attr(data-display)", position: "absolute", pointerEvents: "none", color: "#888" },
        ".cm-highlightTab": { backgroundImage: 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')', backgroundSize: "auto 100%", backgroundPosition: "right 90%", backgroundRepeat: "no-repeat" },
        ".cm-trailingSpace": { backgroundColor: "#ff332255" },
        ".cm-button": { verticalAlign: "middle", color: "inherit", fontSize: "70%", padding: ".2em 1em", borderRadius: "1px" },
        "&light .cm-button": { backgroundImage: "linear-gradient(#eff1f5, #d9d9df)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)" } },
        "&dark .cm-button": { backgroundImage: "linear-gradient(#393939, #111)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#111, #333)" } },
        ".cm-textfield": { verticalAlign: "middle", color: "inherit", fontSize: "70%", border: "1px solid silver", padding: ".2em .5em" },
        "&light .cm-textfield": { backgroundColor: "white" },
        "&dark .cm-textfield": { border: "1px solid #555", backgroundColor: "inherit" },
      },
      $D,
    ),
    un = "￿",
    wa =
      ((_class56 = class _class {
        append(e) {
          this.text += e;
        }
        lineBreak() {
          this.text += un;
        }
        readRange(e, t) {
          if (!e) return this;
          var i = e.parentNode;
          for (var n = e; ; ) {
            this.findPointBefore(i, n);
            var s = this.text.length;
            this.readNode(n);
            var o = n.nextSibling;
            if (o == t) break;
            var l = Fe.get(n),
              u = Fe.get(o);
            (l && u ? l.breakAfter : (l ? l.breakAfter : lo(n)) || (lo(o) && (n.nodeName != "BR" || n.cmIgnore) && this.text.length > s)) && this.lineBreak(), (n = o);
          }
          return this.findPointBefore(i, t), this;
        }
        readTextNode(e) {
          var t = e.nodeValue;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.node == e && (i.pos = this.text.length + Math.min(i.offset, t.length));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = 0, n = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
            var s = -1,
              o = 1,
              l = void 0;
            if ((this.lineSeparator ? ((s = t.indexOf(this.lineSeparator, i1)), (o = this.lineSeparator.length)) : (l = n.exec(t)) && ((s = l.index), (o = l[0].length)), this.append(t.slice(i1, s < 0 ? t.length : s)), s < 0)) break;
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            if ((this.lineBreak(), o > 1))
              try {
                for (var _iterator1 = this.points[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var u = _step1.value;
                  u.node == e && u.pos > this.text.length && (u.pos -= o - 1);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
            i1 = s + o;
          }
        }
        readNode(e) {
          if (e.cmIgnore) return;
          var t = Fe.get(e),
            i = t && t.overrideDOMText;
          if (i != null) {
            this.findPointInside(e, i.length);
            for (var n = i.iter(); !n.next().done; ) n.lineBreak ? this.lineBreak() : this.append(n.value);
          } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
        }
        findPointBefore(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.node == e && e.childNodes[i.offset] == t && (i.pos = this.text.length);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        findPointInside(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              (e.nodeType == 3 ? i.node == e : e.contains(i.node)) && (i.pos = this.text.length + (tA(e, i.node, i.offset) ? t : 0));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        constructor(e, t) {
          (this.points = e), (this.text = ""), (this.lineSeparator = t.facet(Ae.lineSeparator));
        }
      }),
      h(_class56, "DOMReader"),
      _class56);
  function tA(r, e, t) {
    for (;;) {
      if (!e || t < Zt(e)) return !1;
      if (e == r) return !0;
      (t = wi(e) + 1), (e = e.parentNode);
    }
  }
  h(tA, "isAtEnd");
  var mo =
      ((_class57 = class _class {
        constructor(e, t) {
          (this.node = e), (this.offset = t), (this.pos = -1);
        }
      }),
      h(_class57, "DOMPoint"),
      _class57),
    Qa =
      ((_class58 = class _class {
        constructor(e, t, i, n) {
          (this.typeOver = n), (this.bounds = null), (this.text = "");
          var _e_docView = e.docView,
            s = _e_docView.impreciseHead,
            o = _e_docView.impreciseAnchor;
          if (e.state.readOnly && t > -1) this.newSel = null;
          else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, i, 0))) {
            var l = s || o ? [] : nA(e),
              u = new wa(l, e.state);
            u.readRange(this.bounds.startDOM, this.bounds.endDOM), (this.text = u.text), (this.newSel = sA(l, this.bounds.from));
          } else {
            var l1 = e.observer.selectionRange,
              u1 = (s && s.node == l1.focusNode && s.offset == l1.focusOffset) || !ia(e.contentDOM, l1.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(l1.focusNode, l1.focusOffset),
              a = (o && o.node == l1.anchorNode && o.offset == l1.anchorOffset) || !ia(e.contentDOM, l1.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(l1.anchorNode, l1.anchorOffset),
              c = e.viewport;
            if ((W.ios || W.chrome) && e.state.selection.main.empty && u1 != a && (c.from > 0 || c.to < e.state.doc.length)) {
              var f = Math.min(u1, a),
                d = Math.max(u1, a),
                p = c.from - f,
                m = c.to - d;
              (p == 0 || p == 1 || f == 0) && (m == 0 || m == -1 || d == e.state.doc.length) && ((u1 = 0), (a = e.state.doc.length));
            }
            this.newSel = Z.single(a, u1);
          }
        }
      }),
      h(_class58, "DOMChange"),
      _class58);
  function qD(r, e) {
    var t,
      i = e.newSel,
      n = r.state.selection.main,
      s = r.inputState.lastKeyTime > Date.now() - 100 ? r.inputState.lastKeyCode : -1;
    if (e.bounds) {
      var _e_bounds = e.bounds,
        o = _e_bounds.from,
        l = _e_bounds.to,
        u = n.from,
        a = null;
      (s === 8 || (W.android && e.text.length < l - o)) && ((u = n.to), (a = "end"));
      var c = rA(r.state.doc.sliceString(o, l, un), e.text, u - o, a);
      c && (W.chrome && s == 13 && c.toB == c.from + 2 && e.text.slice(c.from, c.toB) == un + un && c.toB--, (t = { from: o + c.from, to: o + c.toA, insert: fe.of(e.text.slice(c.from, c.toB).split(un)) }));
    } else i && ((!r.hasFocus && r.state.facet(vo)) || i.main.eq(n)) && (i = null);
    if (!t && !i) return !1;
    if (
      (!t && e.typeOver && !n.empty && i && i.main.empty
        ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, n.to) })
        : t && t.from >= n.from && t.to <= n.to && (t.from != n.from || t.to != n.to) && n.to - n.from - (t.to - t.from) <= 4
          ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, t.from).append(t.insert).append(r.state.doc.slice(t.to, n.to)) })
          : (W.mac || W.android) && t && t.from == t.to && t.from == n.head - 1 && /^\. ?$/.test(t.insert.toString()) && r.contentDOM.getAttribute("autocorrect") == "off"
            ? (i && t.insert.length == 2 && (i = Z.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: fe.of([" "]) }))
            : W.chrome && t && t.from == t.to && t.from == n.head && t.insert.toString() == "\n " && r.lineWrapping && (i && (i = Z.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: fe.of([" "]) })),
      t)
    ) {
      if (
        (W.ios && r.inputState.flushIOSKey(t)) ||
        (W.android &&
          ((t.to == n.to && (t.from == n.from || (t.from == n.from - 1 && r.state.sliceDoc(t.from, n.from) == " ")) && t.insert.length == 1 && t.insert.lines == 2 && Dr(r.contentDOM, "Enter", 13)) ||
            (((t.from == n.from - 1 && t.to == n.to && t.insert.length == 0) || (s == 8 && t.insert.length < t.to - t.from && t.to > n.head)) && Dr(r.contentDOM, "Backspace", 8)) ||
            (t.from == n.from && t.to == n.to + 1 && t.insert.length == 0 && Dr(r.contentDOM, "Delete", 46))))
      )
        return !0;
      var o1 = t.insert.toString();
      r.inputState.composing >= 0 && r.inputState.composing++;
      var l1,
        u1 = h(() => l1 || (l1 = iA(r, t, i)), "defaultInsert");
      return r.state.facet(FD).some((a) => a(r, t.from, t.to, o1, u1)) || r.dispatch(u1()), !0;
    } else if (i && !i.main.eq(n)) {
      var o2 = !1,
        l2 = "select";
      return r.inputState.lastSelectionTime > Date.now() - 50 && (r.inputState.lastSelectionOrigin == "select" && (o2 = !0), (l2 = r.inputState.lastSelectionOrigin)), r.dispatch({ selection: i, scrollIntoView: o2, userEvent: l2 }), !0;
    } else return !1;
  }
  h(qD, "applyDOMChange");
  function iA(r, e, t) {
    var i,
      n = r.state,
      s = n.selection.main;
    if (e.from >= s.from && e.to <= s.to && e.to - e.from >= (s.to - s.from) / 3 && (!t || (t.main.empty && t.main.from == e.from + e.insert.length)) && r.inputState.composing < 0) {
      var l = s.from < e.from ? n.sliceDoc(s.from, e.from) : "",
        u = s.to > e.to ? n.sliceDoc(e.to, s.to) : "";
      i = n.replaceSelection(r.state.toText(l + e.insert.sliceString(0, void 0, r.state.lineBreak) + u));
    } else {
      var l1 = n.changes(e),
        u1 = t && t.main.to <= l1.newLength ? t.main : void 0;
      if (n.selection.ranges.length > 1 && r.inputState.composing >= 0 && e.to <= s.to && e.to >= s.to - 10) {
        var a = r.state.sliceDoc(e.from, e.to),
          c,
          f = t && SD(r, t.main.head);
        if (f) {
          var m = e.insert.length - (e.to - e.from);
          c = { from: f.from, to: f.to - m };
        } else c = r.state.doc.lineAt(s.head);
        var d = s.to - e.to,
          p = s.to - s.from;
        i = n.changeByRange((m) => {
          if (m.from == s.from && m.to == s.to) return { changes: l1, range: u1 || m.map(l1) };
          var F = m.to - d,
            g = F - a.length;
          if (m.to - m.from != p || r.state.sliceDoc(g, F) != a || (m.to >= c.from && m.from <= c.to)) return { range: m };
          var D = n.changes({ from: g, to: F, insert: e.insert }),
            b = m.to - s.to;
          return { changes: D, range: u1 ? Z.range(Math.max(0, u1.anchor + b), Math.max(0, u1.head + b)) : m.map(D) };
        });
      } else i = { changes: l1, selection: u1 && n.selection.replaceRange(u1) };
    }
    var o = "input.type";
    return (r.composing || (r.inputState.compositionPendingChange && r.inputState.compositionEndedAt > Date.now() - 50)) && ((r.inputState.compositionPendingChange = !1), (o += ".compose"), r.inputState.compositionFirstChange && ((o += ".start"), (r.inputState.compositionFirstChange = !1))), n.update(i, { userEvent: o, scrollIntoView: !0 });
  }
  h(iA, "applyDefaultInsert");
  function rA(r, e, t, i) {
    var n = Math.min(r.length, e.length),
      s = 0;
    for (; s < n && r.charCodeAt(s) == e.charCodeAt(s); ) s++;
    if (s == n && r.length == e.length) return null;
    var o = r.length,
      l = e.length;
    for (; o > 0 && l > 0 && r.charCodeAt(o - 1) == e.charCodeAt(l - 1); ) o--, l--;
    if (i == "end") {
      var u = Math.max(0, s - Math.min(o, l));
      t -= o + u - s;
    }
    if (o < s && r.length < e.length) {
      var u1 = t <= s && t >= o ? s - t : 0;
      (s -= u1), (l = s + (l - o)), (o = s);
    } else if (l < s) {
      var u2 = t <= s && t >= l ? s - t : 0;
      (s -= u2), (o = s + (o - l)), (l = s);
    }
    return { from: s, toA: o, toB: l };
  }
  h(rA, "findDiff");
  function nA(r) {
    var e = [];
    if (r.root.activeElement != r.contentDOM) return e;
    var _r_observer_selectionRange = r.observer.selectionRange,
      t = _r_observer_selectionRange.anchorNode,
      i = _r_observer_selectionRange.anchorOffset,
      n = _r_observer_selectionRange.focusNode,
      s = _r_observer_selectionRange.focusOffset;
    return t && (e.push(new mo(t, i)), (n != t || s != i) && e.push(new mo(n, s))), e;
  }
  h(nA, "selectionPoints");
  function sA(r, e) {
    if (r.length == 0) return null;
    var t = r[0].pos,
      i = r.length == 2 ? r[1].pos : t;
    return t > -1 && i > -1 ? Z.single(t + e, i + e) : null;
  }
  h(sA, "selectionFromPoints");
  var oA = { childList: !0, characterData: !0, subtree: !0, attributes: !0, characterDataOldValue: !0 },
    Zu = W.ie && W.ie_version <= 11,
    _a =
      ((_class59 = class _class {
        onScrollChanged(e) {
          this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
        }
        onScroll(e) {
          this.intersecting && this.flush(!1), this.onScrollChanged(e);
        }
        onResize() {
          this.resizeTimeout < 0 &&
            (this.resizeTimeout = setTimeout(() => {
              (this.resizeTimeout = -1), this.view.requestMeasure();
            }, 50));
        }
        onPrint(e) {
          (e.type == "change" && !e.matches) ||
            ((this.view.viewState.printing = !0),
            this.view.measure(),
            setTimeout(() => {
              (this.view.viewState.printing = !1), this.view.requestMeasure();
            }, 500));
        }
        updateGaps(e) {
          if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, i) => t != e[i]))) {
            this.gapIntersection.disconnect();
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var t = _step.value;
                this.gapIntersection.observe(t);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            this.gaps = e;
          }
        }
        onSelectionChange(e) {
          var t = this.selectionChanged;
          if (!this.readSelectionRange() || this.delayedAndroidKey) return;
          var _this = this,
            i = _this.view,
            n = this.selectionRange;
          if (i.state.facet(vo) ? i.root.activeElement != this.dom : !eo(i.dom, n)) return;
          var s = n.anchorNode && i.docView.nearest(n.anchorNode);
          if (s && s.ignoreEvent(e)) {
            t || (this.selectionChanged = !1);
            return;
          }
          ((W.ie && W.ie_version <= 11) || (W.android && W.chrome)) && !i.state.selection.main.empty && n.focusNode && hn(n.focusNode, n.focusOffset, n.anchorNode, n.anchorOffset) ? this.flushSoon() : this.flush(!1);
        }
        readSelectionRange() {
          var _this = this,
            e = _this.view,
            t = oo(e.root);
          if (!t) return !1;
          var i = (W.safari && e.root.nodeType == 11 && Xv(this.dom.ownerDocument) == this.dom && lA(this.view, t)) || t;
          if (!i || this.selectionRange.eq(i)) return !1;
          var n = eo(this.dom, i);
          return n && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && ix(this.dom, i) ? ((this.view.inputState.lastFocusTime = 0), e.docView.updateSelection(), !1) : (this.selectionRange.setRange(i), n && (this.selectionChanged = !0), !0);
        }
        setSelectionRange(e, t) {
          this.selectionRange.set(e.node, e.offset, t.node, t.offset), (this.selectionChanged = !1);
        }
        clearSelectionRange() {
          this.selectionRange.set(null, 0, null, 0);
        }
        listenForScroll() {
          this.parentCheck = -1;
          var e = 0,
            t = null;
          for (var i = this.dom; i; )
            if (i.nodeType == 1) !t && e < this.scrollTargets.length && this.scrollTargets[e] == i ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(i), (i = i.assignedSlot || i.parentNode);
            else if (i.nodeType == 11) i = i.host;
            else break;
          if ((e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t)) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step.value;
                i1.removeEventListener("scroll", this.onScroll);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = (this.scrollTargets = t)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var i2 = _step1.value;
                i2.addEventListener("scroll", this.onScroll);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
        ignore(e) {
          if (!this.active) return e();
          try {
            return this.stop(), e();
          } finally {
            this.start(), this.clear();
          }
        }
        start() {
          this.active || (this.observer.observe(this.dom, oA), Zu && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), (this.active = !0));
        }
        stop() {
          this.active && ((this.active = !1), this.observer.disconnect(), Zu && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
        }
        clear() {
          this.processRecords(), (this.queue.length = 0), (this.selectionChanged = !1);
        }
        delayAndroidKey(e, t) {
          var i;
          if (!this.delayedAndroidKey) {
            var n = h(() => {
              var s = this.delayedAndroidKey;
              s && (this.clearDelayedAndroidKey(), (this.view.inputState.lastKeyCode = s.keyCode), (this.view.inputState.lastKeyTime = Date.now()), !this.flush() && s.force && Dr(this.dom, s.key, s.keyCode));
            }, "flush");
            this.flushingAndroidKey = this.view.win.requestAnimationFrame(n);
          }
          (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = { key: e, keyCode: t, force: this.lastChange < Date.now() - 50 || !!(!((i = this.delayedAndroidKey) === null || i === void 0) && i.force) });
        }
        clearDelayedAndroidKey() {
          this.win.cancelAnimationFrame(this.flushingAndroidKey), (this.delayedAndroidKey = null), (this.flushingAndroidKey = -1);
        }
        flushSoon() {
          this.delayedFlush < 0 &&
            (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
              (this.delayedFlush = -1), this.flush();
            }));
        }
        forceFlush() {
          this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), (this.delayedFlush = -1)), this.flush();
        }
        pendingRecords() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.observer.takeRecords()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              this.queue.push(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.queue;
        }
        processRecords() {
          var e = this.pendingRecords();
          e.length && (this.queue = []);
          var t = -1,
            i = -1,
            n = !1;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              var o = this.readMutation(s);
              var ref;
              o && (o.typeOver && (n = !0), t == -1 ? ((ref = o), (t = ref.from), (i = ref.to), ref) : ((t = Math.min(o.from, t)), (i = Math.max(o.to, i))));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return { from: t, to: i, typeOver: n };
        }
        readChange() {
          var _this_processRecords = this.processRecords(),
            e = _this_processRecords.from,
            t = _this_processRecords.to,
            i = _this_processRecords.typeOver,
            n = this.selectionChanged && eo(this.dom, this.selectionRange);
          if (e < 0 && !n) return null;
          e > -1 && (this.lastChange = Date.now()), (this.view.inputState.lastFocusTime = 0), (this.selectionChanged = !1);
          var s = new Qa(this.view, e, t, i);
          return (this.view.docView.domChanged = { newSel: s.newSel ? s.newSel.main : null }), s;
        }
        flush() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
          if (this.delayedFlush >= 0 || this.delayedAndroidKey) return !1;
          e && this.readSelectionRange();
          var t = this.readChange();
          if (!t) return this.view.requestMeasure(), !1;
          var i = this.view.state,
            n = qD(this.view, t);
          return this.view.state == i && this.view.update([]), n;
        }
        readMutation(e) {
          var t = this.view.docView.nearest(e.target);
          if (!t || t.ignoreMutation(e)) return null;
          if ((t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList")) {
            var i = Ng(t, e.previousSibling || e.target.previousSibling, -1),
              n = Ng(t, e.nextSibling || e.target.nextSibling, 1);
            return { from: i ? t.posAfter(i) : t.posAtStart, to: n ? t.posBefore(n) : t.posAtEnd, typeOver: !1 };
          } else return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
        }
        setWindow(e) {
          e != this.win && (this.removeWindowListeners(this.win), (this.win = e), this.addWindowListeners(this.win));
        }
        addWindowListeners(e) {
          e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener("change", this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
        }
        removeWindowListeners(e) {
          e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener("change", this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
        }
        destroy() {
          var e, t, i;
          this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (i = this.resizeScroll) === null || i === void 0 || i.disconnect();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.removeEventListener("scroll", this.onScroll);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey);
        }
        constructor(e) {
          (this.view = e),
            (this.active = !1),
            (this.selectionRange = new ra()),
            (this.selectionChanged = !1),
            (this.delayedFlush = -1),
            (this.resizeTimeout = -1),
            (this.queue = []),
            (this.delayedAndroidKey = null),
            (this.flushingAndroidKey = -1),
            (this.lastChange = 0),
            (this.scrollTargets = []),
            (this.intersection = null),
            (this.resizeScroll = null),
            (this.intersecting = !1),
            (this.gapIntersection = null),
            (this.gaps = []),
            (this.printQuery = null),
            (this.parentCheck = -1),
            (this.dom = e.contentDOM),
            (this.observer = new MutationObserver((t) => {
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var i = _step.value;
                  this.queue.push(i);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              ((W.ie && W.ie_version <= 11) || (W.ios && e.composing)) && t.some((i) => (i.type == "childList" && i.removedNodes.length) || (i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length)) ? this.flushSoon() : this.flush();
            })),
            Zu &&
              (this.onCharData = (t) => {
                this.queue.push({ target: t.target, type: "characterData", oldValue: t.prevValue }), this.flushSoon();
              }),
            (this.onSelectionChange = this.onSelectionChange.bind(this)),
            (this.onResize = this.onResize.bind(this)),
            (this.onPrint = this.onPrint.bind(this)),
            (this.onScroll = this.onScroll.bind(this)),
            window.matchMedia && (this.printQuery = window.matchMedia("print")),
            typeof ResizeObserver == "function" &&
              ((this.resizeScroll = new ResizeObserver(() => {
                var t;
                ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
              })),
              this.resizeScroll.observe(e.scrollDOM)),
            this.addWindowListeners((this.win = e.win)),
            this.start(),
            typeof IntersectionObserver == "function" &&
              ((this.intersection = new IntersectionObserver(
                (t) => {
                  this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && ((this.intersecting = !this.intersecting), this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
                },
                { threshold: [0, 0.001] },
              )),
              this.intersection.observe(this.dom),
              (this.gapIntersection = new IntersectionObserver((t) => {
                t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
              }, {}))),
            this.listenForScroll(),
            this.readSelectionRange();
        }
      }),
      h(_class59, "DOMObserver"),
      _class59);
  function Ng(r, e, t) {
    for (; e; ) {
      var i = Fe.get(e);
      if (i && i.parent == r) return i;
      var n = e.parentNode;
      e = n != r.dom ? n : t > 0 ? e.nextSibling : e.previousSibling;
    }
    return null;
  }
  h(Ng, "findChild");
  function Mg(r, e) {
    var t = e.startContainer,
      i = e.startOffset,
      n = e.endContainer,
      s = e.endOffset,
      o = r.docView.domAtPos(r.state.selection.main.anchor);
    var ref;
    return hn(o.node, o.offset, n, s) && ((ref = [n, s, t, i]), (t = ref[0]), (i = ref[1]), (n = ref[2]), (s = ref[3]), ref), { anchorNode: t, anchorOffset: i, focusNode: n, focusOffset: s };
  }
  h(Mg, "buildSelectionRangeFromRange");
  function lA(r, e) {
    if (e.getComposedRanges) {
      var n = e.getComposedRanges(r.root)[0];
      if (n) return Mg(r, n);
    }
    var t = null;
    function i(n) {
      n.preventDefault(), n.stopImmediatePropagation(), (t = n.getTargetRanges()[0]);
    }
    return h(i, "read"), r.contentDOM.addEventListener("beforeinput", i, !0), r.dom.ownerDocument.execCommand("indent"), r.contentDOM.removeEventListener("beforeinput", i, !0), t ? Mg(r, t) : null;
  }
  h(lA, "safariSelectionRangeHack");
  var ne =
    ((_r42 = class r {
      get state() {
        return this.viewState.state;
      }
      get viewport() {
        return this.viewState.viewport;
      }
      get visibleRanges() {
        return this.viewState.visibleRanges;
      }
      get inView() {
        return this.viewState.inView;
      }
      get composing() {
        return this.inputState.composing > 0;
      }
      get compositionStarted() {
        return this.inputState.composing >= 0;
      }
      get root() {
        return this._root;
      }
      get win() {
        return this.dom.ownerDocument.defaultView || window;
      }
      dispatch() {
        for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
          e[_key] = arguments[_key];
        }
        var t = e.length == 1 && e[0] instanceof Le ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
        this.dispatchTransactions(t, this);
      }
      update(e) {
        if (this.updateState != 0) throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
        var t = !1,
          i = !1,
          n,
          s = this.state;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var d = _step.value;
            if (d.startState != s) throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
            s = d.state;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        if (this.destroyed) {
          this.viewState.state = s;
          return;
        }
        var o = this.hasFocus,
          l = 0,
          u = null;
        e.some((d) => d.annotation(RD)) ? ((this.inputState.notifiedFocused = o), (l = 1)) : o != this.inputState.notifiedFocused && ((this.inputState.notifiedFocused = o), (u = ND(s, o)), u || (l = 1));
        var a = this.observer.delayedAndroidKey,
          c = null;
        if ((a ? (this.observer.clearDelayedAndroidKey(), (c = this.observer.readChange()), ((c && !this.state.doc.eq(s.doc)) || !this.state.selection.eq(s.selection)) && (c = null)) : this.observer.clear(), s.facet(Ae.phrases) != this.state.facet(Ae.phrases))) return this.setState(s);
        (n = ao.create(this, s, e)), (n.flags |= l);
        var f = this.viewState.scrollTarget;
        try {
          this.updateState = 2;
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var d1 = _step1.value;
              if ((f && (f = f.map(d1.changes)), d1.scrollIntoView)) {
                var _d_state_selection = d1.state.selection,
                  _$p = _d_state_selection.main;
                f = new fn(_$p.empty ? _$p : Z.cursor(_$p.head, _$p.head > _$p.anchor ? -1 : 1));
              }
              var _iteratorNormalCompletion2 = true,
                _didIteratorError2 = false,
                _iteratorError2 = undefined;
              try {
                for (var _iterator2 = d1.effects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  var _$p1 = _step2.value;
                  _$p1.is(Hs) && (f = _$p1.value.clip(this.state));
                }
              } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                    _iterator2.return();
                  }
                } finally {
                  if (_didIteratorError2) {
                    throw _iteratorError2;
                  }
                }
              }
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          this.viewState.update(n, f),
            (this.bidiCache = go.update(this.bidiCache, n.changes)),
            n.empty || (this.updatePlugins(n), this.inputState.update(n)),
            (t = this.docView.update(n)),
            this.state.facet(on) != this.styleModules && this.mountStyles(),
            (i = this.updateAttrs()),
            this.showAnnouncements(e),
            this.docView.updateSelection(
              t,
              e.some((d) => d.isUserEvent("select.pointer")),
            );
        } finally {
          this.updateState = 0;
        }
        var _iteratorNormalCompletion3 = true,
          _didIteratorError3 = false,
          _iteratorError3 = undefined;
        if ((n.startState.facet(Xs) != n.state.facet(Xs) && (this.viewState.mustMeasureContent = !0), (t || i || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), t && this.docViewUpdate(), !n.empty))
          try {
            for (var _iterator3 = this.state.facet(da)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var d2 = _step3.value;
              try {
                d2(n);
              } catch (p) {
                Xe(this.state, p, "update listener");
              }
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        (u || c) &&
          Promise.resolve().then(() => {
            u && this.state == u.startState && this.dispatch(u), c && !qD(this, c) && a.force && Dr(this.contentDOM, a.key, a.keyCode);
          });
      }
      setState(e) {
        if (this.updateState != 0) throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
        if (this.destroyed) {
          this.viewState.state = e;
          return;
        }
        this.updateState = 2;
        var t = this.hasFocus;
        try {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.destroy(this);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (this.viewState = new po(e)), (this.plugins = e.facet(sn).map((i) => new dn(i))), this.pluginMap.clear();
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var i1 = _step1.value;
              i1.update(this);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          this.docView.destroy(), (this.docView = new ho(this)), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), (this.bidiCache = []);
        } finally {
          this.updateState = 0;
        }
        t && this.focus(), this.requestMeasure();
      }
      updatePlugins(e) {
        var t = e.startState.facet(sn),
          i = e.state.facet(sn);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (t != i) {
          var n = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step.value;
              var o = t.indexOf(s);
              if (o < 0) n.push(new dn(s));
              else {
                var l = this.plugins[o];
                (l.mustUpdate = e), n.push(l);
              }
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
              var s1 = _step1.value;
              s1.mustUpdate != e && s1.destroy(this);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          (this.plugins = n), this.pluginMap.clear();
        } else
          try {
            for (var _iterator2 = this.plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
              var n1 = _step2.value;
              n1.mustUpdate = e;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        for (var n2 = 0; n2 < this.plugins.length; n2++) this.plugins[n2].update(this);
        t != i && this.inputState.ensureHandlers(this.plugins);
      }
      docViewUpdate() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            var t = e.value;
            if (t && t.docViewUpdate)
              try {
                t.docViewUpdate(this);
              } catch (i) {
                Xe(this.state, i, "doc view update listener");
              }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      measure() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
        if (this.destroyed) return;
        if ((this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey)) {
          (this.measureScheduled = -1), this.requestMeasure();
          return;
        }
        (this.measureScheduled = 0), e && this.observer.forceFlush();
        var t = null,
          i = this.scrollDOM,
          n = i.scrollTop * this.scaleY,
          _this_viewState = this.viewState,
          s = _this_viewState.scrollAnchorPos,
          o = _this_viewState.scrollAnchorHeight;
        Math.abs(n - this.viewState.scrollTop) > 1 && (o = -1), (this.viewState.scrollAnchorHeight = -1);
        try {
          var _this,
            _loop = function (l) {
              if (o < 0)
                if (Kg(i)) (s = -1), (o = _this.viewState.heightMap.height);
                else {
                  var p = _this.viewState.scrollAnchorAt(n);
                  (s = p.from), (o = p.top);
                }
              _this.updateState = 1;
              var u = _this.viewState.measure(_this);
              if (!u && !_this.measureRequests.length && _this.viewState.scrollTarget == null) return "break";
              if (l > 5) {
                console.warn(_this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
                return "break";
              }
              var a = [];
              var ref;
              u & 4 || ((ref = [a, _this.measureRequests]), (_this.measureRequests = ref[0]), (a = ref[1]), ref);
              var c = a.map((p) => {
                  try {
                    return p.read(_this);
                  } catch (m) {
                    return Xe(_this.state, m), Pg;
                  }
                }),
                f = ao.create(_this, _this.state, []),
                d = !1;
              (f.flags |= u), t ? (t.flags |= u) : (t = f), (_this.updateState = 2), f.empty || (_this.updatePlugins(f), _this.inputState.update(f), _this.updateAttrs(), (d = _this.docView.update(f)), d && _this.docViewUpdate());
              for (var p1 = 0; p1 < a.length; p1++)
                if (c[p1] != Pg)
                  try {
                    var _$m = a[p1];
                    _$m.write && _$m.write(c[p1], _this);
                  } catch (m) {
                    Xe(_this.state, m);
                  }
              if ((d && _this.docView.updateSelection(!0), !f.viewportChanged && _this.measureRequests.length == 0)) {
                if (_this.viewState.editorHeight)
                  if (_this.viewState.scrollTarget) {
                    _this.docView.scrollIntoView(_this.viewState.scrollTarget), (_this.viewState.scrollTarget = null), (o = -1);
                    return "continue";
                  } else {
                    var _$m1 = (s < 0 ? _this.viewState.heightMap.height : _this.viewState.lineBlockAt(s).top) - o;
                    if (_$m1 > 1 || _$m1 < -1) {
                      (n = n + _$m1), (i.scrollTop = n / _this.scaleY), (o = -1);
                      return "continue";
                    }
                  }
                return "break";
              }
            };
          for (var l = 0; ; l++) {
            var _ret = ((_this = this), _loop(l));
            if (_ret === "break") break;
          }
        } finally {
          (this.updateState = 0), (this.measureScheduled = -1);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (t && !t.empty)
          try {
            for (var _iterator = this.state.facet(da)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l1 = _step.value;
              l1(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
      get themeClasses() {
        return ka + " " + (this.state.facet(Aa) ? ID : PD) + " " + this.state.facet(Xs);
      }
      updateAttrs() {
        var e = Ig(this, BD, { class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses }),
          t = { spellcheck: "false", autocorrect: "off", autocapitalize: "off", translate: "no", contenteditable: this.state.facet(vo) ? "true" : "false", class: "cm-content", style: "".concat(W.tabSize, ": ").concat(this.state.tabSize), role: "textbox", "aria-multiline": "true" };
        this.state.readOnly && (t["aria-readonly"] = "true"), Ig(this, qa, t);
        var i = this.observer.ignore(() => {
          var n = ua(this.contentDOM, this.contentAttrs, t),
            s = ua(this.dom, this.editorAttrs, e);
          return n || s;
        });
        return (this.editorAttrs = e), (this.contentAttrs = t), i;
      }
      showAnnouncements(e) {
        var t = !0;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var i = _step.value;
            try {
              for (var _iterator1 = i.effects[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var n = _step1.value;
                if (n.is(r.announce)) {
                  t && (this.announceDOM.textContent = ""), (t = !1);
                  var s = this.announceDOM.appendChild(document.createElement("div"));
                  s.textContent = n.value;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
      }
      mountStyles() {
        this.styleModules = this.state.facet(on);
        var e = this.state.facet(r.cspNonce);
        ft.mount(this.root, this.styleModules.concat(eA).reverse(), e ? { nonce: e } : void 0);
      }
      readMeasured() {
        if (this.updateState == 2) throw new Error("Reading the editor layout isn't allowed during an update");
        this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
      }
      requestMeasure(e) {
        if ((this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e)) {
          if (this.measureRequests.indexOf(e) > -1) return;
          if (e.key != null) {
            for (var t = 0; t < this.measureRequests.length; t++)
              if (this.measureRequests[t].key === e.key) {
                this.measureRequests[t] = e;
                return;
              }
          }
          this.measureRequests.push(e);
        }
      }
      plugin(e) {
        var t = this.pluginMap.get(e);
        return (t === void 0 || (t && t.spec != e)) && this.pluginMap.set(e, (t = this.plugins.find((i) => i.spec == e) || null)), t && t.update(this).value;
      }
      get documentTop() {
        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
      }
      get documentPadding() {
        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
      }
      get scaleX() {
        return this.viewState.scaleX;
      }
      get scaleY() {
        return this.viewState.scaleY;
      }
      elementAtHeight(e) {
        return this.readMeasured(), this.viewState.elementAtHeight(e);
      }
      lineBlockAtHeight(e) {
        return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
      }
      get viewportLineBlocks() {
        return this.viewState.viewportLines;
      }
      lineBlockAt(e) {
        return this.viewState.lineBlockAt(e);
      }
      get contentHeight() {
        return this.viewState.contentHeight;
      }
      moveByChar(e, t, i) {
        return Ku(this, e, vg(this, e, t, i));
      }
      moveByGroup(e, t) {
        return Ku(
          this,
          e,
          vg(this, e, t, (i) => _x(this, e.head, i)),
        );
      }
      visualLineSide(e, t) {
        var i = this.bidiSpans(e),
          n = this.textDirectionAt(e.from),
          s = i[t ? i.length - 1 : 0];
        return Z.cursor(s.side(t, n) + e.from, s.forward(!t, n) ? 1 : -1);
      }
      moveToLineBoundary(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
        return Qx(this, e, t, i);
      }
      moveVertically(e, t, i) {
        return Ku(this, e, Ux(this, e, t, i));
      }
      domAtPos(e) {
        return this.docView.domAtPos(e);
      }
      posAtDOM(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        return this.docView.posFromDOM(e, t);
      }
      posAtCoords(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        return this.readMeasured(), wD(this, e, t);
      }
      coordsAtPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
        this.readMeasured();
        var i = this.docView.coordsAt(e, t);
        if (!i || i.left == i.right) return i;
        var n = this.state.doc.lineAt(e),
          s = this.bidiSpans(n),
          o = s[Ot.find(s, e - n.from, -1, t)];
        return Ma(i, (o.dir == Be.LTR) == t > 0);
      }
      coordsForChar(e) {
        return this.readMeasured(), this.docView.coordsForChar(e);
      }
      get defaultCharacterWidth() {
        return this.viewState.heightOracle.charWidth;
      }
      get defaultLineHeight() {
        return this.viewState.heightOracle.lineHeight;
      }
      get textDirection() {
        return this.viewState.defaultTextDirection;
      }
      textDirectionAt(e) {
        return !this.state.facet(yD) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
      }
      get lineWrapping() {
        return this.viewState.heightOracle.lineWrapping;
      }
      bidiSpans(e) {
        if (e.length > uA) return fD(e.length);
        var t = this.textDirectionAt(e.from),
          i;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.bidiCache[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            if (s.from == e.from && s.dir == t && (s.fresh || cD(s.isolates, (i = bg(this, e))))) return s.order;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        i || (i = bg(this, e));
        var n = px(e.text, t, i);
        return this.bidiCache.push(new go(e.from, e.to, t, i, !0, n)), n;
      }
      get hasFocus() {
        var e;
        return (this.dom.ownerDocument.hasFocus() || (W.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4)) && this.root.activeElement == this.contentDOM;
      }
      focus() {
        this.observer.ignore(() => {
          Gg(this.contentDOM), this.docView.updateSelection();
        });
      }
      setRoot(e) {
        this._root != e && ((this._root = e), this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
      }
      destroy() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            e.destroy(this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.plugins = []), this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), (this.destroyed = !0);
      }
      static scrollIntoView(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return Hs.of(new fn(typeof e == "number" ? Z.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
      }
      scrollSnapshot() {
        var _this_scrollDOM = this.scrollDOM,
          e = _this_scrollDOM.scrollTop,
          t = _this_scrollDOM.scrollLeft,
          i = this.viewState.scrollAnchorAt(e);
        return Hs.of(new fn(Z.cursor(i.from), "start", "start", i.top - e, t, !0));
      }
      static domEventHandlers(e) {
        return je.define(() => ({}), { eventHandlers: e });
      }
      static domEventObservers(e) {
        return je.define(() => ({}), { eventObservers: e });
      }
      static theme(e, t) {
        var i = ft.newName(),
          n = [Xs.of(i), on.of(Sa(".".concat(i), e))];
        return t && t.dark && n.push(Aa.of(!0)), n;
      }
      static baseTheme(e) {
        return cr.lowest(on.of(Sa("." + ka, e, $D)));
      }
      static findFromDOM(e) {
        var t;
        var i = e.querySelector(".cm-content"),
          n = (i && Fe.get(i)) || Fe.get(e);
        return ((t = n === null || n === void 0 ? void 0 : n.rootView) === null || t === void 0 ? void 0 : t.view) || null;
      }
      constructor(ref) {
        var e = ref === void 0 ? {} : ref;
        (this.plugins = []),
          (this.pluginMap = new Map()),
          (this.editorAttrs = {}),
          (this.contentAttrs = {}),
          (this.bidiCache = []),
          (this.destroyed = !1),
          (this.updateState = 2),
          (this.measureScheduled = -1),
          (this.measureRequests = []),
          (this.contentDOM = document.createElement("div")),
          (this.scrollDOM = document.createElement("div")),
          (this.scrollDOM.tabIndex = -1),
          (this.scrollDOM.className = "cm-scroller"),
          this.scrollDOM.appendChild(this.contentDOM),
          (this.announceDOM = document.createElement("div")),
          (this.announceDOM.className = "cm-announced"),
          this.announceDOM.setAttribute("aria-live", "polite"),
          (this.dom = document.createElement("div")),
          this.dom.appendChild(this.announceDOM),
          this.dom.appendChild(this.scrollDOM),
          e.parent && e.parent.appendChild(this.dom);
        var t = e.dispatch;
        (this.dispatchTransactions = e.dispatchTransactions || (t && ((i) => i.forEach((n) => t(n, this)))) || ((i) => this.update(i))),
          (this.dispatch = this.dispatch.bind(this)),
          (this._root = e.root || tx(e.parent) || document),
          (this.viewState = new po(e.state || Ae.create(e))),
          e.scrollTo && e.scrollTo.is(Hs) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)),
          (this.plugins = this.state.facet(sn).map((i) => new dn(i)));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            i.update(this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.observer = new _a(this)), (this.inputState = new ga(this)), this.inputState.ensureHandlers(this.plugins), (this.docView = new ho(this)), this.mountStyles(), this.updateAttrs(), (this.updateState = 0), this.requestMeasure();
      }
    }),
    h(_r42, "EditorView"),
    _r42);
  ne.styleModule = on;
  ne.inputHandler = FD;
  ne.scrollHandler = CD;
  ne.focusChangeEffect = bD;
  ne.perLineTextDirection = yD;
  ne.exceptionSink = DD;
  ne.updateListener = da;
  ne.editable = vo;
  ne.mouseSelectionStyle = gD;
  ne.dragMovesSelection = mD;
  ne.clickAddsSelectionRange = pD;
  ne.decorations = En;
  ne.outerDecorations = vD;
  ne.atomicRanges = Va;
  ne.bidiIsolatedRanges = xD;
  ne.scrollMargins = AD;
  ne.darkTheme = Aa;
  ne.cspNonce = H.define({ combine: (r) => (r.length ? r[0] : "") });
  ne.contentAttributes = qa;
  ne.editorAttributes = BD;
  ne.lineWrapping = ne.contentAttributes.of({ class: "cm-lineWrapping" });
  ne.announce = de.define();
  var uA = 4096,
    Pg = {},
    go =
      ((_r43 = class r {
        static update(e, t) {
          if (t.empty && !e.some((s) => s.fresh)) return e;
          var i = [],
            n = e.length ? e[e.length - 1].dir : Be.LTR;
          for (var s = Math.max(0, e.length - 10); s < e.length; s++) {
            var o = e[s];
            o.dir == n && !t.touchesRange(o.from, o.to) && i.push(new r(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.isolates, !1, o.order));
          }
          return i;
        }
        constructor(e, t, i, n, s, o) {
          (this.from = e), (this.to = t), (this.dir = i), (this.isolates = n), (this.fresh = s), (this.order = o);
        }
      }),
      h(_r43, "CachedOrder"),
      _r43);
  function Ig(r, e, t) {
    for (var i = r.state.facet(e), n = i.length - 1; n >= 0; n--) {
      var s = i[n],
        o = typeof s == "function" ? s(r) : s;
      o && la(o, t);
    }
    return t;
  }
  h(Ig, "attrsFromFacet");
  var aA = W.mac ? "mac" : W.windows ? "win" : W.linux ? "linux" : "key";
  function hA(r, e) {
    var t = r.split(/-(?!$)/),
      i = t[t.length - 1];
    i == "Space" && (i = " ");
    var n, s, o, l;
    for (var u = 0; u < t.length - 1; ++u) {
      var a = t[u];
      if (/^(cmd|meta|m)$/i.test(a)) l = !0;
      else if (/^a(lt)?$/i.test(a)) n = !0;
      else if (/^(c|ctrl|control)$/i.test(a)) s = !0;
      else if (/^s(hift)?$/i.test(a)) o = !0;
      else if (/^mod$/i.test(a)) e == "mac" ? (l = !0) : (s = !0);
      else throw new Error("Unrecognized modifier name: " + a);
    }
    return n && (i = "Alt-" + i), s && (i = "Ctrl-" + i), l && (i = "Meta-" + i), o && (i = "Shift-" + i), i;
  }
  h(hA, "normalizeKeyName");
  function Ks(r, e, t) {
    return e.altKey && (r = "Alt-" + r), e.ctrlKey && (r = "Ctrl-" + r), e.metaKey && (r = "Meta-" + r), t !== !1 && e.shiftKey && (r = "Shift-" + r), r;
  }
  h(Ks, "modifiers");
  var cA = cr.default(
      ne.domEventHandlers({
        keydown(r, e) {
          return mA(fA(e.state), r, e, "editor");
        },
      }),
    ),
    Wa = H.define({ enables: cA }),
    $g = new WeakMap();
  function fA(r) {
    var e = r.facet(Wa),
      t = $g.get(e);
    return t || $g.set(e, (t = pA(e.reduce((i, n) => i.concat(n), [])))), t;
  }
  h(fA, "getKeymap");
  var oi = null,
    dA = 4e3;
  function pA(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : aA;
    var t = Object.create(null),
      i = Object.create(null),
      n = h((o, l) => {
        var u = i[o];
        if (u == null) i[o] = l;
        else if (u != l) throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
      }, "checkPrefix"),
      s = h((o, l, u, a, c) => {
        var _loop = function (D) {
          var b = m.slice(0, D).join(" ");
          n(b, !0),
            p[b] ||
              (p[b] = {
                preventDefault: !0,
                stopPropagation: !1,
                run: [
                  (B) => {
                    var k = (oi = { view: B, prefix: b, scope: o });
                    return (
                      setTimeout(() => {
                        oi == k && (oi = null);
                      }, dA),
                      !0
                    );
                  },
                ],
              });
        };
        var f, d;
        var p = t[o] || (t[o] = Object.create(null)),
          m = l.split(/ (?!$)/).map((D) => hA(D, e));
        for (var D = 1; D < m.length; D++) _loop(D);
        var F = m.join(" ");
        n(F, !1);
        var g = p[F] || (p[F] = { preventDefault: !1, stopPropagation: !1, run: ((d = (f = p._any) === null || f === void 0 ? void 0 : f.run) === null || d === void 0 ? void 0 : d.slice()) || [] });
        u && g.run.push(u), a && (g.preventDefault = !0), c && (g.stopPropagation = !0);
      }, "add");
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var o = _step.value;
        var l = o.scope ? o.scope.split(" ") : ["editor"];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        if (o.any)
          try {
            for (var _iterator1 = l[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var a = _step1.value;
              var c = t[a] || (t[a] = Object.create(null));
              c._any || (c._any = { preventDefault: !1, stopPropagation: !1, run: [] });
              for (var f in c) c[f].run.push(o.any);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        var u = o[e] || o.key;
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        if (u)
          try {
            for (var _iterator2 = l[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var a1 = _step2.value;
              s(a1, u, o.run, o.preventDefault, o.stopPropagation), o.shift && s(a1, "Shift-" + u, o.shift, o.preventDefault, o.stopPropagation);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(pA, "buildKeymap");
  function mA(r, e, t, i) {
    var n = cg(e),
      s = Kr(n, 0),
      o = Ms(s) == n.length && n != " ",
      l = "",
      u = !1,
      a = !1,
      c = !1;
    oi && oi.view == t && oi.scope == i && ((l = oi.prefix + " "), _D.indexOf(e.keyCode) < 0 && ((a = !0), (oi = null)));
    var f = new Set(),
      d = h((g) => {
        if (g) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = g.run[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var D = _step.value;
              if (!f.has(D) && (f.add(D), D(t, e))) return g.stopPropagation && (c = !0), !0;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          g.preventDefault && (g.stopPropagation && (c = !0), (a = !0));
        }
        return !1;
      }, "runFor"),
      p = r[i],
      m,
      F;
    return (
      p && (d(p[l + Ks(n, e, !o)]) ? (u = !0) : o && (e.altKey || e.metaKey || e.ctrlKey) && !(W.windows && e.ctrlKey && e.altKey) && (m = Kt[e.keyCode]) && m != n ? (d(p[l + Ks(m, e, !0)]) || (e.shiftKey && (F = fr[e.keyCode]) != n && F != m && d(p[l + Ks(F, e, !1)]))) && (u = !0) : o && e.shiftKey && d(p[l + Ks(n, e, !0)]) && (u = !0), !u && d(p._any) && (u = !0)),
      a && (u = !0),
      u && c && e.stopPropagation(),
      u
    );
  }
  h(mA, "runHandlers");
  var Cn =
    ((_r44 = class r {
      draw() {
        var e = document.createElement("div");
        return (e.className = this.className), this.adjust(e), e;
      }
      update(e, t) {
        return t.className != this.className ? !1 : (this.adjust(e), !0);
      }
      adjust(e) {
        (e.style.left = this.left + "px"), (e.style.top = this.top + "px"), this.width != null && (e.style.width = this.width + "px"), (e.style.height = this.height + "px");
      }
      eq(e) {
        return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
      }
      static forRange(e, t, i) {
        if (i.empty) {
          var n = e.coordsAtPos(i.head, i.assoc || 1);
          if (!n) return [];
          var s = VD(e);
          return [new r(t, n.left - s.left, n.top - s.top, null, n.bottom - n.top)];
        } else return gA(e, t, i);
      }
      constructor(e, t, i, n, s) {
        (this.className = e), (this.left = t), (this.top = i), (this.width = n), (this.height = s);
      }
    }),
    h(_r44, "RectangleMarker"),
    _r44);
  function VD(r) {
    var e = r.scrollDOM.getBoundingClientRect();
    return { left: (r.textDirection == Be.LTR ? e.left : e.right - r.scrollDOM.clientWidth * r.scaleX) - r.scrollDOM.scrollLeft * r.scaleX, top: e.top - r.scrollDOM.scrollTop * r.scaleY };
  }
  h(VD, "getBase");
  function qg(r, e, t) {
    var i = Z.cursor(e);
    return { from: Math.max(t.from, r.moveToLineBoundary(i, !1, !0).from), to: Math.min(t.to, r.moveToLineBoundary(i, !0, !0).from), type: He.Text };
  }
  h(qg, "wrappedLine");
  function gA(r, e, t) {
    if (t.to <= r.viewport.from || t.from >= r.viewport.to) return [];
    var i = Math.max(t.from, r.viewport.from),
      n = Math.min(t.to, r.viewport.to),
      s = r.textDirection == Be.LTR,
      o = r.contentDOM,
      l = o.getBoundingClientRect(),
      u = VD(r),
      a = o.querySelector(".cm-line"),
      c = a && window.getComputedStyle(a),
      f = l.left + (c ? parseInt(c.paddingLeft) + Math.min(0, parseInt(c.textIndent)) : 0),
      d = l.right - (c ? parseInt(c.paddingRight) : 0),
      p = ma(r, i),
      m = ma(r, n),
      F = p.type == He.Text ? p : null,
      g = m.type == He.Text ? m : null;
    if ((F && (r.lineWrapping || p.widgetLineBreaks) && (F = qg(r, i, F)), g && (r.lineWrapping || m.widgetLineBreaks) && (g = qg(r, n, g)), F && g && F.from == g.from)) return b(B(t.from, t.to, F));
    {
      var C = F ? B(t.from, null, F) : k(p, !1),
        L = g ? B(null, t.to, g) : k(m, !0),
        Q = [];
      return (F || p).to < (g || m).from - (F && g ? 1 : 0) || (p.widgetLineBreaks > 1 && C.bottom + r.defaultLineHeight / 2 < L.top) ? Q.push(D(f, C.bottom, d, L.top)) : C.bottom < L.top && r.elementAtHeight((C.bottom + L.top) / 2).type == He.Text && (C.bottom = L.top = (C.bottom + L.top) / 2), b(C).concat(Q).concat(b(L));
    }
    function D(C, L, Q, V) {
      return new Cn(e, C - u.left, L - u.top - 0.01, Q - C, V - L + 0.01);
    }
    h(D, "piece");
    function b(param) {
      var C = param.top,
        L = param.bottom,
        Q = param.horizontal;
      var V = [];
      for (var z = 0; z < Q.length; z += 2) V.push(D(Q[z], C, Q[z + 1], L));
      return V;
    }
    h(b, "pieces");
    function B(C, L, Q) {
      var V = 1e9,
        z = -1e9,
        G = [];
      function T(P, _, ee, he, ve) {
        var xe = r.coordsAtPos(P, P == Q.to ? -2 : 2),
          ae = r.coordsAtPos(ee, ee == Q.from ? 2 : -2);
        !xe || !ae || ((V = Math.min(xe.top, ae.top, V)), (z = Math.max(xe.bottom, ae.bottom, z)), ve == Be.LTR ? G.push(s && _ ? f : xe.left, s && he ? d : ae.right) : G.push(!s && he ? f : ae.left, !s && _ ? d : xe.right));
      }
      h(T, "addSpan");
      var j = C !== null && C !== void 0 ? C : Q.from,
        te = L !== null && L !== void 0 ? L : Q.to;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var P = _step.value;
          if (P.to > j && P.from < te)
            for (var _ = Math.max(P.from, j), ee = Math.min(P.to, te); ; ) {
              var he = r.state.doc.lineAt(_);
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = r.bidiSpans(he)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var ve = _step1.value;
                  var xe = ve.from + he.from,
                    ae = ve.to + he.from;
                  if (xe >= ee) break;
                  ae > _ && T(Math.max(xe, _), C == null && xe <= j, Math.min(ae, ee), L == null && ae >= te, ve.dir);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
              if (((_ = he.to + 1), _ >= ee)) break;
            }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return G.length == 0 && T(j, C == null, te, L == null, r.textDirection), { top: V, bottom: z, horizontal: G };
    }
    h(B, "drawForLine");
    function k(C, L) {
      var Q = l.top + (L ? C.top : C.bottom);
      return { top: Q, bottom: Q, horizontal: [] };
    }
    h(k, "drawForWidget");
  }
  h(gA, "rectanglesForRange");
  function DA(r, e) {
    return r.constructor == e.constructor && r.eq(e);
  }
  h(DA, "sameMarker");
  var Ua =
      ((_class60 = class _class {
        update(e) {
          e.startState.facet(ro) != e.state.facet(ro) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
        }
        docViewUpdate(e) {
          this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
        }
        setOrder(e) {
          var t = 0,
            i = e.facet(ro);
          for (; t < i.length && i[t] != this.layer; ) t++;
          this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
        }
        measure() {
          return this.layer.markers(this.view);
        }
        scale() {
          var _this_view = this.view,
            e = _this_view.scaleX,
            t = _this_view.scaleY;
          (e != this.scaleX || t != this.scaleY) && ((this.scaleX = e), (this.scaleY = t), (this.dom.style.transform = "scale(".concat(1 / e, ", ").concat(1 / t, ")")));
        }
        draw(e) {
          if (e.length != this.drawn.length || e.some((t, i) => !DA(t, this.drawn[i]))) {
            var t = this.dom.firstChild,
              i = 0;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                n.update && t && n.constructor && this.drawn[i].constructor && n.update(t, this.drawn[i]) ? ((t = t.nextSibling), i++) : this.dom.insertBefore(n.draw(), t);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            for (; t; ) {
              var n1 = t.nextSibling;
              t.remove(), (t = n1);
            }
            this.drawn = e;
          }
        }
        destroy() {
          this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
        }
        constructor(e, t) {
          (this.view = e),
            (this.layer = t),
            (this.drawn = []),
            (this.scaleX = 1),
            (this.scaleY = 1),
            (this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }),
            (this.dom = e.scrollDOM.appendChild(document.createElement("div"))),
            this.dom.classList.add("cm-layer"),
            t.above && this.dom.classList.add("cm-layer-above"),
            t.class && this.dom.classList.add(t.class),
            this.scale(),
            this.dom.setAttribute("aria-hidden", "true"),
            this.setOrder(e.state),
            e.requestMeasure(this.measureReq),
            t.mount && t.mount(this.dom, e);
        }
      }),
      h(_class60, "LayerView"),
      _class60),
    ro = H.define();
  function WD(r) {
    return [je.define((e) => new Ua(e, r)), ro.of(r)];
  }
  h(WD, "layer");
  var zD = !W.ios,
    Bn = H.define({
      combine(r) {
        return Xt(r, { cursorBlinkRate: 1200, drawRangeCursor: !0 }, { cursorBlinkRate: (e, t) => Math.min(e, t), drawRangeCursor: (e, t) => e || t });
      },
    });
  function HD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [Bn.of(r), FA, bA, yA, ED.of(!0)];
  }
  h(HD, "drawSelection");
  function jD(r) {
    return r.startState.facet(Bn) != r.state.facet(Bn);
  }
  h(jD, "configChanged");
  var FA = WD({
    above: !0,
    markers(r) {
      var e = r.state,
        t = e.facet(Bn),
        i = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n == e.selection.main;
          if (n.empty ? !s || zD : t.drawRangeCursor) {
            var o = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary",
              l = n.empty ? n : Z.cursor(n.head, n.head > n.anchor ? -1 : 1);
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = Cn.forRange(r, o, l)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var u = _step1.value;
                i.push(u);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i;
    },
    update(r, e) {
      r.transactions.some((i) => i.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
      var t = jD(r);
      return t && Vg(r.state, e), r.docChanged || r.selectionSet || t;
    },
    mount(r, e) {
      Vg(e.state, r);
    },
    class: "cm-cursorLayer",
  });
  function Vg(r, e) {
    e.style.animationDuration = r.facet(Bn).cursorBlinkRate + "ms";
  }
  h(Vg, "setBlinkRate");
  var bA = WD({
      above: !1,
      markers(r) {
        return r.state.selection.ranges.map((e) => (e.empty ? [] : Cn.forRange(r, "cm-selectionBackground", e))).reduce((e, t) => e.concat(t));
      },
      update(r, e) {
        return r.docChanged || r.selectionSet || r.viewportChanged || jD(r);
      },
      class: "cm-selectionLayer",
    }),
    La = { ".cm-line": { "& ::selection": { backgroundColor: "transparent !important" }, "&::selection": { backgroundColor: "transparent !important" } } };
  zD && ((La[".cm-line"].caretColor = "transparent !important"), (La[".cm-content"] = { caretColor: "transparent !important" }));
  var yA = cr.highest(ne.theme(La)),
    YD = de.define({
      map(r, e) {
        return r == null ? null : e.mapPos(r);
      },
    }),
    an = Pe.define({
      create() {
        return null;
      },
      update(r, e) {
        return r != null && (r = e.changes.mapPos(r)), e.effects.reduce((t, i) => (i.is(YD) ? i.value : t), r);
      },
    }),
    EA = je.fromClass(
      class {
        update(r) {
          var e;
          var t = r.state.field(an);
          t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), (this.cursor = null)) : (this.cursor || ((this.cursor = this.view.scrollDOM.appendChild(document.createElement("div"))), (this.cursor.className = "cm-dropCursor")), (r.startState.field(an) != t || r.docChanged || r.geometryChanged) && this.view.requestMeasure(this.measureReq));
        }
        readPos() {
          var _this = this,
            r = _this.view,
            e = r.state.field(an),
            t = e != null && r.coordsAtPos(e);
          if (!t) return null;
          var i = r.scrollDOM.getBoundingClientRect();
          return { left: t.left - i.left + r.scrollDOM.scrollLeft * r.scaleX, top: t.top - i.top + r.scrollDOM.scrollTop * r.scaleY, height: t.bottom - t.top };
        }
        drawCursor(r) {
          if (this.cursor) {
            var _this_view = this.view,
              e = _this_view.scaleX,
              t = _this_view.scaleY;
            r ? ((this.cursor.style.left = r.left / e + "px"), (this.cursor.style.top = r.top / t + "px"), (this.cursor.style.height = r.height / t + "px")) : (this.cursor.style.left = "-100000px");
          }
        }
        destroy() {
          this.cursor && this.cursor.remove();
        }
        setDropPos(r) {
          this.view.state.field(an) != r && this.view.dispatch({ effects: YD.of(r) });
        }
        constructor(r) {
          (this.view = r), (this.cursor = null), (this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) });
        }
      },
      {
        eventObservers: {
          dragover(r) {
            this.setDropPos(this.view.posAtCoords({ x: r.clientX, y: r.clientY }));
          },
          dragleave(r) {
            (r.target == this.view.contentDOM || !this.view.contentDOM.contains(r.relatedTarget)) && this.setDropPos(null);
          },
          dragend() {
            this.setDropPos(null);
          },
          drop() {
            this.setDropPos(null);
          },
        },
      },
    );
  function JD() {
    return [an, EA];
  }
  h(JD, "dropCursor");
  var l8 = /x/.unicode != null ? "gu" : "g";
  var nn = "-10000px",
    Do =
      ((_class61 = class _class {
        update(e, t) {
          var i;
          var n = e.state.facet(this.facet),
            s = n.filter((u) => u);
          if (n === this.input) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var u = _step.value;
                u.update && u.update(e);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            return !1;
          }
          var o = [],
            l = t ? [] : null;
          for (var u1 = 0; u1 < s.length; u1++) {
            var a = s[u1],
              c = -1;
            if (a) {
              for (var f = 0; f < this.tooltips.length; f++) {
                var d = this.tooltips[f];
                d && d.create == a.create && (c = f);
              }
              if (c < 0) (o[u1] = this.createTooltipView(a, u1 ? o[u1 - 1] : null)), l && (l[u1] = !!a.above);
              else {
                var f1 = (o[u1] = this.tooltipViews[c]);
                l && (l[u1] = t[c]), f1.update && f1.update(e);
              }
            }
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = this.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var u2 = _step1.value;
              o.indexOf(u2) < 0 && (this.removeTooltipView(u2), (i = u2.destroy) === null || i === void 0 || i.call(u2));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          return t && (l.forEach((u, a) => (t[a] = u)), (t.length = l.length)), (this.input = n), (this.tooltips = s), (this.tooltipViews = o), !0;
        }
        constructor(e, t, i, n) {
          (this.facet = t), (this.createTooltipView = i), (this.removeTooltipView = n), (this.input = e.state.facet(t)), (this.tooltips = this.input.filter((o) => o));
          var s = null;
          this.tooltipViews = this.tooltips.map((o) => (s = i(o, s)));
        }
      }),
      h(_class61, "TooltipViewManager"),
      _class61);
  function CA(r) {
    var e = r.win;
    return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
  }
  h(CA, "windowSpace");
  var ea = H.define({
      combine: (r) => {
        var e, t, i;
        return { position: W.ios ? "absolute" : ((e = r.find((n) => n.position)) === null || e === void 0 ? void 0 : e.position) || "fixed", parent: ((t = r.find((n) => n.parent)) === null || t === void 0 ? void 0 : t.parent) || null, tooltipSpace: ((i = r.find((n) => n.tooltipSpace)) === null || i === void 0 ? void 0 : i.tooltipSpace) || CA };
      },
    }),
    Wg = new WeakMap(),
    GD = je.fromClass(
      class {
        createContainer() {
          this.parent ? ((this.container = document.createElement("div")), (this.container.style.position = "relative"), (this.container.className = this.view.themeClasses), this.parent.appendChild(this.container)) : (this.container = this.view.dom);
        }
        observeIntersection() {
          if (this.intersectionObserver) {
            this.intersectionObserver.disconnect();
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                this.intersectionObserver.observe(r.dom);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        }
        measureSoon() {
          this.measureTimeout < 0 &&
            (this.measureTimeout = setTimeout(() => {
              (this.measureTimeout = -1), this.maybeMeasure();
            }, 50));
        }
        update(r) {
          r.transactions.length && (this.lastTransaction = Date.now());
          var e = this.manager.update(r, this.above);
          e && this.observeIntersection();
          var t = e || r.geometryChanged,
            i = r.state.facet(ea);
          if (i.position != this.position && !this.madeAbsolute) {
            this.position = i.position;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                n.dom.style.position = this.position;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            t = !0;
          }
          if (i.parent != this.parent) {
            this.parent && this.container.remove(), (this.parent = i.parent), this.createContainer();
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = this.manager.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var n1 = _step1.value;
                this.container.appendChild(n1.dom);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            t = !0;
          } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
          t && this.maybeMeasure();
        }
        createTooltip(r, e) {
          var t = r.create(this.view),
            i = e ? e.dom : null;
          if ((t.dom.classList.add("cm-tooltip"), r.arrow && !t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow"))) {
            var n = document.createElement("div");
            (n.className = "cm-tooltip-arrow"), t.dom.appendChild(n);
          }
          return (t.dom.style.position = this.position), (t.dom.style.top = nn), (t.dom.style.left = "0px"), this.container.insertBefore(t.dom, i), t.mount && t.mount(this.view), this.resizeObserver && this.resizeObserver.observe(t.dom), t;
        }
        destroy() {
          var r, e, t;
          this.view.win.removeEventListener("resize", this.measureSoon);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.dom.remove(), (r = i.destroy) === null || r === void 0 || r.call(i);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (t = this.intersectionObserver) === null || t === void 0 || t.disconnect(), clearTimeout(this.measureTimeout);
        }
        readMeasure() {
          var r = this.view.dom.getBoundingClientRect(),
            e = 1,
            t = 1,
            i = !1;
          if (this.position == "fixed" && this.manager.tooltipViews.length) {
            var _this_manager_tooltipViews_ = this.manager.tooltipViews[0],
              n = _this_manager_tooltipViews_.dom;
            if (W.gecko) i = n.offsetParent != this.container.ownerDocument.body;
            else if (n.style.top == nn && n.style.left == "0px") {
              var s = n.getBoundingClientRect();
              i = Math.abs(s.top + 1e4) > 1 || Math.abs(s.left) > 1;
            }
          }
          var ref;
          if (i || this.position == "absolute")
            if (this.parent) {
              var n1 = this.parent.getBoundingClientRect();
              n1.width && n1.height && ((e = n1.width / this.parent.offsetWidth), (t = n1.height / this.parent.offsetHeight));
            } else (ref = this.view.viewState), (e = ref.scaleX), (t = ref.scaleY), ref;
          return {
            editor: r,
            parent: this.parent ? this.container.getBoundingClientRect() : r,
            pos: this.manager.tooltips.map((n, s) => {
              var o = this.manager.tooltipViews[s];
              return o.getCoords ? o.getCoords(n.pos) : this.view.coordsAtPos(n.pos);
            }),
            size: this.manager.tooltipViews.map((param) => {
              var n = param.dom;
              return n.getBoundingClientRect();
            }),
            space: this.view.state.facet(ea).tooltipSpace(this.view),
            scaleX: e,
            scaleY: t,
            makeAbsolute: i,
          };
        }
        writeMeasure(r) {
          var e;
          if (r.makeAbsolute) {
            (this.madeAbsolute = !0), (this.position = "absolute");
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var l = _step.value;
                l.dom.style.position = "absolute";
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
          var t = r.editor,
            i = r.space,
            n = r.scaleX,
            s = r.scaleY,
            o = [];
          for (var l1 = 0; l1 < this.manager.tooltips.length; l1++) {
            var u = this.manager.tooltips[l1],
              a = this.manager.tooltipViews[l1],
              c = a.dom,
              f = r.pos[l1],
              d = r.size[l1];
            if (!f || f.bottom <= Math.max(t.top, i.top) || f.top >= Math.min(t.bottom, i.bottom) || f.right < Math.max(t.left, i.left) - 0.1 || f.left > Math.min(t.right, i.right) + 0.1) {
              c.style.top = nn;
              continue;
            }
            var p = u.arrow ? a.dom.querySelector(".cm-tooltip-arrow") : null,
              m = p ? 7 : 0,
              F = d.right - d.left,
              g = (e = Wg.get(a)) !== null && e !== void 0 ? e : d.bottom - d.top,
              D = a.offset || vA,
              b = this.view.textDirection == Be.LTR,
              B = d.width > i.right - i.left ? (b ? i.left : i.right - d.width) : b ? Math.min(f.left - (p ? 14 : 0) + D.x, i.right - F) : Math.max(i.left, f.left - F + (p ? 14 : 0) - D.x),
              k = this.above[l1];
            !u.strictSide && (k ? f.top - (d.bottom - d.top) - D.y < i.top : f.bottom + (d.bottom - d.top) + D.y > i.bottom) && k == i.bottom - f.bottom > f.top - i.top && (k = this.above[l1] = !k);
            var C = (k ? f.top - i.top : i.bottom - f.bottom) - m;
            if (C < g && a.resize !== !1) {
              if (C < this.view.defaultLineHeight) {
                c.style.top = nn;
                continue;
              }
              Wg.set(a, g), (c.style.height = (g = C) / s + "px");
            } else c.style.height && (c.style.height = "");
            var L = k ? f.top - g - m - D.y : f.bottom + m + D.y,
              Q = B + F;
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            if (a.overlap !== !0)
              try {
                for (var _iterator1 = o[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var V = _step1.value;
                  V.left < Q && V.right > B && V.top < L + g && V.bottom > L && (L = k ? V.top - g - 2 - m : V.bottom + m + 2);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
            if ((this.position == "absolute" ? ((c.style.top = (L - r.parent.top) / s + "px"), (c.style.left = (B - r.parent.left) / n + "px")) : ((c.style.top = L / s + "px"), (c.style.left = B / n + "px")), p)) {
              var V1 = f.left + (b ? D.x : -D.x) - (B + 14 - 7);
              p.style.left = V1 / n + "px";
            }
            a.overlap !== !0 && o.push({ left: B, top: L, right: Q, bottom: L + g }), c.classList.toggle("cm-tooltip-above", k), c.classList.toggle("cm-tooltip-below", !k), a.positioned && a.positioned(r.space);
          }
        }
        maybeMeasure() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && ((this.inView = this.view.inView), !this.inView)))
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                r.dom.style.top = nn;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        constructor(r) {
          (this.view = r), (this.above = []), (this.inView = !0), (this.madeAbsolute = !1), (this.lastTransaction = 0), (this.measureTimeout = -1);
          var e = r.state.facet(ea);
          (this.position = e.position),
            (this.parent = e.parent),
            (this.classes = r.themeClasses),
            this.createContainer(),
            (this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }),
            (this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null),
            (this.manager = new Do(
              r,
              za,
              (t, i) => this.createTooltip(t, i),
              (t) => {
                this.resizeObserver && this.resizeObserver.unobserve(t.dom), t.dom.remove();
              },
            )),
            (this.above = this.manager.tooltips.map((t) => !!t.above)),
            (this.intersectionObserver =
              typeof IntersectionObserver == "function"
                ? new IntersectionObserver(
                    (t) => {
                      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
                    },
                    { threshold: [1] },
                  )
                : null),
            this.observeIntersection(),
            r.win.addEventListener("resize", (this.measureSoon = this.measureSoon.bind(this))),
            this.maybeMeasure();
        }
      },
      {
        eventObservers: {
          scroll() {
            this.maybeMeasure();
          },
        },
      },
    ),
    BA = ne.baseTheme({
      ".cm-tooltip": { zIndex: 100, boxSizing: "border-box" },
      "&light .cm-tooltip": { border: "1px solid #bbb", backgroundColor: "#f5f5f5" },
      "&light .cm-tooltip-section:not(:first-child)": { borderTop: "1px solid #bbb" },
      "&dark .cm-tooltip": { backgroundColor: "#333338", color: "white" },
      ".cm-tooltip-arrow": {
        height: "7px",
        width: "".concat(7 * 2, "px"),
        position: "absolute",
        zIndex: -1,
        overflow: "hidden",
        "&:before, &:after": { content: "''", position: "absolute", width: 0, height: 0, borderLeft: "7px solid transparent", borderRight: "7px solid transparent" },
        ".cm-tooltip-above &": { bottom: "-7px", "&:before": { borderTop: "7px solid #bbb" }, "&:after": { borderTop: "7px solid #f5f5f5", bottom: "1px" } },
        ".cm-tooltip-below &": { top: "-7px", "&:before": { borderBottom: "7px solid #bbb" }, "&:after": { borderBottom: "7px solid #f5f5f5", top: "1px" } },
      },
      "&dark .cm-tooltip .cm-tooltip-arrow": { "&:before": { borderTopColor: "#333338", borderBottomColor: "#333338" }, "&:after": { borderTopColor: "transparent", borderBottomColor: "transparent" } },
    }),
    vA = { x: 0, y: 0 },
    za = H.define({ enables: [GD, BA] }),
    Fo = H.define({ combine: (r) => r.reduce((e, t) => e.concat(t), []) }),
    bo =
      ((_r45 = class r {
        static create(e) {
          return new r(e);
        }
        createHostedView(e, t) {
          var i = e.create(this.view);
          return i.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(i.dom, t ? t.dom.nextSibling : this.dom.firstChild), this.mounted && i.mount && i.mount(this.view), i;
        }
        mount(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.mount && t.mount(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.mounted = !0;
        }
        positioned(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.positioned && t.positioned(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        update(e) {
          this.manager.update(e);
        }
        destroy() {
          var e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              (e = t.destroy) === null || e === void 0 || e.call(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        passProp(e) {
          var t;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              var n = i[e];
              if (n !== void 0) {
                if (t === void 0) t = n;
                else if (t !== n) return;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return t;
        }
        get offset() {
          return this.passProp("offset");
        }
        get getCoords() {
          return this.passProp("getCoords");
        }
        get overlap() {
          return this.passProp("overlap");
        }
        get resize() {
          return this.passProp("resize");
        }
        constructor(e) {
          (this.view = e),
            (this.mounted = !1),
            (this.dom = document.createElement("div")),
            this.dom.classList.add("cm-tooltip-hover"),
            (this.manager = new Do(
              e,
              Fo,
              (t, i) => this.createHostedView(t, i),
              (t) => t.dom.remove(),
            ));
        }
      }),
      h(_r45, "HoverTooltipHost"),
      _r45),
    xA = za.compute([Fo], (r) => {
      var e = r.facet(Fo);
      return e.length === 0
        ? null
        : {
            pos: Math.min(...e.map((t) => t.pos)),
            end: Math.max(
              ...e.map((t) => {
                var i;
                return (i = t.end) !== null && i !== void 0 ? i : t.pos;
              }),
            ),
            create: bo.create,
            above: e[0].above,
            arrow: e.some((t) => t.arrow),
          };
    }),
    Oa =
      ((_class62 = class _class {
        update() {
          this.pending && ((this.pending = null), clearTimeout(this.restartTimeout), (this.restartTimeout = setTimeout(() => this.startHover(), 20)));
        }
        get active() {
          return this.view.state.field(this.field);
        }
        checkHover() {
          if (((this.hoverTimeout = -1), this.active.length)) return;
          var e = Date.now() - this.lastMove.time;
          e < this.hoverTime ? (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e)) : this.startHover();
        }
        startHover() {
          clearTimeout(this.restartTimeout);
          var _this = this,
            e = _this.view,
            t = _this.lastMove,
            i = e.docView.nearest(t.target);
          if (!i) return;
          var n,
            s = 1;
          if (i instanceof Dn) n = i.posAtStart;
          else {
            if (((n = e.posAtCoords(t)), n == null)) return;
            var l = e.coordsAtPos(n);
            if (!l || t.y < l.top || t.y > l.bottom || t.x < l.left - e.defaultCharacterWidth || t.x > l.right + e.defaultCharacterWidth) return;
            var u = e.bidiSpans(e.state.doc.lineAt(n)).find((c) => c.from <= n && c.to >= n),
              a = u && u.dir == Be.RTL ? -1 : 1;
            s = t.x < l.left ? -a : a;
          }
          var o = this.source(e, n, s);
          if (o === null || o === void 0 ? void 0 : o.then) {
            var l1 = (this.pending = { pos: n });
            o.then(
              (u) => {
                this.pending == l1 && ((this.pending = null), u && !(Array.isArray(u) && !u.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(u) ? u : [u]) }));
              },
              (u) => Xe(e.state, u, "hover tooltip"),
            );
          } else o && !(Array.isArray(o) && !o.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(o) ? o : [o]) });
        }
        get tooltip() {
          var e = this.view.plugin(GD),
            t = e ? e.manager.tooltips.findIndex((i) => i.create == bo.create) : -1;
          return t > -1 ? e.manager.tooltipViews[t] : null;
        }
        mousemove(e) {
          var t, i;
          (this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }), this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
          var _this = this,
            n = _this.active,
            s = _this.tooltip;
          if ((n.length && s && !AA(s.dom, e)) || this.pending) {
            var _ref = n[0] || this.pending,
              o = _ref.pos,
              l = (i = (t = n[0]) === null || t === void 0 ? void 0 : t.end) !== null && i !== void 0 ? i : o;
            (o == l ? this.view.posAtCoords(this.lastMove) != o : !kA(this.view, o, l, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), (this.pending = null));
          }
        }
        mouseleave(e) {
          clearTimeout(this.hoverTimeout), (this.hoverTimeout = -1);
          var _this = this,
            t = _this.active;
          if (t.length) {
            var _this1 = this,
              i = _this1.tooltip;
            i && i.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(i.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
          }
        }
        watchTooltipLeave(e) {
          var t = h((i) => {
            e.removeEventListener("mouseleave", t), this.active.length && !this.view.dom.contains(i.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
          }, "watch");
          e.addEventListener("mouseleave", t);
        }
        destroy() {
          clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
        }
        constructor(e, t, i, n, s) {
          (this.view = e),
            (this.source = t),
            (this.field = i),
            (this.setHover = n),
            (this.hoverTime = s),
            (this.hoverTimeout = -1),
            (this.restartTimeout = -1),
            (this.pending = null),
            (this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }),
            (this.checkHover = this.checkHover.bind(this)),
            e.dom.addEventListener("mouseleave", (this.mouseleave = this.mouseleave.bind(this))),
            e.dom.addEventListener("mousemove", (this.mousemove = this.mousemove.bind(this)));
        }
      }),
      h(_class62, "HoverPlugin"),
      _class62),
    Zs = 4;
  function AA(r, e) {
    var t = r.getBoundingClientRect();
    return e.clientX >= t.left - Zs && e.clientX <= t.right + Zs && e.clientY >= t.top - Zs && e.clientY <= t.bottom + Zs;
  }
  h(AA, "isInTooltip");
  function kA(r, e, t, i, n, s) {
    var o = r.scrollDOM.getBoundingClientRect(),
      l = r.documentTop + r.documentPadding.top + r.contentHeight;
    if (o.left > i || o.right < i || o.top > n || Math.min(o.bottom, l) < n) return !1;
    var u = r.posAtCoords({ x: i, y: n }, !1);
    return u >= e && u <= t;
  }
  h(kA, "isOverRange");
  function XD(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = de.define(),
      i = Pe.define({
        create() {
          return [];
        },
        update(n, s) {
          if (n.length && (e.hideOnChange && (s.docChanged || s.selection) ? (n = []) : e.hideOn && (n = n.filter((o) => !e.hideOn(s, o))), s.docChanged)) {
            var o = [];
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var l = _step.value;
                var u = s.changes.mapPos(l.pos, -1, Ve.TrackDel);
                if (u != null) {
                  var a = Object.assign(Object.create(null), l);
                  (a.pos = u), a.end != null && (a.end = s.changes.mapPos(a.end)), o.push(a);
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            n = o;
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = s.effects[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var o1 = _step1.value;
              o1.is(t) && (n = o1.value), o1.is(SA) && (n = []);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          return n;
        },
        provide: (n) => Fo.from(n),
      });
    return [i, je.define((n) => new Oa(n, r, i, t, e.hoverTime || 300)), xA];
  }
  h(XD, "hoverTooltip");
  var SA = de.define();
  var zg = H.define({
    combine(r) {
      var e, t;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          (e = e || i.topContainer), (t = t || i.bottomContainer);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return { topContainer: e, bottomContainer: t };
    },
  });
  var wA = je.fromClass(
      class {
        update(r) {
          var e = r.state.facet(zg);
          this.top.container != e.topContainer && (this.top.sync([]), (this.top = new mr(r.view, !0, e.topContainer))), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), (this.bottom = new mr(r.view, !1, e.bottomContainer))), this.top.syncClasses(), this.bottom.syncClasses();
          var t = r.state.facet(yo);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (t != this.input) {
            var i = t.filter((u) => u),
              n = [],
              s = [],
              o = [],
              l = [];
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
                var u = _step.value;
                var a = this.specs.indexOf(u),
                  c = void 0;
                a < 0 ? ((c = u(r.view)), l.push(c)) : ((c = this.panels[a]), c.update && c.update(r)), n.push(c), (c.top ? s : o).push(c);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            (this.specs = i), (this.panels = n), this.top.sync(s), this.bottom.sync(o);
            var _iteratorNormalCompletion2 = true,
              _didIteratorError2 = false,
              _iteratorError2 = undefined;
            try {
              for (var _iterator1 = l[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
                var u1 = _step1.value;
                u1.dom.classList.add("cm-panel"), u1.mount && u1.mount();
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          } else
            try {
              for (var _iterator2 = this.panels[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step2.value;
                i1.update && i1.update(r);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator2.return != null) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        destroy() {
          this.top.sync([]), this.bottom.sync([]);
        }
        constructor(r) {
          (this.input = r.state.facet(yo)), (this.specs = this.input.filter((t) => t)), (this.panels = this.specs.map((t) => t(r)));
          var e = r.state.facet(zg);
          (this.top = new mr(r, !0, e.topContainer)), (this.bottom = new mr(r, !1, e.bottomContainer)), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.dom.classList.add("cm-panel"), t.mount && t.mount();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      },
      {
        provide: (r) =>
          ne.scrollMargins.of((e) => {
            var t = e.plugin(r);
            return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
          }),
      },
    ),
    mr =
      ((_class63 = class _class {
        sync(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.destroy && e.indexOf(t) < 0 && t.destroy();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (this.panels = e), this.syncDOM();
        }
        syncDOM() {
          if (this.panels.length == 0) {
            this.dom && (this.dom.remove(), (this.dom = void 0));
            return;
          }
          if (!this.dom) {
            (this.dom = document.createElement("div")), (this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom"), (this.dom.style[this.top ? "top" : "bottom"] = "0");
            var t = this.container || this.view.dom;
            t.insertBefore(this.dom, this.top ? t.firstChild : null);
          }
          var e = this.dom.firstChild;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t1 = _step.value;
              if (t1.dom.parentNode == this.dom) {
                for (; e != t1.dom; ) e = Hg(e);
                e = e.nextSibling;
              } else this.dom.insertBefore(t1.dom, e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (; e; ) e = Hg(e);
        }
        scrollMargin() {
          return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
        }
        syncClasses() {
          if (!(!this.container || this.classes == this.view.themeClasses)) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.classes.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var e = _step.value;
                e && this.container.classList.remove(e);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = (this.classes = this.view.themeClasses).split(" ")[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var e1 = _step1.value;
                e1 && this.container.classList.add(e1);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
        constructor(e, t, i) {
          (this.view = e), (this.top = t), (this.container = i), (this.dom = void 0), (this.classes = ""), (this.panels = []), this.syncClasses();
        }
      }),
      h(_class63, "PanelGroup"),
      _class63);
  function Hg(r) {
    var e = r.nextSibling;
    return r.remove(), e;
  }
  h(Hg, "rm");
  var yo = H.define({ enables: wA }),
    mt =
      ((_class64 = class _class extends Gt {
        compare(e) {
          return this == e || (this.constructor == e.constructor && this.eq(e));
        }
        eq(e) {
          return !1;
        }
        destroy(e) {}
      }),
      h(_class64, "GutterMarker"),
      _class64);
  mt.prototype.elementClass = "";
  mt.prototype.toDOM = void 0;
  mt.prototype.mapMode = Ve.TrackBefore;
  mt.prototype.startSide = mt.prototype.endSide = -1;
  mt.prototype.point = !0;
  var no = H.define();
  var so = H.define();
  var Ta = H.define({ combine: (r) => r.some((e) => e) });
  function QA(r) {
    var e = [_A];
    return r && r.fixed === !1 && e.push(Ta.of(!0)), e;
  }
  h(QA, "gutters");
  var _A = je.fromClass(
    class {
      update(r) {
        if (this.updateGutters(r)) {
          var e = this.prevViewport,
            t = r.view.viewport,
            i = Math.min(e.to, t.to) - Math.max(e.from, t.from);
          this.syncGutters(i < (t.to - t.from) * 0.8);
        }
        r.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), this.view.state.facet(Ta) != !this.fixed && ((this.fixed = !this.fixed), (this.dom.style.position = this.fixed ? "sticky" : "")), (this.prevViewport = r.view.viewport);
      }
      syncGutters(r) {
        var e = this.dom.nextSibling;
        r && this.dom.remove();
        var t = De.iter(this.view.state.facet(no), this.view.viewport.from),
          i = [],
          n = this.gutters.map((s) => new Na(s, this.view.viewport, -this.view.documentPadding.top));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = this.view.viewportLineBlocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var s = _step.value;
            if ((i.length && (i = []), Array.isArray(s.type))) {
              var o = !0;
              var _iteratorNormalCompletion2 = true,
                _didIteratorError2 = false,
                _iteratorError2 = undefined,
                _iteratorNormalCompletion3 = true,
                _didIteratorError3 = false,
                _iteratorError3 = undefined;
              try {
                for (var _iterator1 = s.type[Symbol.iterator](), _step1; !(_iteratorNormalCompletion3 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion3 = true) {
                  var l = _step1.value;
                  if (l.type == He.Text && o) {
                    Ra(t, i, l.from);
                    var _iteratorNormalCompletion4 = true,
                      _didIteratorError4 = false,
                      _iteratorError4 = undefined;
                    try {
                      for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion4 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion4 = true) {
                        var u = _step2.value;
                        u.line(this.view, l, i);
                      }
                    } catch (err) {
                      _didIteratorError4 = true;
                      _iteratorError4 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion4 && _iterator2.return != null) {
                          _iterator2.return();
                        }
                      } finally {
                        if (_didIteratorError4) {
                          throw _iteratorError4;
                        }
                      }
                    }
                    o = !1;
                  } else if (l.widget)
                    try {
                      for (var _iterator3 = n[Symbol.iterator](), _step3; !(_iteratorNormalCompletion2 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion2 = true) {
                        var u1 = _step3.value;
                        u1.widget(this.view, l);
                      }
                    } catch (err) {
                      _didIteratorError2 = true;
                      _iteratorError2 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion2 && _iterator3.return != null) {
                          _iterator3.return();
                        }
                      } finally {
                        if (_didIteratorError2) {
                          throw _iteratorError2;
                        }
                      }
                    }
                }
              } catch (err) {
                _didIteratorError3 = true;
                _iteratorError3 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion3 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError3) {
                    throw _iteratorError3;
                  }
                }
              }
            } else if (s.type == He.Text) {
              Ra(t, i, s.from);
              var _iteratorNormalCompletion5 = true,
                _didIteratorError5 = false,
                _iteratorError5 = undefined;
              try {
                for (var _iterator4 = n[Symbol.iterator](), _step4; !(_iteratorNormalCompletion5 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion5 = true) {
                  var o1 = _step4.value;
                  o1.line(this.view, s, i);
                }
              } catch (err) {
                _didIteratorError5 = true;
                _iteratorError5 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion5 && _iterator4.return != null) {
                    _iterator4.return();
                  }
                } finally {
                  if (_didIteratorError5) {
                    throw _iteratorError5;
                  }
                }
              }
            } else if (s.widget)
              try {
                for (var _iterator5 = n[Symbol.iterator](), _step5; !(_iteratorNormalCompletion = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion = true) {
                  var o2 = _step5.value;
                  o2.widget(this.view, s);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator5.return != null) {
                    _iterator5.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        var _iteratorNormalCompletion6 = true,
          _didIteratorError6 = false,
          _iteratorError6 = undefined;
        try {
          for (var _iterator6 = n[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
            var s1 = _step6.value;
            s1.finish();
          }
        } catch (err) {
          _didIteratorError6 = true;
          _iteratorError6 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
              _iterator6.return();
            }
          } finally {
            if (_didIteratorError6) {
              throw _iteratorError6;
            }
          }
        }
        r && this.view.scrollDOM.insertBefore(this.dom, e);
      }
      updateGutters(r) {
        var e = r.startState.facet(so),
          t = r.state.facet(so),
          i = r.docChanged || r.heightChanged || r.viewportChanged || !De.eq(r.startState.facet(no), r.state.facet(no), r.view.viewport.from, r.view.viewport.to);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (e == t)
          try {
            for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.update(r) && (i = !0);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else {
          i = !0;
          var n1 = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step1.value;
              var o = e.indexOf(s);
              o < 0 ? n1.push(new Eo(this.view, s)) : (this.gutters[o].update(r), n1.push(this.gutters[o]));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator2 = this.gutters[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var s1 = _step2.value;
              s1.dom.remove(), n1.indexOf(s1) < 0 && s1.destroy();
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          var _iteratorNormalCompletion3 = true,
            _didIteratorError3 = false,
            _iteratorError3 = undefined;
          try {
            for (var _iterator3 = n1[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var s2 = _step3.value;
              this.dom.appendChild(s2.dom);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
          this.gutters = n1;
        }
        return i;
      }
      destroy() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var r = _step.value;
            r.destroy();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.dom.remove();
      }
      constructor(r) {
        (this.view = r), (this.prevViewport = r.viewport), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutters"), this.dom.setAttribute("aria-hidden", "true"), (this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px"), (this.gutters = r.state.facet(so).map((e) => new Eo(r, e)));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            this.dom.appendChild(e.dom);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.fixed = !r.state.facet(Ta)), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), r.scrollDOM.insertBefore(this.dom, r.contentDOM);
      }
    },
    {
      provide: (r) =>
        ne.scrollMargins.of((e) => {
          var t = e.plugin(r);
          return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == Be.LTR ? { left: t.dom.offsetWidth * e.scaleX } : { right: t.dom.offsetWidth * e.scaleX };
        }),
    },
  );
  function jg(r) {
    return Array.isArray(r) ? r : [r];
  }
  h(jg, "asArray");
  function Ra(r, e, t) {
    for (; r.value && r.from <= t; ) r.from == t && e.push(r.value), r.next();
  }
  h(Ra, "advanceCursor");
  var Na =
      ((_class65 = class _class {
        addElement(e, t, i) {
          var _this = this,
            n = _this.gutter,
            s = (t.top - this.height) / e.scaleY,
            o = t.height / e.scaleY;
          if (this.i == n.elements.length) {
            var l = new Co(e, o, s, i);
            n.elements.push(l), n.dom.appendChild(l.dom);
          } else n.elements[this.i].update(e, o, s, i);
          (this.height = t.bottom), this.i++;
        }
        line(e, t, i) {
          var n = [];
          Ra(this.cursor, n, t.from), i.length && (n = n.concat(i));
          var s = this.gutter.config.lineMarker(e, t, n);
          s && n.unshift(s);
          var o = this.gutter;
          (n.length == 0 && !o.config.renderEmptyElements) || this.addElement(e, t, n);
        }
        widget(e, t) {
          var i = this.gutter.config.widgetMarker(e, t.widget, t);
          i && this.addElement(e, t, [i]);
        }
        finish() {
          var e = this.gutter;
          for (; e.elements.length > this.i; ) {
            var t = e.elements.pop();
            e.dom.removeChild(t.dom), t.destroy();
          }
        }
        constructor(e, t, i) {
          (this.gutter = e), (this.height = i), (this.i = 0), (this.cursor = De.iter(e.markers, t.from));
        }
      }),
      h(_class65, "UpdateContext"),
      _class65),
    Eo =
      ((_class66 = class _class {
        update(e) {
          var t = this.markers;
          if (((this.markers = jg(this.config.markers(e.view))), this.spacer && this.config.updateSpacer)) {
            var n = this.config.updateSpacer(this.spacer.markers[0], e);
            n != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [n]);
          }
          var i = e.view.viewport;
          return !De.eq(this.markers, t, i.from, i.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
        }
        destroy() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              e.destroy();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        constructor(e, t) {
          var _this,
            _loop = function (i) {
              _this.dom.addEventListener(i, (n) => {
                var s = n.target,
                  o;
                if (s != _this.dom && _this.dom.contains(s)) {
                  for (; s.parentNode != _this.dom; ) s = s.parentNode;
                  var u = s.getBoundingClientRect();
                  o = (u.top + u.bottom) / 2;
                } else o = n.clientY;
                var l = e.lineBlockAtHeight(o - e.documentTop);
                t.domEventHandlers[i](e, l, n) && n.preventDefault();
              });
            };
          (this.view = e), (this.config = t), (this.elements = []), (this.spacer = null), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : ""));
          for (var i in t.domEventHandlers) (_this = this), _loop(i);
          (this.markers = jg(t.markers(e))), t.initialSpacer && ((this.spacer = new Co(e, 0, 0, [t.initialSpacer(e)])), this.dom.appendChild(this.spacer.dom), (this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none"));
        }
      }),
      h(_class66, "SingleGutterView"),
      _class66),
    Co =
      ((_class67 = class _class {
        update(e, t, i, n) {
          this.height != t && ((this.height = t), (this.dom.style.height = t + "px")), this.above != i && (this.dom.style.marginTop = (this.above = i) ? i + "px" : ""), UA(this.markers, n) || this.setMarkers(e, n);
        }
        setMarkers(e, t) {
          var i = "cm-gutterElement",
            n = this.dom.firstChild;
          for (var s = 0, o = 0; ; ) {
            var l = o,
              u = s < t.length ? t[s++] : null,
              a = !1;
            if (u) {
              var c = u.elementClass;
              c && (i += " " + c);
              for (var f = o; f < this.markers.length; f++)
                if (this.markers[f].compare(u)) {
                  (l = f), (a = !0);
                  break;
                }
            } else l = this.markers.length;
            for (; o < l; ) {
              var c1 = this.markers[o++];
              if (c1.toDOM) {
                c1.destroy(n);
                var f1 = n.nextSibling;
                n.remove(), (n = f1);
              }
            }
            if (!u) break;
            u.toDOM && (a ? (n = n.nextSibling) : this.dom.insertBefore(u.toDOM(e), n)), a && o++;
          }
          (this.dom.className = i), (this.markers = t);
        }
        destroy() {
          this.setMarkers(null, []);
        }
        constructor(e, t, i, n) {
          (this.height = -1), (this.above = 0), (this.markers = []), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutterElement"), this.update(e, t, i, n);
        }
      }),
      h(_class67, "GutterElement"),
      _class67);
  function UA(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (!r[t].compare(e[t])) return !1;
    return !0;
  }
  h(UA, "sameMarkers");
  var LA = H.define(),
    gr = H.define({
      combine(r) {
        return Xt(
          r,
          { formatNumber: String, domEventHandlers: {} },
          {
            domEventHandlers(e, t) {
              var _loop = function (n) {
                var s = i[n],
                  o = t[n];
                i[n] = s ? (l, u, a) => s(l, u, a) || o(l, u, a) : o;
              };
              var i = Object.assign({}, e);
              for (var n in t) _loop(n);
              return i;
            },
          },
        );
      },
    }),
    mn =
      ((_class68 = class _class extends mt {
        eq(e) {
          return this.number == e.number;
        }
        toDOM() {
          return document.createTextNode(this.number);
        }
        constructor(e) {
          super(), (this.number = e);
        }
      }),
      h(_class68, "NumberMarker"),
      _class68);
  function ta(r, e) {
    return r.state.facet(gr).formatNumber(e, r.state);
  }
  h(ta, "formatNumber");
  var OA = so.compute([gr], (r) => ({
    class: "cm-lineNumbers",
    renderEmptyElements: !1,
    markers(e) {
      return e.state.facet(LA);
    },
    lineMarker(e, t, i) {
      return i.some((n) => n.toDOM) ? null : new mn(ta(e, e.state.doc.lineAt(t.from).number));
    },
    widgetMarker: () => null,
    lineMarkerChange: (e) => e.startState.facet(gr) != e.state.facet(gr),
    initialSpacer(e) {
      return new mn(ta(e, Yg(e.state.doc.lines)));
    },
    updateSpacer(e, t) {
      var i = ta(t.view, Yg(t.view.state.doc.lines));
      return i == e.number ? e : new mn(i);
    },
    domEventHandlers: r.facet(gr).domEventHandlers,
  }));
  function KD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [gr.of(r), QA(), OA];
  }
  h(KD, "lineNumbers");
  function Yg(r) {
    var e = 9;
    for (; e < r; ) e = e * 10 + 9;
    return e;
  }
  h(Yg, "maxLineNumber");
  var TA = new (class extends mt {
      constructor() {
        super(...arguments), (this.elementClass = "cm-activeLineGutter");
      }
    })(),
    RA = no.compute(["selection"], (r) => {
      var e = [],
        t = -1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = r.doc.lineAt(i.head).from;
          n > t && ((t = n), e.push(TA.range(n)));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return De.of(e);
    });
  function ZD() {
    return RA;
  }
  h(ZD, "highlightActiveLineGutter");
  var NA = 0,
    vn =
      ((_class69 = class _class {
        constructor(e, t) {
          (this.from = e), (this.to = t);
        }
      }),
      h(_class69, "Range"),
      _class69),
    ue =
      ((_class70 = class _class {
        add(e) {
          if (this.perNode) throw new RangeError("Can't add per-node props to node types");
          return (
            typeof e != "function" && (e = Ie.match(e)),
            (t) => {
              var i = e(t);
              return i === void 0 ? null : [this, i];
            }
          );
        }
        constructor(ref) {
          var e = ref === void 0 ? {} : ref;
          (this.id = NA++),
            (this.perNode = !!e.perNode),
            (this.deserialize =
              e.deserialize ||
              (() => {
                throw new Error("This node type doesn't define a deserialize function");
              }));
        }
      }),
      h(_class70, "NodeProp"),
      _class70);
  ue.closedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.openedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.group = new ue({ deserialize: (r) => r.split(" ") });
  ue.isolate = new ue({
    deserialize: (r) => {
      if (r && r != "rtl" && r != "ltr" && r != "auto") throw new RangeError("Invalid value for isolate: " + r);
      return r || "auto";
    },
  });
  ue.contextHash = new ue({ perNode: !0 });
  ue.lookAhead = new ue({ perNode: !0 });
  ue.mounted = new ue({ perNode: !0 });
  var br =
      ((_class71 = class _class {
        static get(e) {
          return e && e.props && e.props[ue.mounted.id];
        }
        constructor(e, t, i) {
          (this.tree = e), (this.overlay = t), (this.parser = i);
        }
      }),
      h(_class71, "MountedTree"),
      _class71),
    MA = Object.create(null),
    Ie =
      ((_r46 = class r {
        static define(e) {
          var t = e.props && e.props.length ? Object.create(null) : MA,
            i = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0),
            n = new r(e.name || "", t, e.id, i);
          if (e.props) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e.props[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var s = _step.value;
                if ((Array.isArray(s) || (s = s(n)), s)) {
                  if (s[0].perNode) throw new RangeError("Can't store a per-node prop on a node type");
                  t[s[0].id] = s[1];
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
          return n;
        }
        prop(e) {
          return this.props[e.id];
        }
        get isTop() {
          return (this.flags & 1) > 0;
        }
        get isSkipped() {
          return (this.flags & 2) > 0;
        }
        get isError() {
          return (this.flags & 4) > 0;
        }
        get isAnonymous() {
          return (this.flags & 8) > 0;
        }
        is(e) {
          if (typeof e == "string") {
            if (this.name == e) return !0;
            var t = this.prop(ue.group);
            return t ? t.indexOf(e) > -1 : !1;
          }
          return this.id == e;
        }
        static match(e) {
          var t = Object.create(null);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          for (var i in e)
            try {
              for (var _iterator = i.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                t[n] = e[i];
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          return (i) => {
            for (var n = i.prop(ue.group), s = -1; s < (n ? n.length : 0); s++) {
              var o = t[s < 0 ? i.name : n[s]];
              if (o) return o;
            }
          };
        }
        constructor(e, t, i, ref) {
          var n = ref === void 0 ? 0 : ref;
          (this.name = e), (this.props = t), (this.id = i), (this.flags = n);
        }
      }),
      h(_r46, "NodeType"),
      _r46);
  Ie.none = new Ie("", Object.create(null), 0, 8);
  var xn =
      ((_r47 = class r {
        extend() {
          for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
            e[_key] = arguments[_key];
          }
          var t = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.types[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              var n = null;
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var s = _step1.value;
                  var o = s(i);
                  o && (n || (n = Object.assign({}, i.props)), (n[o[0].id] = o[1]));
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
              t.push(n ? new Ie(i.name, n, i.id, i.flags) : i);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return new r(t);
        }
        constructor(e) {
          this.types = e;
          for (var t = 0; t < e.length; t++) if (e[t].id != t) throw new RangeError("Node type ids should correspond to array positions when creating a node set");
        }
      }),
      h(_r47, "NodeSet"),
      _r47),
    xo = new WeakMap(),
    eF = new WeakMap(),
    Ue;
  (function (r) {
    (r[(r.ExcludeBuffers = 1)] = "ExcludeBuffers"), (r[(r.IncludeAnonymous = 2)] = "IncludeAnonymous"), (r[(r.IgnoreMounts = 4)] = "IgnoreMounts"), (r[(r.IgnoreOverlays = 8)] = "IgnoreOverlays");
  })(Ue || (Ue = {}));
  var Qe =
    ((_r48 = class r {
      toString() {
        var e = br.get(this);
        if (e && !e.overlay) return e.tree.toString();
        var t = "";
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            var n = i.toString();
            n && (t && (t += ","), (t += n));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
      }
      cursor() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        return new Sn(this.topNode, e);
      }
      cursorAt(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
          i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        var n = xo.get(this) || this.topNode,
          s = new Sn(n);
        return s.moveTo(e, t), xo.set(this, s._tree), s;
      }
      get topNode() {
        return new Nt(this, 0, 0, null);
      }
      resolve(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var i = An(xo.get(this) || this.topNode, e, t, !1);
        return xo.set(this, i), i;
      }
      resolveInner(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var i = An(eF.get(this) || this.topNode, e, t, !0);
        return eF.set(this, i), i;
      }
      resolveStack(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        return PA(this, e, t);
      }
      iterate(e) {
        var t = e.enter,
          i = e.leave,
          tmp = e.from,
          n = tmp === void 0 ? 0 : tmp,
          tmp1 = e.to,
          s = tmp1 === void 0 ? this.length : tmp1,
          o = e.mode || 0,
          l = (o & Ue.IncludeAnonymous) > 0;
        for (var u = this.cursor(o | Ue.IncludeAnonymous); ; ) {
          var a = !1;
          if (u.from <= s && u.to >= n && ((!l && u.type.isAnonymous) || t(u) !== !1)) {
            if (u.firstChild()) continue;
            a = !0;
          }
          for (; a && i && (l || !u.type.isAnonymous) && i(u), !u.nextSibling(); ) {
            if (!u.parent()) return;
            a = !0;
          }
        }
      }
      prop(e) {
        return e.perNode ? (this.props ? this.props[e.id] : void 0) : this.type.prop(e);
      }
      get propValues() {
        var e = [];
        if (this.props) for (var t in this.props) e.push([+t, this.props[t]]);
        return e;
      }
      balance() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return this.children.length <= 8 ? this : Ka(Ie.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, i, n) => new r(this.type, t, i, n, this.propValues), e.makeTree || ((t, i, n) => new r(Ie.none, t, i, n)));
      }
      static build(e) {
        return IA(e);
      }
      constructor(e, t, i, n, s) {
        if (((this.type = e), (this.children = t), (this.positions = i), (this.length = n), (this.props = null), s && s.length)) {
          this.props = Object.create(null);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _sliced_to_array(_step.value, 2),
                o = _step_value[0],
                l = _step_value[1];
              this.props[typeof o == "number" ? o : o.id] = l;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }
    }),
    h(_r48, "Tree"),
    _r48);
  Qe.empty = new Qe(Ie.none, [], [], 0);
  var Ha =
      ((_r49 = class r {
        get id() {
          return this.buffer[this.index - 4];
        }
        get start() {
          return this.buffer[this.index - 3];
        }
        get end() {
          return this.buffer[this.index - 2];
        }
        get size() {
          return this.buffer[this.index - 1];
        }
        get pos() {
          return this.index;
        }
        next() {
          this.index -= 4;
        }
        fork() {
          return new r(this.buffer, this.index);
        }
        constructor(e, t) {
          (this.buffer = e), (this.index = t);
        }
      }),
      h(_r49, "FlatBufferCursor"),
      _r49),
    fi =
      ((_r50 = class r {
        get type() {
          return Ie.none;
        }
        toString() {
          var e = [];
          for (var t = 0; t < this.buffer.length; ) e.push(this.childString(t)), (t = this.buffer[t + 3]);
          return e.join(",");
        }
        childString(e) {
          var t = this.buffer[e],
            i = this.buffer[e + 3],
            n = this.set.types[t],
            s = n.name;
          if ((/\W/.test(s) && !n.isError && (s = JSON.stringify(s)), (e += 4), i == e)) return s;
          var o = [];
          for (; e < i; ) o.push(this.childString(e)), (e = this.buffer[e + 3]);
          return s + "(" + o.join(",") + ")";
        }
        findChild(e, t, i, n, s) {
          var _this = this,
            o = _this.buffer,
            l = -1;
          for (var u = e; u != t && !(rF(s, n, o[u + 1], o[u + 2]) && ((l = u), i > 0)); u = o[u + 3]);
          return l;
        }
        slice(e, t, i) {
          var n = this.buffer,
            s = new Uint16Array(t - e),
            o = 0;
          for (var l = e, u = 0; l < t; ) {
            (s[u++] = n[l++]), (s[u++] = n[l++] - i);
            var a = (s[u++] = n[l++] - i);
            (s[u++] = n[l++] - e), (o = Math.max(o, a));
          }
          return new r(s, o, this.set);
        }
        constructor(e, t, i) {
          (this.buffer = e), (this.length = t), (this.set = i);
        }
      }),
      h(_r50, "TreeBuffer"),
      _r50);
  function rF(r, e, t, i) {
    switch (r) {
      case -2:
        return t < e;
      case -1:
        return i >= e && t < e;
      case 0:
        return t < e && i > e;
      case 1:
        return t <= e && i > e;
      case 2:
        return i > e;
      case 4:
        return !0;
    }
  }
  h(rF, "checkSide");
  function An(r, e, t, i) {
    for (var n; r.from == r.to || (t < 1 ? r.from >= e : r.from > e) || (t > -1 ? r.to <= e : r.to < e); ) {
      var o = !i && r instanceof Nt && r.index < 0 ? null : r.parent;
      if (!o) return r;
      r = o;
    }
    var s = i ? 0 : Ue.IgnoreOverlays;
    if (i) for (var o1 = r, l = o1.parent; l; o1 = l, l = o1.parent) o1 instanceof Nt && o1.index < 0 && ((n = l.enter(e, t, s)) === null || n === void 0 ? void 0 : n.from) != o1.from && (r = l);
    for (;;) {
      var o2 = r.enter(e, t, s);
      if (!o2) return r;
      r = o2;
    }
  }
  h(An, "resolveNode");
  var ko =
      ((_class72 = class _class {
        cursor() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return new Sn(this, e);
        }
        getChild(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          var n = tF(this, e, t, i);
          return n.length ? n[0] : null;
        }
        getChildren(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          return tF(this, e, t, i);
        }
        resolve(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return An(this, e, t, !1);
        }
        resolveInner(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return An(this, e, t, !0);
        }
        matchContext(e) {
          return ja(this, e);
        }
        enterUnfinishedNodesBefore(e) {
          var t = this.childBefore(e),
            i = this;
          for (; t; ) {
            var n = t.lastChild;
            if (!n || n.to != t.to) break;
            n.type.isError && n.from == n.to ? ((i = t), (t = n.prevSibling)) : (t = n);
          }
          return i;
        }
        get node() {
          return this;
        }
        get next() {
          return this.parent;
        }
      }),
      h(_class72, "BaseNode"),
      _class72),
    Nt =
      ((_r51 = class r extends ko {
        get type() {
          return this._tree.type;
        }
        get name() {
          return this._tree.type.name;
        }
        get to() {
          return this.from + this._tree.length;
        }
        nextChild(e, t, i, n) {
          var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
          for (var o = this; ; ) {
            for (var _o__tree = o._tree, l = _o__tree.children, u = _o__tree.positions, a = t > 0 ? l.length : -1; e != a; e += t) {
              var c = l[e],
                f = u[e] + o.from;
              if (rF(n, i, f, f + c.length)) {
                if (c instanceof fi) {
                  if (s & Ue.ExcludeBuffers) continue;
                  var d = c.findChild(0, c.buffer.length, t, i - f, n);
                  if (d > -1) return new kn(new Ya(o, c, e, f), null, d);
                } else if (s & Ue.IncludeAnonymous || !c.type.isAnonymous || Xa(c)) {
                  var d1 = void 0;
                  if (!(s & Ue.IgnoreMounts) && (d1 = br.get(c)) && !d1.overlay) return new r(d1.tree, f, e, o);
                  var p = new r(c, f, e, o);
                  return s & Ue.IncludeAnonymous || !p.type.isAnonymous ? p : p.nextChild(t < 0 ? c.children.length - 1 : 0, t, i, n);
                }
              }
            }
            if (s & Ue.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? (e = o.index + t) : (e = t < 0 ? -1 : o._parent._tree.children.length), (o = o._parent), !o)) return null;
          }
        }
        get firstChild() {
          return this.nextChild(0, 1, 0, 4);
        }
        get lastChild() {
          return this.nextChild(this._tree.children.length - 1, -1, 0, 4);
        }
        childAfter(e) {
          return this.nextChild(0, 1, e, 2);
        }
        childBefore(e) {
          return this.nextChild(this._tree.children.length - 1, -1, e, -2);
        }
        enter(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          var n;
          if (!(i & Ue.IgnoreOverlays) && (n = br.get(this._tree)) && n.overlay) {
            var s = e - this.from;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = n.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var _step_value = _step.value,
                  o = _step_value.from,
                  l = _step_value.to;
                if ((t > 0 ? o <= s : o < s) && (t < 0 ? l >= s : l > s)) return new r(n.tree, n.overlay[0].from + this.from, -1, this);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
          return this.nextChild(0, 1, e, t, i);
        }
        nextSignificantParent() {
          var e = this;
          for (; e.type.isAnonymous && e._parent; ) e = e._parent;
          return e;
        }
        get parent() {
          return this._parent ? this._parent.nextSignificantParent() : null;
        }
        get nextSibling() {
          return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4) : null;
        }
        get prevSibling() {
          return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4) : null;
        }
        get tree() {
          return this._tree;
        }
        toTree() {
          return this._tree;
        }
        toString() {
          return this._tree.toString();
        }
        constructor(e, t, i, n) {
          super(), (this._tree = e), (this.from = t), (this.index = i), (this._parent = n);
        }
      }),
      h(_r51, "TreeNode"),
      _r51);
  function tF(r, e, t, i) {
    var n = r.cursor(),
      s = [];
    if (!n.firstChild()) return s;
    if (t != null) {
      for (var o = !1; !o; ) if (((o = n.type.is(t)), !n.nextSibling())) return s;
    }
    for (;;) {
      if (i != null && n.type.is(i)) return s;
      if ((n.type.is(e) && s.push(n.node), !n.nextSibling())) return i == null ? s : [];
    }
  }
  h(tF, "getChildren");
  function ja(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e.length - 1;
    for (var i = r.parent; t >= 0; i = i.parent) {
      if (!i) return !1;
      if (!i.type.isAnonymous) {
        if (e[t] && e[t] != i.name) return !1;
        t--;
      }
    }
    return !0;
  }
  h(ja, "matchNodeContext");
  var Ya =
      ((_class73 = class _class {
        constructor(e, t, i, n) {
          (this.parent = e), (this.buffer = t), (this.index = i), (this.start = n);
        }
      }),
      h(_class73, "BufferContext"),
      _class73),
    kn =
      ((_r52 = class r extends ko {
        get name() {
          return this.type.name;
        }
        get from() {
          return this.context.start + this.context.buffer.buffer[this.index + 1];
        }
        get to() {
          return this.context.start + this.context.buffer.buffer[this.index + 2];
        }
        child(e, t, i) {
          var _this_context = this.context,
            n = _this_context.buffer,
            s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.context.start, i);
          return s < 0 ? null : new r(this.context, this, s);
        }
        get firstChild() {
          return this.child(1, 0, 4);
        }
        get lastChild() {
          return this.child(-1, 0, 4);
        }
        childAfter(e) {
          return this.child(1, e, 2);
        }
        childBefore(e) {
          return this.child(-1, e, -2);
        }
        enter(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          if (i & Ue.ExcludeBuffers) return null;
          var _this_context = this.context,
            n = _this_context.buffer,
            s = n.findChild(this.index + 4, n.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
          return s < 0 ? null : new r(this.context, this, s);
        }
        get parent() {
          return this._parent || this.context.parent.nextSignificantParent();
        }
        externalSibling(e) {
          return this._parent ? null : this.context.parent.nextChild(this.context.index + e, e, 0, 4);
        }
        get nextSibling() {
          var _this_context = this.context,
            e = _this_context.buffer,
            t = e.buffer[this.index + 3];
          return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new r(this.context, this._parent, t) : this.externalSibling(1);
        }
        get prevSibling() {
          var _this_context = this.context,
            e = _this_context.buffer,
            t = this._parent ? this._parent.index + 4 : 0;
          return this.index == t ? this.externalSibling(-1) : new r(this.context, this._parent, e.findChild(t, this.index, -1, 0, 4));
        }
        get tree() {
          return null;
        }
        toTree() {
          var e = [],
            t = [],
            _this_context = this.context,
            i = _this_context.buffer,
            n = this.index + 4,
            s = i.buffer[this.index + 3];
          if (s > n) {
            var o = i.buffer[this.index + 1];
            e.push(i.slice(n, s, o)), t.push(0);
          }
          return new Qe(this.type, e, t, this.to - this.from);
        }
        toString() {
          return this.context.buffer.childString(this.index);
        }
        constructor(e, t, i) {
          super(), (this.context = e), (this._parent = t), (this.index = i), (this.type = e.buffer.set.types[e.buffer.buffer[i]]);
        }
      }),
      h(_r52, "BufferNode"),
      _r52);
  function nF(r) {
    if (!r.length) return null;
    var e = 0,
      t = r[0];
    for (var s = 1; s < r.length; s++) {
      var o = r[s];
      (o.from > t.from || o.to < t.to) && ((t = o), (e = s));
    }
    var i = t instanceof Nt && t.index < 0 ? null : t.parent,
      n = r.slice();
    return i ? (n[e] = i) : n.splice(e, 1), new Ja(n, t);
  }
  h(nF, "iterStack");
  var Ja =
    ((_class74 = class _class {
      get next() {
        return nF(this.heads);
      }
      constructor(e, t) {
        (this.heads = e), (this.node = t);
      }
    }),
    h(_class74, "StackIterator"),
    _class74);
  function PA(r, e, t) {
    var i = r.resolveInner(e, t),
      n = null;
    for (var s = i instanceof Nt ? i : i.context.parent; s; s = s.parent)
      if (s.index < 0) {
        var o = s.parent;
        (n || (n = [i])).push(o.resolve(e, t)), (s = o);
      } else {
        var o1 = br.get(s.tree);
        if (o1 && o1.overlay && o1.overlay[0].from <= e && o1.overlay[o1.overlay.length - 1].to >= e) {
          var l = new Nt(o1.tree, o1.overlay[0].from + s.from, -1, s);
          (n || (n = [i])).push(An(l, e, t, !1));
        }
      }
    return n ? nF(n) : i;
  }
  h(PA, "stackIterator");
  var Sn =
    ((_class75 = class _class {
      get name() {
        return this.type.name;
      }
      yieldNode(e) {
        return e ? ((this._tree = e), (this.type = e.type), (this.from = e.from), (this.to = e.to), !0) : !1;
      }
      yieldBuf(e, t) {
        this.index = e;
        var _this_buffer = this.buffer,
          i = _this_buffer.start,
          n = _this_buffer.buffer;
        return (this.type = t || n.set.types[n.buffer[e]]), (this.from = i + n.buffer[e + 1]), (this.to = i + n.buffer[e + 2]), !0;
      }
      yield(e) {
        return e ? (e instanceof Nt ? ((this.buffer = null), this.yieldNode(e)) : ((this.buffer = e.context), this.yieldBuf(e.index, e.type))) : !1;
      }
      toString() {
        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
      }
      enterChild(e, t, i) {
        if (!this.buffer) return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, i, this.mode));
        var _this_buffer = this.buffer,
          n = _this_buffer.buffer,
          s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.buffer.start, i);
        return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));
      }
      firstChild() {
        return this.enterChild(1, 0, 4);
      }
      lastChild() {
        return this.enterChild(-1, 0, 4);
      }
      childAfter(e) {
        return this.enterChild(1, e, 2);
      }
      childBefore(e) {
        return this.enterChild(-1, e, -2);
      }
      enter(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.mode;
        return this.buffer ? (i & Ue.ExcludeBuffers ? !1 : this.enterChild(1, e, t)) : this.yield(this._tree.enter(e, t, i));
      }
      parent() {
        if (!this.buffer) return this.yieldNode(this.mode & Ue.IncludeAnonymous ? this._tree._parent : this._tree.parent);
        if (this.stack.length) return this.yieldBuf(this.stack.pop());
        var e = this.mode & Ue.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
        return (this.buffer = null), this.yieldNode(e);
      }
      sibling(e) {
        if (!this.buffer) return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
        var _this_buffer = this.buffer,
          t = _this_buffer.buffer,
          i = this.stack.length - 1;
        if (e < 0) {
          var n = i < 0 ? 0 : this.stack[i] + 4;
          if (this.index != n) return this.yieldBuf(t.findChild(n, this.index, -1, 0, 4));
        } else {
          var n1 = t.buffer[this.index + 3];
          if (n1 < (i < 0 ? t.buffer.length : t.buffer[this.stack[i] + 3])) return this.yieldBuf(n1);
        }
        return i < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
      }
      nextSibling() {
        return this.sibling(1);
      }
      prevSibling() {
        return this.sibling(-1);
      }
      atLastNode(e) {
        var t,
          i,
          _this = this,
          n = _this.buffer;
        var ref;
        if (n) {
          if (e > 0) {
            if (this.index < n.buffer.buffer.length) return !1;
          } else for (var s = 0; s < this.index; s++) if (n.buffer.buffer[s + 3] < this.index) return !1;
          var ref1;
          (ref1 = n), (t = ref1.index), (i = ref1.parent), ref1;
        } else (ref = this._tree), (t = ref.index), (i = ref._parent), ref;
        var ref2;
        for (; i; ref2 = i, t = ref2.index, i = ref2._parent, ref2)
          if (t > -1)
            for (var s1 = t + e, o = e < 0 ? -1 : i._tree.children.length; s1 != o; s1 += e) {
              var l = i._tree.children[s1];
              if (this.mode & Ue.IncludeAnonymous || l instanceof fi || !l.type.isAnonymous || Xa(l)) return !1;
            }
        return !0;
      }
      move(e, t) {
        if (t && this.enterChild(e, 0, 4)) return !0;
        for (;;) {
          if (this.sibling(e)) return !0;
          if (this.atLastNode(e) || !this.parent()) return !1;
        }
      }
      next() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
        return this.move(1, e);
      }
      prev() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
        return this.move(-1, e);
      }
      moveTo(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); );
        for (; this.enterChild(1, e, t); );
        return this;
      }
      get node() {
        if (!this.buffer) return this._tree;
        var e = this.bufferNode,
          t = null,
          i = 0;
        if (e && e.context == this.buffer)
          e: for (var n = this.index, s = this.stack.length; s >= 0; ) {
            for (var o = e; o; o = o._parent)
              if (o.index == n) {
                if (n == this.index) return o;
                (t = o), (i = s + 1);
                break e;
              }
            n = this.stack[--s];
          }
        for (var n1 = i; n1 < this.stack.length; n1++) t = new kn(this.buffer, t, this.stack[n1]);
        return (this.bufferNode = new kn(this.buffer, t, this.index));
      }
      get tree() {
        return this.buffer ? null : this._tree._tree;
      }
      iterate(e, t) {
        for (var i = 0; ; ) {
          var n = !1;
          if (this.type.isAnonymous || e(this) !== !1) {
            if (this.firstChild()) {
              i++;
              continue;
            }
            this.type.isAnonymous || (n = !0);
          }
          for (; n && t && t(this), (n = this.type.isAnonymous), !this.nextSibling(); ) {
            if (!i) return;
            this.parent(), i--, (n = !0);
          }
        }
      }
      matchContext(e) {
        if (!this.buffer) return ja(this.node, e);
        var _this_buffer = this.buffer,
          t = _this_buffer.buffer,
          _t_set = t.set,
          i = _t_set.types;
        for (var n = e.length - 1, s = this.stack.length - 1; n >= 0; s--) {
          if (s < 0) return ja(this.node, e, n);
          var o = i[t.buffer[this.stack[s]]];
          if (!o.isAnonymous) {
            if (e[n] && e[n] != o.name) return !1;
            n--;
          }
        }
        return !0;
      }
      constructor(e, ref) {
        var t = ref === void 0 ? 0 : ref;
        if (((this.mode = t), (this.buffer = null), (this.stack = []), (this.index = 0), (this.bufferNode = null), e instanceof Nt)) this.yieldNode(e);
        else {
          (this._tree = e.context.parent), (this.buffer = e.context);
          for (var i = e._parent; i; i = i._parent) this.stack.unshift(i.index);
          (this.bufferNode = e), this.yieldBuf(e.index);
        }
      }
    }),
    h(_class75, "TreeCursor"),
    _class75);
  function Xa(r) {
    return r.children.some((e) => e instanceof fi || !e.type.isAnonymous || Xa(e));
  }
  h(Xa, "hasChild");
  function IA(r) {
    var e;
    var t = r.buffer,
      i = r.nodeSet,
      tmp = r.maxBufferLength,
      n = tmp === void 0 ? 1024 : tmp,
      tmp1 = r.reused,
      s = tmp1 === void 0 ? [] : tmp1,
      tmp2 = r.minRepeatType,
      o = tmp2 === void 0 ? i.types.length : tmp2,
      l = Array.isArray(t) ? new Ha(t, t.length) : t,
      u = i.types,
      a = 0,
      c = 0;
    function f(C, L, Q, V, z, G) {
      var T = l.id,
        j = l.start,
        te = l.end,
        P = l.size,
        _ = c;
      for (; P < 0; )
        if ((l.next(), P == -1)) {
          var ae = s[T];
          Q.push(ae), V.push(j - C);
          return;
        } else if (P == -3) {
          a = T;
          return;
        } else if (P == -4) {
          c = T;
          return;
        } else throw new RangeError("Unrecognized record size: ".concat(P));
      var ee = u[T],
        he,
        ve,
        xe = j - C;
      if (te - j <= n && (ve = g(l.pos - L, z))) {
        var ae1 = new Uint16Array(ve.size - ve.skip),
          be = l.pos - ve.size,
          we = ae1.length;
        for (; l.pos > be; ) we = D(ve.start, ae1, we);
        (he = new fi(ae1, te - ve.start, i)), (xe = ve.start - C);
      } else {
        var ae2 = l.pos - P;
        l.next();
        var be1 = [],
          we1 = [],
          Ye = T >= o ? T : -1,
          et = 0,
          Ft = te;
        for (; l.pos > ae2; ) Ye >= 0 && l.id == Ye && l.size >= 0 ? (l.end <= Ft - n && (m(be1, we1, j, et, l.end, Ft, Ye, _), (et = be1.length), (Ft = l.end)), l.next()) : G > 2500 ? d(j, ae2, be1, we1) : f(j, ae2, be1, we1, Ye, G + 1);
        if ((Ye >= 0 && et > 0 && et < be1.length && m(be1, we1, j, et, j, Ft, Ye, _), be1.reverse(), we1.reverse(), Ye > -1 && et > 0)) {
          var qt = p(ee);
          he = Ka(ee, be1, we1, 0, be1.length, 0, te - j, qt, qt);
        } else he = F(ee, be1, we1, te - j, _ - te);
      }
      Q.push(he), V.push(xe);
    }
    h(f, "takeNode");
    function d(C, L, Q, V) {
      var z = [],
        G = 0,
        T = -1;
      for (; l.pos > L; ) {
        var j = l.id,
          te = l.start,
          P = l.end,
          _ = l.size;
        if (_ > 4) l.next();
        else {
          if (T > -1 && te < T) break;
          T < 0 && (T = P - n), z.push(j, te, P), G++, l.next();
        }
      }
      if (G) {
        var j1 = new Uint16Array(G * 4),
          te1 = z[z.length - 2];
        for (var P1 = z.length - 3, _1 = 0; P1 >= 0; P1 -= 3) (j1[_1++] = z[P1]), (j1[_1++] = z[P1 + 1] - te1), (j1[_1++] = z[P1 + 2] - te1), (j1[_1++] = _1);
        Q.push(new fi(j1, z[2] - te1, i)), V.push(te1 - C);
      }
    }
    h(d, "takeFlatNode");
    function p(C) {
      return (L, Q, V) => {
        var z = 0,
          G = L.length - 1,
          T,
          j;
        if (G >= 0 && (T = L[G]) instanceof Qe) {
          if (!G && T.type == C && T.length == V) return T;
          (j = T.prop(ue.lookAhead)) && (z = Q[G] + T.length + j);
        }
        return F(C, L, Q, V, z);
      };
    }
    h(p, "makeBalanced");
    function m(C, L, Q, V, z, G, T, j) {
      var te = [],
        P = [];
      for (; C.length > V; ) te.push(C.pop()), P.push(L.pop() + Q - z);
      C.push(F(i.types[T], te, P, G - z, j - G)), L.push(z - Q);
    }
    h(m, "makeRepeatLeaf");
    function F(C, L, Q, V) {
      var z = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0,
        G = arguments.length > 5 ? arguments[5] : void 0;
      if (a) {
        var T = [ue.contextHash, a];
        G = G ? [T].concat(G) : [T];
      }
      if (z > 25) {
        var T1 = [ue.lookAhead, z];
        G = G ? [T1].concat(G) : [T1];
      }
      return new Qe(C, L, Q, V, G);
    }
    h(F, "makeTree");
    function g(C, L) {
      var Q = l.fork(),
        V = 0,
        z = 0,
        G = 0,
        T = Q.end - n,
        j = { size: 0, start: 0, skip: 0 };
      e: for (var te = Q.pos - C; Q.pos > te; ) {
        var P = Q.size;
        if (Q.id == L && P >= 0) {
          (j.size = V), (j.start = z), (j.skip = G), (G += 4), (V += 4), Q.next();
          continue;
        }
        var _ = Q.pos - P;
        if (P < 0 || _ < te || Q.start < T) break;
        var ee = Q.id >= o ? 4 : 0,
          he = Q.start;
        for (Q.next(); Q.pos > _; ) {
          if (Q.size < 0)
            if (Q.size == -3) ee += 4;
            else break e;
          else Q.id >= o && (ee += 4);
          Q.next();
        }
        (z = he), (V += P), (G += ee);
      }
      return (L < 0 || V == C) && ((j.size = V), (j.start = z), (j.skip = G)), j.size > 4 ? j : void 0;
    }
    h(g, "findBufferSize");
    function D(C, L, Q) {
      var V = l.id,
        z = l.start,
        G = l.end,
        T = l.size;
      if ((l.next(), T >= 0 && V < o)) {
        var j = Q;
        if (T > 4) {
          var te = l.pos - (T - 4);
          for (; l.pos > te; ) Q = D(C, L, Q);
        }
        (L[--Q] = j), (L[--Q] = G - C), (L[--Q] = z - C), (L[--Q] = V);
      } else T == -3 ? (a = V) : T == -4 && (c = V);
      return Q;
    }
    h(D, "copyToBuffer");
    var b = [],
      B = [];
    for (; l.pos > 0; ) f(r.start || 0, r.bufferStart || 0, b, B, -1, 0);
    var k = (e = r.length) !== null && e !== void 0 ? e : b.length ? B[0] + b[0].length : 0;
    return new Qe(u[r.topID], b.reverse(), B.reverse(), k);
  }
  h(IA, "buildTree");
  var iF = new WeakMap();
  function Ao(r, e) {
    if (!r.isAnonymous || e instanceof fi || e.type != r) return 1;
    var t = iF.get(e);
    if (t == null) {
      t = 1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.type != r || !(i instanceof Qe)) {
            t = 1;
            break;
          }
          t += Ao(r, i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      iF.set(e, t);
    }
    return t;
  }
  h(Ao, "nodeSize");
  function Ka(r, e, t, i, n, s, o, l, u) {
    var a = 0;
    for (var m = i; m < n; m++) a += Ao(r, e[m]);
    var c = Math.ceil((a * 1.5) / 8),
      f = [],
      d = [];
    function p(m, F, g, D, b) {
      for (var B = g; B < D; ) {
        var k = B,
          C = F[B],
          L = Ao(r, m[B]);
        for (B++; B < D; B++) {
          var Q = Ao(r, m[B]);
          if (L + Q >= c) break;
          L += Q;
        }
        if (B == k + 1) {
          if (L > c) {
            var Q1 = m[k];
            p(Q1.children, Q1.positions, 0, Q1.children.length, F[k] + b);
            continue;
          }
          f.push(m[k]);
        } else {
          var Q2 = F[B - 1] + m[B - 1].length - C;
          f.push(Ka(r, m, F, k, B, C, Q2, null, u));
        }
        d.push(C + b - s);
      }
    }
    return h(p, "divide"), p(e, t, i, n, 0), (l || u)(f, d, o);
  }
  h(Ka, "balanceRange");
  var Ui =
      ((_r53 = class r {
        get openStart() {
          return (this.open & 1) > 0;
        }
        get openEnd() {
          return (this.open & 2) > 0;
        }
        static addTree(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
          var n = [new r(0, e.length, e, 0, !1, i)];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              s.to > e.length && n.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n;
        }
        static applyChanges(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 128;
          if (!t.length) return e;
          var n = [],
            s = 1,
            o = e.length ? e[0] : null;
          for (var l = 0, u = 0, a = 0; ; l++) {
            var c = l < t.length ? t[l] : null,
              f = c ? c.fromA : 1e9;
            if (f - u >= i)
              for (; o && o.from < f; ) {
                var d = o;
                if (u >= d.from || f <= d.to || a) {
                  var p = Math.max(d.from, u) - a,
                    m = Math.min(d.to, f) - a;
                  d = p >= m ? null : new r(p, m, d.tree, d.offset + a, l > 0, !!c);
                }
                if ((d && n.push(d), o.to > f)) break;
                o = s < e.length ? e[s++] : null;
              }
            if (!c) break;
            (u = c.toA), (a = c.toA - c.toB);
          }
          return n;
        }
        constructor(e, t, i, n, ref, ref1) {
          var s = ref === void 0 ? !1 : ref,
            o = ref1 === void 0 ? !1 : ref1;
          (this.from = e), (this.to = t), (this.tree = i), (this.offset = n), (this.open = (s ? 1 : 0) | (o ? 2 : 0));
        }
      }),
      h(_r53, "TreeFragment"),
      _r53),
    yr =
      ((_class76 = class _class {
        startParse(e, t, i) {
          return typeof e == "string" && (e = new Ga(e)), (i = i ? (i.length ? i.map((n) => new vn(n.from, n.to)) : [new vn(0, 0)]) : [new vn(0, e.length)]), this.createParse(e, t || [], i);
        }
        parse(e, t, i) {
          var n = this.startParse(e, t, i);
          for (;;) {
            var s = n.advance();
            if (s) return s;
          }
        }
      }),
      h(_class76, "Parser"),
      _class76),
    Ga =
      ((_class77 = class _class {
        get length() {
          return this.string.length;
        }
        chunk(e) {
          return this.string.slice(e);
        }
        get lineChunks() {
          return !1;
        }
        read(e, t) {
          return this.string.slice(e, t);
        }
        constructor(e) {
          this.string = e;
        }
      }),
      h(_class77, "StringInput"),
      _class77);
  var m8 = new ue({ perNode: !0 });
  var $A = 0,
    $t =
      ((_r54 = class r {
        static define(e) {
          if (e === null || e === void 0 ? void 0 : e.base) throw new Error("Can not derive from a modified tag");
          var t = new r([], null, []);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if ((t.set.push(t), e))
            try {
              for (var _iterator = e.set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var i = _step.value;
                t.set.push(i);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          return t;
        }
        static defineModifier() {
          var e = new _o();
          return (t) =>
            t.modified.indexOf(e) > -1
              ? t
              : _o.get(
                  t.base || t,
                  t.modified.concat(e).sort((i, n) => i.id - n.id),
                );
        }
        constructor(e, t, i) {
          (this.set = e), (this.base = t), (this.modified = i), (this.id = $A++);
        }
      }),
      h(_r54, "Tag"),
      _r54),
    qA = 0,
    _o =
      ((_r55 = class r {
        static get(e, t) {
          if (!t.length) return e;
          var i = t[0].instances.find((l) => l.base == e && VA(t, l.modified));
          if (i) return i;
          var n = [],
            s = new $t(n, e, t);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l = _step.value;
              l.instances.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var o = WA(t);
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined,
            _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator1 = e.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
              var l1 = _step1.value;
              if (!l1.modified.length)
                try {
                  for (var _iterator2 = o[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
                    var u = _step2.value;
                    n.push(r.get(l1, u));
                  }
                } catch (err) {
                  _didIteratorError1 = true;
                  _iteratorError1 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
                      _iterator2.return();
                    }
                  } finally {
                    if (_didIteratorError1) {
                      throw _iteratorError1;
                    }
                  }
                }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return s;
        }
        constructor() {
          (this.instances = []), (this.id = qA++);
        }
      }),
      h(_r55, "Modifier"),
      _r55);
  function VA(r, e) {
    return r.length == e.length && r.every((t, i) => t == e[i]);
  }
  h(VA, "sameArray");
  function WA(r) {
    var e = [[]];
    for (var t = 0; t < r.length; t++) for (var i = 0, n = e.length; i < n; i++) e.push(e[i].concat(r[t]));
    return e.sort((t, i) => i.length - t.length);
  }
  h(WA, "powerSet");
  function Uo(r) {
    var e = Object.create(null);
    for (var t in r) {
      var i = r[t];
      Array.isArray(i) || (i = [i]);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          if (n) {
            var s = [],
              o = 2,
              l = n;
            for (var f = 0; ; ) {
              if (l == "..." && f > 0 && f + 3 == n.length) {
                o = 1;
                break;
              }
              var d = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(l);
              if (!d) throw new RangeError("Invalid path: " + n);
              if ((s.push(d[0] == "*" ? "" : d[0][0] == '"' ? JSON.parse(d[0]) : d[0]), (f += d[0].length), f == n.length)) break;
              var p = n[f++];
              if (f == n.length && p == "!") {
                o = 0;
                break;
              }
              if (p != "/") throw new RangeError("Invalid path: " + n);
              l = n.slice(f);
            }
            var u = s.length - 1,
              a = s[u];
            if (!a) throw new RangeError("Invalid path: " + n);
            var c = new Er(i, o, u > 0 ? s.slice(0, u) : null);
            e[a] = c.sort(e[a]);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return lF.add(e);
  }
  h(Uo, "styleTags");
  var lF = new ue(),
    Er =
      ((_class78 = class _class {
        get opaque() {
          return this.mode == 0;
        }
        get inherit() {
          return this.mode == 1;
        }
        sort(e) {
          return !e || e.depth < this.depth ? ((this.next = e), this) : ((e.next = this.sort(e.next)), e);
        }
        get depth() {
          return this.context ? this.context.length : 0;
        }
        constructor(e, t, i, n) {
          (this.tags = e), (this.mode = t), (this.context = i), (this.next = n);
        }
      }),
      h(_class78, "Rule"),
      _class78);
  Er.empty = new Er([], 2, null);
  function ih(r, e) {
    var t = Object.create(null);
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var s = _step.value;
        if (!Array.isArray(s.tag)) t[s.tag.id] = s.class;
        else
          try {
            for (var _iterator1 = s.tag[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var o = _step1.value;
              t[o.id] = s.class;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    var _ref = e || {},
      i = _ref.scope,
      tmp = _ref.all,
      n = tmp === void 0 ? null : tmp;
    return {
      style: (s) => {
        var o = n;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var l = _step.value;
            try {
              for (var _iterator1 = l.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var u = _step1.value;
                var a = t[u.id];
                if (a) {
                  o = o ? o + " " + a : a;
                  break;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return o;
      },
      scope: i,
    };
  }
  h(ih, "tagHighlighter");
  function zA(r, e) {
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i.style(e);
        n && (t = t ? t + " " + n : n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(zA, "highlightTags");
  function uF(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0,
      n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : r.length;
    var s = new eh(i, Array.isArray(e) ? e : [e], t);
    s.highlightRange(r.cursor(), i, n, "", s.highlighters), s.flush(n);
  }
  h(uF, "highlightTree");
  var eh =
    ((_class79 = class _class {
      startSpan(e, t) {
        t != this.class && (this.flush(e), e > this.at && (this.at = e), (this.class = t));
      }
      flush(e) {
        e > this.at && this.class && this.span(this.at, e, this.class);
      }
      highlightRange(e, t, i, n, s) {
        var o = e.type,
          l = e.from,
          u = e.to;
        if (l >= i || u <= t) return;
        o.isTop && (s = this.highlighters.filter((p) => !p.scope || p.scope(o)));
        var a = n,
          c = HA(e) || Er.empty,
          f = zA(s, c.tags);
        if ((f && (a && (a += " "), (a += f), c.mode == 1 && (n += (n ? " " : "") + f)), this.startSpan(Math.max(t, l), a), c.opaque)) return;
        var d = e.tree && e.tree.prop(ue.mounted);
        if (d && d.overlay) {
          var p = e.node.enter(d.overlay[0].from + l, 1),
            m = this.highlighters.filter((g) => !g.scope || g.scope(d.tree.type)),
            F = e.firstChild();
          for (var g = 0, D = l; ; g++) {
            var b = g < d.overlay.length ? d.overlay[g] : null,
              B = b ? b.from + l : u,
              k = Math.max(t, D),
              C = Math.min(i, B);
            if (k < C && F) for (; e.from < C && (this.highlightRange(e, k, C, n, s), this.startSpan(Math.min(C, e.to), a), !(e.to >= B || !e.nextSibling())); );
            if (!b || B > i) break;
            (D = b.to + l), D > t && (this.highlightRange(p.cursor(), Math.max(t, b.from + l), Math.min(i, D), "", m), this.startSpan(Math.min(i, D), a));
          }
          F && e.parent();
        } else if (e.firstChild()) {
          d && (n = "");
          do
            if (!(e.to <= t)) {
              if (e.from >= i) break;
              this.highlightRange(e, t, i, n, s), this.startSpan(Math.min(i, e.to), a);
            }
          while (e.nextSibling());
          e.parent();
        }
      }
      constructor(e, t, i) {
        (this.at = e), (this.highlighters = t), (this.span = i), (this.class = "");
      }
    }),
    h(_class79, "HighlightBuilder"),
    _class79);
  function HA(r) {
    var e = r.type.prop(lF);
    for (; e && e.context && !r.matchContext(e.context); ) e = e.next;
    return e || null;
  }
  h(HA, "getStyleTags");
  var I = $t.define,
    So = I(),
    di = I(),
    sF = I(di),
    oF = I(di),
    pi = I(),
    wo = I(pi),
    Za = I(pi),
    It = I(),
    Li = I(It),
    Mt = I(),
    Pt = I(),
    th = I(),
    wn = I(th),
    Qo = I(),
    U = {
      comment: So,
      lineComment: I(So),
      blockComment: I(So),
      docComment: I(So),
      name: di,
      variableName: I(di),
      typeName: sF,
      tagName: I(sF),
      propertyName: oF,
      attributeName: I(oF),
      className: I(di),
      labelName: I(di),
      namespace: I(di),
      macroName: I(di),
      literal: pi,
      string: wo,
      docString: I(wo),
      character: I(wo),
      attributeValue: I(wo),
      number: Za,
      integer: I(Za),
      float: I(Za),
      bool: I(pi),
      regexp: I(pi),
      escape: I(pi),
      color: I(pi),
      url: I(pi),
      keyword: Mt,
      self: I(Mt),
      null: I(Mt),
      atom: I(Mt),
      unit: I(Mt),
      modifier: I(Mt),
      operatorKeyword: I(Mt),
      controlKeyword: I(Mt),
      definitionKeyword: I(Mt),
      moduleKeyword: I(Mt),
      operator: Pt,
      derefOperator: I(Pt),
      arithmeticOperator: I(Pt),
      logicOperator: I(Pt),
      bitwiseOperator: I(Pt),
      compareOperator: I(Pt),
      updateOperator: I(Pt),
      definitionOperator: I(Pt),
      typeOperator: I(Pt),
      controlOperator: I(Pt),
      punctuation: th,
      separator: I(th),
      bracket: wn,
      angleBracket: I(wn),
      squareBracket: I(wn),
      paren: I(wn),
      brace: I(wn),
      content: It,
      heading: Li,
      heading1: I(Li),
      heading2: I(Li),
      heading3: I(Li),
      heading4: I(Li),
      heading5: I(Li),
      heading6: I(Li),
      contentSeparator: I(It),
      list: I(It),
      quote: I(It),
      emphasis: I(It),
      strong: I(It),
      link: I(It),
      monospace: I(It),
      strikethrough: I(It),
      inserted: I(),
      deleted: I(),
      changed: I(),
      invalid: I(),
      meta: Qo,
      documentMeta: I(Qo),
      annotation: I(Qo),
      processingInstruction: I(Qo),
      definition: $t.defineModifier(),
      constant: $t.defineModifier(),
      function: $t.defineModifier(),
      standard: $t.defineModifier(),
      local: $t.defineModifier(),
      special: $t.defineModifier(),
    },
    b8 = ih([
      { tag: U.link, class: "tok-link" },
      { tag: U.heading, class: "tok-heading" },
      { tag: U.emphasis, class: "tok-emphasis" },
      { tag: U.strong, class: "tok-strong" },
      { tag: U.keyword, class: "tok-keyword" },
      { tag: U.atom, class: "tok-atom" },
      { tag: U.bool, class: "tok-bool" },
      { tag: U.url, class: "tok-url" },
      { tag: U.labelName, class: "tok-labelName" },
      { tag: U.inserted, class: "tok-inserted" },
      { tag: U.deleted, class: "tok-deleted" },
      { tag: U.literal, class: "tok-literal" },
      { tag: U.string, class: "tok-string" },
      { tag: U.number, class: "tok-number" },
      { tag: [U.regexp, U.escape, U.special(U.string)], class: "tok-string2" },
      { tag: U.variableName, class: "tok-variableName" },
      { tag: U.local(U.variableName), class: "tok-variableName tok-local" },
      { tag: U.definition(U.variableName), class: "tok-variableName tok-definition" },
      { tag: U.special(U.variableName), class: "tok-variableName2" },
      { tag: U.definition(U.propertyName), class: "tok-propertyName tok-definition" },
      { tag: U.typeName, class: "tok-typeName" },
      { tag: U.namespace, class: "tok-namespace" },
      { tag: U.className, class: "tok-className" },
      { tag: U.macroName, class: "tok-macroName" },
      { tag: U.propertyName, class: "tok-propertyName" },
      { tag: U.operator, class: "tok-operator" },
      { tag: U.comment, class: "tok-comment" },
      { tag: U.meta, class: "tok-meta" },
      { tag: U.invalid, class: "tok-invalid" },
      { tag: U.punctuation, class: "tok-punctuation" },
    ]);
  var rh,
    Cr = new ue();
  function YA(r) {
    return H.define({ combine: r ? (e) => e.concat(r) : void 0 });
  }
  h(YA, "defineLanguageFacet");
  var JA = new ue(),
    ot =
      ((_class80 = class _class {
        isActiveAt(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
          return aF(e, t, i).type.prop(Cr) == this.data;
        }
        findRegions(e) {
          var t = e.facet(Br);
          if ((t === null || t === void 0 ? void 0 : t.data) == this.data) return [{ from: 0, to: e.doc.length }];
          if (!t || !t.allowsNesting) return [];
          var i = [],
            n = h((s, o) => {
              if (s.prop(Cr) == this.data) {
                i.push({ from: o, to: o + s.length });
                return;
              }
              var l = s.prop(ue.mounted);
              if (l) {
                if (l.tree.prop(Cr) == this.data) {
                  var _iteratorNormalCompletion = true,
                    _didIteratorError = false,
                    _iteratorError = undefined;
                  if (l.overlay)
                    try {
                      for (var _iterator = l.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var u = _step.value;
                        i.push({ from: u.from + o, to: u.to + o });
                      }
                    } catch (err) {
                      _didIteratorError = true;
                      _iteratorError = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                          _iterator.return();
                        }
                      } finally {
                        if (_didIteratorError) {
                          throw _iteratorError;
                        }
                      }
                    }
                  else i.push({ from: o, to: o + s.length });
                  return;
                } else if (l.overlay) {
                  var u1 = i.length;
                  if ((n(l.tree, l.overlay[0].from + o), i.length > u1)) return;
                }
              }
              for (var u2 = 0; u2 < s.children.length; u2++) {
                var a = s.children[u2];
                a instanceof Qe && n(a, s.positions[u2] + o);
              }
            }, "explore");
          return n(Oi(e), 0), i;
        }
        get allowsNesting() {
          return !0;
        }
        constructor(e, t, ref, ref1) {
          var i = ref === void 0 ? [] : ref,
            n = ref1 === void 0 ? "" : ref1;
          (this.data = e),
            (this.name = n),
            Ae.prototype.hasOwnProperty("tree") ||
              Object.defineProperty(Ae.prototype, "tree", {
                get() {
                  return Oi(this);
                },
              }),
            (this.parser = t),
            (this.extension = [
              Br.of(this),
              Ae.languageData.of((s, o, l) => {
                var u = aF(s, o, l),
                  a = u.type.prop(Cr);
                if (!a) return [];
                var c = s.facet(a),
                  f = u.type.prop(JA);
                if (f) {
                  var d = u.resolve(o - u.from, l);
                  var _iteratorNormalCompletion = true,
                    _didIteratorError = false,
                    _iteratorError = undefined;
                  try {
                    for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                      var p = _step.value;
                      if (p.test(d, s)) {
                        var m = s.facet(p.facet);
                        return p.type == "replace" ? m : m.concat(c);
                      }
                    }
                  } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                      }
                    } finally {
                      if (_didIteratorError) {
                        throw _iteratorError;
                      }
                    }
                  }
                }
                return c;
              }),
            ].concat(i));
        }
      }),
      h(_class80, "Language"),
      _class80);
  ot.setState = de.define();
  function aF(r, e, t) {
    var i = r.facet(Br),
      n = Oi(r).topNode;
    if (!i || i.allowsNesting) for (var s = n; s; s = s.enter(e, t, Ue.ExcludeBuffers)) s.type.isTop && (n = s);
    return n;
  }
  h(aF, "topNodeAt");
  var Lo =
    ((_r56 = class r extends ot {
      static define(e) {
        var t = YA(e.languageData);
        return new r(t, e.parser.configure({ props: [Cr.add((i) => (i.isTop ? t : void 0))] }), e.name);
      }
      configure(e, t) {
        return new r(this.data, this.parser.configure(e), t || this.name);
      }
      get allowsNesting() {
        return this.parser.hasWrappers();
      }
      constructor(e, t, i) {
        super(e, t, [], i), (this.parser = t);
      }
    }),
    h(_r56, "LRLanguage"),
    _r56);
  function Oi(r) {
    var e = r.field(ot.state, !1);
    return e ? e.tree : Qe.empty;
  }
  h(Oi, "syntaxTree");
  var lh =
      ((_class81 = class _class {
        get length() {
          return this.doc.length;
        }
        syncTo(e) {
          return (this.string = this.cursor.next(e - this.cursorPos).value), (this.cursorPos = e + this.string.length), this.cursorPos - this.string.length;
        }
        chunk(e) {
          return this.syncTo(e), this.string;
        }
        get lineChunks() {
          return !0;
        }
        read(e, t) {
          var i = this.cursorPos - this.string.length;
          return e < i || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - i, t - i);
        }
        constructor(e) {
          (this.doc = e), (this.cursorPos = 0), (this.string = ""), (this.cursor = e.iter());
        }
      }),
      h(_class81, "DocInput"),
      _class81),
    Qn = null,
    uh =
      ((_r57 = class r {
        static create(e, t, i) {
          return new r(e, t, [], Qe.empty, 0, i, [], null);
        }
        startParse() {
          return this.parser.startParse(new lh(this.state.doc), this.fragments);
        }
        work(e, t) {
          return (
            t != null && t >= this.state.doc.length && (t = void 0),
            this.tree != Qe.empty && this.isDone(t !== null && t !== void 0 ? t : this.state.doc.length)
              ? (this.takeTree(), !0)
              : this.withContext(() => {
                  var i;
                  if (typeof e == "number") {
                    var n = Date.now() + e;
                    e = h(() => Date.now() > n, "until");
                  }
                  for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
                    var n1 = this.parse.advance();
                    if (n1)
                      if (((this.fragments = this.withoutTempSkipped(Ui.addTree(n1, this.fragments, this.parse.stoppedAt != null))), (this.treeLen = (i = this.parse.stoppedAt) !== null && i !== void 0 ? i : this.state.doc.length), (this.tree = n1), (this.parse = null), this.treeLen < (t !== null && t !== void 0 ? t : this.state.doc.length))) this.parse = this.startParse();
                      else return !0;
                    if (e()) return !1;
                  }
                })
          );
        }
        takeTree() {
          var e, t;
          this.parse &&
            (e = this.parse.parsedPos) >= this.treeLen &&
            ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e),
            this.withContext(() => {
              for (; !(t = this.parse.advance()); );
            }),
            (this.treeLen = e),
            (this.tree = t),
            (this.fragments = this.withoutTempSkipped(Ui.addTree(this.tree, this.fragments, !0))),
            (this.parse = null));
        }
        withContext(e) {
          var t = Qn;
          Qn = this;
          try {
            return e();
          } finally {
            Qn = t;
          }
        }
        withoutTempSkipped(e) {
          for (var t; (t = this.tempSkipped.pop()); ) e = hF(e, t.from, t.to);
          return e;
        }
        changes(e, t) {
          var _this = this,
            i = _this.fragments,
            n = _this.tree,
            s = _this.treeLen,
            o = _this.viewport,
            l = _this.skipped;
          if ((this.takeTree(), !e.empty)) {
            var u = [];
            if ((e.iterChangedRanges((a, c, f, d) => u.push({ fromA: a, toA: c, fromB: f, toB: d })), (i = Ui.applyChanges(i, u)), (n = Qe.empty), (s = 0), (o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }), this.skipped.length)) {
              l = [];
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = this.skipped[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var a = _step.value;
                  var c = e.mapPos(a.from, 1),
                    f = e.mapPos(a.to, -1);
                  c < f && l.push({ from: c, to: f });
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            }
          }
          return new r(this.parser, t, i, n, s, o, l, this.scheduleOn);
        }
        updateViewport(e) {
          if (this.viewport.from == e.from && this.viewport.to == e.to) return !1;
          this.viewport = e;
          var t = this.skipped.length;
          for (var i = 0; i < this.skipped.length; i++) {
            var _this_skipped_i = this.skipped[i],
              n = _this_skipped_i.from,
              s = _this_skipped_i.to;
            n < e.to && s > e.from && ((this.fragments = hF(this.fragments, n, s)), this.skipped.splice(i--, 1));
          }
          return this.skipped.length >= t ? !1 : (this.reset(), !0);
        }
        reset() {
          this.parse && (this.takeTree(), (this.parse = null));
        }
        skipUntilInView(e, t) {
          this.skipped.push({ from: e, to: t });
        }
        static getSkippingParser(e) {
          return new (class extends yr {
            createParse(t, i, n) {
              var s = n[0].from,
                o = n[n.length - 1].to;
              return {
                parsedPos: s,
                advance() {
                  var u = Qn;
                  if (u) {
                    var _iteratorNormalCompletion = true,
                      _didIteratorError = false,
                      _iteratorError = undefined;
                    try {
                      for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var a = _step.value;
                        u.tempSkipped.push(a);
                      }
                    } catch (err) {
                      _didIteratorError = true;
                      _iteratorError = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                          _iterator.return();
                        }
                      } finally {
                        if (_didIteratorError) {
                          throw _iteratorError;
                        }
                      }
                    }
                    e && (u.scheduleOn = u.scheduleOn ? Promise.all([u.scheduleOn, e]) : e);
                  }
                  return (this.parsedPos = o), new Qe(Ie.none, [], [], o - s);
                },
                stoppedAt: null,
                stopAt() {},
              };
            }
          })();
        }
        isDone(e) {
          e = Math.min(e, this.state.doc.length);
          var t = this.fragments;
          return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
        }
        static get() {
          return Qn;
        }
        constructor(e, t, ref, n, s, o, l, u) {
          var i = ref === void 0 ? [] : ref;
          (this.parser = e), (this.state = t), (this.fragments = i), (this.tree = n), (this.treeLen = s), (this.viewport = o), (this.skipped = l), (this.scheduleOn = u), (this.parse = null), (this.tempSkipped = []);
        }
      }),
      h(_r57, "ParseContext"),
      _r57);
  function hF(r, e, t) {
    return Ui.applyChanges(r, [{ fromA: e, toA: t, fromB: e, toB: t }]);
  }
  h(hF, "cutFragments");
  var Un =
    ((_r58 = class r {
      apply(e) {
        if (!e.docChanged && this.tree == this.context.tree) return this;
        var t = this.context.changes(e.changes, e.state),
          i = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
        return t.work(20, i) || t.takeTree(), new r(t);
      }
      static init(e) {
        var t = Math.min(3e3, e.doc.length),
          i = uh.create(e.facet(Br).parser, e, { from: 0, to: t });
        return i.work(20, t) || i.takeTree(), new r(i);
      }
      constructor(e) {
        (this.context = e), (this.tree = e.tree);
      }
    }),
    h(_r58, "LanguageState"),
    _r58);
  ot.state = Pe.define({
    create: Un.init,
    update(r, e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          if (t.is(ot.setState)) return t.value;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return e.startState.facet(Br) != e.state.facet(Br) ? Un.init(e.state) : r.apply(e);
    },
  });
  var pF = h((r) => {
    var e = setTimeout(() => r(), 500);
    return () => clearTimeout(e);
  }, "requestIdle");
  typeof requestIdleCallback < "u" &&
    (pF = h((r) => {
      var e = -1,
        t = setTimeout(() => {
          e = requestIdleCallback(r, { timeout: 400 });
        }, 100);
      return () => (e < 0 ? clearTimeout(t) : cancelIdleCallback(e));
    }, "requestIdle"));
  var nh = typeof navigator < "u" && !((rh = navigator.scheduling) === null || rh === void 0) && rh.isInputPending ? () => navigator.scheduling.isInputPending() : null,
    GA = je.fromClass(
      ((_class82 = class _class {
        update(e) {
          var t = this.view.state.field(ot.state).context;
          (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
        }
        scheduleWork() {
          if (this.working) return;
          var _this_view = this.view,
            e = _this_view.state,
            t = e.field(ot.state);
          (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = pF(this.work));
        }
        work(e) {
          this.working = null;
          var t = Date.now();
          if ((this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && ((this.chunkEnd = t + 3e4), (this.chunkBudget = 3e3)), this.chunkBudget <= 0)) return;
          var _this_view = this.view,
            i = _this_view.state,
            _this_view_viewport = _this_view.viewport,
            n = _this_view_viewport.to,
            s = i.field(ot.state);
          if (s.tree == s.context.tree && s.context.isDone(n + 1e5)) return;
          var o = Date.now() + Math.min(this.chunkBudget, 100, e && !nh ? Math.max(25, e.timeRemaining() - 5) : 1e9),
            l = s.context.treeLen < n && i.doc.length > n + 1e3,
            u = s.context.work(() => (nh && nh()) || Date.now() > o, n + (l ? 0 : 1e5));
          (this.chunkBudget -= Date.now() - t), (u || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: ot.setState.of(new Un(s.context)) })), this.chunkBudget > 0 && !(u && !l) && this.scheduleWork(), this.checkAsyncSchedule(s.context);
        }
        checkAsyncSchedule(e) {
          e.scheduleOn &&
            (this.workScheduled++,
            e.scheduleOn
              .then(() => this.scheduleWork())
              .catch((t) => Xe(this.view.state, t))
              .then(() => this.workScheduled--),
            (e.scheduleOn = null));
        }
        destroy() {
          this.working && this.working();
        }
        isWorking() {
          return !!(this.working || this.workScheduled > 0);
        }
        constructor(e) {
          (this.view = e), (this.working = null), (this.workScheduled = 0), (this.chunkEnd = -1), (this.chunkBudget = -1), (this.work = this.work.bind(this)), this.scheduleWork();
        }
      }),
      h(_class82, "ParseWorker"),
      _class82),
      {
        eventHandlers: {
          focus() {
            this.scheduleWork();
          },
        },
      },
    ),
    Br = H.define({
      combine(r) {
        return r.length ? r[0] : null;
      },
      enables: (r) => [
        ot.state,
        GA,
        ne.contentAttributes.compute([r], (e) => {
          var t = e.facet(r);
          return t && t.name ? { "data-language": t.name } : {};
        }),
      ],
    }),
    Oo =
      ((_class83 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? [] : ref;
          (this.language = e), (this.support = t), (this.extension = [e, t]);
        }
      }),
      h(_class83, "LanguageSupport"),
      _class83);
  var To = H.define({
    combine: (r) => {
      if (!r.length) return "  ";
      var e = r[0];
      if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0])) throw new Error("Invalid indent unit: " + JSON.stringify(r[0]));
      return e;
    },
  });
  function mF(r) {
    var e = r.facet(To);
    return e.charCodeAt(0) == 9 ? r.tabSize * e.length : e.length;
  }
  h(mF, "getIndentUnit");
  function gF(r, e) {
    var t = "",
      i = r.tabSize,
      n = r.facet(To)[0];
    if (n == "	") {
      for (; e >= i; ) (t += "	"), (e -= i);
      n = " ";
    }
    for (var s = 0; s < e; s++) t += n;
    return t;
  }
  h(gF, "indentString");
  var vr =
      ((_r59 = class r {
        static define(e, t) {
          return new r(e, t || {});
        }
        constructor(e, t) {
          this.specs = e;
          var i;
          function n(l) {
            var u = ft.newName();
            return ((i || (i = Object.create(null)))["." + u] = l), u;
          }
          h(n, "def");
          var s = typeof t.all == "string" ? t.all : t.all ? n(t.all) : void 0,
            o = t.scope;
          (this.scope = o instanceof ot ? (l) => l.prop(Cr) == o.data : o ? (l) => l == o : void 0),
            (this.style = ih(
              e.map((l) => ({ tag: l.tag, class: l.class || n(Object.assign({}, l, { tag: null })) })),
              { all: s },
            ).style),
            (this.module = i ? new ft(i) : null),
            (this.themeType = t.themeType);
        }
      }),
      h(_r59, "HighlightStyle"),
      _r59),
    ah = H.define(),
    DF = H.define({
      combine(r) {
        return r.length ? [r[0]] : null;
      },
    });
  function sh(r) {
    var e = r.facet(ah);
    return e.length ? e : r.facet(DF);
  }
  h(sh, "getHighlighters");
  function FF(r, e) {
    var t = [XA],
      i;
    return r instanceof vr && (r.module && t.push(ne.styleModule.of(r.module)), (i = r.themeType)), (e === null || e === void 0 ? void 0 : e.fallback) ? t.push(DF.of(r)) : i ? t.push(ah.computeN([ne.darkTheme], (n) => (n.facet(ne.darkTheme) == (i == "dark") ? [r] : []))) : t.push(ah.of(r)), t;
  }
  h(FF, "syntaxHighlighting");
  var hh =
      ((_class84 = class _class {
        update(e) {
          var t = Oi(e.state),
            i = sh(e.state),
            n = i != sh(e.startState),
            _e_view = e.view,
            s = _e_view.viewport,
            o = e.changes.mapPos(this.decoratedTo, 1);
          t.length < s.to && !n && t.type == this.tree.type && o >= s.to ? ((this.decorations = this.decorations.map(e.changes)), (this.decoratedTo = o)) : (t != this.tree || e.viewportChanged || n) && ((this.tree = t), (this.decorations = this.buildDeco(e.view, i)), (this.decoratedTo = s.to));
        }
        buildDeco(e, t) {
          if (!t || !this.tree.length) return pe.none;
          var i = new Si();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _step.value,
                n = _step_value.from,
                s = _step_value.to;
              uF(
                this.tree,
                t,
                (o, l, u) => {
                  i.add(o, l, this.markCache[u] || (this.markCache[u] = pe.mark({ class: u })));
                },
                n,
                s,
              );
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i.finish();
        }
        constructor(e) {
          (this.markCache = Object.create(null)), (this.tree = Oi(e.state)), (this.decorations = this.buildDeco(e, sh(e.state))), (this.decoratedTo = e.viewport.to);
        }
      }),
      h(_class84, "TreeHighlighter"),
      _class84),
    XA = cr.high(je.fromClass(hh, { decorations: (r) => r.decorations })),
    S8 = vr.define([
      { tag: U.meta, color: "#404740" },
      { tag: U.link, textDecoration: "underline" },
      { tag: U.heading, textDecoration: "underline", fontWeight: "bold" },
      { tag: U.emphasis, fontStyle: "italic" },
      { tag: U.strong, fontWeight: "bold" },
      { tag: U.strikethrough, textDecoration: "line-through" },
      { tag: U.keyword, color: "#708" },
      { tag: [U.atom, U.bool, U.url, U.contentSeparator, U.labelName], color: "#219" },
      { tag: [U.literal, U.inserted], color: "#164" },
      { tag: [U.string, U.deleted], color: "#a11" },
      { tag: [U.regexp, U.escape, U.special(U.string)], color: "#e40" },
      { tag: U.definition(U.variableName), color: "#00f" },
      { tag: U.local(U.variableName), color: "#30a" },
      { tag: [U.typeName, U.namespace], color: "#085" },
      { tag: U.className, color: "#167" },
      { tag: [U.special(U.variableName), U.macroName], color: "#256" },
      { tag: U.definition(U.propertyName), color: "#00c" },
      { tag: U.comment, color: "#940" },
      { tag: U.invalid, color: "#f00" },
    ]),
    KA = ne.baseTheme({ "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" }, "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" } }),
    bF = 1e4,
    yF = "()[]{}",
    EF = H.define({
      combine(r) {
        return Xt(r, { afterCursor: !0, brackets: yF, maxScanDistance: bF, renderMatch: tk });
      },
    }),
    ZA = pe.mark({ class: "cm-matchingBracket" }),
    ek = pe.mark({ class: "cm-nonmatchingBracket" });
  function tk(r) {
    var e = [],
      t = r.matched ? ZA : ek;
    return e.push(t.range(r.start.from, r.start.to)), r.end && e.push(t.range(r.end.from, r.end.to)), e;
  }
  h(tk, "defaultRenderMatch");
  var ik = Pe.define({
      create() {
        return pe.none;
      },
      update(r, e) {
        if (!e.docChanged && !e.selection) return r;
        var t = [],
          i = e.state.facet(EF);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.state.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            if (!n.empty) continue;
            var s = _n(e.state, n.head, -1, i) || (n.head > 0 && _n(e.state, n.head - 1, 1, i)) || (i.afterCursor && (_n(e.state, n.head, 1, i) || (n.head < e.state.doc.length && _n(e.state, n.head + 1, -1, i))));
            s && (t = t.concat(i.renderMatch(s, e.state)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return pe.set(t, !0);
      },
      provide: (r) => ne.decorations.from(r),
    }),
    rk = [ik, KA];
  function CF() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [EF.of(r), rk];
  }
  h(CF, "bracketMatching");
  var nk = new ue();
  function ch(r, e, t) {
    var i = r.prop(e < 0 ? ue.openedBy : ue.closedBy);
    if (i) return i;
    if (r.name.length == 1) {
      var n = t.indexOf(r.name);
      if (n > -1 && n % 2 == (e < 0 ? 1 : 0)) return [t[n + e]];
    }
    return null;
  }
  h(ch, "matchingNodes");
  function fh(r) {
    var e = r.type.prop(nk);
    return e ? e(r.node) : r;
  }
  h(fh, "findHandle");
  function _n(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var n = i.maxScanDistance || bF,
      s = i.brackets || yF,
      o = Oi(r),
      l = o.resolveInner(e, t);
    for (var u = l; u; u = u.parent) {
      var a = ch(u.type, t, s);
      if (a && u.from < u.to) {
        var c = fh(u);
        if (c && (t > 0 ? e >= c.from && e < c.to : e > c.from && e <= c.to)) return sk(r, e, t, u, c, a, s);
      }
    }
    return ok(r, e, t, o, l.type, n, s);
  }
  h(_n, "matchBrackets");
  function sk(r, e, t, i, n, s, o) {
    var l = i.parent,
      u = { from: n.from, to: n.to },
      a = 0,
      c = l === null || l === void 0 ? void 0 : l.cursor();
    if (c && (t < 0 ? c.childBefore(i.from) : c.childAfter(i.to)))
      do
        if (t < 0 ? c.to <= i.from : c.from >= i.to) {
          if (a == 0 && s.indexOf(c.type.name) > -1 && c.from < c.to) {
            var f = fh(c);
            return { start: u, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };
          } else if (ch(c.type, t, o)) a++;
          else if (ch(c.type, -t, o)) {
            if (a == 0) {
              var f1 = fh(c);
              return { start: u, end: f1 && f1.from < f1.to ? { from: f1.from, to: f1.to } : void 0, matched: !1 };
            }
            a--;
          }
        }
      while (t < 0 ? c.prevSibling() : c.nextSibling());
    return { start: u, matched: !1 };
  }
  h(sk, "matchMarkedBrackets");
  function ok(r, e, t, i, n, s, o) {
    var l = t < 0 ? r.sliceDoc(e - 1, e) : r.sliceDoc(e, e + 1),
      u = o.indexOf(l);
    if (u < 0 || (u % 2 == 0) != t > 0) return null;
    var a = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e },
      c = r.doc.iterRange(e, t > 0 ? r.doc.length : 0),
      f = 0;
    for (var d = 0; !c.next().done && d <= s; ) {
      var p = c.value;
      t < 0 && (d += p.length);
      var m = e + d * t;
      for (var F = t > 0 ? 0 : p.length - 1, g = t > 0 ? p.length : -1; F != g; F += t) {
        var D = o.indexOf(p[F]);
        if (!(D < 0 || i.resolveInner(m + F, 1).type != n))
          if ((D % 2 == 0) == t > 0) f++;
          else {
            if (f == 1) return { start: a, end: { from: m + F, to: m + F + 1 }, matched: D >> 1 == u >> 1 };
            f--;
          }
      }
      t > 0 && (d += p.length);
    }
    return c.done ? { start: a, matched: !1 } : null;
  }
  h(ok, "matchPlainBrackets");
  var lk = Object.create(null),
    cF = [Ie.none];
  var fF = [],
    dF = Object.create(null),
    uk = Object.create(null);
  for (
    var _i2 = 0,
      _iter1 = [
        ["variable", "variableName"],
        ["variable-2", "variableName.special"],
        ["string-2", "string.special"],
        ["def", "variableName.definition"],
        ["tag", "tagName"],
        ["attribute", "attributeName"],
        ["type", "typeName"],
        ["builtin", "variableName.standard"],
        ["qualifier", "modifier"],
        ["error", "invalid"],
        ["header", "heading"],
        ["property", "propertyName"],
      ];
    _i2 < _iter1.length;
    _i2++
  ) {
    var _iter__i = _sliced_to_array(_iter1[_i2], 2),
      r2 = _iter__i[0],
      e1 = _iter__i[1];
    uk[r2] = ak(lk, e1);
  }
  function oh(r, e) {
    fF.indexOf(r) > -1 || (fF.push(r), console.warn(e));
  }
  h(oh, "warnForPart");
  function ak(r, e) {
    var t = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var l = _step.value;
        var u = [];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = l.split(".")[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var a = _step1.value;
            var c = r[a] || U[a];
            c ? (typeof c == "function" ? (u.length ? (u = u.map(c)) : oh(a, "Modifier ".concat(a, " used at start of tag"))) : u.length ? oh(a, "Tag ".concat(a, " used as modifier")) : (u = Array.isArray(c) ? c : [c])) : oh(a, "Unknown highlighting tag ".concat(a));
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator2 = u[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var a1 = _step2.value;
            t.push(a1);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!t.length) return 0;
    var i = e.replace(/ /g, "_"),
      n = i + " " + t.map((l) => l.id),
      s = dF[n];
    if (s) return s.id;
    var o = (dF[n] = Ie.define({ id: cF.length, name: i, props: [Uo({ [i]: t })] }));
    return cF.push(o), o.id;
  }
  h(ak, "createTokenType");
  var w8 = { rtl: pe.mark({ class: "cm-iso", inclusive: !0, attributes: { dir: "rtl" }, bidiIsolate: Be.RTL }), ltr: pe.mark({ class: "cm-iso", inclusive: !0, attributes: { dir: "ltr" }, bidiIsolate: Be.LTR }), auto: pe.mark({ class: "cm-iso", inclusive: !0, attributes: { dir: "auto" }, bidiIsolate: null }) };
  var ph = ct.define(),
    hk = ct.define(),
    ck = H.define(),
    BF = H.define({
      combine(r) {
        return Xt(r, { minDepth: 100, newGroupDelay: 500, joinToEvent: (e, t) => t }, { minDepth: Math.max, newGroupDelay: Math.min, joinToEvent: (e, t) => (i, n) => e(i, n) || t(i, n) });
      },
    }),
    vF = Pe.define({
      create() {
        return Ti.empty;
      },
      update(r, e) {
        var t = e.state.facet(BF),
          i = e.annotation(ph);
        if (i) {
          var u = At.fromTransaction(e, i.selection),
            a = i.side,
            c = a == 0 ? r.undone : r.done;
          return u ? (c = Ro(c, c.length, t.minDepth, u)) : (c = SF(c, e.startState.selection)), new Ti(a == 0 ? i.rest : c, a == 0 ? c : i.rest);
        }
        var n = e.annotation(hk);
        if (((n == "full" || n == "before") && (r = r.isolate()), e.annotation(Le.addToHistory) === !1)) return e.changes.empty ? r : r.addMapping(e.changes.desc);
        var s = At.fromTransaction(e),
          o = e.annotation(Le.time),
          l = e.annotation(Le.userEvent);
        return s ? (r = r.addChanges(s, o, l, t, e)) : e.selection && (r = r.addSelection(e.startState.selection, o, l, t.newGroupDelay)), (n == "full" || n == "after") && (r = r.isolate()), r;
      },
      toJSON(r) {
        return { done: r.done.map((e) => e.toJSON()), undone: r.undone.map((e) => e.toJSON()) };
      },
      fromJSON(r) {
        return new Ti(r.done.map(At.fromJSON), r.undone.map(At.fromJSON));
      },
    });
  function xF() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [
      vF,
      BF.of(r),
      ne.domEventHandlers({
        beforeinput(e, t) {
          var i = e.inputType == "historyUndo" ? AF : e.inputType == "historyRedo" ? mh : null;
          return i ? (e.preventDefault(), i(t)) : !1;
        },
      }),
    ];
  }
  h(xF, "history");
  function No(r, e) {
    return function (param) {
      var t = param.state,
        i = param.dispatch;
      if (!e && t.readOnly) return !1;
      var n = t.field(vF, !1);
      if (!n) return !1;
      var s = n.pop(r, t, e);
      return s ? (i(s), !0) : !1;
    };
  }
  h(No, "cmd");
  var AF = No(0, !1),
    mh = No(1, !1),
    fk = No(0, !0),
    dk = No(1, !0);
  var At =
    ((_r60 = class r {
      setSelAfter(e) {
        return new r(this.changes, this.effects, this.mapped, this.startSelection, e);
      }
      toJSON() {
        var e, t, i;
        return { changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(), mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(), startSelection: (i = this.startSelection) === null || i === void 0 ? void 0 : i.toJSON(), selectionsAfter: this.selectionsAfter.map((n) => n.toJSON()) };
      }
      static fromJSON(e) {
        return new r(e.changes && We.fromJSON(e.changes), [], e.mapped && Jt.fromJSON(e.mapped), e.startSelection && Z.fromJSON(e.startSelection), e.selectionsAfter.map(Z.fromJSON));
      }
      static fromTransaction(e, t) {
        var i = gt;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.startState.facet(ck)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            var s = n(e);
            s.length && (i = i.concat(s));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return !i.length && e.changes.empty ? null : new r(e.changes.invert(e.startState.doc), i, void 0, t || e.startState.selection, gt);
      }
      static selection(e) {
        return new r(void 0, gt, void 0, void 0, e);
      }
      constructor(e, t, i, n, s) {
        (this.changes = e), (this.effects = t), (this.mapped = i), (this.startSelection = n), (this.selectionsAfter = s);
      }
    }),
    h(_r60, "HistEvent"),
    _r60);
  function Ro(r, e, t, i) {
    var n = e + 1 > t + 20 ? e - t - 1 : 0,
      s = r.slice(n, e);
    return s.push(i), s;
  }
  h(Ro, "updateBranch");
  function pk(r, e) {
    var t = [],
      i = !1;
    return (
      r.iterChangedRanges((n, s) => t.push(n, s)),
      e.iterChangedRanges((n, s, o, l) => {
        for (var u = 0; u < t.length; ) {
          var a = t[u++],
            c = t[u++];
          l >= a && o <= c && (i = !0);
        }
      }),
      i
    );
  }
  h(pk, "isAdjacent");
  function mk(r, e) {
    return r.ranges.length == e.ranges.length && r.ranges.filter((t, i) => t.empty != e.ranges[i].empty).length === 0;
  }
  h(mk, "eqSelectionShape");
  function kF(r, e) {
    return r.length ? (e.length ? r.concat(e) : r) : e;
  }
  h(kF, "conc");
  var gt = [],
    gk = 200;
  function SF(r, e) {
    if (r.length) {
      var t = r[r.length - 1],
        i = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - gk));
      return i.length && i[i.length - 1].eq(e) ? r : (i.push(e), Ro(r, r.length - 1, 1e9, t.setSelAfter(i)));
    } else return [At.selection([e])];
  }
  h(SF, "addSelection");
  function Dk(r) {
    var e = r[r.length - 1],
      t = r.slice();
    return (t[r.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1))), t;
  }
  h(Dk, "popSelection");
  function dh(r, e) {
    if (!r.length) return r;
    var t = r.length,
      i = gt;
    for (; t; ) {
      var n = Fk(r[t - 1], e, i);
      if ((n.changes && !n.changes.empty) || n.effects.length) {
        var s = r.slice(0, t);
        return (s[t - 1] = n), s;
      } else (e = n.mapped), t--, (i = n.selectionsAfter);
    }
    return i.length ? [At.selection(i)] : gt;
  }
  h(dh, "addMappingToBranch");
  function Fk(r, e, t) {
    var i = kF(r.selectionsAfter.length ? r.selectionsAfter.map((l) => l.map(e)) : gt, t);
    if (!r.changes) return At.selection(i);
    var n = r.changes.map(e),
      s = e.mapDesc(r.changes, !0),
      o = r.mapped ? r.mapped.composeDesc(s) : s;
    return new At(n, de.mapEffects(r.effects, e), o, r.startSelection.map(s), i);
  }
  h(Fk, "mapEvent");
  var bk = /^(input\.type|delete)($|\.)/,
    Ti =
      ((_r61 = class r {
        isolate() {
          return this.prevTime ? new r(this.done, this.undone) : this;
        }
        addChanges(e, t, i, n, s) {
          var o = this.done,
            l = o[o.length - 1];
          return (
            l && l.changes && !l.changes.empty && e.changes && (!i || bk.test(i)) && ((!l.selectionsAfter.length && t - this.prevTime < n.newGroupDelay && n.joinToEvent(s, pk(l.changes, e.changes))) || i == "input.type.compose")
              ? (o = Ro(o, o.length - 1, n.minDepth, new At(e.changes.compose(l.changes), kF(e.effects, l.effects), l.mapped, l.startSelection, gt)))
              : (o = Ro(o, o.length, n.minDepth, e)),
            new r(o, gt, t, i)
          );
        }
        addSelection(e, t, i, n) {
          var s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : gt;
          return s.length > 0 && t - this.prevTime < n && i == this.prevUserEvent && i && /^select($|\.)/.test(i) && mk(s[s.length - 1], e) ? this : new r(SF(this.done, e), this.undone, t, i);
        }
        addMapping(e) {
          return new r(dh(this.done, e), dh(this.undone, e), this.prevTime, this.prevUserEvent);
        }
        pop(e, t, i) {
          var n = e == 0 ? this.done : this.undone;
          if (n.length == 0) return null;
          var s = n[n.length - 1],
            o = s.selectionsAfter[0] || t.selection;
          if (i && s.selectionsAfter.length) return t.update({ selection: s.selectionsAfter[s.selectionsAfter.length - 1], annotations: ph.of({ side: e, rest: Dk(n), selection: o }), userEvent: e == 0 ? "select.undo" : "select.redo", scrollIntoView: !0 });
          if (s.changes) {
            var l = n.length == 1 ? gt : n.slice(0, n.length - 1);
            return s.mapped && (l = dh(l, s.mapped)), t.update({ changes: s.changes, selection: s.startSelection, effects: s.effects, annotations: ph.of({ side: e, rest: l, selection: o }), filter: !1, userEvent: e == 0 ? "undo" : "redo", scrollIntoView: !0 });
          } else return null;
        }
        constructor(e, t, ref, ref1) {
          var i = ref === void 0 ? 0 : ref,
            n = ref1 === void 0 ? void 0 : ref1;
          (this.done = e), (this.undone = t), (this.prevTime = i), (this.prevUserEvent = n);
        }
      }),
      h(_r61, "HistoryState"),
      _r61);
  Ti.empty = new Ti(gt, gt);
  var wF = [
    { key: "Mod-z", run: AF, preventDefault: !0 },
    { key: "Mod-y", mac: "Mod-Shift-z", run: mh, preventDefault: !0 },
    { linux: "Ctrl-Shift-z", run: mh, preventDefault: !0 },
    { key: "Mod-u", run: fk, preventDefault: !0 },
    { key: "Alt-u", mac: "Mod-Shift-u", run: dk, preventDefault: !0 },
  ];
  var P8 = typeof Intl < "u" && Intl.Segmenter ? new Intl.Segmenter(void 0, { granularity: "word" }) : null;
  function QF(r, e) {
    var t = -1;
    return r.changeByRange((i) => {
      var n = [];
      for (var o = i.from; o <= i.to; ) {
        var l = r.doc.lineAt(o);
        l.number > t && (i.empty || i.to > l.from) && (e(l, n, i), (t = l.number)), (o = l.to + 1);
      }
      var s = r.changes(n);
      return { changes: n, range: Z.range(s.mapPos(i.anchor, 1), s.mapPos(i.head, 1)) };
    });
  }
  h(QF, "changeBySelectedLine");
  var yk = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              QF(r, (t, i) => {
                i.push({ from: t.from, insert: r.facet(To) });
              }),
              { userEvent: "input.indent" },
            ),
          ),
          !0);
    }, "indentMore"),
    Ek = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              QF(r, (t, i) => {
                var n = /^\s*/.exec(t.text)[0];
                if (!n) return;
                var s = Vs(n, r.tabSize),
                  o = 0,
                  l = gF(r, Math.max(0, s - mF(r)));
                for (; o < n.length && o < l.length && n.charCodeAt(o) == l.charCodeAt(o); ) o++;
                i.push({ from: t.from + o, to: t.from + n.length, insert: l.slice(o) });
              }),
              { userEvent: "delete.dedent" },
            ),
          ),
          !0);
    }, "indentLess");
  var _F = { key: "Tab", run: yk, shift: Ek };
  function Dt() {
    var r = arguments[0];
    typeof r == "string" && (r = document.createElement(r));
    var e = 1,
      t = arguments[1];
    if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
      for (var i in t)
        if (Object.prototype.hasOwnProperty.call(t, i)) {
          var n = t[i];
          typeof n == "string" ? r.setAttribute(i, n) : n != null && (r[i] = n);
        }
      e++;
    }
    for (; e < arguments.length; e++) UF(r, arguments[e]);
    return r;
  }
  h(Dt, "crelt");
  function UF(r, e) {
    if (typeof e == "string") r.appendChild(document.createTextNode(e));
    else if (e != null)
      if (e.nodeType != null) r.appendChild(e);
      else if (Array.isArray(e)) for (var t = 0; t < e.length; t++) UF(r, e[t]);
      else throw new RangeError("Unsupported child node: " + e);
  }
  h(UF, "add");
  var gh =
      ((_class85 = class _class {
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.diagnostic = i);
        }
      }),
      h(_class85, "SelectedDiagnostic"),
      _class85),
    Ri =
      ((_r62 = class r {
        static init(e, t, i) {
          var n = e,
            s = i.facet(Ni).markerFilter;
          s && (n = s(n, i));
          var o = pe.set(
            n.map((l) => (l.from == l.to || (l.from == l.to - 1 && i.doc.lineAt(l.from).to == l.from) ? pe.widget({ widget: new Dh(l), diagnostic: l }).range(l.from) : pe.mark({ attributes: { class: "cm-lintRange cm-lintRange-" + l.severity + (l.markClass ? " " + l.markClass : "") }, diagnostic: l, inclusive: !0 }).range(l.from, l.to))),
            !0,
          );
          return new r(o, t, xr(o));
        }
        constructor(e, t, i) {
          (this.diagnostics = e), (this.panel = t), (this.selected = i);
        }
      }),
      h(_r62, "LintState"),
      _r62);
  function xr(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
      t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    var i = null;
    return (
      r.between(t, 1e9, (n, s, param) => {
        var o = param.spec;
        if (!(e && o.diagnostic != e)) return (i = new gh(n, s, o.diagnostic)), !1;
      }),
      i
    );
  }
  h(xr, "findDiagnostic");
  function Ck(r, e) {
    var t = r.startState.doc.lineAt(e.pos);
    return !!(r.effects.some((i) => i.is(bh)) || r.changes.touchesRange(t.from, t.to));
  }
  h(Ck, "hideTooltip");
  function Bk(r, e) {
    return r.field(kt, !1) ? e : e.concat(de.appendConfig.of(PF));
  }
  h(Bk, "maybeEnableLint");
  function vk(r, e) {
    return { effects: Bk(r, [bh.of(e)]) };
  }
  h(vk, "setDiagnostics");
  var bh = de.define(),
    OF = de.define(),
    TF = de.define(),
    kt = Pe.define({
      create() {
        return new Ri(pe.none, null, null);
      },
      update(r, e) {
        if (e.docChanged) {
          var t = r.diagnostics.map(e.changes),
            i = null;
          if (r.selected) {
            var n = e.changes.mapPos(r.selected.from, 1);
            i = xr(t, r.selected.diagnostic, n) || xr(t, null, n);
          }
          r = new Ri(t, r.panel, i);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t1 = _step.value;
            t1.is(bh) ? (r = Ri.init(t1.value, r.panel, e.state)) : t1.is(OF) ? (r = new Ri(r.diagnostics, t1.value ? Fh.open : null, r.selected)) : t1.is(TF) && (r = new Ri(r.diagnostics, r.panel, t1.value));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return r;
      },
      provide: (r) => [yo.from(r, (e) => e.panel), ne.decorations.from(r, (e) => e.diagnostics)],
    });
  var xk = pe.mark({ class: "cm-lintRange cm-lintRange-active", inclusive: !0 });
  function Ak(r, e, t) {
    var _r_state_field = r.state.field(kt),
      i = _r_state_field.diagnostics,
      n = [],
      s = 2e8,
      o = 0;
    i.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (u, a, param) => {
      var c = param.spec;
      e >= u && e <= a && (u == a || ((e > u || t > 0) && (e < a || t < 0))) && (n.push(c.diagnostic), (s = Math.min(u, s)), (o = Math.max(a, o)));
    });
    var l = r.state.facet(Ni).tooltipFilter;
    return (
      l && (n = l(n, r.state)),
      n.length
        ? {
            pos: s,
            end: o,
            above: r.state.doc.lineAt(s).to < o,
            create() {
              return { dom: kk(r, n) };
            },
          }
        : null
    );
  }
  h(Ak, "lintTooltip");
  function kk(r, e) {
    return Dt(
      "ul",
      { class: "cm-tooltip-lint" },
      e.map((t) => MF(r, t, !1)),
    );
  }
  h(kk, "diagnosticsTooltip");
  var LF = h((r) => {
    var e = r.state.field(kt, !1);
    return !e || !e.panel ? !1 : (r.dispatch({ effects: OF.of(!1) }), !0);
  }, "closeLintPanel");
  var Sk = je.fromClass(
      class {
        run() {
          var r = Date.now();
          if (r < this.lintTime - 10) this.timeout = setTimeout(this.run, this.lintTime - r);
          else {
            this.set = !1;
            var _this_view = this.view,
              e = _this_view.state,
              _e_facet = e.facet(Ni),
              t = _e_facet.sources;
            t.length &&
              Promise.all(t.map((i) => Promise.resolve(i(this.view)))).then(
                (i) => {
                  var n = i.reduce((s, o) => s.concat(o));
                  this.view.state.doc == e.doc && this.view.dispatch(vk(this.view.state, n));
                },
                (i) => {
                  Xe(this.view.state, i);
                },
              );
          }
        }
        update(r) {
          var e = r.state.facet(Ni);
          (r.docChanged || e != r.startState.facet(Ni) || (e.needsRefresh && e.needsRefresh(r))) && ((this.lintTime = Date.now() + e.delay), this.set || ((this.set = !0), (this.timeout = setTimeout(this.run, e.delay))));
        }
        force() {
          this.set && ((this.lintTime = Date.now()), this.run());
        }
        destroy() {
          clearTimeout(this.timeout);
        }
        constructor(r) {
          (this.view = r), (this.timeout = -1), (this.set = !0);
          var _r_state_facet = r.state.facet(Ni),
            e = _r_state_facet.delay;
          (this.lintTime = Date.now() + e), (this.run = this.run.bind(this)), (this.timeout = setTimeout(this.run, e));
        }
      },
    ),
    Ni = H.define({
      combine(r) {
        return Object.assign(
          { sources: r.map((e) => e.source).filter((e) => e != null) },
          Xt(
            r.map((e) => e.config),
            { delay: 750, markerFilter: null, tooltipFilter: null, needsRefresh: null },
            { needsRefresh: (e, t) => (e ? (t ? (i) => e(i) || t(i) : e) : t) },
          ),
        );
      },
    });
  function RF(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return [Ni.of({ source: r, config: e }), Sk, PF];
  }
  h(RF, "linter");
  function NF(r) {
    var e = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (r)
      try {
        var _loop = function () {
          var _loop = function (i) {
            var n = t[i];
            if (/[a-zA-Z]/.test(n) && !e.some((s) => s.toLowerCase() == n.toLowerCase())) {
              e.push(n);
              return "continue|e";
            }
          };
          var _step_value = _step.value,
            t = _step_value.name;
          for (var i = 0; i < t.length; i++) {
            var _ret = _loop(i);
            switch (_ret) {
              case "continue|e":
                return "continue|e";
            }
          }
          e.push("");
        };
        e: for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ret = _loop();
          switch (_ret) {
            case "continue|e":
              continue e;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    return e;
  }
  h(NF, "assignKeys");
  function MF(r, e, t) {
    var i;
    var n = t ? NF(e.actions) : [];
    return Dt(
      "li",
      { class: "cm-diagnostic cm-diagnostic-" + e.severity },
      Dt("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage() : e.message),
      (i = e.actions) === null || i === void 0
        ? void 0
        : i.map((s, o) => {
            var l = !1,
              u = h((d) => {
                if ((d.preventDefault(), l)) return;
                l = !0;
                var p = xr(r.state.field(kt).diagnostics, e);
                p && s.apply(r, p.from, p.to);
              }, "click"),
              a = s.name,
              c = n[o] ? a.indexOf(n[o]) : -1,
              f = c < 0 ? a : [a.slice(0, c), Dt("u", a.slice(c, c + 1)), a.slice(c + 1)];
            return Dt("button", { type: "button", class: "cm-diagnosticAction", onclick: u, onmousedown: u, "aria-label": " Action: ".concat(a).concat(c < 0 ? "" : ' (access key "'.concat(n[o], ')"'), ".") }, f);
          }),
      e.source && Dt("div", { class: "cm-diagnosticSource" }, e.source),
    );
  }
  h(MF, "renderDiagnostic");
  var Dh =
      ((_class86 = class _class extends ai {
        eq(e) {
          return e.diagnostic == this.diagnostic;
        }
        toDOM() {
          return Dt("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
        }
        constructor(e) {
          super(), (this.diagnostic = e);
        }
      }),
      h(_class86, "DiagnosticWidget"),
      _class86),
    Po =
      ((_class87 = class _class {
        constructor(e, t) {
          (this.diagnostic = t), (this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16)), (this.dom = MF(e, t, !0)), (this.dom.id = this.id), this.dom.setAttribute("role", "option");
        }
      }),
      h(_class87, "PanelItem"),
      _class87),
    Fh =
      ((_r63 = class r {
        get selectedIndex() {
          var e = this.view.state.field(kt).selected;
          if (!e) return -1;
          for (var t = 0; t < this.items.length; t++) if (this.items[t].diagnostic == e.diagnostic) return t;
          return -1;
        }
        update() {
          var _this_view_state_field = this.view.state.field(kt),
            e = _this_view_state_field.diagnostics,
            t = _this_view_state_field.selected,
            i = 0,
            n = !1,
            s = null;
          for (
            e.between(0, this.view.state.doc.length, (o, l, param) => {
              var u = param.spec;
              var a = -1,
                c;
              for (var f = i; f < this.items.length; f++)
                if (this.items[f].diagnostic == u.diagnostic) {
                  a = f;
                  break;
                }
              a < 0 ? ((c = new Po(this.view, u.diagnostic)), this.items.splice(i, 0, c), (n = !0)) : ((c = this.items[a]), a > i && (this.items.splice(i, a - i), (n = !0))), t && c.diagnostic == t.diagnostic ? c.dom.hasAttribute("aria-selected") || (c.dom.setAttribute("aria-selected", "true"), (s = c)) : c.dom.hasAttribute("aria-selected") && c.dom.removeAttribute("aria-selected"), i++;
            });
            i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0);

          )
            (n = !0), this.items.pop();
          this.items.length == 0 && (this.items.push(new Po(this.view, { from: -1, to: -1, severity: "info", message: this.view.state.phrase("No diagnostics") })), (n = !0)),
            s
              ? (this.list.setAttribute("aria-activedescendant", s.id),
                this.view.requestMeasure({
                  key: this,
                  read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
                  write: (param) => {
                    var o = param.sel,
                      l = param.panel;
                    var u = l.height / this.list.offsetHeight;
                    o.top < l.top ? (this.list.scrollTop -= (l.top - o.top) / u) : o.bottom > l.bottom && (this.list.scrollTop += (o.bottom - l.bottom) / u);
                  },
                }))
              : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"),
            n && this.sync();
        }
        sync() {
          var e = this.list.firstChild;
          function t() {
            var i = e;
            (e = i.nextSibling), i.remove();
          }
          h(t, "rm");
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (i.dom.parentNode == this.list) {
                for (; e != i.dom; ) t();
                e = i.dom.nextSibling;
              } else this.list.insertBefore(i.dom, e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (; e; ) t();
        }
        moveSelection(e) {
          if (this.selectedIndex < 0) return;
          var t = this.view.state.field(kt),
            i = xr(t.diagnostics, this.items[e].diagnostic);
          i && this.view.dispatch({ selection: { anchor: i.from, head: i.to }, scrollIntoView: !0, effects: TF.of(i) });
        }
        static open(e) {
          return new r(e);
        }
        constructor(e) {
          (this.view = e), (this.items = []);
          var t = h((n) => {
              if (n.keyCode == 27) LF(this.view), this.view.focus();
              else if (n.keyCode == 38 || n.keyCode == 33) this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
              else if (n.keyCode == 40 || n.keyCode == 34) this.moveSelection((this.selectedIndex + 1) % this.items.length);
              else if (n.keyCode == 36) this.moveSelection(0);
              else if (n.keyCode == 35) this.moveSelection(this.items.length - 1);
              else if (n.keyCode == 13) this.view.focus();
              else if (n.keyCode >= 65 && n.keyCode <= 90 && this.selectedIndex >= 0) {
                var _this_items_this_selectedIndex = this.items[this.selectedIndex],
                  s = _this_items_this_selectedIndex.diagnostic,
                  o = NF(s.actions);
                for (var l = 0; l < o.length; l++)
                  if (o[l].toUpperCase().charCodeAt(0) == n.keyCode) {
                    var u = xr(this.view.state.field(kt).diagnostics, s);
                    u && s.actions[l].apply(e, u.from, u.to);
                  }
              } else return;
              n.preventDefault();
            }, "onkeydown"),
            i = h((n) => {
              for (var s = 0; s < this.items.length; s++) this.items[s].dom.contains(n.target) && this.moveSelection(s);
            }, "onclick");
          (this.list = Dt("ul", { tabIndex: 0, role: "listbox", "aria-label": this.view.state.phrase("Diagnostics"), onkeydown: t, onclick: i })), (this.dom = Dt("div", { class: "cm-panel-lint" }, this.list, Dt("button", { type: "button", name: "close", "aria-label": this.view.state.phrase("close"), onclick: () => LF(this.view) }, "\xd7"))), this.update();
        }
      }),
      h(_r63, "LintPanel"),
      _r63);
  function wk(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'viewBox="0 0 40 40"';
    return 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" '.concat(e, ">").concat(encodeURIComponent(r), "</svg>')");
  }
  h(wk, "svg");
  function Mo(r) {
    return wk('<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="'.concat(r, '" fill="none" stroke-width=".7"/>'), 'width="6" height="3"');
  }
  h(Mo, "underline");
  var Qk = ne.baseTheme({
    ".cm-diagnostic": { padding: "3px 6px 3px 8px", marginLeft: "-1px", display: "block", whiteSpace: "pre-wrap" },
    ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
    ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
    ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
    ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
    ".cm-diagnosticAction": { font: "inherit", border: "none", padding: "2px 4px", backgroundColor: "#444", color: "white", borderRadius: "3px", marginLeft: "8px", cursor: "pointer" },
    ".cm-diagnosticSource": { fontSize: "70%", opacity: 0.7 },
    ".cm-lintRange": { backgroundPosition: "left bottom", backgroundRepeat: "repeat-x", paddingBottom: "0.7px" },
    ".cm-lintRange-error": { backgroundImage: Mo("#d11") },
    ".cm-lintRange-warning": { backgroundImage: Mo("orange") },
    ".cm-lintRange-info": { backgroundImage: Mo("#999") },
    ".cm-lintRange-hint": { backgroundImage: Mo("#66d") },
    ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
    ".cm-tooltip-lint": { padding: 0, margin: 0 },
    ".cm-lintPoint": { position: "relative", "&:after": { content: '""', position: "absolute", bottom: 0, left: "-2px", borderLeft: "3px solid transparent", borderRight: "3px solid transparent", borderBottom: "4px solid #d11" } },
    ".cm-lintPoint-warning": { "&:after": { borderBottomColor: "orange" } },
    ".cm-lintPoint-info": { "&:after": { borderBottomColor: "#999" } },
    ".cm-lintPoint-hint": { "&:after": { borderBottomColor: "#66d" } },
    ".cm-panel.cm-panel-lint": {
      position: "relative",
      "& ul": { maxHeight: "100px", overflowY: "auto", "& [aria-selected]": { backgroundColor: "#ddd", "& u": { textDecoration: "underline" } }, "&:focus [aria-selected]": { background_fallback: "#bdf", backgroundColor: "Highlight", color_fallback: "white", color: "HighlightText" }, "& u": { textDecoration: "none" }, padding: 0, margin: 0 },
      "& [name=close]": { position: "absolute", top: "0", right: "2px", background: "inherit", border: "none", font: "inherit", padding: 0, margin: 0 },
    },
  });
  var PF = [
    kt,
    ne.decorations.compute([kt], (r) => {
      var _r_field = r.field(kt),
        e = _r_field.selected,
        t = _r_field.panel;
      return !e || !t || e.from == e.to ? pe.none : pe.set([xk.range(e.from, e.to)]);
    }),
    XD(Ak, { hideOn: Ck }),
    Qk,
  ];
  function _k(r) {
    var e, t, i;
    return {
      c() {
        (e = O("button")),
          (e.innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" class="svelte-1ha11jr"><path d="M704 896H64V320h640v192h64V192c0-35-29-64-64-64H512C512 57 455 0 384 0S256 57 256 128H64c-35 0-64 29-64 64v704c0 35 29 64 64 64h640c35 0 64-29 64-64V768h-64v128zM192 192h64s64-29 64-64 29-64 64-64 64 29 64 64 32 64 64 64h64s64 29 64 64H128c0-39 28-64 64-64zm-64 512h128v-64H128v64zm448-128V448L320 640l256 192V704h320V576H576zM128 832h192v-64H128v64zm320-448H128v64h320v-64zM256 512H128v64h128v-64z"></path></svg>'),
          v(e, "class", "btn svelte-1ha11jr"),
          v(e, "id", "copy"),
          v(e, "title", "Copy bibtex"),
          er(e, "copied", r[0]);
      },
      m(n, s) {
        E(n, e, s), t || ((i = ye(e, "click", r[1])), (t = !0));
      },
      p(n, param) {
        var _param = _sliced_to_array(param, 1),
          s = _param[0];
        s & 1 && er(e, "copied", n[0]);
      },
      i: Se,
      o: Se,
      d(n) {
        n && y(e), (t = !1), i();
      },
    };
  }
  h(_k, "create_fragment");
  function Uk(r, e, t) {
    var i,
      n = !1,
      s = e.bibtex,
      o = h(
        _async_to_generator(function () {
          var e;
          return _ts_generator(this, function (_state) {
            switch (_state.label) {
              case 0:
                _state.trys.push([0, 2, , 3]);
                return [4, navigator.clipboard.writeText(s)];
              case 1:
                _state.sent(), t(0, (n = !0)), clearInterval(i), (i = setTimeout(() => t(0, (n = !1)), 3e3));
                return [3, 3];
              case 2:
                e = _state.sent();
                alert("Failed to copy");
                return [3, 3];
              case 3:
                return [2];
            }
          });
        }),
        "handleCopy",
      );
    return (
      (r.$$set = (l) => {
        "bibtex" in l && t(2, (s = l.bibtex));
      }),
      [n, o, s]
    );
  }
  h(Uk, "instance");
  var yh =
      ((_class88 = class _class extends se {
        constructor(e) {
          super(), le(this, e, Uk, _k, oe, { bibtex: 2 });
        }
      }),
      h(_class88, "CopyButton"),
      _class88),
    IF = yh;
  var Ch =
      ((_r64 = class r {
        toString() {
          return "["
            .concat(this.stack.filter((e, t) => t % 3 == 0).concat(this.state), "]@")
            .concat(this.pos)
            .concat(this.score ? "!" + this.score : "");
        }
        static start(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          var n = e.parser.context;
          return new r(e, [], t, i, i, 0, [], 0, n ? new Io(n, n.start) : null, 0, null);
        }
        get context() {
          return this.curContext ? this.curContext.context : null;
        }
        pushState(e, t) {
          this.stack.push(this.state, t, this.bufferBase + this.buffer.length), (this.state = e);
        }
        reduce(e) {
          var t;
          var i = e >> 19,
            n = e & 65535,
            _this_p = this.p,
            s = _this_p.parser,
            o = s.dynamicPrecedence(n);
          if ((o && (this.score += o), i == 0)) {
            this.pushState(s.getGoto(this.state, n, !0), this.reducePos), n < s.minRepeatTerm && this.storeNode(n, this.reducePos, this.reducePos, 4, !0), this.reduceContext(n, this.reducePos);
            return;
          }
          var l = this.stack.length - (i - 1) * 3 - (e & 262144 ? 6 : 0),
            u = l ? this.stack[l - 2] : this.p.ranges[0].from,
            a = this.reducePos - u;
          a >= 2e3 && !(!((t = this.p.parser.nodeSet.types[n]) === null || t === void 0) && t.isAnonymous) && (u == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, (this.p.lastBigReductionSize = a)) : this.p.lastBigReductionSize < a && ((this.p.bigReductionCount = 1), (this.p.lastBigReductionStart = u), (this.p.lastBigReductionSize = a)));
          var c = l ? this.stack[l - 1] : 0,
            f = this.bufferBase + this.buffer.length - c;
          if (n < s.minRepeatTerm || e & 131072) {
            var d = s.stateFlag(this.state, 1) ? this.pos : this.reducePos;
            this.storeNode(n, u, d, f + 4, !0);
          }
          if (e & 262144) this.state = this.stack[l];
          else {
            var d1 = this.stack[l - 3];
            this.state = s.getGoto(d1, n, !0);
          }
          for (; this.stack.length > l; ) this.stack.pop();
          this.reduceContext(n, u);
        }
        storeNode(e, t, i) {
          var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 4,
            s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
          if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
            var o = this,
              l = this.buffer.length;
            if ((l == 0 && o.parent && ((l = o.bufferBase - o.parent.bufferBase), (o = o.parent)), l > 0 && o.buffer[l - 4] == 0 && o.buffer[l - 1] > -1)) {
              if (t == i) return;
              if (o.buffer[l - 2] >= t) {
                o.buffer[l - 2] = i;
                return;
              }
            }
          }
          if (!s || this.pos == i) this.buffer.push(e, t, i, n);
          else {
            var o1 = this.buffer.length;
            if (o1 > 0 && this.buffer[o1 - 4] != 0) for (; o1 > 0 && this.buffer[o1 - 2] > i; ) (this.buffer[o1] = this.buffer[o1 - 4]), (this.buffer[o1 + 1] = this.buffer[o1 - 3]), (this.buffer[o1 + 2] = this.buffer[o1 - 2]), (this.buffer[o1 + 3] = this.buffer[o1 - 1]), (o1 -= 4), n > 4 && (n -= 4);
            (this.buffer[o1] = e), (this.buffer[o1 + 1] = t), (this.buffer[o1 + 2] = i), (this.buffer[o1 + 3] = n);
          }
        }
        shift(e, t, i) {
          var n = this.pos;
          if (e & 131072) this.pushState(e & 65535, this.pos);
          else if (e & 262144) (this.pos = i), this.shiftContext(t, n), t <= this.p.parser.maxNode && this.buffer.push(t, n, i, 4);
          else {
            var s = e,
              _this_p = this.p,
              o = _this_p.parser;
            (i > this.pos || t <= o.maxNode) && ((this.pos = i), o.stateFlag(s, 1) || (this.reducePos = i)), this.pushState(s, n), this.shiftContext(t, n), t <= o.maxNode && this.buffer.push(t, n, i, 4);
          }
        }
        apply(e, t, i) {
          e & 65536 ? this.reduce(e) : this.shift(e, t, i);
        }
        useNode(e, t) {
          var i = this.p.reused.length - 1;
          (i < 0 || this.p.reused[i] != e) && (this.p.reused.push(e), i++);
          var n = this.pos;
          (this.reducePos = this.pos = n + e.length), this.pushState(t, n), this.buffer.push(i, n, this.reducePos, -1), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
        }
        split() {
          var e = this,
            t = e.buffer.length;
          for (; t > 0 && e.buffer[t - 2] > e.reducePos; ) t -= 4;
          var i = e.buffer.slice(t),
            n = e.bufferBase + t;
          for (; e && n == e.bufferBase; ) e = e.parent;
          return new r(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, i, n, this.curContext, this.lookAhead, e);
        }
        recoverByDelete(e, t) {
          var i = e <= this.p.parser.maxNode;
          i && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, i ? 8 : 4), (this.pos = this.reducePos = t), (this.score -= 190);
        }
        canShift(e) {
          for (var t = new Bh(this); ; ) {
            var i = this.p.parser.stateSlot(t.state, 4) || this.p.parser.hasAction(t.state, e);
            if (i == 0) return !1;
            if (!(i & 65536)) return !0;
            t.reduce(i);
          }
        }
        recoverByInsert(e) {
          if (this.stack.length >= 300) return [];
          var t = this.p.parser.nextStates(this.state);
          if (t.length > 8 || this.stack.length >= 120) {
            var _loop = function (s1) {
              var o = t[s1 + 1];
              n.some((l, u) => u & 1 && l == o) || n.push(t[s1], o);
            };
            var n = [];
            for (var s = 0, o; s < t.length; s += 2) (o = t[s + 1]) != this.state && this.p.parser.hasAction(o, e) && n.push(t[s], o);
            if (this.stack.length < 120) for (var s1 = 0; n.length < 8 && s1 < t.length; s1 += 2) _loop(s1);
            t = n;
          }
          var i = [];
          for (var n1 = 0; n1 < t.length && i.length < 4; n1 += 2) {
            var s2 = t[n1 + 1];
            if (s2 == this.state) continue;
            var o1 = this.split();
            o1.pushState(s2, this.pos), o1.storeNode(0, o1.pos, o1.pos, 4, !0), o1.shiftContext(t[n1], this.pos), (o1.score -= 200), i.push(o1);
          }
          return i;
        }
        forceReduce() {
          var _this_p = this.p,
            e = _this_p.parser,
            t = e.stateSlot(this.state, 5);
          if (!(t & 65536)) return !1;
          if (!e.validAction(this.state, t)) {
            var i = t >> 19,
              n = t & 65535,
              s = this.stack.length - i * 3;
            if (s < 0 || e.getGoto(this.stack[s], n, !1) < 0) {
              var o = this.findForcedReduction();
              if (o == null) return !1;
              t = o;
            }
            this.storeNode(0, this.pos, this.pos, 4, !0), (this.score -= 100);
          }
          return (this.reducePos = this.pos), this.reduce(t), !0;
        }
        findForcedReduction() {
          var _this_p = this.p,
            e = _this_p.parser,
            t = [],
            i = h((n, s) => {
              if (!t.includes(n))
                return (
                  t.push(n),
                  e.allActions(n, (o) => {
                    if (!(o & 393216))
                      if (o & 65536) {
                        var l = (o >> 19) - s;
                        if (l > 1) {
                          var u = o & 65535,
                            a = this.stack.length - l * 3;
                          if (a >= 0 && e.getGoto(this.stack[a], u, !1) >= 0) return (l << 19) | 65536 | u;
                        }
                      } else {
                        var l1 = i(o, s + 1);
                        if (l1 != null) return l1;
                      }
                  })
                );
            }, "explore");
          return i(this.state, 0);
        }
        forceAll() {
          for (; !this.p.parser.stateFlag(this.state, 2); )
            if (!this.forceReduce()) {
              this.storeNode(0, this.pos, this.pos, 4, !0);
              break;
            }
          return this;
        }
        get deadEnd() {
          if (this.stack.length != 3) return !1;
          var _this_p = this.p,
            e = _this_p.parser;
          return e.data[e.stateSlot(this.state, 1)] == 65535 && !e.stateSlot(this.state, 4);
        }
        restart() {
          (this.state = this.stack[0]), (this.stack.length = 0);
        }
        sameState(e) {
          if (this.state != e.state || this.stack.length != e.stack.length) return !1;
          for (var t = 0; t < this.stack.length; t += 3) if (this.stack[t] != e.stack[t]) return !1;
          return !0;
        }
        get parser() {
          return this.p.parser;
        }
        dialectEnabled(e) {
          return this.p.parser.dialect.flags[e];
        }
        shiftContext(e, t) {
          this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
        }
        reduceContext(e, t) {
          this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
        }
        emitContext() {
          var e = this.buffer.length - 1;
          (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
        }
        emitLookAhead() {
          var e = this.buffer.length - 1;
          (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
        }
        updateContext(e) {
          if (e != this.curContext.context) {
            var t = new Io(this.curContext.tracker, e);
            t.hash != this.curContext.hash && this.emitContext(), (this.curContext = t);
          }
        }
        setLookAhead(e) {
          e > this.lookAhead && (this.emitLookAhead(), (this.lookAhead = e));
        }
        close() {
          this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
        }
        constructor(e, t, i, n, s, o, l, u, a, ref, f) {
          var c = ref === void 0 ? 0 : ref;
          (this.p = e), (this.stack = t), (this.state = i), (this.reducePos = n), (this.pos = s), (this.score = o), (this.buffer = l), (this.bufferBase = u), (this.curContext = a), (this.lookAhead = c), (this.parent = f);
        }
      }),
      h(_r64, "Stack"),
      _r64),
    Io =
      ((_class89 = class _class {
        constructor(e, t) {
          (this.tracker = e), (this.context = t), (this.hash = e.strict ? e.hash(t) : 0);
        }
      }),
      h(_class89, "StackContext"),
      _class89),
    Bh =
      ((_class90 = class _class {
        reduce(e) {
          var t = e & 65535,
            i = e >> 19;
          i == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), (this.base += 3)) : (this.base -= (i - 1) * 3);
          var n = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
          this.state = n;
        }
        constructor(e) {
          (this.start = e), (this.state = e.state), (this.stack = e.stack), (this.base = this.stack.length);
        }
      }),
      h(_class90, "SimulatedStack"),
      _class90),
    vh =
      ((_r65 = class r {
        static create(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.bufferBase + e.buffer.length;
          return new r(e, t, t - e.bufferBase);
        }
        maybeNext() {
          var e = this.stack.parent;
          e != null && ((this.index = this.stack.bufferBase - e.bufferBase), (this.stack = e), (this.buffer = e.buffer));
        }
        get id() {
          return this.buffer[this.index - 4];
        }
        get start() {
          return this.buffer[this.index - 3];
        }
        get end() {
          return this.buffer[this.index - 2];
        }
        get size() {
          return this.buffer[this.index - 1];
        }
        next() {
          (this.index -= 4), (this.pos -= 4), this.index == 0 && this.maybeNext();
        }
        fork() {
          return new r(this.stack, this.pos, this.index);
        }
        constructor(e, t, i) {
          (this.stack = e), (this.pos = t), (this.index = i), (this.buffer = e.buffer), this.index == 0 && this.maybeNext();
        }
      }),
      h(_r65, "StackBufferCursor"),
      _r65);
  function Ln(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Uint16Array;
    if (typeof r != "string") return r;
    var t = null;
    for (var i = 0, n = 0; i < r.length; ) {
      var s = 0;
      for (;;) {
        var o = r.charCodeAt(i++),
          l = !1;
        if (o == 126) {
          s = 65535;
          break;
        }
        o >= 92 && o--, o >= 34 && o--;
        var u = o - 32;
        if ((u >= 46 && ((u -= 46), (l = !0)), (s += u), l)) break;
        s *= 46;
      }
      t ? (t[n++] = s) : (t = new e(s));
    }
    return t;
  }
  h(Ln, "decodeArray");
  var Ar =
      ((_class91 = class _class {
        constructor() {
          (this.start = -1), (this.value = -1), (this.end = -1), (this.extended = -1), (this.lookAhead = 0), (this.mask = 0), (this.context = 0);
        }
      }),
      h(_class91, "CachedToken"),
      _class91),
    $F = new Ar(),
    xh =
      ((_class92 = class _class {
        resolveOffset(e, t) {
          var i = this.range,
            n = this.rangeIndex,
            s = this.pos + e;
          for (; s < i.from; ) {
            if (!n) return null;
            var o = this.ranges[--n];
            (s -= i.from - o.to), (i = o);
          }
          for (; t < 0 ? s > i.to : s >= i.to; ) {
            if (n == this.ranges.length - 1) return null;
            var o1 = this.ranges[++n];
            (s += o1.from - i.to), (i = o1);
          }
          return s;
        }
        clipPos(e) {
          if (e >= this.range.from && e < this.range.to) return e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              if (t.to > e) return Math.max(e, t.from);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.end;
        }
        peek(e) {
          var t = this.chunkOff + e,
            i,
            n;
          if (t >= 0 && t < this.chunk.length) (i = this.pos + e), (n = this.chunk.charCodeAt(t));
          else {
            var s = this.resolveOffset(e, 1);
            if (s == null) return -1;
            if (((i = s), i >= this.chunk2Pos && i < this.chunk2Pos + this.chunk2.length)) n = this.chunk2.charCodeAt(i - this.chunk2Pos);
            else {
              var o = this.rangeIndex,
                l = this.range;
              for (; l.to <= i; ) l = this.ranges[++o];
              (this.chunk2 = this.input.chunk((this.chunk2Pos = i))), i + this.chunk2.length > l.to && (this.chunk2 = this.chunk2.slice(0, l.to - i)), (n = this.chunk2.charCodeAt(0));
            }
          }
          return i >= this.token.lookAhead && (this.token.lookAhead = i + 1), n;
        }
        acceptToken(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var i = t ? this.resolveOffset(t, -1) : this.pos;
          if (i == null || i < this.token.start) throw new RangeError("Token end out of bounds");
          (this.token.value = e), (this.token.end = i);
        }
        getChunk() {
          if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
            var _this = this,
              e = _this.chunk,
              t = _this.chunkPos;
            (this.chunk = this.chunk2), (this.chunkPos = this.chunk2Pos), (this.chunk2 = e), (this.chunk2Pos = t), (this.chunkOff = this.pos - this.chunkPos);
          } else {
            (this.chunk2 = this.chunk), (this.chunk2Pos = this.chunkPos);
            var e1 = this.input.chunk(this.pos),
              t1 = this.pos + e1.length;
            (this.chunk = t1 > this.range.to ? e1.slice(0, this.range.to - this.pos) : e1), (this.chunkPos = this.pos), (this.chunkOff = 0);
          }
        }
        readNext() {
          return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? (this.next = -1) : (this.next = this.chunk.charCodeAt(this.chunkOff));
        }
        advance() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
            if (this.rangeIndex == this.ranges.length - 1) return this.setDone();
            (e -= this.range.to - this.pos), (this.range = this.ranges[++this.rangeIndex]), (this.pos = this.range.from);
          }
          return (this.pos += e), this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
        }
        setDone() {
          return (this.pos = this.chunkPos = this.end), (this.range = this.ranges[(this.rangeIndex = this.ranges.length - 1)]), (this.chunk = ""), (this.next = -1);
        }
        reset(e, t) {
          if ((t ? ((this.token = t), (t.start = e), (t.lookAhead = e + 1), (t.value = t.extended = -1)) : (this.token = $F), this.pos != e)) {
            if (((this.pos = e), e == this.end)) return this.setDone(), this;
            for (; e < this.range.from; ) this.range = this.ranges[--this.rangeIndex];
            for (; e >= this.range.to; ) this.range = this.ranges[++this.rangeIndex];
            e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? (this.chunkOff = e - this.chunkPos) : ((this.chunk = ""), (this.chunkOff = 0)), this.readNext();
          }
          return this;
        }
        read(e, t) {
          if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length) return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
          if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length) return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
          if (e >= this.range.from && t <= this.range.to) return this.input.read(e, t);
          var i = "";
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              if (n.from >= t) break;
              n.to > e && (i += this.input.read(Math.max(n.from, e), Math.min(n.to, t)));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        constructor(e, t) {
          (this.input = e), (this.ranges = t), (this.chunk = ""), (this.chunkOff = 0), (this.chunk2 = ""), (this.chunk2Pos = 0), (this.next = -1), (this.token = $F), (this.rangeIndex = 0), (this.pos = this.chunkPos = t[0].from), (this.range = t[0]), (this.end = t[t.length - 1].to), this.readNext();
        }
      }),
      h(_class92, "InputStream"),
      _class92),
    mi =
      ((_class93 = class _class {
        token(e, t) {
          var _t_p = t.p,
            i = _t_p.parser;
          HF(this.data, e, t, this.id, i.data, i.tokenPrecTable);
        }
        constructor(e, t) {
          (this.data = e), (this.id = t);
        }
      }),
      h(_class93, "TokenGroup"),
      _class93);
  mi.prototype.contextual = mi.prototype.fallback = mi.prototype.extend = !1;
  var Ah =
    ((_class94 = class _class {
      token(e, t) {
        var i = e.pos,
          n = 0;
        for (;;) {
          var s = e.next < 0,
            o = e.resolveOffset(1, 1);
          if ((HF(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)) break;
          if (this.elseToken == null) return;
          if ((s || n++, o == null)) break;
          e.reset(o, e.token);
        }
        n && (e.reset(i, e.token), e.acceptToken(this.elseToken, n));
      }
      constructor(e, t, i) {
        (this.precTable = t), (this.elseToken = i), (this.data = typeof e == "string" ? Ln(e) : e);
      }
    }),
    h(_class94, "LocalTokenGroup"),
    _class94);
  Ah.prototype.contextual = mi.prototype.fallback = mi.prototype.extend = !1;
  function HF(r, e, t, i, n, s) {
    var o = 0,
      l = 1 << i,
      _t_p_parser = t.p.parser,
      u = _t_p_parser.dialect;
    e: for (; l & r[o]; ) {
      var a = r[o + 1];
      for (var p = o + 3; p < a; p += 2)
        if ((r[p + 1] & l) > 0) {
          var m = r[p];
          if (u.allows(m) && (e.token.value == -1 || e.token.value == m || Ok(m, e.token.value, n, s))) {
            e.acceptToken(m);
            break;
          }
        }
      var c = e.next,
        f = 0,
        d = r[o + 2];
      if (e.next < 0 && d > f && r[a + d * 3 - 3] == 65535 && r[a + d * 3 - 3] == 65535) {
        o = r[a + d * 3 - 1];
        continue e;
      }
      for (; f < d; ) {
        var p1 = (f + d) >> 1,
          m1 = a + p1 + (p1 << 1),
          F = r[m1],
          g = r[m1 + 1] || 65536;
        if (c < F) d = p1;
        else if (c >= g) f = p1 + 1;
        else {
          (o = r[m1 + 2]), e.advance();
          continue e;
        }
      }
      break;
    }
  }
  h(HF, "readToken");
  function qF(r, e, t) {
    for (var i = e, n; (n = r[i]) != 65535; i++) if (n == t) return i - e;
    return -1;
  }
  h(qF, "findOffset");
  function Ok(r, e, t, i) {
    var n = qF(t, i, e);
    return n < 0 || qF(t, i, r) < n;
  }
  h(Ok, "overrides");
  var lt = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG),
    Eh = null;
  function VF(r, e, t) {
    var i = r.cursor(Ue.IncludeAnonymous);
    for (i.moveTo(e); ; )
      if (!(t < 0 ? i.childBefore(e) : i.childAfter(e)))
        for (;;) {
          if ((t < 0 ? i.to < e : i.from > e) && !i.type.isError) return t < 0 ? Math.max(0, Math.min(i.to - 1, e - 25)) : Math.min(r.length, Math.max(i.from + 1, e + 25));
          if (t < 0 ? i.prevSibling() : i.nextSibling()) break;
          if (!i.parent()) return t < 0 ? 0 : r.length;
        }
  }
  h(VF, "cutAt");
  var kh =
      ((_class95 = class _class {
        nextFragment() {
          var e = (this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++]);
          if (e) {
            for (this.safeFrom = e.openStart ? VF(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? VF(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; ) this.trees.pop(), this.start.pop(), this.index.pop();
            this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), (this.nextStart = this.safeFrom);
          } else this.nextStart = 1e9;
        }
        nodeAt(e) {
          if (e < this.nextStart) return null;
          for (; this.fragment && this.safeTo <= e; ) this.nextFragment();
          if (!this.fragment) return null;
          for (;;) {
            var t = this.trees.length - 1;
            if (t < 0) return this.nextFragment(), null;
            var i = this.trees[t],
              n = this.index[t];
            if (n == i.children.length) {
              this.trees.pop(), this.start.pop(), this.index.pop();
              continue;
            }
            var s = i.children[n],
              o = this.start[t] + i.positions[n];
            if (o > e) return (this.nextStart = o), null;
            if (s instanceof Qe) {
              if (o == e) {
                if (o < this.safeFrom) return null;
                var l = o + s.length;
                if (l <= this.safeTo) {
                  var u = s.prop(ue.lookAhead);
                  if (!u || l + u < this.fragment.to) return s;
                }
              }
              this.index[t]++, o + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(o), this.index.push(0));
            } else this.index[t]++, (this.nextStart = o + s.length);
          }
        }
        constructor(e, t) {
          (this.fragments = e), (this.nodeSet = t), (this.i = 0), (this.fragment = null), (this.safeFrom = -1), (this.safeTo = -1), (this.trees = []), (this.start = []), (this.index = []), this.nextFragment();
        }
      }),
      h(_class95, "FragmentCursor"),
      _class95),
    Sh =
      ((_class96 = class _class {
        getActions(e) {
          var t = 0,
            i = null,
            _e_p = e.p,
            n = _e_p.parser,
            s = n.tokenizers,
            o = n.stateSlot(e.state, 3),
            l = e.curContext ? e.curContext.hash : 0,
            u = 0;
          for (var a = 0; a < s.length; a++) {
            if (!((1 << a) & o)) continue;
            var c = s[a],
              f = this.tokens[a];
            if (!(i && !c.fallback) && ((c.contextual || f.start != e.pos || f.mask != o || f.context != l) && (this.updateCachedToken(f, c, e), (f.mask = o), (f.context = l)), f.lookAhead > f.end + 25 && (u = Math.max(f.lookAhead, u)), f.value != 0)) {
              var d = t;
              if ((f.extended > -1 && (t = this.addActions(e, f.extended, f.end, t)), (t = this.addActions(e, f.value, f.end, t)), !c.extend && ((i = f), t > d))) break;
            }
          }
          for (; this.actions.length > t; ) this.actions.pop();
          return u && e.setLookAhead(u), !i && e.pos == this.stream.end && ((i = new Ar()), (i.value = e.p.parser.eofTerm), (i.start = i.end = e.pos), (t = this.addActions(e, i.value, i.end, t))), (this.mainToken = i), this.actions;
        }
        getMainToken(e) {
          if (this.mainToken) return this.mainToken;
          var t = new Ar(),
            i = e.pos,
            n = e.p;
          return (t.start = i), (t.end = Math.min(i + 1, n.stream.end)), (t.value = i == n.stream.end ? n.parser.eofTerm : 0), t;
        }
        updateCachedToken(e, t, i) {
          var n = this.stream.clipPos(i.pos);
          if ((t.token(this.stream.reset(n, e), i), e.value > -1)) {
            var _i_p = i.p,
              s = _i_p.parser;
            for (var o = 0; o < s.specialized.length; o++)
              if (s.specialized[o] == e.value) {
                var l = s.specializers[o](this.stream.read(e.start, e.end), i);
                if (l >= 0 && i.p.parser.dialect.allows(l >> 1)) {
                  l & 1 ? (e.extended = l >> 1) : (e.value = l >> 1);
                  break;
                }
              }
          } else (e.value = 0), (e.end = this.stream.clipPos(n + 1));
        }
        putAction(e, t, i, n) {
          for (var s = 0; s < n; s += 3) if (this.actions[s] == e) return n;
          return (this.actions[n++] = e), (this.actions[n++] = t), (this.actions[n++] = i), n;
        }
        addActions(e, t, i, n) {
          var s = e.state,
            _e_p = e.p,
            o = _e_p.parser,
            l = o.data;
          for (var u = 0; u < 2; u++)
            for (var a = o.stateSlot(s, u ? 2 : 1); ; a += 3) {
              if (l[a] == 65535)
                if (l[a + 1] == 1) a = ei(l, a + 2);
                else {
                  n == 0 && l[a + 1] == 2 && (n = this.putAction(ei(l, a + 2), t, i, n));
                  break;
                }
              l[a] == t && (n = this.putAction(ei(l, a + 1), t, i, n));
            }
          return n;
        }
        constructor(e, t) {
          (this.stream = t), (this.tokens = []), (this.mainToken = null), (this.actions = []), (this.tokens = e.tokenizers.map((i) => new Ar()));
        }
      }),
      h(_class96, "TokenCache"),
      _class96),
    wh =
      ((_class97 = class _class {
        get parsedPos() {
          return this.minStackPos;
        }
        advance() {
          var e = this.stacks,
            t = this.minStackPos,
            i = (this.stacks = []),
            n,
            s;
          if (this.bigReductionCount > 300 && e.length == 1) {
            var _e = _sliced_to_array(e, 1),
              o = _e[0];
            for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; );
            this.bigReductionCount = this.lastBigReductionSize = 0;
          }
          for (var o1 = 0; o1 < e.length; o1++) {
            var l = e[o1];
            for (;;) {
              if (((this.tokens.mainToken = null), l.pos > t)) i.push(l);
              else {
                if (this.advanceStack(l, i, e)) continue;
                {
                  n || ((n = []), (s = [])), n.push(l);
                  var u = this.tokens.getMainToken(l);
                  s.push(u.value, u.end);
                }
              }
              break;
            }
          }
          if (!i.length) {
            var o2 = n && Tk(n);
            if (o2) return lt && console.log("Finish with " + this.stackID(o2)), this.stackToTree(o2);
            if (this.parser.strict) throw (lt && n && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t));
            this.recovering || (this.recovering = 5);
          }
          if (this.recovering && n) {
            var o3 = this.stoppedAt != null && n[0].pos > this.stoppedAt ? n[0] : this.runRecovery(n, s, i);
            if (o3) return lt && console.log("Force-finish " + this.stackID(o3)), this.stackToTree(o3.forceAll());
          }
          if (this.recovering) {
            var o4 = this.recovering == 1 ? 1 : this.recovering * 3;
            if (i.length > o4) for (i.sort((l, u) => u.score - l.score); i.length > o4; ) i.pop();
            i.some((l) => l.reducePos > t) && this.recovering--;
          } else if (i.length > 1) {
            e: for (var o5 = 0; o5 < i.length - 1; o5++) {
              var l1 = i[o5];
              for (var u1 = o5 + 1; u1 < i.length; u1++) {
                var a = i[u1];
                if (l1.sameState(a) || (l1.buffer.length > 500 && a.buffer.length > 500))
                  if ((l1.score - a.score || l1.buffer.length - a.buffer.length) > 0) i.splice(u1--, 1);
                  else {
                    i.splice(o5--, 1);
                    continue e;
                  }
              }
            }
            i.length > 12 && i.splice(12, i.length - 12);
          }
          this.minStackPos = i[0].pos;
          for (var o6 = 1; o6 < i.length; o6++) i[o6].pos < this.minStackPos && (this.minStackPos = i[o6].pos);
          return null;
        }
        stopAt(e) {
          if (this.stoppedAt != null && this.stoppedAt < e) throw new RangeError("Can't move stoppedAt forward");
          this.stoppedAt = e;
        }
        advanceStack(e, t, i) {
          var n = e.pos,
            _this = this,
            s = _this.parser,
            o = lt ? this.stackID(e) + " -> " : "";
          if (this.stoppedAt != null && n > this.stoppedAt) return e.forceReduce() ? e : null;
          if (this.fragments) {
            var a = e.curContext && e.curContext.tracker.strict,
              c = a ? e.curContext.hash : 0;
            for (var f = this.fragments.nodeAt(n); f; ) {
              var d = this.parser.nodeSet.types[f.type.id] == f.type ? s.getGoto(e.state, f.type.id) : -1;
              if (d > -1 && f.length && (!a || (f.prop(ue.contextHash) || 0) == c)) return e.useNode(f, d), lt && console.log(o + this.stackID(e) + " (via reuse of ".concat(s.getName(f.type.id), ")")), !0;
              if (!(f instanceof Qe) || f.children.length == 0 || f.positions[0] > 0) break;
              var p = f.children[0];
              if (p instanceof Qe && f.positions[0] == 0) f = p;
              else break;
            }
          }
          var l = s.stateSlot(e.state, 4);
          if (l > 0) return e.reduce(l), lt && console.log(o + this.stackID(e) + " (via always-reduce ".concat(s.getName(l & 65535), ")")), !0;
          if (e.stack.length >= 15e3) for (; e.stack.length > 9e3 && e.forceReduce(); );
          var u = this.tokens.getActions(e);
          for (var a1 = 0; a1 < u.length; ) {
            var c1 = u[a1++],
              f1 = u[a1++],
              d1 = u[a1++],
              p1 = a1 == u.length || !i,
              m = p1 ? e : e.split();
            if (
              (m.apply(c1, f1, d1),
              lt &&
                console.log(
                  o +
                    this.stackID(m) +
                    " (via "
                      .concat(c1 & 65536 ? "reduce of ".concat(s.getName(c1 & 65535)) : "shift", " for ")
                      .concat(s.getName(f1), " @ ")
                      .concat(n)
                      .concat(m == e ? "" : ", split", ")"),
                ),
              p1)
            )
              return !0;
            m.pos > n ? t.push(m) : i.push(m);
          }
          return !1;
        }
        advanceFully(e, t) {
          var i = e.pos;
          for (;;) {
            if (!this.advanceStack(e, null, null)) return !1;
            if (e.pos > i) return WF(e, t), !0;
          }
        }
        runRecovery(e, t, i) {
          var n = null,
            s = !1;
          for (var o = 0; o < e.length; o++) {
            var l = e[o],
              u = t[o << 1],
              a = t[(o << 1) + 1],
              c = lt ? this.stackID(l) + " -> " : "";
            if (l.deadEnd && (s || ((s = !0), l.restart(), lt && console.log(c + this.stackID(l) + " (restarted)"), this.advanceFully(l, i)))) continue;
            var f = l.split(),
              d = c;
            for (var p = 0; f.forceReduce() && p < 10 && (lt && console.log(d + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, i)); p++) lt && (d = this.stackID(f) + " -> ");
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = l.recoverByInsert(u)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var p1 = _step.value;
                lt && console.log(c + this.stackID(p1) + " (via recover-insert)"), this.advanceFully(p1, i);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            this.stream.end > l.pos ? (a == l.pos && (a++, (u = 0)), l.recoverByDelete(u, a), lt && console.log(c + this.stackID(l) + " (via recover-delete ".concat(this.parser.getName(u), ")")), WF(l, i)) : (!n || n.score < l.score) && (n = l);
          }
          return n;
        }
        stackToTree(e) {
          return e.close(), Qe.build({ buffer: vh.create(e), nodeSet: this.parser.nodeSet, topID: this.topTerm, maxBufferLength: this.parser.bufferLength, reused: this.reused, start: this.ranges[0].from, length: e.pos - this.ranges[0].from, minRepeatType: this.parser.minRepeatTerm });
        }
        stackID(e) {
          var t = (Eh || (Eh = new WeakMap())).get(e);
          return t || Eh.set(e, (t = String.fromCodePoint(this.nextStackID++))), t + e;
        }
        constructor(e, t, i, n) {
          (this.parser = e), (this.input = t), (this.ranges = n), (this.recovering = 0), (this.nextStackID = 9812), (this.minStackPos = 0), (this.reused = []), (this.stoppedAt = null), (this.lastBigReductionStart = -1), (this.lastBigReductionSize = 0), (this.bigReductionCount = 0), (this.stream = new xh(t, n)), (this.tokens = new Sh(e, this.stream)), (this.topTerm = e.top[1]);
          var _n_ = n[0],
            s = _n_.from;
          (this.stacks = [Ch.start(this, e.top[0], s)]), (this.fragments = i.length && this.stream.end - s > e.bufferLength * 4 ? new kh(i, e.nodeSet) : null);
        }
      }),
      h(_class97, "Parse"),
      _class97);
  function WF(r, e) {
    for (var t = 0; t < e.length; t++) {
      var i = e[t];
      if (i.pos == r.pos && i.sameState(r)) {
        e[t].score < r.score && (e[t] = r);
        return;
      }
    }
    e.push(r);
  }
  h(WF, "pushStackDedup");
  var Qh =
    ((_class98 = class _class {
      allows(e) {
        return !this.disabled || this.disabled[e] == 0;
      }
      constructor(e, t, i) {
        (this.source = e), (this.flags = t), (this.disabled = i);
      }
    }),
    h(_class98, "Dialect"),
    _class98);
  var $o =
    ((_r66 = class r extends yr {
      createParse(e, t, i) {
        var n = new wh(this, e, t, i);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.wrappers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            n = s(n, e, t, i);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return n;
      }
      getGoto(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
        var n = this.goto;
        if (t >= n[0]) return -1;
        for (var s = n[t + 1]; ; ) {
          var o = n[s++],
            l = o & 1,
            u = n[s++];
          if (l && i) return u;
          for (var a = s + (o >> 1); s < a; s++) if (n[s] == e) return u;
          if (l) return -1;
        }
      }
      hasAction(e, t) {
        var i = this.data;
        for (var n = 0; n < 2; n++)
          for (var s = this.stateSlot(e, n ? 2 : 1), o = void 0; ; s += 3) {
            if ((o = i[s]) == 65535)
              if (i[s + 1] == 1) o = i[(s = ei(i, s + 2))];
              else {
                if (i[s + 1] == 2) return ei(i, s + 2);
                break;
              }
            if (o == t || o == 0) return ei(i, s + 1);
          }
        return 0;
      }
      stateSlot(e, t) {
        return this.states[e * 6 + t];
      }
      stateFlag(e, t) {
        return (this.stateSlot(e, 0) & t) > 0;
      }
      validAction(e, t) {
        return !!this.allActions(e, (i) => (i == t ? !0 : null));
      }
      allActions(e, t) {
        var i = this.stateSlot(e, 4),
          n = i ? t(i) : void 0;
        for (var s = this.stateSlot(e, 1); n == null; s += 3) {
          if (this.data[s] == 65535)
            if (this.data[s + 1] == 1) s = ei(this.data, s + 2);
            else break;
          n = t(ei(this.data, s + 1));
        }
        return n;
      }
      nextStates(e) {
        var _this,
          _loop = function (i1) {
            if (_this.data[i1] == 65535)
              if (_this.data[i1 + 1] == 1) i1 = ei(_this.data, i1 + 2);
              else return (i = i1), "break";
            if (!(_this.data[i1 + 2] & 1)) {
              var n = _this.data[i1 + 1];
              t.some((s, o) => o & 1 && s == n) || t.push(_this.data[i1], n);
            }
            (i = i1), void 0;
          };
        var t = [];
        for (var i = this.stateSlot(e, 1); ; i += 3) {
          var _ret = ((_this = this), _loop(i));
          if (_ret === "break") break;
        }
        return t;
      }
      configure(e) {
        var t = Object.assign(Object.create(r.prototype), this);
        if ((e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top)) {
          var i = this.topRules[e.top];
          if (!i) throw new RangeError("Invalid top rule name ".concat(e.top));
          t.top = i;
        }
        return (
          e.tokenizers &&
            (t.tokenizers = this.tokenizers.map((i) => {
              var n = e.tokenizers.find((s) => s.from == i);
              return n ? n.to : i;
            })),
          e.specializers &&
            ((t.specializers = this.specializers.slice()),
            (t.specializerSpecs = this.specializerSpecs.map((i, n) => {
              var s = e.specializers.find((l) => l.from == i.external);
              if (!s) return i;
              var o = Object.assign(Object.assign({}, i), { external: s.to });
              return (t.specializers[n] = zF(o)), o;
            }))),
          e.contextTracker && (t.context = e.contextTracker),
          e.dialect && (t.dialect = this.parseDialect(e.dialect)),
          e.strict != null && (t.strict = e.strict),
          e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)),
          e.bufferLength != null && (t.bufferLength = e.bufferLength),
          t
        );
      }
      hasWrappers() {
        return this.wrappers.length > 0;
      }
      getName(e) {
        return this.termNames ? this.termNames[e] : String((e <= this.maxNode && this.nodeSet.types[e].name) || e);
      }
      get eofTerm() {
        return this.maxNode + 1;
      }
      get topNode() {
        return this.nodeSet.types[this.top[1]];
      }
      dynamicPrecedence(e) {
        var t = this.dynamicPrecedences;
        return t == null ? 0 : t[e] || 0;
      }
      parseDialect(e) {
        var t = Object.keys(this.dialects),
          i = t.map(() => !1);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (e)
          try {
            for (var _iterator = e.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              var o = t.indexOf(s);
              o >= 0 && (i[o] = !0);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        var n = null;
        for (var s1 = 0; s1 < t.length; s1++) if (!i[s1]) for (var o1 = this.dialects[t[s1]], l = void 0; (l = this.data[o1++]) != 65535; ) (n || (n = new Uint8Array(this.maxTerm + 1)))[l] = 1;
        return new Qh(e, i, n);
      }
      static deserialize(e) {
        return new r(e);
      }
      constructor(e) {
        if ((super(), (this.wrappers = []), e.version != 14)) throw new RangeError("Parser version (".concat(e.version, ") doesn't match runtime version (14)"));
        var t = e.nodeNames.split(" ");
        this.minRepeatTerm = t.length;
        for (var l = 0; l < e.repeatNodeCount; l++) t.push("");
        var i = Object.keys(e.topRules).map((l) => e.topRules[l][1]),
          n = [];
        for (var l1 = 0; l1 < t.length; l1++) n.push([]);
        function s(l, u, a) {
          n[l].push([u, u.deserialize(String(a))]);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if ((h(s, "setProp"), e.nodeProps))
          try {
            for (var _iterator = e.nodeProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var l2 = _step.value;
              var u = l2[0];
              typeof u == "string" && (u = ue[u]);
              for (var a = 1; a < l2.length; ) {
                var c = l2[a++];
                if (c >= 0) s(c, u, l2[a++]);
                else {
                  var f = l2[a + -c];
                  for (var d = -c; d > 0; d--) s(l2[a++], u, f);
                  a++;
                }
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        (this.nodeSet = new xn(t.map((l, u) => Ie.define({ name: u >= this.minRepeatTerm ? void 0 : l, id: u, props: n[u], top: i.indexOf(u) > -1, error: u == 0, skipped: e.skippedNodes && e.skippedNodes.indexOf(u) > -1 })))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), (this.strict = !1), (this.bufferLength = 1024);
        var o = Ln(e.tokenData);
        (this.context = e.context), (this.specializerSpecs = e.specialized || []), (this.specialized = new Uint16Array(this.specializerSpecs.length));
        for (var l3 = 0; l3 < this.specializerSpecs.length; l3++) this.specialized[l3] = this.specializerSpecs[l3].term;
        (this.specializers = this.specializerSpecs.map(zF)),
          (this.states = Ln(e.states, Uint32Array)),
          (this.data = Ln(e.stateData)),
          (this.goto = Ln(e.goto)),
          (this.maxTerm = e.maxTerm),
          (this.tokenizers = e.tokenizers.map((l) => (typeof l == "number" ? new mi(o, l) : l))),
          (this.topRules = e.topRules),
          (this.dialects = e.dialects || {}),
          (this.dynamicPrecedences = e.dynamicPrecedences || null),
          (this.tokenPrecTable = e.tokenPrec),
          (this.termNames = e.termNames || null),
          (this.maxNode = this.nodeSet.types.length - 1),
          (this.dialect = this.parseDialect()),
          (this.top = this.topRules[Object.keys(this.topRules)[0]]);
      }
    }),
    h(_r66, "LRParser"),
    _r66);
  function ei(r, e) {
    return r[e] | (r[e + 1] << 16);
  }
  h(ei, "pair");
  function Tk(r) {
    var e = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        var i = t.p.stoppedAt;
        (t.pos == t.p.stream.end || (i != null && t.pos > i)) && t.p.parser.stateFlag(t.state, 2) && (!e || e.score < t.score) && (e = t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(Tk, "findFinished");
  function zF(r) {
    if (r.external) {
      var e = r.extend ? 1 : 0;
      return (t, i) => (r.external(t, i) << 1) | e;
    }
    return r.get;
  }
  h(zF, "getSpecializer");
  var jF = $o.deserialize({
    version: 14,
    states:
      "'[QVQPOOOhQPO'#CsOmQPO'#CwOrQPO'#CzOOQO'#Cp'#CpOOQO'#Ci'#CiQVQPOOOwQPO'#CpO|QQO,59_O![QQO,59cO!aQSO,59fOOQO-E6g-E6gO!fQWO'#C_OOQO,59[,59[OOQO'#Cu'#CuO!qQPO'#CtO!|QPO1G.yO#RQPO'#CxO#WQPO1G.}O#]QPO1G/QO#bQWO'#CjO#mQPO,58yOOQO,58y,58yO#mQPO,58yO|QQO'#CkO#uQPO,59`OOQO7+$e7+$eO|QQO,59dOOQO7+$i7+$iO![QQO7+$lOOQO,59U,59UOOQO-E6h-E6hOOQO1G.e1G.eO$QQPO1G.eOOQO,59V,59VOOQO-E6i-E6iOOQO1G/O1G/OO$YQPO<<HWOOQO7+$P7+$PO$bQQOAN=rO$jQPOAN=rOOQOAN=rAN=rOOQO,59W,59WOOQOG23^G23^O$rQQOG23^OOQO-E6j-E6jOOQOLD(xLD(xP![QQO'#Cl",
    stateData: "$z~OcOS~OQVOTPOXQOYRO[SO~OeWO~OeXO~OeYO~Oe[O~OU^OV^OW^Oe[O~OWaO~OZcO~OSgOe[OffO~OjhOfhXohX~OfjO~OmkO~OflO~OomO~OSnOe^Xf^X~Oe[OfpO~OjhOfhaoha~Oe[OfvO~OfyOowO~OWaOf{O~Of{Oo|O~OWaOf!OO~O",
    goto: "#^oPPPpPPPPPPPPP!O!U!`!fPPP!lPP!p!t!zP!p#RP!pQ]VU^WhkXd[egqQUORZUQe[SoeqRqgQi_RsiQxuR}xTTOUTSOUQ`WRtkS_WkRrhQbXQumVzw|!P",
    nodeNames: "⚠ Program CommentCommand Braced BraceContent PreambleCommand Quoted Number Identifier StringCommand Command Key Comment",
    maxTerm: 31,
    skippedNodes: [0],
    repeatNodeCount: 4,
    tokenData:
      "!<f~R|OX#{X^$g^p#{pq$gqr#{rs&]st+[t|#{|}+r}!Q#{!Q![,Y![!_#{!_!`,v!`!b#{!b!c-^!c!}Kx!}#R#{#R#SKx#S#T#{#T#bKx#b#cNO#c#oKx#o#p!<[#p#q#{#q#r!<a#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{W$QTSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{W$dP;=`<%l#{~$niSWc~OX#{X^$g^p#{pq$gq#o#{#p#q#{#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{Y&bZSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y'[TUQSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y'pZSWOr&]rs(cs#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y(jZUQSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Q)`VOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q)zOUQQ)}VOr)]rs*ds#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q*iVUQOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q+RP;=`<%l)]Y+XP;=`<%l&]X+cTjPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X+yToPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y,aVVQSWO!Q#{!Q![,Y![#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X,}TmPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{~-cfSWO!c#{!c!e.w!e!f0{!f!r.w!r!s9|!s!u.w!u!vDW!v!}.w!}#R#{#R#S.w#S#T#{#T#V.w#V#W0{#W#d.w#d#e9|#e#g.w#g#hDW#h#o.w#p#q#{#r;'S#{;'S;=`$a<%lO#{~.|^SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~0P^Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~1QbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!q/x!q!r2Y!r!}/x!}#R#{#R#S/x#S#T#{#T#c/x#c#d2Y#d#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~2abY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p3i!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b3i#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~3pbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p4x!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b4x#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~5PbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h6X!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y6X#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~6`bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!q7h!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#c7h#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~7obY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!w8w!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#i8w#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~9Q^Q~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~:RbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!u;Z!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#g;Z#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~;bbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h<j!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y<j#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~<q`Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d=s!d!}/x!}#R#{#R#S/x#S#T#{#T#U=s#U#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~=zbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p?S!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b?S#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~?ZbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d/x!d!e@c!e!}/x!}#R#{#R#S/x#S#T#{#T#U/x#U#V@c#V#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~@jbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!n/x!n!oAr!o!}/x!}#R#{#R#S/x#S#T#{#T#`/x#`#aAr#a#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~AybY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!hCR!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#YCR#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~C[^T~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~D]bSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!wEe!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#iEe#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~ElbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!uFt!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#gFt#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~F{bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!k/x!k!lHT!l!}/x!}#R#{#R#S/x#S#T#{#T#]/x#]#^HT#^#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~H[bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!qId!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#cId#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~IkbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!i/x!i!jJs!j!}/x!}#R#{#R#S/x#S#T#{#T#Z/x#Z#[Js#[#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~J|^X~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{^K}^SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{^MS^WQZSSWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_NT`SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#cLy#c#d! V#d#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_! ``WQZSSWOp#{pq!!bq}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{X!!gVSWO#]#{#]#^!!|#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#RVSWO#W#{#W#X!#h#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#mVSWO#X#{#X#Y!$S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$XVSWO#T#{#T#U!$n#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$sVSWOp#{pq!%Yq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%_VSWO#k#{#k#l!%t#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%yVSWO#[#{#[#]!&`#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!&eVSWO#m#{#m#n!&z#n#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'PVSWOp#{pq!'fq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'kVSWO#h#{#h#i!(Q#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(VVSWO#[#{#[#]!(l#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(qVSWO#]#{#]#^!)W#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)]VSWO#g#{#g#h!)r#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)wVSWOp#{pq!*^q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*cVSWO#g#{#g#h!*x#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*}VSWO#h#{#h#i!+d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!+iVSWO#f#{#f#g!,O#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,TVSWO#]#{#]#^!,j#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,oVSWO#b#{#b#c!-U#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-ZVSWO#Z#{#Z#[!-p#[#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-uVSWOp#{pq!.[q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.aVSWO#]#{#]#^!.v#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.{VSWO#g#{#g#h!/b#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!/gVSWOp#{pq!/|q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0RVSWO#b#{#b#c!0h#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0mVSWO#X#{#X#Y!1S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1XVSWO#X#{#X#Y!1n#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1sVSWO#W#{#W#X!2Y#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2_VSWO#X#{#X#Y!2t#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2yVSWO#W#{#W#X!3`#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!3eVSWOp#{pq!3zq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4PVSWO#U#{#U#V!4f#V#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4kVSWO#i#{#i#j!5Q#j#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5VVSWO#h#{#h#i!5l#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5qVSWOp#{pq!6Wq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6]VSWO#k#{#k#l!6r#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6wVSWO#[#{#[#]!7^#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7cVSWO#T#{#T#U!7x#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7}VSWO#h#{#h#i!8d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!8iVSWO#X#{#X#Y!9O#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9TVSWO#j#{#j#k!9j#k#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9oVSWO#X#{#X#Y!:U#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:ZVSWO#f#{#f#g!:p#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:uXSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!;iX[PSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!<XP;=`<%l!;b~!<aOe~~!<fOf~",
    tokenizers: [0, 1, 2, 3],
    topRules: { Program: [0, 1] },
    tokenPrec: 4,
  });
  var Rk = Lo.define({ parser: jF.configure({ props: [Uo({ Identifier: U.variableName, Comment: U.comment, Key: U.name, Number: U.number, BraceContent: U.string, Quoted: U.string, Command: U.className, CommentCommand: U.className, PreambleCommand: U.className, StringCommand: U.className, Field: U.variableName })] }) }),
    Nk = vr.define([
      { tag: U.comment, color: "var(--light5)" },
      { tag: U.name, color: "var(--orange)" },
      { tag: U.number, color: "var(--light-blue)" },
      { tag: U.string, color: "var(--green)" },
      { tag: U.className, color: "var(--pink)" },
      { tag: U.variableName, color: "white" },
    ]);
  function YF() {
    return new Oo(Rk);
  }
  h(YF, "bibtexLanguage");
  function JF() {
    return FF(Nk);
  }
  h(JF, "bibtexSyntaxHighlighting");
  function Mk(r) {
    var e, t, i;
    return (
      (t = new IF({ props: { bibtex: r[0] } })),
      {
        c() {
          (e = O("main")), M(t.$$.fragment), v(e, "id", "editor"), v(e, "class", "svelte-x4zh2g");
        },
        m(n, s) {
          E(n, e, s), N(t, e, null), r[5](e), (i = !0);
        },
        p(n, param) {
          var _param = _sliced_to_array(param, 1),
            s = _param[0];
          var o = {};
          s & 1 && (o.bibtex = n[0]), t.$set(o);
        },
        i(n) {
          i || (S(t.$$.fragment, n), (i = !0));
        },
        o(n) {
          w(t.$$.fragment, n), (i = !1);
        },
        d(n) {
          n && y(e), R(t), r[5](null);
        },
      }
    );
  }
  h(Mk, "create_fragment");
  function Pk(r, e, t) {
    var i = e.bibtex,
      n = e.error,
      s,
      o,
      l;
    mu(() => {
      var a = ne.updateListener.of((c) => {
        o && c.docChanged && t(0, (i = o.state.doc.toString()));
      });
      t(4, (l = new hr())), t(3, (o = new ne({ parent: s, state: Ae.create({ doc: i, extensions: [KD(), ZD(), JD(), Ae.allowMultipleSelections.of(!0), CF(), HD(), YF(), JF(), Wa.of([...wF, _F]), xF(), a, l.of([])] }) }))), o.focus(), (window.cmEditor = o);
    });
    function u(a) {
      J[a ? "unshift" : "push"](() => {
        (s = a), t(1, s);
      });
    }
    return (
      h(u, "main_binding"),
      (r.$$set = (a) => {
        "bibtex" in a && t(0, (i = a.bibtex)), "error" in a && t(2, (n = a.error));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 28 &&
          (o === null || o === void 0
            ? void 0
            : o.dispatch({
                effects: l.reconfigure(
                  RF(() => {
                    if (n && o) {
                      var a = o.state.doc.line(n.line),
                        c = a.from,
                        f = a.to;
                      return [{ from: c, to: f, severity: "error", message: "Syntax Error" }];
                    } else return [];
                  }),
                ),
              })),
          r.$$.dirty & 9 && o && i !== o.state.doc.toString() && o.dispatch({ changes: { from: 0, to: o.state.doc.length, insert: i } });
      }),
      [i, s, n, o, l, u]
    );
  }
  h(Pk, "instance");
  var _h =
      ((_class99 = class _class extends se {
        constructor(e) {
          super(), le(this, e, Pk, Mk, oe, { bibtex: 0, error: 2 });
        }
      }),
      h(_class99, "Editor"),
      _class99),
    GF = _h;
  function Ik(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[3].default,
      l = ti(o, r, r[2], null);
    return {
      c() {
        (e = O("details")), (t = O("summary")), (i = Y(r[0])), (n = $()), l && l.c(), v(t, "class", "svelte-ee92zc"), (e.open = r[1]), v(e, "class", "svelte-ee92zc");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(t, i), q(e, n), l && l.m(e, null), (s = !0);
      },
      p(u, param) {
        var _param = _sliced_to_array(param, 1),
          a = _param[0];
        (!s || a & 1) && qe(i, u[0]), l && l.p && (!s || a & 4) && ri(l, o, u, u[2], s ? ii(o, u[2], a, null) : ni(u[2]), null), (!s || a & 2) && (e.open = u[1]);
      },
      i(u) {
        s || (S(l, u), (s = !0));
      },
      o(u) {
        w(l, u), (s = !1);
      },
      d(u) {
        u && y(e), l && l.d(u);
      },
    };
  }
  h(Ik, "create_fragment");
  function $k(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = e.title,
      tmp1 = e.open,
      o = tmp1 === void 0 ? !1 : tmp1;
    return (
      (r.$$set = (l) => {
        "title" in l && t(0, (s = l.title)), "open" in l && t(1, (o = l.open)), "$$scope" in l && t(2, (n = l.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h($k, "instance");
  var Uh =
      ((_class100 = class _class extends se {
        constructor(e) {
          super(), le(this, e, $k, Ik, oe, { title: 0, open: 1 });
        }
      }),
      h(_class100, "Collapsible"),
      _class100),
    Ke = Uh;
  function qk(r) {
    var e, t, i;
    return {
      c() {
        (e = O("input")), v(e, "type", "checkbox"), v(e, "name", r[1]), v(e, "class", "svelte-doypik");
      },
      m(n, s) {
        E(n, e, s), (e.checked = r[0]), t || ((i = [ye(e, "change", r[3]), ye(e, "change", r[4])]), (t = !0));
      },
      p(n, param) {
        var _param = _sliced_to_array(param, 1),
          s = _param[0];
        s & 2 && v(e, "name", n[1]), s & 1 && (e.checked = n[0]);
      },
      i: Se,
      o: Se,
      d(n) {
        n && y(e), (t = !1), Qt(i);
      },
    };
  }
  h(qk, "create_fragment");
  function Vk(r, e, t) {
    var i = e.name,
      tmp = e.checked,
      n = tmp === void 0 ? void 0 : tmp,
      s = Ei();
    function o() {
      (n = this.checked), t(0, n);
    }
    h(o, "input_change_handler");
    var l = h(() => s("change"), "change_handler");
    return (
      (r.$$set = (u) => {
        "name" in u && t(1, (i = u.name)), "checked" in u && t(0, (n = u.checked));
      }),
      [n, i, s, o, l]
    );
  }
  h(Vk, "instance");
  var Lh =
      ((_class101 = class _class extends se {
        constructor(e) {
          super(), le(this, e, Vk, qk, oe, { name: 1, checked: 0 });
        }
      }),
      h(_class101, "Checkbox"),
      _class101),
    Mi = Lh;
  function Wk(r) {
    var e,
      t,
      i = r[3].default,
      n = ti(i, r, r[2], null);
    return {
      c() {
        (e = O("label")), n && n.c(), v(e, "title", r[0]), v(e, "class", "svelte-a2tm3u"), er(e, "inset", r[1]);
      },
      m(s, o) {
        E(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _sliced_to_array(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 4) && ri(n, i, s, s[2], t ? ii(i, s[2], o, null) : ni(s[2]), null), (!t || o & 1) && v(e, "title", s[0]), (!t || o & 2) && er(e, "inset", s[1]);
      },
      i(s) {
        t || (S(n, s), (t = !0));
      },
      o(s) {
        w(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(Wk, "create_fragment");
  function zk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      tmp1 = e.title,
      s = tmp1 === void 0 ? void 0 : tmp1,
      tmp2 = e.inset,
      o = tmp2 === void 0 ? void 0 : tmp2;
    return (
      (r.$$set = (l) => {
        "title" in l && t(0, (s = l.title)), "inset" in l && t(1, (o = l.inset)), "$$scope" in l && t(2, (n = l.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h(zk, "instance");
  var Oh =
      ((_class102 = class _class extends se {
        constructor(e) {
          super(), le(this, e, zk, Wk, oe, { title: 0, inset: 1 });
        }
      }),
      h(_class102, "Label"),
      _class102),
    Ze = Oh;
  function Hk(r) {
    var e,
      t,
      i = r[1].default,
      n = ti(i, r, r[0], null);
    return {
      c() {
        (e = O("div")), n && n.c(), v(e, "class", "suboptions svelte-1gkj6ol");
      },
      m(s, o) {
        E(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _sliced_to_array(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 1) && ri(n, i, s, s[0], t ? ii(i, s[0], o, null) : ni(s[0]), null);
      },
      i(s) {
        t || (S(n, s), (t = !0));
      },
      o(s) {
        w(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(Hk, "create_fragment");
  function jk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope;
    return (
      (r.$$set = (s) => {
        "$$scope" in s && t(0, (n = s.$$scope));
      }),
      [n, i]
    );
  }
  h(jk, "instance");
  var Th =
      ((_class103 = class _class extends se {
        constructor(e) {
          super(), le(this, e, jk, Hk, oe, {});
        }
      }),
      h(_class103, "SubOptions"),
      _class103),
    qo = Th;
  function Yk(r) {
    var e,
      t,
      i,
      n = r[3].title + "",
      s,
      o;
    function l(a) {
      r[6](a);
    }
    h(l, "checkbox_checked_binding");
    var u = { name: r[1] };
    return (
      r[0] !== void 0 && (u.checked = r[0]),
      (e = new Mi({ props: u })),
      J.push(() => K(e, "checked", l)),
      e.$on("change", r[7]),
      {
        c() {
          M(e.$$.fragment), (i = $()), (s = Y(n));
        },
        m(a, c) {
          N(e, a, c), E(a, i, c), E(a, s, c), (o = !0);
        },
        p(a, c) {
          var f = {};
          c & 2 && (f.name = a[1]), !t && c & 1 && ((t = !0), (f.checked = a[0]), X(() => (t = !1))), e.$set(f);
        },
        i(a) {
          o || (S(e.$$.fragment, a), (o = !0));
        },
        o(a) {
          w(e.$$.fragment, a), (o = !1);
        },
        d(a) {
          R(e, a), a && y(i), a && y(s);
        },
      }
    );
  }
  h(Yk, "create_default_slot_1");
  function XF(r) {
    var e,
      t,
      i = r[0] && KF(r);
    return {
      c() {
        i && i.c(), (e = Ht());
      },
      m(n, s) {
        i && i.m(n, s), E(n, e, s), (t = !0);
      },
      p(n, s) {
        n[0]
          ? i
            ? (i.p(n, s), s & 1 && S(i, 1))
            : ((i = KF(n)), i.c(), S(i, 1), i.m(e.parentNode, e))
          : i &&
            (jt(),
            w(i, 1, 1, () => {
              i = null;
            }),
            Yt());
      },
      i(n) {
        t || (S(i), (t = !0));
      },
      o(n) {
        w(i), (t = !1);
      },
      d(n) {
        i && i.d(n), n && y(e);
      },
    };
  }
  h(XF, "create_if_block");
  function KF(r) {
    var e, t;
    return (
      (e = new qo({ props: { $$slots: { default: [Jk] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 256 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(KF, "create_if_block_1");
  function Jk(r) {
    var e,
      t = r[5].default,
      i = ti(t, r, r[8], null);
    return {
      c() {
        i && i.c();
      },
      m(n, s) {
        i && i.m(n, s), (e = !0);
      },
      p(n, s) {
        i && i.p && (!e || s & 256) && ri(i, t, n, n[8], e ? ii(t, n[8], s, null) : ni(n[8]), null);
      },
      i(n) {
        e || (S(i, n), (e = !0));
      },
      o(n) {
        w(i, n), (e = !1);
      },
      d(n) {
        i && i.d(n);
      },
    };
  }
  h(Jk, "create_default_slot");
  function Gk(r) {
    var _r__description;
    var e, t, i, n;
    e = new Ze({ props: { title: (_r__description = r[3].description) === null || _r__description === void 0 ? void 0 : _r__description.join("\n"), inset: !0, $$slots: { default: [Yk] }, $$scope: { ctx: r } } });
    var s = r[4].default && XF(r);
    return {
      c() {
        M(e.$$.fragment), (t = $()), s && s.c(), (i = Ht());
      },
      m(o, l) {
        N(e, o, l), E(o, t, l), s && s.m(o, l), E(o, i, l), (n = !0);
      },
      p(o, param) {
        var _param = _sliced_to_array(param, 1),
          l = _param[0];
        var u = {};
        l & 259 && (u.$$scope = { dirty: l, ctx: o }),
          e.$set(u),
          o[4].default
            ? s
              ? (s.p(o, l), l & 16 && S(s, 1))
              : ((s = XF(o)), s.c(), S(s, 1), s.m(i.parentNode, i))
            : s &&
              (jt(),
              w(s, 1, 1, () => {
                s = null;
              }),
              Yt());
      },
      i(o) {
        n || (S(e.$$.fragment, o), S(s), (n = !0));
      },
      o(o) {
        w(e.$$.fragment, o), w(s), (n = !1);
      },
      d(o) {
        R(e, o), o && y(t), s && s.d(o), o && y(i);
      },
    };
  }
  h(Gk, "create_fragment");
  function Xk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = u0(i),
      o = e.option,
      tmp1 = e.checked,
      l = tmp1 === void 0 ? void 0 : tmp1,
      u = Ei(),
      a = R0[o];
    function c(d) {
      (l = d), t(0, l);
    }
    h(c, "checkbox_checked_binding");
    var f = h(() => u("change", l), "change_handler");
    return (
      (r.$$set = (d) => {
        "option" in d && t(1, (o = d.option)), "checked" in d && t(0, (l = d.checked)), "$$scope" in d && t(8, (n = d.$$scope));
      }),
      [l, o, u, a, s, i, c, f, n]
    );
  }
  h(Xk, "instance");
  var Rh =
      ((_class104 = class _class extends se {
        constructor(e) {
          super(), le(this, e, Xk, Gk, oe, { option: 1, checked: 0 });
        }
      }),
      h(_class104, "Option"),
      _class104),
    me = Rh;
  function Kk(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = Y("Fields to omit:\n		")), (t = O("textarea")), (i = $()), (n = O("p")), (n.innerHTML = "Space delimited, e.g: <code>id type publisher author</code>"), v(t, "name", "omitList"), v(t, "class", "omit svelte-1t0249j"), v(t, "placeholder", "e.g. abstract keywords"), v(t, "spellcheck", "false");
      },
      m(l, u) {
        E(l, e, u), E(l, t, u), Ee(t, r[1]), E(l, i, u), E(l, n, u), s || ((o = ye(t, "input", r[9])), (s = !0));
      },
      p(l, u) {
        u & 2 && Ee(t, l[1]);
      },
      d(l) {
        l && y(e), l && y(t), l && y(i), l && y(n), (s = !1), o();
      },
    };
  }
  h(Kk, "create_default_slot_2");
  function Zk(r) {
    var e, t, i, n, s, o, l;
    return {
      c() {
        (e = O("label")), (t = Y("Template:\n			")), (i = O("textarea")), (n = $()), (s = O("p")), (s.innerHTML = '<a href="./manual/key-generation.html" target="_blank">Template documentation</a>'), v(i, "name", "generateKeysTemplate");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(e, i), Ee(i, r[7]), E(u, n, a), E(u, s, a), o || ((l = ye(i, "input", r[14])), (o = !0));
      },
      p(u, a) {
        a & 128 && Ee(i, u[7]);
      },
      d(u) {
        u && y(e), u && y(n), u && y(s), (o = !1), l();
      },
    };
  }
  h(Zk, "create_default_slot_1");
  function eS(r) {
    var e, t, i, n, s, o, l, u, a, c, f, d, p, m, F, g, D, b;
    function B(_) {
      r[10](_);
    }
    h(B, "option0_checked_binding");
    var k = { option: "omit", $$slots: { default: [Kk] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (k.checked = r[0]), (e = new me({ props: k })), J.push(() => K(e, "checked", B));
    function C(_) {
      r[11](_);
    }
    h(C, "option1_checked_binding");
    var L = { option: "stripComments" };
    r[2] !== void 0 && (L.checked = r[2]), (n = new me({ props: L })), J.push(() => K(n, "checked", C));
    function Q(_) {
      r[12](_);
    }
    h(Q, "option2_checked_binding");
    var V = { option: "tidyComments" };
    r[3] !== void 0 && (V.checked = r[3]), (l = new me({ props: V })), J.push(() => K(l, "checked", Q));
    function z(_) {
      r[13](_);
    }
    h(z, "option3_checked_binding");
    var G = { option: "lowercase" };
    r[4] !== void 0 && (G.checked = r[4]), (c = new me({ props: G })), J.push(() => K(c, "checked", z));
    function T(_) {
      r[15](_);
    }
    h(T, "option4_checked_binding");
    var j = { option: "generateKeys", $$slots: { default: [Zk] }, $$scope: { ctx: r } };
    r[6] !== void 0 && (j.checked = r[6]), (p = new me({ props: j })), J.push(() => K(p, "checked", T));
    function te(_) {
      r[16](_);
    }
    h(te, "option5_checked_binding");
    var P = { option: "trailingCommas" };
    return (
      r[5] !== void 0 && (P.checked = r[5]),
      (g = new me({ props: P })),
      J.push(() => K(g, "checked", te)),
      {
        c() {
          M(e.$$.fragment), (i = $()), M(n.$$.fragment), (o = $()), M(l.$$.fragment), (a = $()), M(c.$$.fragment), (d = $()), M(p.$$.fragment), (F = $()), M(g.$$.fragment);
        },
        m(_, ee) {
          N(e, _, ee), E(_, i, ee), N(n, _, ee), E(_, o, ee), N(l, _, ee), E(_, a, ee), N(c, _, ee), E(_, d, ee), N(p, _, ee), E(_, F, ee), N(g, _, ee), (b = !0);
        },
        p(_, ee) {
          var he = {};
          ee & 16777218 && (he.$$scope = { dirty: ee, ctx: _ }), !t && ee & 1 && ((t = !0), (he.checked = _[0]), X(() => (t = !1))), e.$set(he);
          var ve = {};
          !s && ee & 4 && ((s = !0), (ve.checked = _[2]), X(() => (s = !1))), n.$set(ve);
          var xe = {};
          !u && ee & 8 && ((u = !0), (xe.checked = _[3]), X(() => (u = !1))), l.$set(xe);
          var ae = {};
          !f && ee & 16 && ((f = !0), (ae.checked = _[4]), X(() => (f = !1))), c.$set(ae);
          var be = {};
          ee & 16777344 && (be.$$scope = { dirty: ee, ctx: _ }), !m && ee & 64 && ((m = !0), (be.checked = _[6]), X(() => (m = !1))), p.$set(be);
          var we = {};
          !D && ee & 32 && ((D = !0), (we.checked = _[5]), X(() => (D = !1))), g.$set(we);
        },
        i(_) {
          b || (S(e.$$.fragment, _), S(n.$$.fragment, _), S(l.$$.fragment, _), S(c.$$.fragment, _), S(p.$$.fragment, _), S(g.$$.fragment, _), (b = !0));
        },
        o(_) {
          w(e.$$.fragment, _), w(n.$$.fragment, _), w(l.$$.fragment, _), w(c.$$.fragment, _), w(p.$$.fragment, _), w(g.$$.fragment, _), (b = !1);
        },
        d(_) {
          R(e, _), _ && y(i), R(n, _), _ && y(o), R(l, _), _ && y(a), R(c, _), _ && y(d), R(p, _), _ && y(F), R(g, _);
        },
      }
    );
  }
  h(eS, "create_default_slot");
  function tS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "Clean up", open: !0, $$slots: { default: [eS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 16777471 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(tS, "create_fragment");
  function iS(r, e, t) {
    var i, n, s, o, l, u, a;
    var c = e.options,
      f = c.omit !== void 0 && c.omit.length > 0,
      d = (n = (i = c.omit) === null || i === void 0 ? void 0 : i.join(" ")) !== null && n !== void 0 ? n : "",
      p = (s = c.stripComments) !== null && s !== void 0 ? s : !1,
      m = (o = c.tidyComments) !== null && o !== void 0 ? o : !1,
      F = (l = c.lowercase) !== null && l !== void 0 ? l : !1,
      g = (u = c.trailingCommas) !== null && u !== void 0 ? u : !1,
      D = c.generateKeys !== void 0 && c.generateKeys.length > 0,
      b = (a = c.generateKeys) !== null && a !== void 0 ? a : "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]";
    function B() {
      (d = this.value), t(1, d);
    }
    h(B, "textarea_input_handler");
    function k(T) {
      (f = T), t(0, f);
    }
    h(k, "option0_checked_binding");
    function C(T) {
      (p = T), t(2, p);
    }
    h(C, "option1_checked_binding");
    function L(T) {
      (m = T), t(3, m);
    }
    h(L, "option2_checked_binding");
    function Q(T) {
      (F = T), t(4, F);
    }
    h(Q, "option3_checked_binding");
    function V() {
      (b = this.value), t(7, b);
    }
    h(V, "textarea_input_handler_1");
    function z(T) {
      (D = T), t(6, D);
    }
    h(z, "option4_checked_binding");
    function G(T) {
      (g = T), t(5, g);
    }
    return (
      h(G, "option5_checked_binding"),
      (r.$$set = (T) => {
        "options" in T && t(8, (c = T.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 255 && (t(8, (c.omit = f && d.length > 0 ? d.split(/[\n\t ,]+/) : void 0), c), t(8, (c.stripComments = p), c), t(8, (c.tidyComments = m), c), t(8, (c.lowercase = F), c), t(8, (c.trailingCommas = g), c), t(8, (c.generateKeys = D ? b : void 0), c));
      }),
      [f, d, p, m, F, g, D, b, c, B, k, C, L, Q, V, z, G]
    );
  }
  h(iS, "instance");
  var Nh =
      ((_class105 = class _class extends se {
        constructor(e) {
          super(), le(this, e, iS, tS, oe, { options: 8 });
        }
      }),
      h(_class105, "CleanupOptions"),
      _class105),
    ZF = Nh;
  function e11(r) {
    return Jr.map((e) => {
      var _e_toCLI;
      return (_e_toCLI = e.toCLI) === null || _e_toCLI === void 0 ? void 0 : _e_toCLI.call(e, r[e.key], r);
    }).filter((e) => typeof e == "string");
  }
  h(e11, "optionsToCLIArgs");
  function t1(r, e, t) {
    var i = r.slice();
    return (i[2] = e[t][0]), (i[3] = e[t][1]), i;
  }
  h(t1, "get_each_context");
  function i1(r) {
    var e,
      t,
      i = r[3] + "",
      n,
      s;
    return {
      c() {
        (e = Y("=")), (t = O("span")), (n = Y(i)), (s = $()), v(t, "class", "opt-val svelte-1xnx1c1");
      },
      m(o, l) {
        E(o, e, l), E(o, t, l), q(t, n), E(o, s, l);
      },
      p(o, l) {
        l & 1 && i !== (i = o[3] + "") && qe(n, i);
      },
      d(o) {
        o && y(e), o && y(t), o && y(s);
      },
    };
  }
  h(i1, "create_if_block");
  function r11(r) {
    var e,
      t = r[2] + "",
      i,
      n = " ",
      s,
      o = r[3] && r[3].length > 0 && i1(r);
    return {
      c() {
        (e = O("span")), (i = Y(t)), o && o.c(), (s = Y(n)), v(e, "class", "opt-name svelte-1xnx1c1");
      },
      m(l, u) {
        E(l, e, u), q(e, i), o && o.m(l, u), E(l, s, u);
      },
      p(l, u) {
        u & 1 && t !== (t = l[2] + "") && qe(i, t), l[3] && l[3].length > 0 ? (o ? o.p(l, u) : ((o = i1(l)), o.c(), o.m(s.parentNode, s))) : o && (o.d(1), (o = null));
      },
      d(l) {
        l && y(e), o && o.d(l), l && y(s);
      },
    };
  }
  h(r11, "create_each_block");
  function rS(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[0],
      l = [];
    for (var u = 0; u < o.length; u += 1) l[u] = r11(t1(r, o, u));
    return {
      c() {
        (e = O("p")), (e.textContent = "To run this configuration on the command line:"), (t = $()), (i = O("code")), (n = Y("bibtex-tidy "));
        for (var u = 0; u < l.length; u += 1) l[u].c();
        (s = Y(" YOUR_FILE.bib")), v(i, "id", "cli"), v(i, "class", "svelte-1xnx1c1");
      },
      m(u, a) {
        E(u, e, a), E(u, t, a), E(u, i, a), q(i, n);
        for (var c = 0; c < l.length; c += 1) l[c] && l[c].m(i, null);
        q(i, s);
      },
      p(u, a) {
        if (a & 1) {
          o = u[0];
          var c;
          for (c = 0; c < o.length; c += 1) {
            var f = t1(u, o, c);
            l[c] ? l[c].p(f, a) : ((l[c] = r11(f)), l[c].c(), l[c].m(i, s));
          }
          for (; c < l.length; c += 1) l[c].d(1);
          l.length = o.length;
        }
      },
      d(u) {
        u && y(e), u && y(t), u && y(i), zr(l, u);
      },
    };
  }
  h(rS, "create_default_slot");
  function nS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "CLI", $$slots: { default: [rS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 65 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(nS, "create_fragment");
  function sS(r, e, t) {
    var i = e.options,
      n;
    return (
      (r.$$set = (s) => {
        "options" in s && t(1, (i = s.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 2 &&
          t(
            0,
            (n = e11(i).map((s) => {
              var o = s.indexOf("=");
              return o === -1 ? [s] : [s.slice(0, o), s.slice(o + 1)];
            })),
          );
      }),
      [n, i]
    );
  }
  h(sS, "instance");
  var Mh =
      ((_class106 = class _class extends se {
        constructor(e) {
          super(), le(this, e, sS, nS, oe, { options: 1 });
        }
      }),
      h(_class106, "Cli"),
      _class106),
    n1 = Mh;
  function oS(r) {
    var e,
      t = !1,
      i,
      n,
      s;
    return (
      (i = c0(r[4][0])),
      {
        c() {
          (e = O("input")), v(e, "type", "radio"), v(e, "name", r[1]), (e.__value = r[2]), (e.value = e.__value), v(e, "class", "svelte-qhlda7"), i.p(e);
        },
        m(o, l) {
          E(o, e, l), (e.checked = e.__value === r[0]), n || ((s = ye(e, "change", r[3])), (n = !0));
        },
        p(o, param) {
          var _param = _sliced_to_array(param, 1),
            l = _param[0];
          l & 2 && v(e, "name", o[1]), l & 4 && ((e.__value = o[2]), (e.value = e.__value), (t = !0)), (t || l & 1) && (e.checked = e.__value === o[0]);
        },
        i: Se,
        o: Se,
        d(o) {
          o && y(e), i.r(), (n = !1), s();
        },
      }
    );
  }
  h(oS, "create_fragment");
  function lS(r, e, t) {
    var i = e.name,
      n = e.group,
      tmp = e.value,
      s = tmp === void 0 ? void 0 : tmp,
      o = [[]];
    function l() {
      (n = this.__value), t(0, n);
    }
    return (
      h(l, "input_change_handler"),
      (r.$$set = (u) => {
        "name" in u && t(1, (i = u.name)), "group" in u && t(0, (n = u.group)), "value" in u && t(2, (s = u.value));
      }),
      [n, i, s, l, o]
    );
  }
  h(lS, "instance");
  var Ph =
      ((_class107 = class _class extends se {
        constructor(e) {
          super(), le(this, e, lS, oS, oe, { name: 1, group: 0, value: 2 });
        }
      }),
      h(_class107, "Radio"),
      _class107),
    gi = Ph;
  function uS(r) {
    var e, t, i, n;
    function s(l) {
      r[8](l);
    }
    h(s, "checkbox_checked_binding");
    var o = { name: "uniqKEY" };
    return (
      r[1] !== void 0 && (o.checked = r[1]),
      (e = new Mi({ props: o })),
      J.push(() => K(e, "checked", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n			Matching Keys"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 2 && ((t = !0), (a.checked = l[1]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(uS, "create_default_slot_10");
  function aS(r) {
    var e, t, i, n;
    function s(l) {
      r[9](l);
    }
    h(s, "checkbox_checked_binding_1");
    var o = { name: "uniqDOI" };
    return (
      r[2] !== void 0 && (o.checked = r[2]),
      (e = new Mi({ props: o })),
      J.push(() => K(e, "checked", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n			Matching DOIs"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 4 && ((t = !0), (a.checked = l[2]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(aS, "create_default_slot_9");
  function hS(r) {
    var e, t, i, n;
    function s(l) {
      r[10](l);
    }
    h(s, "checkbox_checked_binding_2");
    var o = { name: "uniqCIT" };
    return (
      r[3] !== void 0 && (o.checked = r[3]),
      (e = new Mi({ props: o })),
      J.push(() => K(e, "checked", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n			Similar author and title"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 8 && ((t = !0), (a.checked = l[3]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(hS, "create_default_slot_8");
  function cS(r) {
    var e, t, i, n;
    function s(l) {
      r[11](l);
    }
    h(s, "checkbox_checked_binding_3");
    var o = { name: "uniqABS" };
    return (
      r[4] !== void 0 && (o.checked = r[4]),
      (e = new Mi({ props: o })),
      J.push(() => K(e, "checked", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n			Similar abstracts"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 16 && ((t = !0), (a.checked = l[4]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(cS, "create_default_slot_7");
  function fS(r) {
    var e, t, i, n, s, o, l, u, a, c;
    return (
      (i = new Ze({ props: { $$slots: { default: [uS] }, $$scope: { ctx: r } } })),
      (s = new Ze({ props: { $$slots: { default: [aS] }, $$scope: { ctx: r } } })),
      (l = new Ze({ props: { $$slots: { default: [hS] }, $$scope: { ctx: r } } })),
      (a = new Ze({ props: { $$slots: { default: [cS] }, $$scope: { ctx: r } } })),
      {
        c() {
          (e = O("p")), (e.textContent = "What to check:"), (t = $()), M(i.$$.fragment), (n = $()), M(s.$$.fragment), (o = $()), M(l.$$.fragment), (u = $()), M(a.$$.fragment);
        },
        m(f, d) {
          E(f, e, d), E(f, t, d), N(i, f, d), E(f, n, d), N(s, f, d), E(f, o, d), N(l, f, d), E(f, u, d), N(a, f, d), (c = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217730 && (p.$$scope = { dirty: d, ctx: f }), i.$set(p);
          var m = {};
          d & 134217732 && (m.$$scope = { dirty: d, ctx: f }), s.$set(m);
          var F = {};
          d & 134217736 && (F.$$scope = { dirty: d, ctx: f }), l.$set(F);
          var g = {};
          d & 134217744 && (g.$$scope = { dirty: d, ctx: f }), a.$set(g);
        },
        i(f) {
          c || (S(i.$$.fragment, f), S(s.$$.fragment, f), S(l.$$.fragment, f), S(a.$$.fragment, f), (c = !0));
        },
        o(f) {
          w(i.$$.fragment, f), w(s.$$.fragment, f), w(l.$$.fragment, f), w(a.$$.fragment, f), (c = !1);
        },
        d(f) {
          f && y(e), f && y(t), R(i, f), f && y(n), R(s, f), f && y(o), R(l, f), f && y(u), R(a, f);
        },
      }
    );
  }
  h(fS, "create_default_slot_6");
  function dS(r) {
    var e, t, i, n, s;
    function o(u) {
      r[13](u);
    }
    h(o, "radio_group_binding");
    var l = { name: "mergeStrategy", value: "combine" };
    return (
      r[6] !== void 0 && (l.group = r[6]),
      (e = new gi({ props: l })),
      J.push(() => K(e, "group", o)),
      {
        c() {
          M(e.$$.fragment), (i = $()), (n = O("span")), (n.innerHTML = "<strong>Combine</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates if they do not\n					already exist</small>");
        },
        m(u, a) {
          N(e, u, a), E(u, i, a), E(u, n, a), (s = !0);
        },
        p(u, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = u[6]), X(() => (t = !1))), e.$set(c);
        },
        i(u) {
          s || (S(e.$$.fragment, u), (s = !0));
        },
        o(u) {
          w(e.$$.fragment, u), (s = !1);
        },
        d(u) {
          R(e, u), u && y(i), u && y(n);
        },
      }
    );
  }
  h(dS, "create_default_slot_5");
  function pS(r) {
    var e, t, i, n, s;
    function o(u) {
      r[14](u);
    }
    h(o, "radio_group_binding_1");
    var l = { name: "mergeStrategy", value: "overwrite" };
    return (
      r[6] !== void 0 && (l.group = r[6]),
      (e = new gi({ props: l })),
      J.push(() => K(e, "group", o)),
      {
        c() {
          M(e.$$.fragment), (i = $()), (n = O("span")), (n.innerHTML = "<strong>Overwrite</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates, overwriting\n					existing fields if they exist</small>");
        },
        m(u, a) {
          N(e, u, a), E(u, i, a), E(u, n, a), (s = !0);
        },
        p(u, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = u[6]), X(() => (t = !1))), e.$set(c);
        },
        i(u) {
          s || (S(e.$$.fragment, u), (s = !0));
        },
        o(u) {
          w(e.$$.fragment, u), (s = !1);
        },
        d(u) {
          R(e, u), u && y(i), u && y(n);
        },
      }
    );
  }
  h(pS, "create_default_slot_4");
  function mS(r) {
    var e, t, i, n, s;
    function o(u) {
      r[15](u);
    }
    h(o, "radio_group_binding_2");
    var l = { name: "mergeStrategy", value: "first" };
    return (
      r[6] !== void 0 && (l.group = r[6]),
      (e = new gi({ props: l })),
      J.push(() => K(e, "group", o)),
      {
        c() {
          M(e.$$.fragment), (i = $()), (n = O("span")), (n.innerHTML = "<strong>First</strong><br/> \n				<small>Only keep the original entry</small>");
        },
        m(u, a) {
          N(e, u, a), E(u, i, a), E(u, n, a), (s = !0);
        },
        p(u, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = u[6]), X(() => (t = !1))), e.$set(c);
        },
        i(u) {
          s || (S(e.$$.fragment, u), (s = !0));
        },
        o(u) {
          w(e.$$.fragment, u), (s = !1);
        },
        d(u) {
          R(e, u), u && y(i), u && y(n);
        },
      }
    );
  }
  h(mS, "create_default_slot_3");
  function gS(r) {
    var e, t, i, n, s;
    function o(u) {
      r[16](u);
    }
    h(o, "radio_group_binding_3");
    var l = { name: "mergeStrategy", value: "last" };
    return (
      r[6] !== void 0 && (l.group = r[6]),
      (e = new gi({ props: l })),
      J.push(() => K(e, "group", o)),
      {
        c() {
          M(e.$$.fragment), (i = $()), (n = O("span")), (n.innerHTML = "<strong>Last</strong><br/> \n				<small>Only keep the last found duplicate</small>");
        },
        m(u, a) {
          N(e, u, a), E(u, i, a), E(u, n, a), (s = !0);
        },
        p(u, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = u[6]), X(() => (t = !1))), e.$set(c);
        },
        i(u) {
          s || (S(e.$$.fragment, u), (s = !0));
        },
        o(u) {
          w(e.$$.fragment, u), (s = !1);
        },
        d(u) {
          R(e, u), u && y(i), u && y(n);
        },
      }
    );
  }
  h(gS, "create_default_slot_2");
  function DS(r) {
    var e, t, i, n, s, o, l, u;
    return (
      (e = new Ze({ props: { $$slots: { default: [dS] }, $$scope: { ctx: r } } })),
      (i = new Ze({ props: { $$slots: { default: [pS] }, $$scope: { ctx: r } } })),
      (s = new Ze({ props: { $$slots: { default: [mS] }, $$scope: { ctx: r } } })),
      (l = new Ze({ props: { $$slots: { default: [gS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment), (t = $()), M(i.$$.fragment), (n = $()), M(s.$$.fragment), (o = $()), M(l.$$.fragment);
        },
        m(a, c) {
          N(e, a, c), E(a, t, c), N(i, a, c), E(a, n, c), N(s, a, c), E(a, o, c), N(l, a, c), (u = !0);
        },
        p(a, c) {
          var f = {};
          c & 134217792 && (f.$$scope = { dirty: c, ctx: a }), e.$set(f);
          var d = {};
          c & 134217792 && (d.$$scope = { dirty: c, ctx: a }), i.$set(d);
          var p = {};
          c & 134217792 && (p.$$scope = { dirty: c, ctx: a }), s.$set(p);
          var m = {};
          c & 134217792 && (m.$$scope = { dirty: c, ctx: a }), l.$set(m);
        },
        i(a) {
          u || (S(e.$$.fragment, a), S(i.$$.fragment, a), S(s.$$.fragment, a), S(l.$$.fragment, a), (u = !0));
        },
        o(a) {
          w(e.$$.fragment, a), w(i.$$.fragment, a), w(s.$$.fragment, a), w(l.$$.fragment, a), (u = !1);
        },
        d(a) {
          R(e, a), a && y(t), R(i, a), a && y(n), R(s, a), a && y(o), R(l, a);
        },
      }
    );
  }
  h(DS, "create_default_slot_1");
  function FS(r) {
    var e, t, i, n, s, o;
    function l(f) {
      r[12](f);
    }
    h(l, "option0_checked_binding");
    var u = { option: "duplicates", $$slots: { default: [fS] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (u.checked = r[0]), (e = new me({ props: u })), J.push(() => K(e, "checked", l));
    function a(f) {
      r[17](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "merge", $$slots: { default: [DS] }, $$scope: { ctx: r } };
    return (
      r[5] !== void 0 && (c.checked = r[5]),
      (n = new me({ props: c })),
      J.push(() => K(n, "checked", a)),
      {
        c() {
          M(e.$$.fragment), (i = $()), M(n.$$.fragment);
        },
        m(f, d) {
          N(e, f, d), E(f, i, d), N(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217758 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 1 && ((t = !0), (p.checked = f[0]), X(() => (t = !1))), e.$set(p);
          var m = {};
          d & 134217792 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 32 && ((s = !0), (m.checked = f[5]), X(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          w(e.$$.fragment, f), w(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          R(e, f), f && y(i), R(n, f);
        },
      }
    );
  }
  h(FS, "create_default_slot");
  function bS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "Duplicates", open: !0, $$slots: { default: [FS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 134217855 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(bS, "create_fragment");
  function yS(r, e, t) {
    var i, n, s, o, l, u, a, c, f;
    var d = e.options,
      p = d.duplicates !== void 0,
      m = (n = (i = d.duplicates) === null || i === void 0 ? void 0 : i.includes("key")) !== null && n !== void 0 ? n : !0,
      F = (o = (s = d.duplicates) === null || s === void 0 ? void 0 : s.includes("doi")) !== null && o !== void 0 ? o : !1,
      g = (u = (l = d.duplicates) === null || l === void 0 ? void 0 : l.includes("citation")) !== null && u !== void 0 ? u : !1,
      D = (c = (a = d.duplicates) === null || a === void 0 ? void 0 : a.includes("abstract")) !== null && c !== void 0 ? c : !1,
      b = d.merge !== void 0,
      B = (f = d.merge) !== null && f !== void 0 ? f : "combine";
    function k(P) {
      (m = P), t(1, m);
    }
    h(k, "checkbox_checked_binding");
    function C(P) {
      (F = P), t(2, F);
    }
    h(C, "checkbox_checked_binding_1");
    function L(P) {
      (g = P), t(3, g);
    }
    h(L, "checkbox_checked_binding_2");
    function Q(P) {
      (D = P), t(4, D);
    }
    h(Q, "checkbox_checked_binding_3");
    function V(P) {
      (p = P), t(0, p);
    }
    h(V, "option0_checked_binding");
    function z(P) {
      (B = P), t(6, B);
    }
    h(z, "radio_group_binding");
    function G(P) {
      (B = P), t(6, B);
    }
    h(G, "radio_group_binding_1");
    function T(P) {
      (B = P), t(6, B);
    }
    h(T, "radio_group_binding_2");
    function j(P) {
      (B = P), t(6, B);
    }
    h(j, "radio_group_binding_3");
    function te(P) {
      (b = P), t(5, b);
    }
    return (
      h(te, "option1_checked_binding"),
      (r.$$set = (P) => {
        "options" in P && t(7, (d = P.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 255 && (p ? (t(7, (d.duplicates = []), d), m && d.duplicates.push("key"), F && d.duplicates.push("doi"), g && d.duplicates.push("citation"), D && d.duplicates.push("abstract")) : t(7, (d.duplicates = void 0), d), t(7, (d.merge = b ? B : void 0), d));
      }),
      [p, m, F, g, D, b, B, d, k, C, L, Q, V, z, G, T, j, te]
    );
  }
  h(yS, "instance");
  var Ih =
      ((_class108 = class _class extends se {
        constructor(e) {
          super(), le(this, e, yS, bS, oe, { options: 7 });
        }
      }),
      h(_class108, "DuplicateOptions"),
      _class108),
    s1 = Ih;
  function ES(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = O("strong")), (e.textContent = "There's a problem with the bibtex"), (t = O("br")), (i = Y("\n			Unknown error: ")), (n = Y(r[0])), (s = O("br")), (o = Y("\n			This is probably a bug."));
      },
      m(l, u) {
        E(l, e, u), E(l, t, u), E(l, i, u), E(l, n, u), E(l, s, u), E(l, o, u);
      },
      p(l, u) {
        u & 1 && qe(n, l[0]);
      },
      d(l) {
        l && y(e), l && y(t), l && y(i), l && y(n), l && y(s), l && y(o);
      },
    };
  }
  h(ES, "create_else_block_1");
  function CS(r) {
    var e,
      t,
      i,
      n = r[0].name + "",
      s,
      o,
      l = r[0].line + "",
      u,
      a,
      c = r[0].column + "",
      f,
      d,
      p,
      m;
    function F(b, B) {
      return b[0].hint ? vS : BS;
    }
    h(F, "select_block_type_1");
    var g = F(r, -1),
      D = g(r);
    return {
      c() {
        (e = O("strong")), (e.textContent = "There's a problem with the bibtex"), (t = O("br")), (i = $()), (s = Y(n)), (o = Y(" on line ")), (u = Y(l)), (a = Y(" column ")), (f = Y(c)), (d = O("br")), (p = $()), D.c(), (m = Ht());
      },
      m(b, B) {
        E(b, e, B), E(b, t, B), E(b, i, B), E(b, s, B), E(b, o, B), E(b, u, B), E(b, a, B), E(b, f, B), E(b, d, B), E(b, p, B), D.m(b, B), E(b, m, B);
      },
      p(b, B) {
        B & 1 && n !== (n = b[0].name + "") && qe(s, n), B & 1 && l !== (l = b[0].line + "") && qe(u, l), B & 1 && c !== (c = b[0].column + "") && qe(f, c), g === (g = F(b, B)) && D ? D.p(b, B) : (D.d(1), (D = g(b)), D && (D.c(), D.m(m.parentNode, m)));
      },
      d(b) {
        b && y(e), b && y(t), b && y(i), b && y(s), b && y(o), b && y(u), b && y(a), b && y(f), b && y(d), b && y(p), D.d(b), b && y(m);
      },
    };
  }
  h(CS, "create_if_block");
  function BS(r) {
    var e,
      t = JSON.stringify(r[0].char) + "",
      i,
      n,
      s = r[0].node.type + "",
      o,
      l;
    return {
      c() {
        (e = Y("Unexpected ")), (i = Y(t)), (n = Y(" in ")), (o = Y(s)), (l = Y("."));
      },
      m(u, a) {
        E(u, e, a), E(u, i, a), E(u, n, a), E(u, o, a), E(u, l, a);
      },
      p(u, a) {
        a & 1 && t !== (t = JSON.stringify(u[0].char) + "") && qe(i, t), a & 1 && s !== (s = u[0].node.type + "") && qe(o, s);
      },
      d(u) {
        u && y(e), u && y(i), u && y(n), u && y(o), u && y(l);
      },
    };
  }
  h(BS, "create_else_block");
  function vS(r) {
    var e = r[0].hint + "",
      t;
    return {
      c() {
        t = Y(e);
      },
      m(i, n) {
        E(i, t, n);
      },
      p(i, n) {
        n & 1 && e !== (e = i[0].hint + "") && qe(t, e);
      },
      d(i) {
        i && y(t);
      },
    };
  }
  h(vS, "create_if_block_1");
  function xS(r) {
    var e, t, i, n, s, o, l;
    function u(f, d) {
      return f[0] instanceof at ? CS : ES;
    }
    h(u, "select_block_type");
    var a = u(r, -1),
      c = a(r);
    return {
      c() {
        (e = O("div")),
          (t = _t("svg")),
          (i = _t("circle")),
          (n = _t("line")),
          (s = _t("line")),
          (o = $()),
          (l = O("div")),
          c.c(),
          v(i, "cx", "12"),
          v(i, "cy", "12"),
          v(i, "r", "10"),
          v(i, "class", "svelte-176xcb"),
          v(n, "x1", "12"),
          v(n, "y1", "8"),
          v(n, "x2", "12"),
          v(n, "y2", "12"),
          v(n, "class", "svelte-176xcb"),
          v(s, "x1", "12"),
          v(s, "y1", "16"),
          v(s, "x2", "12.01"),
          v(s, "y2", "16"),
          v(s, "class", "svelte-176xcb"),
          v(t, "xmlns", "http://www.w3.org/2000/svg"),
          v(t, "width", "24"),
          v(t, "height", "24"),
          v(t, "viewBox", "0 0 24 24"),
          v(t, "fill", "none"),
          v(t, "stroke", "currentColor"),
          v(t, "stroke-width", "2"),
          v(t, "stroke-linecap", "round"),
          v(t, "stroke-linejoin", "round"),
          v(t, "class", "svelte-176xcb"),
          v(l, "class", "text"),
          v(e, "class", "container svelte-176xcb");
      },
      m(f, d) {
        E(f, e, d), q(e, t), q(t, i), q(t, n), q(t, s), q(e, o), q(e, l), c.m(l, null);
      },
      p(f, param) {
        var _param = _sliced_to_array(param, 1),
          d = _param[0];
        a === (a = u(f, d)) && c ? c.p(f, d) : (c.d(1), (c = a(f)), c && (c.c(), c.m(l, null)));
      },
      i: Se,
      o: Se,
      d(f) {
        f && y(e), c.d();
      },
    };
  }
  h(xS, "create_fragment");
  function AS(r, e, t) {
    var i = e.error;
    return (
      (r.$$set = (n) => {
        "error" in n && t(0, (i = n.error));
      }),
      [i]
    );
  }
  h(AS, "instance");
  var $h =
      ((_class109 = class _class extends se {
        constructor(e) {
          super(), le(this, e, AS, xS, oe, { error: 0 });
        }
      }),
      h(_class109, "FeedbackError"),
      _class109),
    o1 = $h;
  function l1(r, e, t) {
    var i = r.slice();
    return (i[4] = e[t]), i;
  }
  h(l1, "get_each_context");
  function u1(r, e, t) {
    var i = r.slice();
    return (i[7] = e[t]), i;
  }
  h(u1, "get_each_context_1");
  function kS(r) {
    var e,
      t = r[2],
      i = [];
    for (var n = 0; n < t.length; n += 1) i[n] = a1(u1(r, t, n));
    return {
      c() {
        e = O("ul");
        for (var n = 0; n < i.length; n += 1) i[n].c();
      },
      m(n, s) {
        E(n, e, s);
        for (var o = 0; o < i.length; o += 1) i[o] && i[o].m(e, null);
      },
      p(n, s) {
        if (s & 4) {
          t = n[2];
          var o;
          for (o = 0; o < t.length; o += 1) {
            var l = u1(n, t, o);
            i[o] ? i[o].p(l, s) : ((i[o] = a1(l)), i[o].c(), i[o].m(e, null));
          }
          for (; o < i.length; o += 1) i[o].d(1);
          i.length = t.length;
        }
      },
      d(n) {
        n && y(e), zr(i, n);
      },
    };
  }
  h(kS, "create_if_block_2");
  function a1(r) {
    var e,
      t,
      i = r[7].message + "",
      n;
    return {
      c() {
        (e = O("li")), (t = Y("$")), (n = Y(i));
      },
      m(s, o) {
        E(s, e, o), q(e, t), q(e, n);
      },
      p: Se,
      d(s) {
        s && y(e);
      },
    };
  }
  h(a1, "create_each_block_1");
  function h1(r) {
    var e;
    function t(s, o) {
      return s[3].length === 0 ? wS : SS;
    }
    h(t, "select_block_type");
    var n = t(r, -1)(r);
    return {
      c() {
        n.c(), (e = Ht());
      },
      m(s, o) {
        n.m(s, o), E(s, e, o);
      },
      p(s, o) {
        n.p(s, o);
      },
      d(s) {
        n.d(s), s && y(e);
      },
    };
  }
  h(h1, "create_if_block");
  function SS(r) {
    var e,
      t,
      i,
      n = r[3],
      s = [];
    for (var o = 0; o < n.length; o += 1) s[o] = c1(l1(r, n, o));
    return {
      c() {
        (e = O("strong")), (e.textContent = "".concat(r[3].length, " merged:")), (t = $()), (i = O("ul"));
        for (var o = 0; o < s.length; o += 1) s[o].c();
        v(e, "class", "svelte-yy7yvg");
      },
      m(o, l) {
        E(o, e, l), E(o, t, l), E(o, i, l);
        for (var u = 0; u < s.length; u += 1) s[u] && s[u].m(i, null);
      },
      p(o, l) {
        if (l & 8) {
          n = o[3];
          var u;
          for (u = 0; u < n.length; u += 1) {
            var a = l1(o, n, u);
            s[u] ? s[u].p(a, l) : ((s[u] = c1(a)), s[u].c(), s[u].m(i, null));
          }
          for (; u < s.length; u += 1) s[u].d(1);
          s.length = n.length;
        }
      },
      d(o) {
        o && y(e), o && y(t), o && y(i), zr(s, o);
      },
    };
  }
  h(SS, "create_else_block");
  function wS(r) {
    var e;
    return {
      c() {
        e = Y("No duplicates");
      },
      m(t, i) {
        E(t, e, i);
      },
      p: Se,
      d(t) {
        t && y(e);
      },
    };
  }
  h(wS, "create_if_block_1");
  function c1(r) {
    var e,
      t = r[4].message + "",
      i;
    return {
      c() {
        (e = O("li")), (i = Y(t));
      },
      m(n, s) {
        E(n, e, s), q(e, i);
      },
      p: Se,
      d(n) {
        n && y(e);
      },
    };
  }
  h(c1, "create_each_block");
  function QS(r) {
    var e,
      t,
      i,
      n,
      s,
      o,
      l,
      u,
      a,
      c,
      f = r[1].count + "",
      d,
      p,
      m,
      F = r[2].length > 0 && kS(r),
      g = r[0].merge && h1(r);
    return {
      c() {
        (e = O("div")),
          (t = _t("svg")),
          (i = _t("circle")),
          (n = _t("line")),
          (s = _t("line")),
          (o = $()),
          (l = O("div")),
          (u = O("strong")),
          (u.textContent = "Successful!"),
          (a = O("br")),
          (c = Y("\n		Tidied ")),
          (d = Y(f)),
          (p = Y(" entries.\n\n		")),
          F && F.c(),
          (m = $()),
          g && g.c(),
          v(i, "cx", "12"),
          v(i, "cy", "12"),
          v(i, "r", "10"),
          v(i, "class", "svelte-yy7yvg"),
          v(n, "x1", "12"),
          v(n, "y1", "16"),
          v(n, "x2", "12"),
          v(n, "y2", "12"),
          v(n, "class", "svelte-yy7yvg"),
          v(s, "x1", "12"),
          v(s, "y1", "8"),
          v(s, "x2", "12.01"),
          v(s, "y2", "8"),
          v(s, "class", "svelte-yy7yvg"),
          v(t, "xmlns", "http://www.w3.org/2000/svg"),
          v(t, "width", "24"),
          v(t, "height", "24"),
          v(t, "viewBox", "0 0 24 24"),
          v(t, "fill", "none"),
          v(t, "stroke", "currentColor"),
          v(t, "stroke-width", "2"),
          v(t, "stroke-linecap", "round"),
          v(t, "stroke-linejoin", "round"),
          v(t, "class", "feather feather-info svelte-yy7yvg"),
          v(u, "class", "svelte-yy7yvg"),
          v(l, "class", "text"),
          v(e, "class", "container svelte-yy7yvg");
      },
      m(D, b) {
        E(D, e, b), q(e, t), q(t, i), q(t, n), q(t, s), q(e, o), q(e, l), q(l, u), q(l, a), q(l, c), q(l, d), q(l, p), F && F.m(l, null), q(l, m), g && g.m(l, null);
      },
      p(D, param) {
        var _param = _sliced_to_array(param, 1),
          b = _param[0];
        b & 2 && f !== (f = D[1].count + "") && qe(d, f), D[2].length > 0 && F.p(D, b), D[0].merge ? (g ? g.p(D, b) : ((g = h1(D)), g.c(), g.m(l, null))) : g && (g.d(1), (g = null));
      },
      i: Se,
      o: Se,
      d(D) {
        D && y(e), F && F.d(), g && g.d();
      },
    };
  }
  h(QS, "create_fragment");
  function _S(r, e, t) {
    var i = e.options,
      n = e.result,
      s = n.warnings.filter((l) => l.code !== "DUPLICATE_ENTRY"),
      o = n.warnings.filter((l) => l.code === "DUPLICATE_ENTRY");
    return (
      (r.$$set = (l) => {
        "options" in l && t(0, (i = l.options)), "result" in l && t(1, (n = l.result));
      }),
      [i, n, s, o]
    );
  }
  h(_S, "instance");
  var qh =
      ((_class110 = class _class extends se {
        constructor(e) {
          super(), le(this, e, _S, QS, oe, { options: 0, result: 1 });
        }
      }),
      h(_class110, "FeedbackSuccess"),
      _class110),
    f1 = qh;
  function US(r) {
    var e, t;
    return (
      (e = new o1({ props: { error: r[1].error } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 2 && (s.error = i[1].error), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(US, "create_else_block");
  function LS(r) {
    var e, t;
    return (
      (e = new f1({ props: { options: r[0], result: r[1].result } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.result = i[1].result), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(LS, "create_if_block");
  function OS(r) {
    var e,
      t,
      i,
      n,
      s = [LS, US],
      o = [];
    function l(u, a) {
      return u[1].status === "success" ? 0 : 1;
    }
    return (
      h(l, "select_block_type"),
      (t = l(r, -1)),
      (i = o[t] = s[t](r)),
      {
        c() {
          (e = O("div")), i.c(), v(e, "role", "alert"), v(e, "class", "svelte-1pqmac");
        },
        m(u, a) {
          E(u, e, a), o[t].m(e, null), (n = !0);
        },
        p(u, param) {
          var _param = _sliced_to_array(param, 1),
            a = _param[0];
          var c = t;
          (t = l(u, a)),
            t === c
              ? o[t].p(u, a)
              : (jt(),
                w(o[c], 1, 1, () => {
                  o[c] = null;
                }),
                Yt(),
                (i = o[t]),
                i ? i.p(u, a) : ((i = o[t] = s[t](u)), i.c()),
                S(i, 1),
                i.m(e, null));
        },
        i(u) {
          n || (S(i), (n = !0));
        },
        o(u) {
          w(i), (n = !1);
        },
        d(u) {
          u && y(e), o[t].d();
        },
      }
    );
  }
  h(OS, "create_fragment");
  function TS(r, e, t) {
    var i = e.options,
      n = e.status;
    return (
      (r.$$set = (s) => {
        "options" in s && t(0, (i = s.options)), "status" in s && t(1, (n = s.status));
      }),
      [i, n]
    );
  }
  h(TS, "instance");
  var Vh =
      ((_class111 = class _class extends se {
        constructor(e) {
          super(), le(this, e, TS, OS, oe, { options: 0, status: 1 });
        }
      }),
      h(_class111, "Feedback"),
      _class111),
    d1 = Vh;
  function RS(r) {
    var e, t, i, n;
    function s(l) {
      r[3](l);
    }
    h(s, "radio_group_binding");
    var o = { name: "indent", value: "tabs" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new gi({ props: o })),
      J.push(() => K(e, "group", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n		Indent with tabs"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 1 && ((t = !0), (a.group = l[0]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(RS, "create_default_slot_3");
  function NS(r) {
    var e, t, i, n;
    function s(l) {
      r[4](l);
    }
    h(s, "radio_group_binding_1");
    var o = { name: "indent", value: "spaces" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new gi({ props: o })),
      J.push(() => K(e, "group", s)),
      {
        c() {
          M(e.$$.fragment), (i = Y("\n		Indent with spaces"));
        },
        m(l, u) {
          N(e, l, u), E(l, i, u), (n = !0);
        },
        p(l, u) {
          var a = {};
          !t && u & 1 && ((t = !0), (a.group = l[0]), X(() => (t = !1))), e.$set(a);
        },
        i(l) {
          n || (S(e.$$.fragment, l), (n = !0));
        },
        o(l) {
          w(e.$$.fragment, l), (n = !1);
        },
        d(l) {
          R(e, l), l && y(i);
        },
      }
    );
  }
  h(NS, "create_default_slot_2");
  function p1(r) {
    var e, t;
    return (
      (e = new qo({ props: { $$slots: { default: [MS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 66 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(p1, "create_if_block");
  function MS(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = O("label")), (t = Y("Spaces: ")), (i = O("input")), v(i, "name", "spaces"), v(i, "type", "number");
      },
      m(o, l) {
        E(o, e, l), q(e, t), q(e, i), Ee(i, r[1]), n || ((s = ye(i, "input", r[5])), (n = !0));
      },
      p(o, l) {
        l & 2 && Bt(i.value) !== o[1] && Ee(i, o[1]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(MS, "create_default_slot_1");
  function PS(r) {
    var e, t, i, n, s, o;
    (e = new Ze({ props: { title: "Indent fields with tabs", $$slots: { default: [RS] }, $$scope: { ctx: r } } })), (i = new Ze({ props: { title: "Indent fields with spaces", $$slots: { default: [NS] }, $$scope: { ctx: r } } }));
    var l = r[0] === "spaces" && p1(r);
    return {
      c() {
        M(e.$$.fragment), (t = $()), M(i.$$.fragment), (n = $()), l && l.c(), (s = Ht());
      },
      m(u, a) {
        N(e, u, a), E(u, t, a), N(i, u, a), E(u, n, a), l && l.m(u, a), E(u, s, a), (o = !0);
      },
      p(u, a) {
        var c = {};
        a & 65 && (c.$$scope = { dirty: a, ctx: u }), e.$set(c);
        var f = {};
        a & 65 && (f.$$scope = { dirty: a, ctx: u }),
          i.$set(f),
          u[0] === "spaces"
            ? l
              ? (l.p(u, a), a & 1 && S(l, 1))
              : ((l = p1(u)), l.c(), S(l, 1), l.m(s.parentNode, s))
            : l &&
              (jt(),
              w(l, 1, 1, () => {
                l = null;
              }),
              Yt());
      },
      i(u) {
        o || (S(e.$$.fragment, u), S(i.$$.fragment, u), S(l), (o = !0));
      },
      o(u) {
        w(e.$$.fragment, u), w(i.$$.fragment, u), w(l), (o = !1);
      },
      d(u) {
        R(e, u), u && y(t), R(i, u), u && y(n), l && l.d(u), u && y(s);
      },
    };
  }
  h(PS, "create_default_slot");
  function IS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "Indent", open: !0, $$slots: { default: [PS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 67 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(IS, "create_fragment");
  function $S(r, e, t) {
    var i = e.options,
      n = i.tab ? "tabs" : "spaces",
      s = i.space;
    function o(a) {
      (n = a), t(0, n);
    }
    h(o, "radio_group_binding");
    function l(a) {
      (n = a), t(0, n);
    }
    h(l, "radio_group_binding_1");
    function u() {
      (s = Bt(this.value)), t(1, s);
    }
    return (
      h(u, "input_input_handler"),
      (r.$$set = (a) => {
        "options" in a && t(2, (i = a.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 3 && (t(2, (i.space = s), i), t(2, (i.tab = n === "tabs"), i));
      }),
      [n, s, i, o, l, u]
    );
  }
  h($S, "instance");
  var Wh =
      ((_class112 = class _class extends se {
        constructor(e) {
          super(), le(this, e, $S, IS, oe, { options: 2 });
        }
      }),
      h(_class112, "IndentOptions"),
      _class112),
    m1 = Wh;
  function qS(r) {
    var e, t, i, n, s, o, l, u, a;
    return {
      c() {
        (e = O("label")),
          (t = Y("Fields to sort by:\n			")),
          (i = O("textarea")),
          (n = $()),
          (s = O("p")),
          (s.innerHTML = "Space delimited, e.g: <code>key type publisher author</code>. For\n			descending order, prefix the field name with a dash, e.g.\n			<code>-year author</code>."),
          (o = $()),
          (l = O("p")),
          (l.innerHTML = "In addition to field names, you can use <code>key</code> to sort by\n			citation key,\n			<code>type</code> to sort by entry type (@article, @misc, etc), and\n			<code>special</code> to sort special entries (@string, @preamble, @xdata, and\n			@set) to the top."),
          v(i, "name", "sortList"),
          v(i, "spellcheck", "false");
      },
      m(c, f) {
        E(c, e, f), q(e, t), q(e, i), Ee(i, r[3]), E(c, n, f), E(c, s, f), E(c, o, f), E(c, l, f), u || ((a = ye(i, "input", r[5])), (u = !0));
      },
      p(c, f) {
        f & 8 && Ee(i, c[3]);
      },
      d(c) {
        c && y(e), c && y(n), c && y(s), c && y(o), c && y(l), (u = !1), a();
      },
    };
  }
  h(qS, "create_default_slot_2");
  function VS(r) {
    var e, t, i, n, s, o, l;
    return {
      c() {
        (e = O("label")), (t = Y("Field order:\n			")), (i = O("textarea")), (n = $()), (s = O("p")), (s.innerHTML = "Space delimited, e.g: <code>title author year</code>"), v(i, "name", "sortFieldList"), v(i, "spellcheck", "false");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(e, i), Ee(i, r[1]), E(u, n, a), E(u, s, a), o || ((l = ye(i, "input", r[7])), (o = !0));
      },
      p(u, a) {
        a & 2 && Ee(i, u[1]);
      },
      d(u) {
        u && y(e), u && y(n), u && y(s), (o = !1), l();
      },
    };
  }
  h(VS, "create_default_slot_1");
  function WS(r) {
    var e, t, i, n, s, o;
    function l(f) {
      r[6](f);
    }
    h(l, "option0_checked_binding");
    var u = { option: "sort", $$slots: { default: [qS] }, $$scope: { ctx: r } };
    r[2] !== void 0 && (u.checked = r[2]), (e = new me({ props: u })), J.push(() => K(e, "checked", l));
    function a(f) {
      r[8](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "sortFields", $$slots: { default: [VS] }, $$scope: { ctx: r } };
    return (
      r[0] !== void 0 && (c.checked = r[0]),
      (n = new me({ props: c })),
      J.push(() => K(n, "checked", a)),
      {
        c() {
          M(e.$$.fragment), (i = $()), M(n.$$.fragment);
        },
        m(f, d) {
          N(e, f, d), E(f, i, d), N(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 2056 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 4 && ((t = !0), (p.checked = f[2]), X(() => (t = !1))), e.$set(p);
          var m = {};
          d & 2050 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 1 && ((s = !0), (m.checked = f[0]), X(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          w(e.$$.fragment, f), w(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          R(e, f), f && y(i), R(n, f);
        },
      }
    );
  }
  h(WS, "create_default_slot");
  function zS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "Sorting", open: !0, $$slots: { default: [WS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 2063 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(zS, "create_fragment");
  function HS(r, e, t) {
    var i, n;
    var s = e.options,
      o = s.sortFields !== void 0 && s.sortFields.length > 0,
      l = ((i = s.sortFields) !== null && i !== void 0 ? i : Us).join(" "),
      u = s.sort !== void 0 && s.sort.length > 0,
      a = ((n = s.sort) !== null && n !== void 0 ? n : Qu).join(" ");
    function c() {
      (a = this.value), t(3, a);
    }
    h(c, "textarea_input_handler");
    function f(m) {
      (u = m), t(2, u);
    }
    h(f, "option0_checked_binding");
    function d() {
      (l = this.value), t(1, l);
    }
    h(d, "textarea_input_handler_1");
    function p(m) {
      (o = m), t(0, o);
    }
    return (
      h(p, "option1_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(4, (s = m.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 15 && (t(4, (s.sortFields = o && l.length > 0 ? l.split(/[\n\t ,]+/) : void 0), s), t(4, (s.sort = u && a.length > 0 ? a.split(/[\n\t ,]+/) : void 0), s));
      }),
      [o, l, u, a, s, c, f, d, p]
    );
  }
  h(HS, "instance");
  var zh =
      ((_class113 = class _class extends se {
        constructor(e) {
          super(), le(this, e, HS, zS, oe, { options: 4 });
        }
      }),
      h(_class113, "SortingOptions"),
      _class113),
    g1 = zh;
  function jS(r) {
    var e, t, i, n, s, o, l;
    return {
      c() {
        (e = O("label")), (t = Y("Fields to enclose in double braces:\n			")), (i = O("textarea")), (n = $()), (s = O("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), v(i, "name", "enclosingBracesList"), v(i, "spellcheck", "false");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(e, i), Ee(i, r[12]), E(u, n, a), E(u, s, a), o || ((l = ye(i, "input", r[17])), (o = !0));
      },
      p(u, a) {
        a[0] & 4096 && Ee(i, u[12]);
      },
      d(u) {
        u && y(e), u && y(n), u && y(s), (o = !1), l();
      },
    };
  }
  h(jS, "create_default_slot_3");
  function YS(r) {
    var e, t, i, n, s, o, l;
    return {
      c() {
        (e = O("label")), (t = Y("Remove braces from values of these fields:\n			")), (i = O("textarea")), (n = $()), (s = O("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), v(i, "name", "removeBracesList"), v(i, "spellcheck", "false");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(e, i), Ee(i, r[14]), E(u, n, a), E(u, s, a), o || ((l = ye(i, "input", r[19])), (o = !0));
      },
      p(u, a) {
        a[0] & 16384 && Ee(i, u[14]);
      },
      d(u) {
        u && y(e), u && y(n), u && y(s), (o = !1), l();
      },
    };
  }
  h(YS, "create_default_slot_2");
  function JS(r) {
    var e, t, i, n, s, o, l;
    return {
      c() {
        (e = O("label")), (t = Y("Maximum number of authors:\n			")), (i = O("input")), (n = $()), (s = O("p")), (s.textContent = 'Author lists longer than this will be truncated to "and others".'), v(i, "name", "maxAuthorsNum"), v(i, "type", "number");
      },
      m(u, a) {
        E(u, e, a), q(e, t), q(e, i), Ee(i, r[10]), E(u, n, a), E(u, s, a), o || ((l = ye(i, "input", r[29])), (o = !0));
      },
      p(u, a) {
        a[0] & 1024 && Bt(i.value) !== u[10] && Ee(i, u[10]);
      },
      d(u) {
        u && y(e), u && y(n), u && y(s), (o = !1), l();
      },
    };
  }
  h(JS, "create_default_slot_1");
  function GS(r) {
    var e, t, i, n, s, o, l, u, a, c, f, d, p, m, F, g, D, b, B, k, C, L, Q, V, z, G, T, j, te, P, _, ee, he, ve, xe, ae, be, we;
    function Ye(A) {
      r[16](A);
    }
    h(Ye, "option0_checked_binding");
    var et = { option: "curly" };
    r[0] !== void 0 && (et.checked = r[0]), (i = new me({ props: et })), J.push(() => K(i, "checked", Ye));
    function Ft(A) {
      r[18](A);
    }
    h(Ft, "option1_checked_binding");
    var qt = { option: "enclosingBraces", $$slots: { default: [jS] }, $$scope: { ctx: r } };
    r[11] !== void 0 && (qt.checked = r[11]), (o = new me({ props: qt })), J.push(() => K(o, "checked", Ft));
    function Pi(A) {
      r[20](A);
    }
    h(Pi, "option2_checked_binding");
    var ke = { option: "removeBraces", $$slots: { default: [YS] }, $$scope: { ctx: r } };
    r[13] !== void 0 && (ke.checked = r[13]), (a = new me({ props: ke })), J.push(() => K(a, "checked", Pi));
    function ie(A) {
      r[21](A);
    }
    h(ie, "option3_checked_binding");
    var Oe = { option: "stripEnclosingBraces" };
    r[1] !== void 0 && (Oe.checked = r[1]), (d = new me({ props: Oe })), J.push(() => K(d, "checked", ie));
    function Ii(A) {
      r[22](A);
    }
    h(Ii, "option4_checked_binding");
    var ce = { option: "numeric" };
    r[2] !== void 0 && (ce.checked = r[2]), (F = new me({ props: ce })), J.push(() => K(F, "checked", Ii));
    function On(A) {
      r[23](A);
    }
    h(On, "option5_checked_binding");
    var kr = { option: "months" };
    r[3] !== void 0 && (kr.checked = r[3]), (b = new me({ props: kr })), J.push(() => K(b, "checked", On));
    function Tn(A) {
      r[24](A);
    }
    h(Tn, "option6_checked_binding");
    var Sr = { option: "dropAllCaps" };
    r[4] !== void 0 && (Sr.checked = r[4]), (C = new me({ props: Sr })), J.push(() => K(C, "checked", Tn));
    function Rn(A) {
      r[25](A);
    }
    h(Rn, "option7_checked_binding");
    var Gh = { option: "escape" };
    r[5] !== void 0 && (Gh.checked = r[5]), (V = new me({ props: Gh })), J.push(() => K(V, "checked", Rn));
    function B1(A) {
      r[26](A);
    }
    h(B1, "option8_checked_binding");
    var Xh = { option: "encodeUrls" };
    r[6] !== void 0 && (Xh.checked = r[6]), (T = new me({ props: Xh })), J.push(() => K(T, "checked", B1));
    function v1(A) {
      r[27](A);
    }
    h(v1, "option9_checked_binding");
    var Kh = { option: "removeEmptyFields" };
    r[7] !== void 0 && (Kh.checked = r[7]), (P = new me({ props: Kh })), J.push(() => K(P, "checked", v1));
    function x1(A) {
      r[28](A);
    }
    h(x1, "option10_checked_binding");
    var Zh = { option: "removeDuplicateFields" };
    r[8] !== void 0 && (Zh.checked = r[8]), (he = new me({ props: Zh })), J.push(() => K(he, "checked", x1));
    function A1(A) {
      r[30](A);
    }
    h(A1, "option11_checked_binding");
    var ec = { option: "maxAuthors", $$slots: { default: [JS] }, $$scope: { ctx: r } };
    return (
      r[9] !== void 0 && (ec.checked = r[9]),
      (ae = new me({ props: ec })),
      J.push(() => K(ae, "checked", A1)),
      {
        c() {
          (e = O("div")),
            (t = $()),
            M(i.$$.fragment),
            (s = $()),
            M(o.$$.fragment),
            (u = $()),
            M(a.$$.fragment),
            (f = $()),
            M(d.$$.fragment),
            (m = $()),
            M(F.$$.fragment),
            (D = $()),
            M(b.$$.fragment),
            (k = $()),
            M(C.$$.fragment),
            (Q = $()),
            M(V.$$.fragment),
            (G = $()),
            M(T.$$.fragment),
            (te = $()),
            M(P.$$.fragment),
            (ee = $()),
            M(he.$$.fragment),
            (xe = $()),
            M(ae.$$.fragment),
            v(e, "id", "valueOptions");
        },
        m(A, re) {
          E(A, e, re), E(A, t, re), N(i, A, re), E(A, s, re), N(o, A, re), E(A, u, re), N(a, A, re), E(A, f, re), N(d, A, re), E(A, m, re), N(F, A, re), E(A, D, re), N(b, A, re), E(A, k, re), N(C, A, re), E(A, Q, re), N(V, A, re), E(A, G, re), N(T, A, re), E(A, te, re), N(P, A, re), E(A, ee, re), N(he, A, re), E(A, xe, re), N(ae, A, re), (we = !0);
        },
        p(A, re) {
          var tc = {};
          !n && re[0] & 1 && ((n = !0), (tc.checked = A[0]), X(() => (n = !1))), i.$set(tc);
          var Vo = {};
          (re[0] & 4096) | (re[1] & 16384) && (Vo.$$scope = { dirty: re, ctx: A }), !l && re[0] & 2048 && ((l = !0), (Vo.checked = A[11]), X(() => (l = !1))), o.$set(Vo);
          var Wo = {};
          (re[0] & 16384) | (re[1] & 16384) && (Wo.$$scope = { dirty: re, ctx: A }), !c && re[0] & 8192 && ((c = !0), (Wo.checked = A[13]), X(() => (c = !1))), a.$set(Wo);
          var ic = {};
          !p && re[0] & 2 && ((p = !0), (ic.checked = A[1]), X(() => (p = !1))), d.$set(ic);
          var rc = {};
          !g && re[0] & 4 && ((g = !0), (rc.checked = A[2]), X(() => (g = !1))), F.$set(rc);
          var nc = {};
          !B && re[0] & 8 && ((B = !0), (nc.checked = A[3]), X(() => (B = !1))), b.$set(nc);
          var sc = {};
          !L && re[0] & 16 && ((L = !0), (sc.checked = A[4]), X(() => (L = !1))), C.$set(sc);
          var oc = {};
          !z && re[0] & 32 && ((z = !0), (oc.checked = A[5]), X(() => (z = !1))), V.$set(oc);
          var lc = {};
          !j && re[0] & 64 && ((j = !0), (lc.checked = A[6]), X(() => (j = !1))), T.$set(lc);
          var uc = {};
          !_ && re[0] & 128 && ((_ = !0), (uc.checked = A[7]), X(() => (_ = !1))), P.$set(uc);
          var ac = {};
          !ve && re[0] & 256 && ((ve = !0), (ac.checked = A[8]), X(() => (ve = !1))), he.$set(ac);
          var zo = {};
          (re[0] & 1024) | (re[1] & 16384) && (zo.$$scope = { dirty: re, ctx: A }), !be && re[0] & 512 && ((be = !0), (zo.checked = A[9]), X(() => (be = !1))), ae.$set(zo);
        },
        i(A) {
          we || (S(i.$$.fragment, A), S(o.$$.fragment, A), S(a.$$.fragment, A), S(d.$$.fragment, A), S(F.$$.fragment, A), S(b.$$.fragment, A), S(C.$$.fragment, A), S(V.$$.fragment, A), S(T.$$.fragment, A), S(P.$$.fragment, A), S(he.$$.fragment, A), S(ae.$$.fragment, A), (we = !0));
        },
        o(A) {
          w(i.$$.fragment, A), w(o.$$.fragment, A), w(a.$$.fragment, A), w(d.$$.fragment, A), w(F.$$.fragment, A), w(b.$$.fragment, A), w(C.$$.fragment, A), w(V.$$.fragment, A), w(T.$$.fragment, A), w(P.$$.fragment, A), w(he.$$.fragment, A), w(ae.$$.fragment, A), (we = !1);
        },
        d(A) {
          A && y(e), A && y(t), R(i, A), A && y(s), R(o, A), A && y(u), R(a, A), A && y(f), R(d, A), A && y(m), R(F, A), A && y(D), R(b, A), A && y(k), R(C, A), A && y(Q), R(V, A), A && y(G), R(T, A), A && y(te), R(P, A), A && y(ee), R(he, A), A && y(xe), R(ae, A);
        },
      }
    );
  }
  h(GS, "create_default_slot");
  function XS(r) {
    var e, t;
    return (
      (e = new Ke({ props: { open: !0, title: "Values", $$slots: { default: [GS] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          (n[0] & 32767) | (n[1] & 16384) && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(XS, "create_fragment");
  function KS(r, e, t) {
    var i, n, s, o, l, u, a, c, f, d, p, m, F, g;
    var D = e.options,
      b = (i = D.curly) !== null && i !== void 0 ? i : !1,
      B = (n = D.stripEnclosingBraces) !== null && n !== void 0 ? n : !1,
      k = (s = D.numeric) !== null && s !== void 0 ? s : !1,
      C = (o = D.months) !== null && o !== void 0 ? o : !1,
      L = (l = D.dropAllCaps) !== null && l !== void 0 ? l : !1,
      Q = (u = D.escape) !== null && u !== void 0 ? u : !1,
      V = (a = D.encodeUrls) !== null && a !== void 0 ? a : !1,
      z = (c = D.removeEmptyFields) !== null && c !== void 0 ? c : !1,
      G = (f = D.removeDuplicateFields) !== null && f !== void 0 ? f : !1,
      T = D.maxAuthors !== void 0,
      j = (d = D.maxAuthors) !== null && d !== void 0 ? d : 3,
      te = D.enclosingBraces !== void 0 && D.enclosingBraces.length > 0,
      P = (m = (p = D.enclosingBraces) === null || p === void 0 ? void 0 : p.join(" ")) !== null && m !== void 0 ? m : "title",
      _ = D.removeBraces !== void 0 && D.removeBraces.length > 0,
      ee = (g = (F = D.enclosingBraces) === null || F === void 0 ? void 0 : F.join(" ")) !== null && g !== void 0 ? g : "title";
    function he(ce) {
      (b = ce), t(0, b);
    }
    h(he, "option0_checked_binding");
    function ve() {
      (P = this.value), t(12, P);
    }
    h(ve, "textarea_input_handler");
    function xe(ce) {
      (te = ce), t(11, te);
    }
    h(xe, "option1_checked_binding");
    function ae() {
      (ee = this.value), t(14, ee);
    }
    h(ae, "textarea_input_handler_1");
    function be(ce) {
      (_ = ce), t(13, _);
    }
    h(be, "option2_checked_binding");
    function we(ce) {
      (B = ce), t(1, B);
    }
    h(we, "option3_checked_binding");
    function Ye(ce) {
      (k = ce), t(2, k);
    }
    h(Ye, "option4_checked_binding");
    function et(ce) {
      (C = ce), t(3, C);
    }
    h(et, "option5_checked_binding");
    function Ft(ce) {
      (L = ce), t(4, L);
    }
    h(Ft, "option6_checked_binding");
    function qt(ce) {
      (Q = ce), t(5, Q);
    }
    h(qt, "option7_checked_binding");
    function Pi(ce) {
      (V = ce), t(6, V);
    }
    h(Pi, "option8_checked_binding");
    function ke(ce) {
      (z = ce), t(7, z);
    }
    h(ke, "option9_checked_binding");
    function ie(ce) {
      (G = ce), t(8, G);
    }
    h(ie, "option10_checked_binding");
    function Oe() {
      (j = Bt(this.value)), t(10, j);
    }
    h(Oe, "input_input_handler");
    function Ii(ce) {
      (T = ce), t(9, T);
    }
    return (
      h(Ii, "option11_checked_binding"),
      (r.$$set = (ce) => {
        "options" in ce && t(15, (D = ce.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty[0] & 32767 &&
          (t(15, (D.curly = b), D),
          t(15, (D.stripEnclosingBraces = B), D),
          t(15, (D.numeric = k), D),
          t(15, (D.months = C), D),
          t(15, (D.dropAllCaps = L), D),
          t(15, (D.escape = Q), D),
          t(15, (D.encodeUrls = V), D),
          t(15, (D.removeEmptyFields = z), D),
          t(15, (D.removeDuplicateFields = G), D),
          t(15, (D.maxAuthors = T ? j : void 0), D),
          t(15, (D.enclosingBraces = te && P.length > 0 ? P.split(/[\n\t ,]+/) : void 0), D),
          t(15, (D.removeBraces = _ && ee.length > 0 ? ee.split(/[\n\t ,]+/) : void 0), D));
      }),
      [b, B, k, C, L, Q, V, z, G, T, j, te, P, _, ee, D, he, ve, xe, ae, be, we, Ye, et, Ft, qt, Pi, ke, ie, Oe, Ii]
    );
  }
  h(KS, "instance");
  var Hh =
      ((_class114 = class _class extends se {
        constructor(e) {
          super(), le(this, e, KS, XS, oe, { options: 15 }, null, [-1, -1]);
        }
      }),
      h(_class114, "ValueOptions"),
      _class114),
    D1 = Hh;
  function ew(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = O("label")), (t = Y("Column:\n			")), (i = O("input")), v(i, "name", "alignnum"), v(i, "type", "number");
      },
      m(o, l) {
        E(o, e, l), q(e, t), q(e, i), Ee(i, r[2]), n || ((s = ye(i, "input", r[5])), (n = !0));
      },
      p(o, l) {
        l & 4 && Bt(i.value) !== o[2] && Ee(i, o[2]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(ew, "create_default_slot_2");
  function tw(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = O("label")), (t = Y("Column:\n			")), (i = O("input")), v(i, "name", "wrapnum"), v(i, "type", "number");
      },
      m(o, l) {
        E(o, e, l), q(e, t), q(e, i), Ee(i, r[4]), n || ((s = ye(i, "input", r[7])), (n = !0));
      },
      p(o, l) {
        l & 16 && Bt(i.value) !== o[4] && Ee(i, o[4]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(tw, "create_default_slot_1");
  function iw(r) {
    var e, t, i, n, s, o, l, u, a;
    function c(g) {
      r[6](g);
    }
    h(c, "option0_checked_binding");
    var f = { option: "align", $$slots: { default: [ew] }, $$scope: { ctx: r } };
    r[1] !== void 0 && (f.checked = r[1]), (e = new me({ props: f })), J.push(() => K(e, "checked", c));
    function d(g) {
      r[8](g);
    }
    h(d, "option1_checked_binding");
    var p = { option: "wrap", $$slots: { default: [tw] }, $$scope: { ctx: r } };
    r[3] !== void 0 && (p.checked = r[3]), (n = new me({ props: p })), J.push(() => K(n, "checked", d));
    function m(g) {
      r[9](g);
    }
    h(m, "option2_checked_binding");
    var F = { option: "blankLines" };
    return (
      r[0].blankLines !== void 0 && (F.checked = r[0].blankLines),
      (l = new me({ props: F })),
      J.push(() => K(l, "checked", m)),
      {
        c() {
          M(e.$$.fragment), (i = $()), M(n.$$.fragment), (o = $()), M(l.$$.fragment);
        },
        m(g, D) {
          N(e, g, D), E(g, i, D), N(n, g, D), E(g, o, D), N(l, g, D), (a = !0);
        },
        p(g, D) {
          var b = {};
          D & 2052 && (b.$$scope = { dirty: D, ctx: g }), !t && D & 2 && ((t = !0), (b.checked = g[1]), X(() => (t = !1))), e.$set(b);
          var B = {};
          D & 2064 && (B.$$scope = { dirty: D, ctx: g }), !s && D & 8 && ((s = !0), (B.checked = g[3]), X(() => (s = !1))), n.$set(B);
          var k = {};
          !u && D & 1 && ((u = !0), (k.checked = g[0].blankLines), X(() => (u = !1))), l.$set(k);
        },
        i(g) {
          a || (S(e.$$.fragment, g), S(n.$$.fragment, g), S(l.$$.fragment, g), (a = !0));
        },
        o(g) {
          w(e.$$.fragment, g), w(n.$$.fragment, g), w(l.$$.fragment, g), (a = !1);
        },
        d(g) {
          R(e, g), g && y(i), R(n, g), g && y(o), R(l, g);
        },
      }
    );
  }
  h(iw, "create_default_slot");
  function rw(r) {
    var e, t;
    return (
      (e = new Ke({ props: { title: "Whitespace", open: !0, $$slots: { default: [iw] }, $$scope: { ctx: r } } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 2079 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(rw, "create_fragment");
  function nw(r, e, t) {
    var i;
    var n = e.options,
      s = n.align > 1,
      o = s ? n.align : 13,
      l = n.wrap !== void 0,
      u = (i = n.wrap) !== null && i !== void 0 ? i : 80;
    function a() {
      (o = Bt(this.value)), t(2, o);
    }
    h(a, "input_input_handler");
    function c(m) {
      (s = m), t(1, s);
    }
    h(c, "option0_checked_binding");
    function f() {
      (u = Bt(this.value)), t(4, u);
    }
    h(f, "input_input_handler_1");
    function d(m) {
      (l = m), t(3, l);
    }
    h(d, "option1_checked_binding");
    function p(m) {
      r.$$.not_equal(n.blankLines, m) && ((n.blankLines = m), t(0, n), t(1, s), t(2, o), t(3, l), t(4, u));
    }
    return (
      h(p, "option2_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(0, (n = m.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 30 && (t(0, (n.align = s ? o : 1), n), t(0, (n.wrap = l ? u : void 0), n));
      }),
      [n, s, o, l, u, a, c, f, d, p]
    );
  }
  h(nw, "instance");
  var jh =
      ((_class115 = class _class extends se {
        constructor(e) {
          super(), le(this, e, nw, rw, oe, { options: 0 });
        }
      }),
      h(_class115, "WhitespaceOptions"),
      _class115),
    F1 = jh;
  function b1(r) {
    var e, t;
    return (
      (e = new d1({ props: { options: r[0], status: r[1] } })),
      {
        c() {
          M(e.$$.fragment);
        },
        m(i, n) {
          N(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.status = i[1]), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          w(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          R(e, i);
        },
      }
    );
  }
  h(b1, "create_if_block");
  function sw(r) {
    var e, t, i, n, s, o, l, u, a, c, f, d, p, m, F, g, D, b, B, k, C, L, Q, V, z, G, T, j, te, P, _;
    function ee(ie) {
      r[4](ie);
    }
    h(ee, "indentoptions_options_binding");
    var he = {};
    r[0] !== void 0 && (he.options = r[0]), (s = new m1({ props: he })), J.push(() => K(s, "options", ee));
    function ve(ie) {
      r[5](ie);
    }
    h(ve, "whitespaceoptions_options_binding");
    var xe = {};
    r[0] !== void 0 && (xe.options = r[0]), (u = new F1({ props: xe })), J.push(() => K(u, "options", ve));
    function ae(ie) {
      r[6](ie);
    }
    h(ae, "valueoptions_options_binding");
    var be = {};
    r[0] !== void 0 && (be.options = r[0]), (f = new D1({ props: be })), J.push(() => K(f, "options", ae));
    function we(ie) {
      r[7](ie);
    }
    h(we, "sortingoptions_options_binding");
    var Ye = {};
    r[0] !== void 0 && (Ye.options = r[0]), (m = new g1({ props: Ye })), J.push(() => K(m, "options", we));
    function et(ie) {
      r[8](ie);
    }
    h(et, "duplicateoptions_options_binding");
    var Ft = {};
    r[0] !== void 0 && (Ft.options = r[0]), (D = new s1({ props: Ft })), J.push(() => K(D, "options", et));
    function qt(ie) {
      r[9](ie);
    }
    h(qt, "cleanupoptions_options_binding");
    var Pi = {};
    r[0] !== void 0 && (Pi.options = r[0]), (k = new ZF({ props: Pi })), J.push(() => K(k, "options", qt)), (Q = new n1({ props: { options: r[0] } }));
    var ke = r[1] && b1(r);
    return {
      c() {
        (e = O("aside")),
          (t = O("form")),
          (i = O("header")),
          (i.innerHTML = '<h1 class="svelte-kvjsp8">BibTeX Tidy</h1> \n			<p>This tool tidies bibtex files by fixing inconsistent whitespace,\n				removing duplicates, removing unwanted fields, and sorting entries.</p> \n			<p><a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy">Github</a> \n				<a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy/issues">Report a bug</a></p>'),
          (n = $()),
          M(s.$$.fragment),
          (l = $()),
          M(u.$$.fragment),
          (c = $()),
          M(f.$$.fragment),
          (p = $()),
          M(m.$$.fragment),
          (g = $()),
          M(D.$$.fragment),
          (B = $()),
          M(k.$$.fragment),
          (L = $()),
          M(Q.$$.fragment),
          (V = $()),
          (z = O("div")),
          ke && ke.c(),
          (G = $()),
          (T = O("button")),
          (j = Y("Tidy")),
          v(i, "class", "intro svelte-kvjsp8"),
          v(t, "class", "svelte-kvjsp8"),
          v(T, "id", "tidy"),
          (T.disabled = r[2]),
          v(T, "class", "svelte-kvjsp8"),
          v(z, "class", "run svelte-kvjsp8"),
          v(e, "id", "sidebar"),
          v(e, "class", "svelte-kvjsp8");
      },
      m(ie, Oe) {
        E(ie, e, Oe), q(e, t), q(t, i), q(t, n), N(s, t, null), q(t, l), N(u, t, null), q(t, c), N(f, t, null), q(t, p), N(m, t, null), q(t, g), N(D, t, null), q(t, B), N(k, t, null), q(t, L), N(Q, t, null), q(e, V), q(e, z), ke && ke.m(z, null), q(z, G), q(z, T), q(T, j), (te = !0), P || ((_ = [ye(t, "submit", ow), ye(T, "click", r[10])]), (P = !0));
      },
      p(ie, param) {
        var _param = _sliced_to_array(param, 1),
          Oe = _param[0];
        var Ii = {};
        !o && Oe & 1 && ((o = !0), (Ii.options = ie[0]), X(() => (o = !1))), s.$set(Ii);
        var ce = {};
        !a && Oe & 1 && ((a = !0), (ce.options = ie[0]), X(() => (a = !1))), u.$set(ce);
        var On = {};
        !d && Oe & 1 && ((d = !0), (On.options = ie[0]), X(() => (d = !1))), f.$set(On);
        var kr = {};
        !F && Oe & 1 && ((F = !0), (kr.options = ie[0]), X(() => (F = !1))), m.$set(kr);
        var Tn = {};
        !b && Oe & 1 && ((b = !0), (Tn.options = ie[0]), X(() => (b = !1))), D.$set(Tn);
        var Sr = {};
        !C && Oe & 1 && ((C = !0), (Sr.options = ie[0]), X(() => (C = !1))), k.$set(Sr);
        var Rn = {};
        Oe & 1 && (Rn.options = ie[0]),
          Q.$set(Rn),
          ie[1]
            ? ke
              ? (ke.p(ie, Oe), Oe & 2 && S(ke, 1))
              : ((ke = b1(ie)), ke.c(), S(ke, 1), ke.m(z, G))
            : ke &&
              (jt(),
              w(ke, 1, 1, () => {
                ke = null;
              }),
              Yt()),
          (!te || Oe & 4) && (T.disabled = ie[2]);
      },
      i(ie) {
        te || (S(s.$$.fragment, ie), S(u.$$.fragment, ie), S(f.$$.fragment, ie), S(m.$$.fragment, ie), S(D.$$.fragment, ie), S(k.$$.fragment, ie), S(Q.$$.fragment, ie), S(ke), (te = !0));
      },
      o(ie) {
        w(s.$$.fragment, ie), w(u.$$.fragment, ie), w(f.$$.fragment, ie), w(m.$$.fragment, ie), w(D.$$.fragment, ie), w(k.$$.fragment, ie), w(Q.$$.fragment, ie), w(ke), (te = !1);
      },
      d(ie) {
        ie && y(e), R(s), R(u), R(f), R(m), R(D), R(k), R(Q), ke && ke.d(), (P = !1), Qt(_);
      },
    };
  }
  h(sw, "create_fragment");
  var ow = h(() => !1, "submit_handler");
  function lw(r, e, t) {
    var i = e.status,
      n = e.running,
      s = e.options,
      o = Ei();
    function l(m) {
      (s = m), t(0, s);
    }
    h(l, "indentoptions_options_binding");
    function u(m) {
      (s = m), t(0, s);
    }
    h(u, "whitespaceoptions_options_binding");
    function a(m) {
      (s = m), t(0, s);
    }
    h(a, "valueoptions_options_binding");
    function c(m) {
      (s = m), t(0, s);
    }
    h(c, "sortingoptions_options_binding");
    function f(m) {
      (s = m), t(0, s);
    }
    h(f, "duplicateoptions_options_binding");
    function d(m) {
      (s = m), t(0, s);
    }
    h(d, "cleanupoptions_options_binding");
    var p = h(() => o("tidy"), "click_handler");
    return (
      (r.$$set = (m) => {
        "status" in m && t(1, (i = m.status)), "running" in m && t(2, (n = m.running)), "options" in m && t(0, (s = m.options));
      }),
      [s, i, n, o, l, u, a, c, f, d, p]
    );
  }
  h(lw, "instance");
  var Yh =
      ((_class116 = class _class extends se {
        constructor(e) {
          super(), le(this, e, lw, sw, oe, { status: 1, running: 2, options: 0 });
        }
      }),
      h(_class116, "Sidebar"),
      _class116),
    y1 = Yh;
  var E1 =
    'Click Tidy to clean up the entries below      \n@Book{sweig42,\n  Author =	 { Stefa{n} Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n@article{steward03,\n  author =	 {Martha Steward},\n  title =	 {Cooking behind bars}, publisher = "Culinary Expert Series",\n  year = {2003}\n}\n@Book{impossible,\n  Author =	 { Stefan Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n';
  function uw(r) {
    var e, t, i, n, s, o;
    function l(f) {
      r[6](f);
    }
    h(l, "editor_bibtex_binding");
    var u = { error: r[4] };
    r[2] !== void 0 && (u.bibtex = r[2]), (e = new GF({ props: u })), J.push(() => K(e, "bibtex", l));
    function a(f) {
      r[7](f);
    }
    h(a, "sidebar_options_binding");
    var c = { status: r[3], running: r[1] };
    return (
      r[0] !== void 0 && (c.options = r[0]),
      (n = new y1({ props: c })),
      J.push(() => K(n, "options", a)),
      n.$on("tidy", r[5]),
      {
        c() {
          M(e.$$.fragment), (i = $()), M(n.$$.fragment);
        },
        m(f, d) {
          N(e, f, d), E(f, i, d), N(n, f, d), (o = !0);
        },
        p(f, param) {
          var _param = _sliced_to_array(param, 1),
            d = _param[0];
          var p = {};
          d & 16 && (p.error = f[4]), !t && d & 4 && ((t = !0), (p.bibtex = f[2]), X(() => (t = !1))), e.$set(p);
          var m = {};
          d & 8 && (m.status = f[3]), d & 2 && (m.running = f[1]), !s && d & 1 && ((s = !0), (m.options = f[0]), X(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          w(e.$$.fragment, f), w(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          R(e, f), f && y(i), R(n, f);
        },
      }
    );
  }
  h(uw, "create_fragment");
  function aw(r, e, t) {
    var i;
    var n = Gr({ tab: !0, align: 13, curly: !0, numeric: !0, escape: !1, duplicates: ["key"], sortFields: !0, removeDuplicateFields: !1 }),
      s = !1,
      o = E1,
      l = (i = f()) !== null && i !== void 0 ? i : n,
      u,
      a;
    function c() {
      t(1, (s = !0)),
        t(3, (u = void 0)),
        t(4, (a = void 0)),
        setTimeout(() => {
          try {
            var _$m = P0(o, l);
            t(2, (o = _$m.bibtex)), t(3, (u = { status: "success", result: _$m }));
          } catch (m) {
            console.error("bibtex parse problem:", m), t(3, (u = { status: "error", error: m })), m instanceof at && t(4, (a = m));
          } finally {
            t(1, (s = !1));
          }
        }, 100);
    }
    h(c, "handleTidy");
    function f() {
      var m = window.location.search,
        g = new URLSearchParams(m).get("opt");
      if (g)
        try {
          return Gr(JSON.parse(g));
        } catch (e) {
          console.error("Error parsing options in URL");
          return;
        }
    }
    h(f, "getOptionsFromURL"),
      window.addEventListener("popstate", () => {
        var m;
        t(0, (l = (m = f()) !== null && m !== void 0 ? m : n));
      });
    function d(m) {
      (o = m), t(2, o);
    }
    h(d, "editor_bibtex_binding");
    function p(m) {
      (l = m), t(0, l);
    }
    return (
      h(p, "sidebar_options_binding"),
      (r.$$.update = () => {
        if (r.$$.dirty & 1) {
          var m = JSON.stringify(l),
            F = new URLSearchParams([["opt", m]]);
          window.history.pushState(l, "", "index.html?".concat(F.toString()));
        }
      }),
      [l, s, o, u, a, c, d, p]
    );
  }
  h(aw, "instance");
  var Jh =
      ((_class117 = class _class extends se {
        constructor(e) {
          super(), le(this, e, aw, uw, oe, {});
        }
      }),
      h(_class117, "App"),
      _class117),
    C1 = Jh;
  new C1({ target: document.body });
})();
