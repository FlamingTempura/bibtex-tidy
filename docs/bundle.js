/**
 * bibtex-tidy v1.11.0
 * https://github.com/FlamingTempura/bibtex-tidy
 *
 * DO NOT EDIT THIS FILE. This file is automatically generated
 * using `npm run build`. Edit files in './src' then rebuild.
 **/
"use strict";
function _array_like_to_array(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _async_to_generator(fn) {
  return function () {
    var self1 = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self1, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _iterable_to_array(iter) {
  if ((typeof Symbol !== "undefined" && iter[Symbol.iterator] != null) || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : (typeof Symbol !== "undefined" && arr[Symbol.iterator]) || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(
        Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }),
      );
    }
    ownKeys.forEach(function (key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  source = source != null ? source : {};
  if (Object.getOwnPropertyDescriptors) {
    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
  } else {
    ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _to_array(arr) {
  return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _array_like_to_array(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function _ts_generator(thisArg, body) {
  var f,
    y,
    t,
    g,
    _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: [],
    };
  return (
    (g = { next: verb(0), throw: verb(1), return: verb(2) }),
    typeof Symbol === "function" &&
      (g[Symbol.iterator] = function () {
        return this;
      }),
    g
  );
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (((f = 1), y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)) return t;
        if (((y = 0), t)) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
(() => {
  var _r,
    _class,
    _class1,
    _class2,
    _class3,
    _class4,
    _class5,
    _class6,
    _class7,
    _class8,
    _class9,
    _class10,
    _class11,
    _class12,
    _class13,
    _class14,
    _r1,
    _class15,
    _class16,
    _class17,
    _r2,
    _r3,
    _r4,
    _class18,
    _class19,
    _class20,
    _class21,
    _r5,
    _r6,
    _class22,
    _r7,
    _r8,
    _r9,
    _class23,
    _r10,
    _class24,
    _r11,
    _class25,
    _r12,
    _class26,
    _class27,
    _class28,
    _r13,
    _r14,
    _r15,
    _class29,
    _r16,
    _r17,
    _r18,
    _r19,
    _class30,
    _r20,
    _class31,
    _class32,
    _class33,
    _class34,
    _r21,
    _r22,
    _class35,
    _class36,
    _class37,
    _r23,
    _r24,
    _r25,
    _r26,
    _class38,
    _class39,
    _r27,
    _r28,
    _r29,
    _r30,
    _r31,
    _r32,
    _class40,
    _r33,
    _r34,
    _class41,
    _r35,
    _r36,
    _class42,
    _class43,
    _class44,
    _class45,
    _class46,
    _class47,
    _class48,
    _class49,
    _r37,
    _r38,
    _class50,
    _r39,
    _r40,
    _class51,
    _r41,
    _class52,
    _class53,
    _class54,
    _class55,
    _class56,
    _class57,
    _class58,
    _class59,
    _r42,
    _r43,
    _r44,
    _class60,
    _class61,
    _r45,
    _class62,
    _class63,
    _class64,
    _class65,
    _class66,
    _class67,
    _class68,
    _class69,
    _class70,
    _r46,
    _r47,
    _r48,
    _r49,
    _r50,
    _r51,
    _class71,
    _r52,
    _class72,
    _r53,
    _class73,
    _class74,
    _r54,
    _r55,
    _class75,
    _class76,
    _class77,
    _r56,
    _class78,
    _r57,
    _r58,
    _class79,
    _class80,
    _r59,
    _class81,
    _r60,
    _r61,
    _class82,
    _r62,
    _class83,
    _class84,
    _r63,
    _class85,
    _r64,
    _class86,
    _class87,
    _r65,
    _class88,
    _class89,
    _class90,
    _class91,
    _class92,
    _class93,
    _class94,
    _class95,
    _r66,
    _class96,
    _class97,
    _class98,
    _class99,
    _class100,
    _class101,
    _class102,
    _class103,
    _class104,
    _class105,
    _class106,
    _class107,
    _class108,
    _class109,
    _class110,
    _class111,
    _class112,
    _class113,
    _class114;
  var i1 = Object.defineProperty;
  var h = (r, e) => i1(r, "name", { value: e, configurable: !0 });
  var k = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
  var nt = k((Zh, ec) => {
    "use strict";
    var An = h(function (r) {
      return r && r.Math === Math && r;
    }, "check");
    ec.exports =
      An(typeof globalThis == "object" && globalThis) ||
      An(typeof window == "object" && window) ||
      An(typeof self == "object" && self) ||
      An(typeof global == "object" && global) ||
      (function () {
        return this;
      })() ||
      Zh ||
      Function("return this")();
  });
  var He = k((LS, tc) => {
    "use strict";
    tc.exports = function (r) {
      try {
        return !!r();
      } catch (e) {
        return !0;
      }
    };
  });
  var st = k((OS, ic) => {
    "use strict";
    var r1 = He();
    ic.exports = !r1(function () {
      return (
        Object.defineProperty({}, 1, {
          get: function get() {
            return 7;
          },
        })[1] !== 7
      );
    });
  });
  var kn = k((TS, rc) => {
    "use strict";
    var n1 = He();
    rc.exports = !n1(function () {
      var r = function () {}.bind();
      return typeof r != "function" || r.hasOwnProperty("prototype");
    });
  });
  var Nt = k((RS, nc) => {
    "use strict";
    var s1 = kn(),
      Sn = Function.prototype.call;
    nc.exports = s1
      ? Sn.bind(Sn)
      : function () {
          return Sn.apply(Sn, arguments);
        };
  });
  var lc = k((uc) => {
    "use strict";
    var sc = {}.propertyIsEnumerable,
      oc = Object.getOwnPropertyDescriptor,
      o1 = oc && !sc.call({ 1: 2 }, 1);
    uc.f = o1
      ? h(function (e) {
          var t = oc(this, e);
          return !!t && t.enumerable;
        }, "propertyIsEnumerable")
      : sc;
  });
  var Ni = k((PS, ac) => {
    "use strict";
    ac.exports = function (r, e) {
      return { enumerable: !(r & 1), configurable: !(r & 2), writable: !(r & 4), value: e };
    };
  });
  var $e = k((IS, fc) => {
    "use strict";
    var hc = kn(),
      cc = Function.prototype,
      Mo = cc.call,
      u1 = hc && cc.bind.bind(Mo, Mo);
    fc.exports = hc
      ? u1
      : function (r) {
          return function () {
            return Mo.apply(r, arguments);
          };
        };
  });
  var kr = k(($S, pc) => {
    "use strict";
    var dc = $e(),
      l1 = dc({}.toString),
      a1 = dc("".slice);
    pc.exports = function (r) {
      return a1(l1(r), 8, -1);
    };
  });
  var gc = k((qS, mc) => {
    "use strict";
    var h1 = $e(),
      c1 = He(),
      f1 = kr(),
      Po = Object,
      d1 = h1("".split);
    mc.exports = c1(function () {
      return !Po("z").propertyIsEnumerable(0);
    })
      ? function (r) {
          return f1(r) === "String" ? d1(r, "") : Po(r);
        }
      : Po;
  });
  var wn = k((VS, Dc) => {
    "use strict";
    Dc.exports = function (r) {
      return r == null;
    };
  });
  var Qn = k((WS, Fc) => {
    "use strict";
    var p1 = wn(),
      m1 = TypeError;
    Fc.exports = function (r) {
      if (p1(r)) throw m1("Can't call method on " + r);
      return r;
    };
  });
  var Mi = k((zS, bc) => {
    "use strict";
    var g1 = gc(),
      D1 = Qn();
    bc.exports = function (r) {
      return g1(D1(r));
    };
  });
  var $o = k((HS, yc) => {
    "use strict";
    var Io = typeof document == "object" && document.all,
      F1 = typeof Io > "u" && Io !== void 0;
    yc.exports = { all: Io, IS_HTMLDDA: F1 };
  });
  var Te = k((jS, Cc) => {
    "use strict";
    var Ec = $o(),
      b1 = Ec.all;
    Cc.exports = Ec.IS_HTMLDDA
      ? function (r) {
          return typeof r == "function" || r === b1;
        }
      : function (r) {
          return typeof r == "function";
        };
  });
  var Mt = k((YS, xc) => {
    "use strict";
    var Bc = Te(),
      vc = $o(),
      y1 = vc.all;
    xc.exports = vc.IS_HTMLDDA
      ? function (r) {
          return typeof r == "object" ? r !== null : Bc(r) || r === y1;
        }
      : function (r) {
          return typeof r == "object" ? r !== null : Bc(r);
        };
  });
  var Sr = k((JS, Ac) => {
    "use strict";
    var qo = nt(),
      E1 = Te(),
      C1 = h(function (r) {
        return E1(r) ? r : void 0;
      }, "aFunction");
    Ac.exports = function (r, e) {
      return arguments.length < 2 ? C1(qo[r]) : qo[r] && qo[r][e];
    };
  });
  var _n = k((XS, kc) => {
    "use strict";
    var B1 = $e();
    kc.exports = B1({}.isPrototypeOf);
  });
  var wc = k((KS, Sc) => {
    "use strict";
    Sc.exports = (typeof navigator < "u" && String(navigator.userAgent)) || "";
  });
  var Rc = k((ZS, Tc) => {
    "use strict";
    var Oc = nt(),
      Vo = wc(),
      Qc = Oc.process,
      _c = Oc.Deno,
      Uc = (Qc && Qc.versions) || (_c && _c.version),
      Lc = Uc && Uc.v8,
      Dt,
      Un;
    Lc && ((Dt = Lc.split(".")), (Un = Dt[0] > 0 && Dt[0] < 4 ? 1 : +(Dt[0] + Dt[1])));
    !Un && Vo && ((Dt = Vo.match(/Edge\/(\d+)/)), (!Dt || Dt[1] >= 74) && ((Dt = Vo.match(/Chrome\/(\d+)/)), Dt && (Un = +Dt[1])));
    Tc.exports = Un;
  });
  var Wo = k((ew, Mc) => {
    "use strict";
    var Nc = Rc(),
      v1 = He(),
      x1 = nt(),
      A1 = x1.String;
    Mc.exports =
      !!Object.getOwnPropertySymbols &&
      !v1(function () {
        var r = Symbol("symbol detection");
        return !A1(r) || !(Object(r) instanceof Symbol) || (!Symbol.sham && Nc && Nc < 41);
      });
  });
  var zo = k((tw, Pc) => {
    "use strict";
    var k1 = Wo();
    Pc.exports = k1 && !Symbol.sham && typeof Symbol.iterator == "symbol";
  });
  var Ho = k((iw, Ic) => {
    "use strict";
    var S1 = Sr(),
      w1 = Te(),
      Q1 = _n(),
      _1 = zo(),
      U1 = Object;
    Ic.exports = _1
      ? function (r) {
          return typeof r == "symbol";
        }
      : function (r) {
          var e = S1("Symbol");
          return w1(e) && Q1(e.prototype, U1(r));
        };
  });
  var Ln = k((rw, $c) => {
    "use strict";
    var L1 = String;
    $c.exports = function (r) {
      try {
        return L1(r);
      } catch (e) {
        return "Object";
      }
    };
  });
  var Pi = k((nw, qc) => {
    "use strict";
    var O1 = Te(),
      T1 = Ln(),
      R1 = TypeError;
    qc.exports = function (r) {
      if (O1(r)) return r;
      throw R1(T1(r) + " is not a function");
    };
  });
  var On = k((sw, Vc) => {
    "use strict";
    var N1 = Pi(),
      M1 = wn();
    Vc.exports = function (r, e) {
      var t = r[e];
      return M1(t) ? void 0 : N1(t);
    };
  });
  var zc = k((ow, Wc) => {
    "use strict";
    var jo = Nt(),
      Yo = Te(),
      Jo = Mt(),
      P1 = TypeError;
    Wc.exports = function (r, e) {
      var t, i;
      if ((e === "string" && Yo((t = r.toString)) && !Jo((i = jo(t, r)))) || (Yo((t = r.valueOf)) && !Jo((i = jo(t, r)))) || (e !== "string" && Yo((t = r.toString)) && !Jo((i = jo(t, r))))) return i;
      throw P1("Can't convert object to primitive value");
    };
  });
  var Ii = k((uw, Hc) => {
    "use strict";
    Hc.exports = !1;
  });
  var Tn = k((lw, Yc) => {
    "use strict";
    var jc = nt(),
      I1 = Object.defineProperty;
    Yc.exports = function (r, e) {
      try {
        I1(jc, r, { value: e, configurable: !0, writable: !0 });
      } catch (e1) {
        jc[r] = e;
      }
      return e;
    };
  });
  var Rn = k((aw, Gc) => {
    "use strict";
    var $1 = nt(),
      q1 = Tn(),
      Jc = "__core-js_shared__",
      V1 = $1[Jc] || q1(Jc, {});
    Gc.exports = V1;
  });
  var Go = k((hw, Kc) => {
    "use strict";
    var W1 = Ii(),
      Xc = Rn();
    (Kc.exports = function (r, e) {
      return Xc[r] || (Xc[r] = e !== void 0 ? e : {});
    })("versions", []).push({ version: "3.32.1", mode: W1 ? "pure" : "global", copyright: "\xa9 2014-2023 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.32.1/LICENSE", source: "https://github.com/zloirock/core-js" });
  });
  var Nn = k((cw, Zc) => {
    "use strict";
    var z1 = Qn(),
      H1 = Object;
    Zc.exports = function (r) {
      return H1(z1(r));
    };
  });
  var Ft = k((fw, ef) => {
    "use strict";
    var j1 = $e(),
      Y1 = Nn(),
      J1 = j1({}.hasOwnProperty);
    ef.exports =
      Object.hasOwn ||
      h(function (e, t) {
        return J1(Y1(e), t);
      }, "hasOwn");
  });
  var Xo = k((pw, tf) => {
    "use strict";
    var G1 = $e(),
      X1 = 0,
      K1 = Math.random(),
      Z1 = G1((1).toString);
    tf.exports = function (r) {
      return "Symbol(" + (r === void 0 ? "" : r) + ")_" + Z1(++X1 + K1, 36);
    };
  });
  var Xe = k((mw, nf) => {
    "use strict";
    var eb = nt(),
      tb = Go(),
      rf = Ft(),
      ib = Xo(),
      rb = Wo(),
      nb = zo(),
      $i = eb.Symbol,
      Ko = tb("wks"),
      sb = nb ? $i.for || $i : ($i && $i.withoutSetter) || ib;
    nf.exports = function (r) {
      return rf(Ko, r) || (Ko[r] = rb && rf($i, r) ? $i[r] : sb("Symbol." + r)), Ko[r];
    };
  });
  var lf = k((gw, uf) => {
    "use strict";
    var ob = Nt(),
      sf = Mt(),
      of = Ho(),
      ub = On(),
      lb = zc(),
      ab = Xe(),
      hb = TypeError,
      cb = ab("toPrimitive");
    uf.exports = function (r, e) {
      if (!sf(r) || of(r)) return r;
      var t = ub(r, cb),
        i;
      if (t) {
        if ((e === void 0 && (e = "default"), (i = ob(t, r, e)), !sf(i) || of(i))) return i;
        throw hb("Can't convert object to primitive value");
      }
      return e === void 0 && (e = "number"), lb(r, e);
    };
  });
  var Mn = k((Dw, af) => {
    "use strict";
    var fb = lf(),
      db = Ho();
    af.exports = function (r) {
      var e = fb(r, "string");
      return db(e) ? e : e + "";
    };
  });
  var eu = k((Fw, cf) => {
    "use strict";
    var pb = nt(),
      hf = Mt(),
      Zo = pb.document,
      mb = hf(Zo) && hf(Zo.createElement);
    cf.exports = function (r) {
      return mb ? Zo.createElement(r) : {};
    };
  });
  var tu = k((bw, ff) => {
    "use strict";
    var gb = st(),
      Db = He(),
      Fb = eu();
    ff.exports =
      !gb &&
      !Db(function () {
        return (
          Object.defineProperty(Fb("div"), "a", {
            get: function get() {
              return 7;
            },
          }).a !== 7
        );
      });
  });
  var iu = k((pf) => {
    "use strict";
    var bb = st(),
      yb = Nt(),
      Eb = lc(),
      Cb = Ni(),
      Bb = Mi(),
      vb = Mn(),
      xb = Ft(),
      Ab = tu(),
      df = Object.getOwnPropertyDescriptor;
    pf.f = bb
      ? df
      : h(function (e, t) {
          if (((e = Bb(e)), (t = vb(t)), Ab))
            try {
              return df(e, t);
            } catch (e) {}
          if (xb(e, t)) return Cb(!yb(Eb.f, e, t), e[t]);
        }, "getOwnPropertyDescriptor");
  });
  var ru = k((Cw, mf) => {
    "use strict";
    var kb = st(),
      Sb = He();
    mf.exports =
      kb &&
      Sb(function () {
        return Object.defineProperty(function () {}, "prototype", { value: 42, writable: !1 }).prototype !== 42;
      });
  });
  var vt = k((Bw, gf) => {
    "use strict";
    var wb = Mt(),
      Qb = String,
      _b = TypeError;
    gf.exports = function (r) {
      if (wb(r)) return r;
      throw _b(Qb(r) + " is not an object");
    };
  });
  var xt = k((Ff) => {
    "use strict";
    var Ub = st(),
      Lb = tu(),
      Ob = ru(),
      Pn = vt(),
      Df = Mn(),
      Tb = TypeError,
      nu = Object.defineProperty,
      Rb = Object.getOwnPropertyDescriptor,
      su = "enumerable",
      ou = "configurable",
      uu = "writable";
    Ff.f = Ub
      ? Ob
        ? h(function (e, t, i) {
            if ((Pn(e), (t = Df(t)), Pn(i), typeof e == "function" && t === "prototype" && "value" in i && uu in i && !i[uu])) {
              var n = Rb(e, t);
              n && n[uu] && ((e[t] = i.value), (i = { configurable: ou in i ? i[ou] : n[ou], enumerable: su in i ? i[su] : n[su], writable: !1 }));
            }
            return nu(e, t, i);
          }, "defineProperty")
        : nu
      : h(function (e, t, i) {
          if ((Pn(e), (t = Df(t)), Pn(i), Lb))
            try {
              return nu(e, t, i);
            } catch (e) {}
          if ("get" in i || "set" in i) throw Tb("Accessors not supported");
          return "value" in i && (e[t] = i.value), e;
        }, "defineProperty");
  });
  var In = k((Aw, bf) => {
    "use strict";
    var Nb = st(),
      Mb = xt(),
      Pb = Ni();
    bf.exports = Nb
      ? function (r, e, t) {
          return Mb.f(r, e, Pb(1, t));
        }
      : function (r, e, t) {
          return (r[e] = t), r;
        };
  });
  var $n = k((kw, Ef) => {
    "use strict";
    var lu = st(),
      Ib = Ft(),
      yf = Function.prototype,
      $b = lu && Object.getOwnPropertyDescriptor,
      au = Ib(yf, "name"),
      qb = au && h(function () {}, "something").name === "something",
      Vb = au && (!lu || (lu && $b(yf, "name").configurable));
    Ef.exports = { EXISTS: au, PROPER: qb, CONFIGURABLE: Vb };
  });
  var cu = k((ww, Cf) => {
    "use strict";
    var Wb = $e(),
      zb = Te(),
      hu = Rn(),
      Hb = Wb(Function.toString);
    zb(hu.inspectSource) ||
      (hu.inspectSource = function (r) {
        return Hb(r);
      });
    Cf.exports = hu.inspectSource;
  });
  var xf = k((Qw, vf) => {
    "use strict";
    var jb = nt(),
      Yb = Te(),
      Bf = jb.WeakMap;
    vf.exports = Yb(Bf) && /native code/.test(String(Bf));
  });
  var qn = k((_w, kf) => {
    "use strict";
    var Jb = Go(),
      Gb = Xo(),
      Af = Jb("keys");
    kf.exports = function (r) {
      return Af[r] || (Af[r] = Gb(r));
    };
  });
  var Vn = k((Uw, Sf) => {
    "use strict";
    Sf.exports = {};
  });
  var Hn = k((Lw, _f) => {
    "use strict";
    var Xb = xf(),
      Qf = nt(),
      Kb = Mt(),
      Zb = In(),
      fu = Ft(),
      du = Rn(),
      e2 = qn(),
      t2 = Vn(),
      wf = "Object already initialized",
      pu = Qf.TypeError,
      i2 = Qf.WeakMap,
      Wn,
      wr,
      zn,
      r2 = h(function (r) {
        return zn(r) ? wr(r) : Wn(r, {});
      }, "enforce"),
      n2 = h(function (r) {
        return function (e) {
          var t;
          if (!Kb(e) || (t = wr(e)).type !== r) throw pu("Incompatible receiver, " + r + " required");
          return t;
        };
      }, "getterFor");
    Xb || du.state
      ? ((bt = du.state || (du.state = new i2())),
        (bt.get = bt.get),
        (bt.has = bt.has),
        (bt.set = bt.set),
        (Wn = h(function (r, e) {
          if (bt.has(r)) throw pu(wf);
          return (e.facade = r), bt.set(r, e), e;
        }, "set")),
        (wr = h(function (r) {
          return bt.get(r) || {};
        }, "get")),
        (zn = h(function (r) {
          return bt.has(r);
        }, "has")))
      : ((ci = e2("state")),
        (t2[ci] = !0),
        (Wn = h(function (r, e) {
          if (fu(r, ci)) throw pu(wf);
          return (e.facade = r), Zb(r, ci, e), e;
        }, "set")),
        (wr = h(function (r) {
          return fu(r, ci) ? r[ci] : {};
        }, "get")),
        (zn = h(function (r) {
          return fu(r, ci);
        }, "has")));
    var bt, ci;
    _f.exports = { set: Wn, get: wr, has: zn, enforce: r2, getterFor: n2 };
  });
  var Du = k((Tw, Of) => {
    "use strict";
    var gu = $e(),
      s2 = He(),
      o2 = Te(),
      jn = Ft(),
      mu = st(),
      u2 = $n().CONFIGURABLE,
      l2 = cu(),
      Lf = Hn(),
      a2 = Lf.enforce,
      h2 = Lf.get,
      Uf = String,
      Yn = Object.defineProperty,
      c2 = gu("".slice),
      f2 = gu("".replace),
      d2 = gu([].join),
      p2 =
        mu &&
        !s2(function () {
          return Yn(function () {}, "length", { value: 8 }).length !== 8;
        }),
      m2 = String(String).split("String"),
      g2 = (Of.exports = function g2(r, e, t) {
        c2(Uf(e), 0, 7) === "Symbol(" && (e = "[" + f2(Uf(e), /^Symbol\(([^)]*)\)/, "$1") + "]"), t && t.getter && (e = "get " + e), t && t.setter && (e = "set " + e), (!jn(r, "name") || (u2 && r.name !== e)) && (mu ? Yn(r, "name", { value: e, configurable: !0 }) : (r.name = e)), p2 && t && jn(t, "arity") && r.length !== t.arity && Yn(r, "length", { value: t.arity });
        try {
          t && jn(t, "constructor") && t.constructor ? mu && Yn(r, "prototype", { writable: !1 }) : r.prototype && (r.prototype = void 0);
        } catch (e) {}
        var i = a2(r);
        return jn(i, "source") || (i.source = d2(m2, typeof e == "string" ? e : "")), r;
      });
    Function.prototype.toString = g2(
      h(function () {
        return (o2(this) && h2(this).source) || l2(this);
      }, "toString"),
      "toString",
    );
  });
  var qi = k((Nw, Tf) => {
    "use strict";
    var D2 = Te(),
      F2 = xt(),
      b2 = Du(),
      y2 = Tn();
    Tf.exports = function (r, e, t, i) {
      i || (i = {});
      var n = i.enumerable,
        s = i.name !== void 0 ? i.name : e;
      if ((D2(t) && b2(t, s, i), i.global)) n ? (r[e] = t) : y2(e, t);
      else {
        try {
          i.unsafe ? r[e] && (n = !0) : delete r[e];
        } catch (e) {}
        n ? (r[e] = t) : F2.f(r, e, { value: t, enumerable: !1, configurable: !i.nonConfigurable, writable: !i.nonWritable });
      }
      return r;
    };
  });
  var Nf = k((Mw, Rf) => {
    "use strict";
    var E2 = Math.ceil,
      C2 = Math.floor;
    Rf.exports =
      Math.trunc ||
      h(function (e) {
        var t = +e;
        return (t > 0 ? C2 : E2)(t);
      }, "trunc");
  });
  var Fu = k((Iw, Mf) => {
    "use strict";
    var B2 = Nf();
    Mf.exports = function (r) {
      var e = +r;
      return e !== e || e === 0 ? 0 : B2(e);
    };
  });
  var bu = k(($w, Pf) => {
    "use strict";
    var v2 = Fu(),
      x2 = Math.max,
      A2 = Math.min;
    Pf.exports = function (r, e) {
      var t = v2(r);
      return t < 0 ? x2(t + e, 0) : A2(t, e);
    };
  });
  var $f = k((qw, If) => {
    "use strict";
    var k2 = Fu(),
      S2 = Math.min;
    If.exports = function (r) {
      return r > 0 ? S2(k2(r), 9007199254740991) : 0;
    };
  });
  var Vi = k((Vw, qf) => {
    "use strict";
    var w2 = $f();
    qf.exports = function (r) {
      return w2(r.length);
    };
  });
  var zf = k((Ww, Wf) => {
    "use strict";
    var Q2 = Mi(),
      _2 = bu(),
      U2 = Vi(),
      Vf = h(function (r) {
        return function (e, t, i) {
          var n = Q2(e),
            s = U2(n),
            o = _2(i, s),
            u;
          if (r && t !== t) {
            for (; s > o; ) if (((u = n[o++]), u !== u)) return !0;
          } else for (; s > o; o++) if ((r || o in n) && n[o] === t) return r || o || 0;
          return !r && -1;
        };
      }, "createMethod");
    Wf.exports = { includes: Vf(!0), indexOf: Vf(!1) };
  });
  var Eu = k((Hw, jf) => {
    "use strict";
    var L2 = $e(),
      yu = Ft(),
      O2 = Mi(),
      T2 = zf().indexOf,
      R2 = Vn(),
      Hf = L2([].push);
    jf.exports = function (r, e) {
      var t = O2(r),
        i = 0,
        n = [],
        s;
      for (s in t) !yu(R2, s) && yu(t, s) && Hf(n, s);
      for (; e.length > i; ) yu(t, (s = e[i++])) && (~T2(n, s) || Hf(n, s));
      return n;
    };
  });
  var Jn = k((jw, Yf) => {
    "use strict";
    Yf.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
  });
  var Gf = k((Jf) => {
    "use strict";
    var N2 = Eu(),
      M2 = Jn(),
      P2 = M2.concat("length", "prototype");
    Jf.f =
      Object.getOwnPropertyNames ||
      h(function (e) {
        return N2(e, P2);
      }, "getOwnPropertyNames");
  });
  var Kf = k((Xf) => {
    "use strict";
    Xf.f = Object.getOwnPropertySymbols;
  });
  var ed = k((Xw, Zf) => {
    "use strict";
    var I2 = Sr(),
      $2 = $e(),
      q2 = Gf(),
      V2 = Kf(),
      W2 = vt(),
      z2 = $2([].concat);
    Zf.exports =
      I2("Reflect", "ownKeys") ||
      h(function (e) {
        var t = q2.f(W2(e)),
          i = V2.f;
        return i ? z2(t, i(e)) : t;
      }, "ownKeys");
  });
  var rd = k((Zw, id) => {
    "use strict";
    var td = Ft(),
      H2 = ed(),
      j2 = iu(),
      Y2 = xt();
    id.exports = function (r, e, t) {
      for (var i = H2(e), n = Y2.f, s = j2.f, o = 0; o < i.length; o++) {
        var u = i[o];
        !td(r, u) && !(t && td(t, u)) && n(r, u, s(e, u));
      }
    };
  });
  var sd = k((e4, nd) => {
    "use strict";
    var J2 = He(),
      G2 = Te(),
      X2 = /#|\.prototype\./,
      Qr = h(function (r, e) {
        var t = Z2[K2(r)];
        return t === ty ? !0 : t === ey ? !1 : G2(e) ? J2(e) : !!e;
      }, "isForced"),
      K2 = (Qr.normalize = function K2(r) {
        return String(r).replace(X2, ".").toLowerCase();
      }),
      Z2 = (Qr.data = {}),
      ey = (Qr.NATIVE = "N"),
      ty = (Qr.POLYFILL = "P");
    nd.exports = Qr;
  });
  var fi = k((i4, od) => {
    "use strict";
    var Cu = nt(),
      iy = iu().f,
      ry = In(),
      ny = qi(),
      sy = Tn(),
      oy = rd(),
      uy = sd();
    od.exports = function (r, e) {
      var t = r.target,
        i = r.global,
        n = r.stat,
        s,
        o,
        u,
        l,
        a,
        c;
      if ((i ? (o = Cu) : n ? (o = Cu[t] || sy(t, {})) : (o = (Cu[t] || {}).prototype), o))
        for (u in e) {
          if (((a = e[u]), r.dontCallGetSet ? ((c = iy(o, u)), (l = c && c.value)) : (l = o[u]), (s = uy(i ? u : t + (n ? "." : "#") + u, r.forced)), !s && l !== void 0)) {
            if (typeof a == typeof l) continue;
            oy(a, l);
          }
          (r.sham || (l && l.sham)) && ry(a, "sham", !0), ny(o, u, a, r);
        }
    };
  });
  var Bu = k((r4, ud) => {
    "use strict";
    var ly = kr();
    ud.exports =
      Array.isArray ||
      h(function (e) {
        return ly(e) === "Array";
      }, "isArray");
  });
  var ad = k((s4, ld) => {
    "use strict";
    var ay = TypeError,
      hy = 9007199254740991;
    ld.exports = function (r) {
      if (r > hy) throw ay("Maximum allowed index exceeded");
      return r;
    };
  });
  var cd = k((o4, hd) => {
    "use strict";
    var cy = kr(),
      fy = $e();
    hd.exports = function (r) {
      if (cy(r) === "Function") return fy(r);
    };
  });
  var Gn = k((u4, dd) => {
    "use strict";
    var fd = cd(),
      dy = Pi(),
      py = kn(),
      my = fd(fd.bind);
    dd.exports = function (r, e) {
      return (
        dy(r),
        e === void 0
          ? r
          : py
          ? my(r, e)
          : function () {
              return r.apply(e, arguments);
            }
      );
    };
  });
  var gd = k((l4, md) => {
    "use strict";
    var gy = Bu(),
      Dy = Vi(),
      Fy = ad(),
      by = Gn(),
      pd = h(function (r, e, t, i, n, s, o, u) {
        for (var l = n, a = 0, c = o ? by(o, u) : !1, f, d; a < i; ) a in t && ((f = c ? c(t[a], a, e) : t[a]), s > 0 && gy(f) ? ((d = Dy(f)), (l = pd(r, e, f, d, l, s - 1) - 1)) : (Fy(l + 1), (r[l] = f)), l++), a++;
        return l;
      }, "flattenIntoArray");
    md.exports = pd;
  });
  var bd = k((h4, Fd) => {
    "use strict";
    var yy = Xe(),
      Ey = yy("toStringTag"),
      Dd = {};
    Dd[Ey] = "z";
    Fd.exports = String(Dd) === "[object z]";
  });
  var _r67 = k((c4, yd) => {
    "use strict";
    var Cy = bd(),
      By = Te(),
      Xn = kr(),
      vy = Xe(),
      xy = vy("toStringTag"),
      Ay = Object,
      ky =
        Xn(
          (function () {
            return arguments;
          })(),
        ) === "Arguments",
      Sy = h(function (r, e) {
        try {
          return r[e];
        } catch (e) {}
      }, "tryGet");
    yd.exports = Cy
      ? Xn
      : function (r) {
          var e, t, i;
          return r === void 0 ? "Undefined" : r === null ? "Null" : typeof (t = Sy((e = Ay(r)), xy)) == "string" ? t : ky ? Xn(e) : (i = Xn(e)) === "Object" && By(e.callee) ? "Arguments" : i;
        };
  });
  var Ad = k((d4, xd) => {
    "use strict";
    var wy = $e(),
      Qy = He(),
      Ed = Te(),
      _y = _r67(),
      Uy = Sr(),
      Ly = cu(),
      Cd = h(function () {}, "noop"),
      Oy = [],
      Bd = Uy("Reflect", "construct"),
      vu = /^\s*(?:class|function)\b/,
      Ty = wy(vu.exec),
      Ry = !vu.exec(Cd),
      Ur = h(function (e) {
        if (!Ed(e)) return !1;
        try {
          return Bd(Cd, Oy, e), !0;
        } catch (e) {
          return !1;
        }
      }, "isConstructor"),
      vd = h(function (e) {
        if (!Ed(e)) return !1;
        switch (_y(e)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return !1;
        }
        try {
          return Ry || !!Ty(vu, Ly(e));
        } catch (e) {
          return !0;
        }
      }, "isConstructor");
    vd.sham = !0;
    xd.exports =
      !Bd ||
      Qy(function () {
        var r;
        return (
          Ur(Ur.call) ||
          !Ur(Object) ||
          !Ur(function () {
            r = !0;
          }) ||
          r
        );
      })
        ? vd
        : Ur;
  });
  var Qd = k((m4, wd) => {
    "use strict";
    var kd = Bu(),
      Ny = Ad(),
      My = Mt(),
      Py = Xe(),
      Iy = Py("species"),
      Sd = Array;
    wd.exports = function (r) {
      var e;
      return kd(r) && ((e = r.constructor), Ny(e) && (e === Sd || kd(e.prototype)) ? (e = void 0) : My(e) && ((e = e[Iy]), e === null && (e = void 0))), e === void 0 ? Sd : e;
    };
  });
  var Ud = k((g4, _d) => {
    "use strict";
    var $y = Qd();
    _d.exports = function (r, e) {
      return new ($y(r))(e === 0 ? 0 : e);
    };
  });
  var Wi = k((F4, Ld) => {
    "use strict";
    Ld.exports = {};
  });
  var Td = k((b4, Od) => {
    "use strict";
    var Yy = Xe(),
      Jy = Wi(),
      Gy = Yy("iterator"),
      Xy = Array.prototype;
    Od.exports = function (r) {
      return r !== void 0 && (Jy.Array === r || Xy[Gy] === r);
    };
  });
  var Kn = k((y4, Nd) => {
    "use strict";
    var Ky = _r67(),
      Rd = On(),
      Zy = wn(),
      eE = Wi(),
      tE = Xe(),
      iE = tE("iterator");
    Nd.exports = function (r) {
      if (!Zy(r)) return Rd(r, iE) || Rd(r, "@@iterator") || eE[Ky(r)];
    };
  });
  var xu = k((E4, Md) => {
    "use strict";
    var rE = Nt(),
      nE = Pi(),
      sE = vt(),
      oE = Ln(),
      uE = Kn(),
      lE = TypeError;
    Md.exports = function (r, e) {
      var t = arguments.length < 2 ? uE(r) : e;
      if (nE(t)) return sE(rE(t, r));
      throw lE(oE(r) + " is not iterable");
    };
  });
  var $d = k((C4, Id) => {
    "use strict";
    var aE = Nt(),
      Pd = vt(),
      hE = On();
    Id.exports = function (r, e, t) {
      var i, n;
      Pd(r);
      try {
        if (((i = hE(r, "return")), !i)) {
          if (e === "throw") throw t;
          return t;
        }
        i = aE(i, r);
      } catch (s) {
        (n = !0), (i = s);
      }
      if (e === "throw") throw t;
      if (n) throw i;
      return Pd(i), t;
    };
  });
  var Hd = k((B4, zd) => {
    "use strict";
    var cE = Gn(),
      fE = Nt(),
      dE = vt(),
      pE = Ln(),
      mE = Td(),
      gE = Vi(),
      qd = _n(),
      DE = xu(),
      FE = Kn(),
      Vd = $d(),
      bE = TypeError,
      Zn = h(function (r, e) {
        (this.stopped = r), (this.result = e);
      }, "Result"),
      Wd = Zn.prototype;
    zd.exports = function (r, e, t) {
      var i = t && t.that,
        n = !!(t && t.AS_ENTRIES),
        s = !!(t && t.IS_RECORD),
        o = !!(t && t.IS_ITERATOR),
        u = !!(t && t.INTERRUPTED),
        l = cE(e, i),
        a,
        c,
        f,
        d,
        p,
        m,
        F,
        g = h(function (b) {
          return a && Vd(a, "normal", b), new Zn(!0, b);
        }, "stop"),
        D = h(function (b) {
          return n ? (dE(b), u ? l(b[0], b[1], g) : l(b[0], b[1])) : u ? l(b, g) : l(b);
        }, "callFn");
      if (s) a = r.iterator;
      else if (o) a = r;
      else {
        if (((c = FE(r)), !c)) throw bE(pE(r) + " is not iterable");
        if (mE(c)) {
          for (f = 0, d = gE(r); d > f; f++) if (((p = D(r[f])), p && qd(Wd, p))) return p;
          return new Zn(!1);
        }
        a = DE(r, c);
      }
      for (m = s ? r.next : a.next; !(F = fE(m, a)).done; ) {
        try {
          p = D(F.value);
        } catch (b) {
          Vd(a, "throw", b);
        }
        if (typeof p == "object" && p && qd(Wd, p)) return p;
      }
      return new Zn(!1);
    };
  });
  var Au = k((x4, jd) => {
    "use strict";
    var yE = Mn(),
      EE = xt(),
      CE = Ni();
    jd.exports = function (r, e, t) {
      var i = yE(e);
      i in r ? EE.f(r, i, CE(0, t)) : (r[i] = t);
    };
  });
  var ku = k((k4, Yd) => {
    "use strict";
    var AE = _r67(),
      kE = String;
    Yd.exports = function (r) {
      if (AE(r) === "Symbol") throw TypeError("Cannot convert a Symbol value to a string");
      return kE(r);
    };
  });
  var Su = k((S4, Jd) => {
    "use strict";
    Jd.exports = "	\n\v\f\r \xa0              　\u2028\u2029\uFEFF";
  });
  var Kd = k((w4, Xd) => {
    "use strict";
    var SE = $e(),
      wE = Qn(),
      QE = ku(),
      Qu = Su(),
      Gd = SE("".replace),
      _E = RegExp("^[" + Qu + "]+"),
      UE = RegExp("(^|[^" + Qu + "])[" + Qu + "]+$"),
      wu = h(function (r) {
        return function (e) {
          var t = QE(wE(e));
          return r & 1 && (t = Gd(t, _E, "")), r & 2 && (t = Gd(t, UE, "$1")), t;
        };
      }, "createMethod");
    Xd.exports = { start: wu(1), end: wu(2), trim: wu(3) };
  });
  var ip = k((_4, tp) => {
    "use strict";
    var LE = $n().PROPER,
      OE = He(),
      Zd = Su(),
      ep = "​\x85᠎";
    tp.exports = function (r) {
      return OE(function () {
        return !!Zd[r]() || ep[r]() !== ep || (LE && Zd[r].name !== r);
      });
    };
  });
  var _u = k((U4, rp) => {
    "use strict";
    var TE = Kd().end,
      RE = ip();
    rp.exports = RE("trimEnd")
      ? h(function () {
          return TE(this);
        }, "trimEnd")
      : "".trimEnd;
  });
  var sp = k(() => {
    "use strict";
    var NE = fi(),
      np = _u();
    NE({ target: "String", proto: !0, name: "trimEnd", forced: "".trimRight !== np }, { trimRight: np });
  });
  var lp = k((R4, up) => {
    "use strict";
    var PE = Eu(),
      IE = Jn();
    up.exports =
      Object.keys ||
      h(function (e) {
        return PE(e, IE);
      }, "keys");
  });
  var hp = k((ap) => {
    "use strict";
    var $E = st(),
      qE = ru(),
      VE = xt(),
      WE = vt(),
      zE = Mi(),
      HE = lp();
    ap.f =
      $E && !qE
        ? Object.defineProperties
        : h(function (e, t) {
            WE(e);
            for (var i = zE(t), n = HE(t), s = n.length, o = 0, u; s > o; ) VE.f(e, (u = n[o++]), i[u]);
            return e;
          }, "defineProperties");
  });
  var fp = k((I4, cp) => {
    "use strict";
    var jE = Sr();
    cp.exports = jE("document", "documentElement");
  });
  var Lr = k(($4, bp) => {
    "use strict";
    var YE = vt(),
      JE = hp(),
      dp = Jn(),
      GE = Vn(),
      XE = fp(),
      KE = eu(),
      ZE = qn(),
      pp = ">",
      mp = "<",
      Lu = "prototype",
      Ou = "script",
      Dp = ZE("IE_PROTO"),
      Uu = h(function () {}, "EmptyConstructor"),
      Fp = h(function (r) {
        return mp + Ou + pp + r + mp + "/" + Ou + pp;
      }, "scriptTag"),
      gp = h(function (r) {
        r.write(Fp("")), r.close();
        var e = r.parentWindow.Object;
        return (r = null), e;
      }, "NullProtoObjectViaActiveX"),
      eC = h(function () {
        var r = KE("iframe"),
          e = "java" + Ou + ":",
          t;
        return (r.style.display = "none"), XE.appendChild(r), (r.src = String(e)), (t = r.contentWindow.document), t.open(), t.write(Fp("document.F=Object")), t.close(), t.F;
      }, "NullProtoObjectViaIFrame"),
      es,
      ts = h(function () {
        try {
          es = new ActiveXObject("htmlfile");
        } catch (e) {}
        ts = typeof document < "u" ? (document.domain && es ? gp(es) : eC()) : gp(es);
        for (var r = dp.length; r--; ) delete ts[Lu][dp[r]];
        return ts();
      }, "NullProtoObject");
    GE[Dp] = !0;
    bp.exports =
      Object.create ||
      h(function (e, t) {
        var i;
        return e !== null ? ((Uu[Lu] = YE(e)), (i = new Uu()), (Uu[Lu] = null), (i[Dp] = e)) : (i = ts()), t === void 0 ? i : JE.f(i, t);
      }, "create");
  });
  var Ep = k((V4, yp) => {
    "use strict";
    var tC = Xe(),
      iC = Lr(),
      rC = xt().f,
      Tu = tC("unscopables"),
      Ru = Array.prototype;
    Ru[Tu] === void 0 && rC(Ru, Tu, { configurable: !0, value: iC(null) });
    yp.exports = function (r) {
      Ru[Tu][r] = !0;
    };
  });
  var Bp = k((W4, Cp) => {
    "use strict";
    var nC = He();
    Cp.exports = !nC(function () {
      function r() {}
      return h(r, "F"), (r.prototype.constructor = null), Object.getPrototypeOf(new r()) !== r.prototype;
    });
  });
  var Mu = k((H4, xp) => {
    "use strict";
    var sC = Ft(),
      oC = Te(),
      uC = Nn(),
      lC = qn(),
      aC = Bp(),
      vp = lC("IE_PROTO"),
      Nu = Object,
      hC = Nu.prototype;
    xp.exports = aC
      ? Nu.getPrototypeOf
      : function (r) {
          var e = uC(r);
          if (sC(e, vp)) return e[vp];
          var t = e.constructor;
          return oC(t) && e instanceof t ? t.prototype : e instanceof Nu ? hC : null;
        };
  });
  var qu = k((j4, Sp) => {
    "use strict";
    var cC = He(),
      fC = Te(),
      dC = Mt(),
      pC = Lr(),
      Ap = Mu(),
      mC = qi(),
      gC = Xe(),
      DC = Ii(),
      $u = gC("iterator"),
      kp = !1,
      Pt,
      Pu,
      Iu;
    [].keys && ((Iu = [].keys()), "next" in Iu ? ((Pu = Ap(Ap(Iu))), Pu !== Object.prototype && (Pt = Pu)) : (kp = !0));
    var FC =
      !dC(Pt) ||
      cC(function () {
        var r = {};
        return Pt[$u].call(r) !== r;
      });
    FC ? (Pt = {}) : DC && (Pt = pC(Pt));
    fC(Pt[$u]) ||
      mC(Pt, $u, function () {
        return this;
      });
    Sp.exports = { IteratorPrototype: Pt, BUGGY_SAFARI_ITERATORS: kp };
  });
  var is = k((Y4, Qp) => {
    "use strict";
    var bC = xt().f,
      yC = Ft(),
      EC = Xe(),
      wp = EC("toStringTag");
    Qp.exports = function (r, e, t) {
      r && !t && (r = r.prototype), r && !yC(r, wp) && bC(r, wp, { configurable: !0, value: e });
    };
  });
  var Vu = k((J4, _p) => {
    "use strict";
    var CC = qu().IteratorPrototype,
      BC = Lr(),
      vC = Ni(),
      xC = is(),
      AC = Wi(),
      kC = h(function () {
        return this;
      }, "returnThis");
    _p.exports = function (r, e, t, i) {
      var n = e + " Iterator";
      return (r.prototype = BC(CC, { next: vC(+!i, t) })), xC(r, n, !1, !0), (AC[n] = kC), r;
    };
  });
  var Lp = k((X4, Up) => {
    "use strict";
    var SC = $e(),
      wC = Pi();
    Up.exports = function (r, e, t) {
      try {
        return SC(wC(Object.getOwnPropertyDescriptor(r, e)[t]));
      } catch (e) {}
    };
  });
  var Tp = k((K4, Op) => {
    "use strict";
    var QC = Te(),
      _C = String,
      UC = TypeError;
    Op.exports = function (r) {
      if (typeof r == "object" || QC(r)) return r;
      throw UC("Can't set " + _C(r) + " as a prototype");
    };
  });
  var Np = k((Z4, Rp) => {
    "use strict";
    var LC = Lp(),
      OC = vt(),
      TC = Tp();
    Rp.exports =
      Object.setPrototypeOf ||
      ("__proto__" in {}
        ? (function () {
            var r = !1,
              e = {},
              t;
            try {
              (t = LC(Object.prototype, "__proto__", "set")), t(e, []), (r = e instanceof Array);
            } catch (e) {}
            return h(function (n, s) {
              return OC(n), TC(s), r ? t(n, s) : (n.__proto__ = s), n;
            }, "setPrototypeOf");
          })()
        : void 0);
  });
  var Yp = k((t3, jp) => {
    "use strict";
    var RC = fi(),
      NC = Nt(),
      rs = Ii(),
      zp = $n(),
      MC = Te(),
      PC = Vu(),
      Mp = Mu(),
      Pp = Np(),
      IC = is(),
      $C = In(),
      Wu = qi(),
      qC = Xe(),
      Ip = Wi(),
      Hp = qu(),
      VC = zp.PROPER,
      WC = zp.CONFIGURABLE,
      $p = Hp.IteratorPrototype,
      ns = Hp.BUGGY_SAFARI_ITERATORS,
      Or = qC("iterator"),
      qp = "keys",
      Tr = "values",
      Vp = "entries",
      Wp = h(function () {
        return this;
      }, "returnThis");
    jp.exports = function (r, e, t, i, n, s, o) {
      PC(t, e, i);
      var u = h(function (D) {
          if (D === n && d) return d;
          if (!ns && D in c) return c[D];
          switch (D) {
            case qp:
              return h(function () {
                return new t(this, D);
              }, "keys");
            case Tr:
              return h(function () {
                return new t(this, D);
              }, "values");
            case Vp:
              return h(function () {
                return new t(this, D);
              }, "entries");
          }
          return function () {
            return new t(this);
          };
        }, "getIterationMethod"),
        l = e + " Iterator",
        a = !1,
        c = r.prototype,
        f = c[Or] || c["@@iterator"] || (n && c[n]),
        d = (!ns && f) || u(n),
        p = (e === "Array" && c.entries) || f,
        m,
        F,
        g;
      if (
        (p && ((m = Mp(p.call(new r()))), m !== Object.prototype && m.next && (!rs && Mp(m) !== $p && (Pp ? Pp(m, $p) : MC(m[Or]) || Wu(m, Or, Wp)), IC(m, l, !0, !0), rs && (Ip[l] = Wp))),
        VC &&
          n === Tr &&
          f &&
          f.name !== Tr &&
          (!rs && WC
            ? $C(c, "name", Tr)
            : ((a = !0),
              (d = h(function () {
                return NC(f, this);
              }, "values")))),
        n)
      )
        if (((F = { values: u(Tr), keys: s ? d : u(qp), entries: u(Vp) }), o)) for (g in F) (ns || a || !(g in c)) && Wu(c, g, F[g]);
        else RC({ target: e, proto: !0, forced: ns || a }, F);
      return (!rs || o) && c[Or] !== d && Wu(c, Or, d, { name: n }), (Ip[e] = d), F;
    };
  });
  var Gp = k((r3, Jp) => {
    "use strict";
    Jp.exports = function (r, e) {
      return { value: r, done: e };
    };
  });
  var i0 = k((n3, t0) => {
    "use strict";
    var zC = Mi(),
      zu = Ep(),
      Xp = Wi(),
      Zp = Hn(),
      HC = xt().f,
      jC = Yp(),
      ss = Gp(),
      YC = Ii(),
      JC = st(),
      e0 = "Array Iterator",
      GC = Zp.set,
      XC = Zp.getterFor(e0);
    t0.exports = jC(
      Array,
      "Array",
      function (r, e) {
        GC(this, { type: e0, target: zC(r), index: 0, kind: e });
      },
      function () {
        var r = XC(this),
          e = r.target,
          t = r.kind,
          i = r.index++;
        if (!e || i >= e.length) return (r.target = void 0), ss(void 0, !0);
        switch (t) {
          case "keys":
            return ss(i, !1);
          case "values":
            return ss(e[i], !1);
        }
        return ss([i, e[i]], !1);
      },
      "values",
    );
    var Kp = (Xp.Arguments = Xp.Array);
    zu("keys");
    zu("values");
    zu("entries");
    if (!YC && JC && Kp.name !== "values")
      try {
        HC(Kp, "name", { value: "values" });
      } catch (e) {}
  });
  var s0 = k((s3, n0) => {
    "use strict";
    var KC = He(),
      ZC = Xe(),
      eB = st(),
      r0 = Ii(),
      tB = ZC("iterator");
    n0.exports = !KC(function () {
      var r = new URL("b?a=1&b=2&c=3", "http://a"),
        e = r.searchParams,
        t = new URLSearchParams("a=1&a=2&b=3"),
        i = "";
      return (
        (r.pathname = "c%20d"),
        e.forEach(function (n, s) {
          e.delete("b"), (i += s + n);
        }),
        t.delete("a", 2),
        t.delete("b", void 0),
        (r0 && (!r.toJSON || !t.has("a", 1) || t.has("a", 2) || !t.has("a", void 0) || t.has("b"))) ||
          (!e.size && (r0 || !eB)) ||
          !e.sort ||
          r.href !== "http://a/c%20d?a=1&c=3" ||
          e.get("c") !== "3" ||
          String(new URLSearchParams("?a=1")) !== "a=1" ||
          !e[tB] ||
          new URL("https://a@b").username !== "a" ||
          new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" ||
          new URL("http://тест").host !== "xn--e1aybc" ||
          new URL("http://a#б").hash !== "#%D0%B1" ||
          i !== "a1c3" ||
          new URL("http://x", void 0).host !== "x"
      );
    });
  });
  var l0 = k((o3, u0) => {
    "use strict";
    var o0 = Du(),
      iB = xt();
    u0.exports = function (r, e, t) {
      return t.get && o0(t.get, e, { getter: !0 }), t.set && o0(t.set, e, { setter: !0 }), iB.f(r, e, t);
    };
  });
  var h0 = k((u3, a0) => {
    "use strict";
    var rB = qi();
    a0.exports = function (r, e, t) {
      for (var i in e) rB(r, i, e[i], t);
      return r;
    };
  });
  var f0 = k((l3, c0) => {
    "use strict";
    var nB = _n(),
      sB = TypeError;
    c0.exports = function (r, e) {
      if (nB(e, r)) return r;
      throw sB("Incorrect invocation");
    };
  });
  var p0 = k((a3, d0) => {
    "use strict";
    var oB = TypeError;
    d0.exports = function (r, e) {
      if (r < e) throw oB("Not enough arguments");
      return r;
    };
  });
  var D0 = k((h3, g0) => {
    "use strict";
    var m0 = bu(),
      uB = Vi(),
      lB = Au(),
      aB = Array,
      hB = Math.max;
    g0.exports = function (r, e, t) {
      for (var i = uB(r), n = m0(e, i), s = m0(t === void 0 ? i : t, i), o = aB(hB(s - n, 0)), u = 0; n < s; n++, u++) lB(o, u, r[n]);
      return (o.length = u), o;
    };
  });
  var y0 = k((c3, b0) => {
    "use strict";
    var F0 = D0(),
      cB = Math.floor,
      Hu = h(function (r, e) {
        var t = r.length,
          i = cB(t / 2);
        return t < 8 ? fB(r, e) : dB(r, Hu(F0(r, 0, i), e), Hu(F0(r, i), e), e);
      }, "mergeSort"),
      fB = h(function (r, e) {
        for (var t = r.length, i = 1, n, s; i < t; ) {
          for (s = i, n = r[i]; s && e(r[s - 1], n) > 0; ) r[s] = r[--s];
          s !== i++ && (r[s] = n);
        }
        return r;
      }, "insertionSort"),
      dB = h(function (r, e, t, i) {
        for (var n = e.length, s = t.length, o = 0, u = 0; o < n || u < s; ) r[o + u] = o < n && u < s ? (i(e[o], t[u]) <= 0 ? e[o++] : t[u++]) : o < n ? e[o++] : t[u++];
        return r;
      }, "merge");
    b0.exports = Hu;
  });
  var $0 = k((d3, I0) => {
    "use strict";
    i0();
    var Xu = fi(),
      ji = nt(),
      os = Nt(),
      At = $e(),
      Hi = st(),
      U0 = s0(),
      L0 = qi(),
      pB = l0(),
      mB = h0(),
      gB = is(),
      DB = Vu(),
      el = Hn(),
      O0 = f0(),
      ju = Te(),
      FB = Ft(),
      bB = Gn(),
      yB = _r67(),
      EB = vt(),
      T0 = Mt(),
      qe = ku(),
      CB = Lr(),
      E0 = Ni(),
      Ku = xu(),
      BB = Kn(),
      zi = p0(),
      vB = Xe(),
      xB = y0(),
      AB = vB("iterator"),
      Nr = "URLSearchParams",
      R0 = Nr + "Iterator",
      N0 = el.set,
      ot = el.getterFor(Nr),
      kB = el.getterFor(R0),
      SB = Object.getOwnPropertyDescriptor,
      tl = h(function (r) {
        if (!Hi) return ji[r];
        var e = SB(ji, r);
        return e && e.value;
      }, "safeGetBuiltIn"),
      C0 = tl("fetch"),
      ls = tl("Request"),
      Rr = tl("Headers"),
      Yu = ls && ls.prototype,
      B0 = Rr && Rr.prototype,
      wB = ji.RegExp,
      QB = ji.TypeError,
      M0 = ji.decodeURIComponent,
      _B = ji.encodeURIComponent,
      UB = At("".charAt),
      v0 = At([].join),
      di = At([].push),
      Zu = At("".replace),
      LB = At([].shift),
      x0 = At([].splice),
      A0 = At("".split),
      OB = At("".slice),
      TB = /\+/g,
      k0 = Array(4),
      RB = h(function (r) {
        return k0[r - 1] || (k0[r - 1] = wB("((?:%[\\da-f]{2}){" + r + "})", "gi"));
      }, "percentSequence"),
      NB = h(function (r) {
        try {
          return M0(r);
        } catch (e) {
          return r;
        }
      }, "percentDecode"),
      S0 = h(function (r) {
        var e = Zu(r, TB, " "),
          t = 4;
        try {
          return M0(e);
        } catch (e1) {
          for (; t; ) e = Zu(e, RB(t--), NB);
          return e;
        }
      }, "deserialize"),
      MB = /[!'()~]|%20/g,
      PB = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" },
      IB = h(function (r) {
        return PB[r];
      }, "replacer"),
      w0 = h(function (r) {
        return Zu(_B(r), MB, IB);
      }, "serialize"),
      Ju = DB(
        h(function (e, t) {
          N0(this, { type: R0, iterator: Ku(ot(e).entries), kind: t });
        }, "Iterator"),
        "Iterator",
        h(function () {
          var e = kB(this),
            t = e.kind,
            i = e.iterator.next(),
            n = i.value;
          return i.done || (i.value = t === "keys" ? n.key : t === "values" ? n.value : [n.key, n.value]), i;
        }, "next"),
        !0,
      ),
      P0 = h(function (r) {
        (this.entries = []), (this.url = null), r !== void 0 && (T0(r) ? this.parseObject(r) : this.parseQuery(typeof r == "string" ? (UB(r, 0) === "?" ? OB(r, 1) : r) : qe(r)));
      }, "URLSearchParamsState");
    P0.prototype = {
      type: Nr,
      bindURL: function bindURL(r) {
        (this.url = r), this.update();
      },
      parseObject: function parseObject(r) {
        var e = BB(r),
          t,
          i,
          n,
          s,
          o,
          u,
          l;
        if (e)
          for (t = Ku(r, e), i = t.next; !(n = os(i, t)).done; ) {
            if (((s = Ku(EB(n.value))), (o = s.next), (u = os(o, s)).done || (l = os(o, s)).done || !os(o, s).done)) throw QB("Expected sequence with length 2");
            di(this.entries, { key: qe(u.value), value: qe(l.value) });
          }
        else for (var a in r) FB(r, a) && di(this.entries, { key: a, value: qe(r[a]) });
      },
      parseQuery: function parseQuery(r) {
        if (r) for (var e = A0(r, "&"), t = 0, i, n; t < e.length; ) (i = e[t++]), i.length && ((n = A0(i, "=")), di(this.entries, { key: S0(LB(n)), value: S0(v0(n, "=")) }));
      },
      serialize: function serialize() {
        for (var r = this.entries, e = [], t = 0, i; t < r.length; ) (i = r[t++]), di(e, w0(i.key) + "=" + w0(i.value));
        return v0(e, "&");
      },
      update: function update() {
        (this.entries.length = 0), this.parseQuery(this.url.query);
      },
      updateURL: function updateURL() {
        this.url && this.url.update();
      },
    };
    var as = h(function () {
        O0(this, Yi);
        var e = arguments.length > 0 ? arguments[0] : void 0,
          t = N0(this, new P0(e));
        Hi || (this.size = t.entries.length);
      }, "URLSearchParams"),
      Yi = as.prototype;
    mB(
      Yi,
      {
        append: h(function (e, t) {
          var i = ot(this);
          zi(arguments.length, 2), di(i.entries, { key: qe(e), value: qe(t) }), Hi || this.length++, i.updateURL();
        }, "append"),
        delete: function _delete(r) {
          for (var e = ot(this), t = zi(arguments.length, 1), i = e.entries, n = qe(r), s = t < 2 ? void 0 : arguments[1], o = s === void 0 ? s : qe(s), u = 0; u < i.length; ) {
            var l = i[u];
            if (l.key === n && (o === void 0 || l.value === o)) {
              if ((x0(i, u, 1), o !== void 0)) break;
            } else u++;
          }
          Hi || (this.size = i.length), e.updateURL();
        },
        get: h(function (e) {
          var t = ot(this).entries;
          zi(arguments.length, 1);
          for (var i = qe(e), n = 0; n < t.length; n++) if (t[n].key === i) return t[n].value;
          return null;
        }, "get"),
        getAll: h(function (e) {
          var t = ot(this).entries;
          zi(arguments.length, 1);
          for (var i = qe(e), n = [], s = 0; s < t.length; s++) t[s].key === i && di(n, t[s].value);
          return n;
        }, "getAll"),
        has: h(function (e) {
          for (var t = ot(this).entries, i = zi(arguments.length, 1), n = qe(e), s = i < 2 ? void 0 : arguments[1], o = s === void 0 ? s : qe(s), u = 0; u < t.length; ) {
            var l = t[u++];
            if (l.key === n && (o === void 0 || l.value === o)) return !0;
          }
          return !1;
        }, "has"),
        set: h(function (e, t) {
          var i = ot(this);
          zi(arguments.length, 1);
          for (var n = i.entries, s = !1, o = qe(e), u = qe(t), l = 0, a; l < n.length; l++) (a = n[l]), a.key === o && (s ? x0(n, l--, 1) : ((s = !0), (a.value = u)));
          s || di(n, { key: o, value: u }), Hi || (this.size = n.length), i.updateURL();
        }, "set"),
        sort: h(function () {
          var e = ot(this);
          xB(e.entries, function (t, i) {
            return t.key > i.key ? 1 : -1;
          }),
            e.updateURL();
        }, "sort"),
        forEach: h(function (e) {
          for (var t = ot(this).entries, i = bB(e, arguments.length > 1 ? arguments[1] : void 0), n = 0, s; n < t.length; ) (s = t[n++]), i(s.value, s.key, this);
        }, "forEach"),
        keys: h(function () {
          return new Ju(this, "keys");
        }, "keys"),
        values: h(function () {
          return new Ju(this, "values");
        }, "values"),
        entries: h(function () {
          return new Ju(this, "entries");
        }, "entries"),
      },
      { enumerable: !0 },
    );
    L0(Yi, AB, Yi.entries, { name: "entries" });
    L0(
      Yi,
      "toString",
      h(function () {
        return ot(this).serialize();
      }, "toString"),
      { enumerable: !0 },
    );
    Hi &&
      pB(Yi, "size", {
        get: h(function () {
          return ot(this).entries.length;
        }, "size"),
        configurable: !0,
        enumerable: !0,
      });
    gB(as, Nr);
    Xu({ global: !0, constructor: !0, forced: !U0 }, { URLSearchParams: as });
    !U0 &&
      ju(Rr) &&
      ((Q0 = At(B0.has)),
      (_0 = At(B0.set)),
      (Gu = h(function (r) {
        if (T0(r)) {
          var e = r.body,
            t;
          if (yB(e) === Nr) return (t = r.headers ? new Rr(r.headers) : new Rr()), Q0(t, "content-type") || _0(t, "content-type", "application/x-www-form-urlencoded;charset=UTF-8"), CB(r, { body: E0(0, qe(e)), headers: E0(0, t) });
        }
        return r;
      }, "wrapRequestOptions")),
      ju(C0) &&
        Xu(
          { global: !0, enumerable: !0, dontCallGetSet: !0, forced: !0 },
          {
            fetch: h(function (e) {
              return C0(e, arguments.length > 1 ? Gu(arguments[1]) : {});
            }, "fetch"),
          },
        ),
      ju(ls) &&
        ((us = h(function (e) {
          return O0(this, Yu), new ls(e, arguments.length > 1 ? Gu(arguments[1]) : {});
        }, "Request")),
        (Yu.constructor = us),
        (us.prototype = Yu),
        Xu({ global: !0, constructor: !0, dontCallGetSet: !0, forced: !0 }, { Request: us })));
    var Q0, _0, Gu, us;
    I0.exports = { URLSearchParams: as, getState: ot };
  });
  var qy = fi(),
    Vy = gd(),
    Wy = Pi(),
    zy = Nn(),
    Hy = Vi(),
    jy = Ud();
  qy(
    { target: "Array", proto: !0 },
    {
      flatMap: h(function (e) {
        var t = zy(this),
          i = Hy(t),
          n;
        return Wy(e), (n = jy(t, 0)), (n.length = Vy(n, t, t, i, 0, 1, e, arguments.length > 1 ? arguments[1] : void 0)), n;
      }, "flatMap"),
    },
  );
  var BE = fi(),
    vE = Hd(),
    xE = Au();
  BE(
    { target: "Object", stat: !0 },
    {
      fromEntries: h(function (e) {
        var t = {};
        return (
          vE(
            e,
            function (i, n) {
              xE(t, i, n);
            },
            { AS_ENTRIES: !0 },
          ),
          t
        );
      }, "fromEntries"),
    },
  );
  sp();
  var ME = fi(),
    op = _u();
  ME({ target: "String", proto: !0, name: "trimEnd", forced: "".trimEnd !== op }, { trimEnd: op });
  $0();
  function xe() {}
  h(xe, "noop");
  function $B(r, e) {
    for (var t in e) r[t] = e[t];
    return r;
  }
  h($B, "assign");
  function ul(r) {
    return r();
  }
  h(ul, "run");
  function q0() {
    return Object.create(null);
  }
  h(q0, "blank_object");
  function kt(r) {
    r.forEach(ul);
  }
  h(kt, "run_all");
  function cs(r) {
    return typeof r == "function";
  }
  h(cs, "is_function");
  function se(r, e) {
    return r != r ? e == e : r !== e || (r && typeof r == "object") || typeof r == "function";
  }
  h(se, "safe_not_equal");
  function V0(r) {
    return Object.keys(r).length === 0;
  }
  h(V0, "is_empty");
  function Jt(r, e, t, i) {
    if (r) {
      var n = W0(r, e, t, i);
      return r[0](n);
    }
  }
  h(Jt, "create_slot");
  function W0(r, e, t, i) {
    return r[1] && i ? $B(t.ctx.slice(), r[1](i(e))) : t.ctx;
  }
  h(W0, "get_slot_context");
  function Gt(r, e, t, i) {
    if (r[2] && i) {
      var n = r[2](i(t));
      if (e.dirty === void 0) return n;
      if (typeof n == "object") {
        var s = [],
          o = Math.max(e.dirty.length, n.length);
        for (var u = 0; u < o; u += 1) s[u] = e.dirty[u] | n[u];
        return s;
      }
      return e.dirty | n;
    }
    return e.dirty;
  }
  h(Gt, "get_slot_changes");
  function Xt(r, e, t, i, n, s) {
    if (n) {
      var o = W0(e, t, i, s);
      r.p(o, n);
    }
  }
  h(Xt, "update_slot_base");
  function Kt(r) {
    if (r.ctx.length > 32) {
      var e = [],
        t = r.ctx.length / 32;
      for (var i = 0; i < t; i++) e[i] = -1;
      return e;
    }
    return -1;
  }
  h(Kt, "get_all_dirty_from_scope");
  function z0(r) {
    var e = {};
    for (var t in r) e[t] = !0;
    return e;
  }
  h(z0, "compute_slots");
  var H0 = typeof window < "u" ? window : typeof globalThis < "u" ? globalThis : global,
    rl =
      ((_r = class r {
        observe(e, t) {
          return (
            this._listeners.set(e, t),
            this._getObserver().observe(e, this.options),
            () => {
              this._listeners.delete(e), this._observer.unobserve(e);
            }
          );
        }
        _getObserver() {
          var e;
          return (e = this._observer) !== null && e !== void 0
            ? e
            : (this._observer = new ResizeObserver((t) => {
                var i;
                var _iteratorNormalCompletion = true,
                  _didIteratorError = false,
                  _iteratorError = undefined;
                try {
                  for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var n = _step.value;
                    r.entries.set(n.target, n), (i = this._listeners.get(n.target)) === null || i === void 0 || i(n);
                  }
                } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion && _iterator.return != null) {
                      _iterator.return();
                    }
                  } finally {
                    if (_didIteratorError) {
                      throw _iteratorError;
                    }
                  }
                }
              }));
        }
        constructor(e) {
          (this.options = e), (this._listeners = "WeakMap" in H0 ? new WeakMap() : void 0);
        }
      }),
      (() => {
        h(_r, "ResizeObserverSingleton");
      })(),
      _r);
  rl.entries = "WeakMap" in H0 ? new WeakMap() : void 0;
  var j0 = !1;
  function qB() {
    j0 = !0;
  }
  h(qB, "start_hydrating");
  function VB() {
    j0 = !1;
  }
  h(VB, "end_hydrating");
  function $(r, e) {
    r.appendChild(e);
  }
  h($, "append");
  function E(r, e, t) {
    r.insertBefore(e, t || null);
  }
  h(E, "insert");
  function y(r) {
    r.parentNode && r.parentNode.removeChild(r);
  }
  h(y, "detach");
  function Ir(r, e) {
    for (var t = 0; t < r.length; t += 1) r[t] && r[t].d(e);
  }
  h(Ir, "destroy_each");
  function L(r) {
    return document.createElement(r);
  }
  h(L, "element");
  function St(r) {
    return document.createElementNS("http://www.w3.org/2000/svg", r);
  }
  h(St, "svg_element");
  function z(r) {
    return document.createTextNode(r);
  }
  h(z, "text");
  function M() {
    return z(" ");
  }
  h(M, "space");
  function It() {
    return z("");
  }
  h(It, "empty");
  function Fe(r, e, t, i) {
    return r.addEventListener(e, t, i), () => r.removeEventListener(e, t, i);
  }
  h(Fe, "listen");
  function B(r, e, t) {
    t == null ? r.removeAttribute(e) : r.getAttribute(e) !== t && r.setAttribute(e, t);
  }
  h(B, "attr");
  function Y0(r) {
    var e;
    return {
      p() {
        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {
          t[_key] = arguments[_key];
        }
        (e = t), e.forEach((i) => r.push(i));
      },
      r() {
        e.forEach((t) => r.splice(r.indexOf(t), 1));
      },
    };
  }
  h(Y0, "init_binding_group");
  function yt(r) {
    return r === "" ? null : +r;
  }
  h(yt, "to_number");
  function WB(r) {
    return Array.from(r.childNodes);
  }
  h(WB, "children");
  function Ve(r, e) {
    (e = "" + e), r.data !== e && (r.data = e);
  }
  h(Ve, "set_data");
  function be(r, e) {
    r.value = e !== null && e !== void 0 ? e : "";
  }
  h(be, "set_input_value");
  function Ki(r, e, t) {
    r.classList[t ? "add" : "remove"](e);
  }
  h(Ki, "toggle_class");
  function zB(r, e) {
    var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      tmp = _ref.bubbles,
      t = tmp === void 0 ? !1 : tmp,
      tmp1 = _ref.cancelable,
      i = tmp1 === void 0 ? !1 : tmp1;
    var n = document.createEvent("CustomEvent");
    return n.initCustomEvent(r, t, i, e), n;
  }
  h(zB, "custom_event");
  var Pr;
  function Mr(r) {
    Pr = r;
  }
  h(Mr, "set_current_component");
  function J0() {
    if (!Pr) throw new Error("Function called outside component initialization");
    return Pr;
  }
  h(J0, "get_current_component");
  function ll(r) {
    J0().$$.on_mount.push(r);
  }
  h(ll, "onMount");
  function mi() {
    var r = J0();
    return function (e, t) {
      var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
        tmp = _ref.cancelable,
        i = tmp === void 0 ? !1 : tmp;
      var n = r.$$.callbacks[e];
      if (n) {
        var s = zB(e, t, { cancelable: i });
        return (
          n.slice().forEach((o) => {
            o.call(r, s);
          }),
          !s.defaultPrevented
        );
      }
      return !0;
    };
  }
  h(mi, "createEventDispatcher");
  var Gi = [];
  var Y = [],
    Xi = [],
    nl = [],
    HB = Promise.resolve(),
    sl = !1;
  function jB() {
    sl || ((sl = !0), HB.then(G0));
  }
  h(jB, "schedule_update");
  function ol(r) {
    Xi.push(r);
  }
  h(ol, "add_render_callback");
  function J(r) {
    nl.push(r);
  }
  h(J, "add_flush_callback");
  var il = new Set(),
    Ji = 0;
  function G0() {
    if (Ji !== 0) return;
    var r = Pr;
    do {
      try {
        for (; Ji < Gi.length; ) {
          var _$e = Gi[Ji];
          Ji++, Mr(_$e), YB(_$e.$$);
        }
      } catch (e) {
        throw ((Gi.length = 0), (Ji = 0), e);
      }
      for (Mr(null), Gi.length = 0, Ji = 0; Y.length; ) Y.pop()();
      for (var _$e1 = 0; _$e1 < Xi.length; _$e1 += 1) {
        var t = Xi[_$e1];
        il.has(t) || (il.add(t), t());
      }
      Xi.length = 0;
    } while (Gi.length);
    for (; nl.length; ) nl.pop()();
    (sl = !1), il.clear(), Mr(r);
  }
  h(G0, "flush");
  function YB(r) {
    if (r.fragment !== null) {
      r.update(), kt(r.before_update);
      var e = r.dirty;
      (r.dirty = [-1]), r.fragment && r.fragment.p(r.ctx, e), r.after_update.forEach(ol);
    }
  }
  h(YB, "update");
  function JB(r) {
    var e = [],
      t = [];
    Xi.forEach((i) => (r.indexOf(i) === -1 ? e.push(i) : t.push(i))), t.forEach((i) => i()), (Xi = e);
  }
  h(JB, "flush_render_callbacks");
  var hs = new Set(),
    pi;
  function $t() {
    pi = { r: 0, c: [], p: pi };
  }
  h($t, "group_outros");
  function qt() {
    pi.r || kt(pi.c), (pi = pi.p);
  }
  h(qt, "check_outros");
  function S(r, e) {
    r && r.i && (hs.delete(r), r.i(e));
  }
  h(S, "transition_in");
  function Q(r, e, t, i) {
    if (r && r.o) {
      if (hs.has(r)) return;
      hs.add(r),
        pi.c.push(() => {
          hs.delete(r), i && (t && r.d(1), i());
        }),
        r.o(e);
    } else i && i();
  }
  h(Q, "transition_out");
  var GB = ["allowfullscreen", "allowpaymentrequest", "async", "autofocus", "autoplay", "checked", "controls", "default", "defer", "disabled", "formnovalidate", "hidden", "inert", "ismap", "loop", "multiple", "muted", "nomodule", "novalidate", "open", "playsinline", "readonly", "required", "reversed", "selected"],
    m3 = new Set([...GB]);
  function G(r, e, t) {
    var i = r.$$.props[e];
    i !== void 0 && ((r.$$.bound[i] = t), t(r.$$.ctx[i]));
  }
  h(G, "bind");
  function R(r) {
    r && r.c();
  }
  h(R, "create_component");
  function T(r, e, t, i) {
    var _r_$$ = r.$$,
      n = _r_$$.fragment,
      s = _r_$$.after_update;
    n && n.m(e, t),
      i ||
        ol(() => {
          var o = r.$$.on_mount.map(ul).filter(cs);
          r.$$.on_destroy ? r.$$.on_destroy.push(...o) : kt(o), (r.$$.on_mount = []);
        }),
      s.forEach(ol);
  }
  h(T, "mount_component");
  function O(r, e) {
    var t = r.$$;
    t.fragment !== null && (JB(t.after_update), kt(t.on_destroy), t.fragment && t.fragment.d(e), (t.on_destroy = t.fragment = null), (t.ctx = []));
  }
  h(O, "destroy_component");
  function XB(r, e) {
    r.$$.dirty[0] === -1 && (Gi.push(r), jB(), r.$$.dirty.fill(0)), (r.$$.dirty[(e / 31) | 0] |= 1 << e % 31);
  }
  h(XB, "make_dirty");
  function oe(r, e, t, i, n, s, o) {
    var u = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [-1];
    var l = Pr;
    Mr(r);
    var a = (r.$$ = { fragment: null, ctx: [], props: s, update: xe, not_equal: n, bound: q0(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(e.context || (l ? l.$$.context : [])), callbacks: q0(), dirty: u, skip_bound: !1, root: e.target || l.$$.root });
    o && o(a.root);
    var c = !1;
    if (
      ((a.ctx = t
        ? t(r, e.props || {}, function (f, d) {
            for (var _len = arguments.length, p = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              p[_key - 2] = arguments[_key];
            }
            var m = p.length ? p[0] : d;
            return a.ctx && n(a.ctx[f], (a.ctx[f] = m)) && (!a.skip_bound && a.bound[f] && a.bound[f](m), c && XB(r, f)), d;
          })
        : []),
      a.update(),
      (c = !0),
      kt(a.before_update),
      (a.fragment = i ? i(a.ctx) : !1),
      e.target)
    ) {
      if (e.hydrate) {
        qB();
        var f = WB(e.target);
        a.fragment && a.fragment.l(f), f.forEach(y);
      } else a.fragment && a.fragment.c();
      e.intro && S(r.$$.fragment), T(r, e.target, e.anchor, e.customElement), VB(), G0();
    }
    Mr(l);
  }
  h(oe, "init");
  var KB;
  typeof HTMLElement == "function" &&
    (KB =
      ((_class = class _class extends HTMLElement {
        connectedCallback() {
          var _this_$$ = this.$$,
            r = _this_$$.on_mount;
          this.$$.on_disconnect = r.map(ul).filter(cs);
          for (var e in this.$$.slotted) this.appendChild(this.$$.slotted[e]);
        }
        attributeChangedCallback(r, e, t) {
          this[r] = t;
        }
        disconnectedCallback() {
          kt(this.$$.on_disconnect);
        }
        $destroy() {
          O(this, 1), (this.$destroy = xe);
        }
        $on(r, e) {
          if (!cs(e)) return xe;
          var t = this.$$.callbacks[r] || (this.$$.callbacks[r] = []);
          return (
            t.push(e),
            () => {
              var i = t.indexOf(e);
              i !== -1 && t.splice(i, 1);
            }
          );
        }
        $set(r) {
          this.$$set && !V0(r) && ((this.$$.skip_bound = !0), this.$$set(r), (this.$$.skip_bound = !1));
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" });
        }
      }),
      (() => {
        h(_class, "SvelteElement");
      })(),
      _class));
  var ie =
    ((_class1 = class _class {
      $destroy() {
        O(this, 1), (this.$destroy = xe);
      }
      $on(e, t) {
        if (!cs(t)) return xe;
        var i = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
        return (
          i.push(t),
          () => {
            var n = i.indexOf(t);
            n !== -1 && i.splice(n, 1);
          }
        );
      }
      $set(e) {
        this.$$set && !V0(e) && ((this.$$.skip_bound = !0), this.$$set(e), (this.$$.skip_bound = !1));
      }
    }),
    (() => {
      h(_class1, "SvelteComponent");
    })(),
    _class1);
  var al =
      ((_class2 = class _class {
        constructor(ref) {
          var e = ref === void 0 ? [] : ref;
          this.children = e;
          this.type = "root";
        }
      }),
      (() => {
        h(_class2, "RootNode");
      })(),
      _class2),
    Zi =
      ((_class3 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.text = t;
          this.type = "text";
          e.children.push(this);
        }
      }),
      (() => {
        h(_class3, "TextNode");
      })(),
      _class3),
    ds =
      ((_class4 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "block";
          this.command = "";
          e.children.push(this);
        }
      }),
      (() => {
        h(_class4, "BlockNode");
      })(),
      _class4),
    hl =
      ((_class5 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "comment";
          e.block = this;
        }
      }),
      (() => {
        h(_class5, "CommentNode");
      })(),
      _class5),
    cl =
      ((_class6 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "preamble";
          e.block = this;
        }
      }),
      (() => {
        h(_class6, "PreambleNode");
      })(),
      _class6),
    fl =
      ((_class7 = class _class {
        constructor(e, t, i, n) {
          this.parent = e;
          this.raw = t;
          this.braces = i;
          this.parens = n;
          this.type = "string";
          e.block = this;
        }
      }),
      (() => {
        h(_class7, "StringNode");
      })(),
      _class7),
    dl =
      ((_class8 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.wrapType = t;
          this.type = "entry";
          (e.block = this), (this.fields = []);
        }
      }),
      (() => {
        h(_class8, "EntryNode");
      })(),
      _class8),
    gi =
      ((_class9 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? "" : ref;
          this.parent = e;
          this.name = t;
          this.type = "field";
          this.value = new pl(this);
        }
      }),
      (() => {
        h(_class9, "FieldNode");
      })(),
      _class9),
    pl =
      ((_class10 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "concat";
          this.canConsumeValue = !0;
          this.concat = [];
        }
      }),
      (() => {
        h(_class10, "ConcatNode");
      })(),
      _class10),
    ml =
      ((_class11 = class _class {
        constructor(e, t) {
          this.parent = e;
          this.value = t;
          this.type = "literal";
          e.concat.push(this);
        }
      }),
      (() => {
        h(_class11, "LiteralNode");
      })(),
      _class11),
    gl =
      ((_class12 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "braced";
          this.value = "";
          this.depth = 0;
          e.concat.push(this);
        }
      }),
      (() => {
        h(_class12, "BracedNode");
      })(),
      _class12),
    Dl =
      ((_class13 = class _class {
        constructor(e) {
          this.parent = e;
          this.type = "quoted";
          this.value = "";
          this.depth = 0;
          e.concat.push(this);
        }
      }),
      (() => {
        h(_class13, "QuotedNode");
      })(),
      _class13);
  function K0(r) {
    var e = new al(),
      t = e,
      i = 1,
      n = 0;
    for (var s = 0; s < r.length; s++) {
      var o = r[s],
        u = r[s - 1];
      switch ((o === "\n" && (i++, (n = 0)), n++, t.type)) {
        case "root": {
          t = o === "@" ? new ds(t) : new Zi(t, o);
          break;
        }
        case "text": {
          o === "@" && /[\s\r\n}]/.test(u) ? (t = new ds(t.parent)) : (t.text += o);
          break;
        }
        case "block": {
          if (o === "@") {
            var _l;
            var l = t.parent.children[t.parent.children.length - 2];
            ((_l = l) === null || _l === void 0 ? void 0 : _l.type) === "text" ? (l.text += "@" + t.command) : (t.parent.children.pop(), new Zi(t.parent, "@" + t.command), t.parent.children.push(t)), (t.command = "");
          } else if (o === "{" || o === "(") {
            var l1 = t.command.trim();
            if (l1 === "" || /\s/.test(l1)) t.parent.children.pop(), (t = new Zi(t.parent, "@" + t.command + o));
            else {
              t.command = l1;
              var a = t.command.toLowerCase(),
                _ref = _sliced_to_array(o === "{" ? [1, 0] : [0, 1], 2),
                c = _ref[0],
                f = _ref[1],
                d = "@" + a + o;
              switch (a) {
                case "string":
                  t = new fl(t, d, c, f);
                  break;
                case "preamble":
                  t = new cl(t, d, c, f);
                  break;
                case "comment":
                  t = new hl(t, d, c, f);
                  break;
                default:
                  t = new dl(t, o);
                  break;
              }
            }
          } else o.match(/[=#,})[\]]/) ? (t.parent.children.pop(), (t = new Zi(t.parent, "@" + t.command + o))) : (t.command += o);
          break;
        }
        case "comment":
        case "string":
        case "preamble":
          o === "{" ? t.braces++ : o === "}" ? t.braces-- : o === "(" ? t.parens++ : o === ")" && t.parens--, (t.raw += o), t.braces === 0 && t.parens === 0 && (t = t.parent.parent);
          break;
        case "entry": {
          if (fs(o)) t.key && (t.keyEnded = !0);
          else if (o === ",") t = new gi(t);
          else if ((t.wrapType === "{" && o === "}") || (t.wrapType === "(" && o === ")")) t = t.parent.parent;
          else if (o === "=" && t.key && X0(t.key)) {
            var l2 = new gi(t, t.key);
            t.fields.push(l2), (t.key = void 0), (t = l2.value);
          } else {
            if (t.keyEnded) throw new ut(r, t, s, i, n, "The entry key cannot contain whitespace");
            var _t_key;
            if (ZB(o)) t.key = ((_t_key = t.key) !== null && _t_key !== void 0 ? _t_key : "") + o;
            else throw new ut(r, t, s, i, n, "The entry key cannot contain the character (".concat(o, ")"));
          }
          break;
        }
        case "field": {
          if (o === "}" || o === ")") (t.name = t.name.trim()), (t = t.parent.parent.parent);
          else if (o === "=") (t.name = t.name.trim()), (t = t.value);
          else if (o === ",") (t.name = t.name.trim()), (t = new gi(t.parent));
          else if (X0(o)) t.name ? (t.name += o) : fs(o) || (t.parent.fields.push(t), (t.name = o));
          else throw new ut(r, t, s, i, n);
          break;
        }
        case "concat": {
          if (fs(o)) break;
          if (t.canConsumeValue) {
            if (/[#=,}()[\]]/.test(o)) throw new ut(r, t, s, i, n);
            (t.canConsumeValue = !1), o === "{" ? (t = new gl(t)) : o === '"' ? (t = new Dl(t)) : (t = new ml(t, o));
          } else if (o === ",") t = new gi(t.parent.parent);
          else if (o === "}" || o === ")") t = t.parent.parent.parent.parent;
          else if (o === "#") t.canConsumeValue = !0;
          else throw new ut(r, t, s, i, n);
          break;
        }
        case "literal":
          fs(o) ? (t = t.parent) : o === "," ? (t = new gi(t.parent.parent.parent)) : o === "}" ? (t = t.parent.parent.parent.parent.parent) : o === "#" ? ((t = t.parent), (t.canConsumeValue = !0)) : (t.value += o);
          break;
        case "braced":
          if (o === "}" && t.depth === 0) {
            t = t.parent;
            break;
          } else o === "{" ? t.depth++ : o === "}" && t.depth--;
          t.value += o;
          break;
        case "quoted":
          if (o === '"' && t.depth === 0) {
            t = t.parent;
            break;
          } else if (o === "{") t.depth++;
          else if (o === "}" && (t.depth--, t.depth < 0)) throw new ut(r, t, s, i, n);
          t.value += o;
          break;
      }
    }
    return e;
  }
  h(K0, "generateAST");
  function fs(r) {
    return /^[ \t\n\r]*$/.test(r);
  }
  h(fs, "isWhitespace");
  function ZB(r) {
    return !/[#%{}~$,]/.test(r);
  }
  h(ZB, "isValidKeyCharacter");
  function X0(r) {
    return !/[=,{}()[\]]/.test(r);
  }
  h(X0, "isValidFieldName");
  var ut =
    ((_class14 = class _class extends Error {
      constructor(t, i, n, s, o, u) {
        super("Line ".concat(s, ":").concat(o, ": Syntax Error in ").concat(i.type, " (").concat(u, ")\n") + t.slice(Math.max(0, n - 20), n) + ">>" + t[n] + "<<" + t.slice(n + 1, n + 20));
        this.node = i;
        this.line = s;
        this.column = o;
        this.hint = u;
        (this.name = "Syntax Error"), (this.char = t[n]);
      }
    }),
    (() => {
      h(_class14, "BibTeXSyntaxError");
    })(),
    _class14);
  var er =
      ((_r1 = class r {
        constructor(e, t, ref) {
          var i = ref === void 0 ? [] : ref;
          this.kind = e;
          this.parent = t;
          this.children = i;
          this.type = "block";
          t instanceof r ? t.children.push(this) : t instanceof ps && t.args.push(this);
        }
      }),
      (() => {
        h(_r1, "BlockNode");
      })(),
      _r1),
    Fl =
      ((_class15 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? "" : ref;
          this.parent = e;
          this.text = t;
          this.type = "text";
          e.children.push(this);
        }
      }),
      (() => {
        h(_class15, "TextNode");
      })(),
      _class15),
    ps =
      ((_class16 = class _class {
        constructor(e, ref, ref1) {
          var t = ref === void 0 ? "" : ref,
            i = ref1 === void 0 ? [] : ref1;
          this.parent = e;
          this.command = t;
          this.args = i;
          this.type = "command";
          e.children.push(this);
        }
      }),
      (() => {
        h(_class16, "CommandNode");
      })(),
      _class16);
  function ms(r) {
    var e = new er("root"),
      t = e;
    for (var i = 0; i < r.length; i++) {
      var n = r[i];
      switch (t.type) {
        case "block": {
          n === "\\" ? (t = new ps(t)) : n === "{" ? (t = new er("curly", t)) : ((n === "}" && t.kind === "curly") || (n === "]" && t.kind === "square")) && t.parent ? (t = t.parent) : (t = new Fl(t, n));
          break;
        }
        case "text": {
          n === "\\" || n === "{" || (n === "}" && t.parent.kind === "curly") || (n === "]" && t.parent.kind === "square") ? ((t = t.parent), i--) : (t.text += n);
          break;
        }
        case "command":
          n === "{" ? (t = new er("curly", t)) : n === "[" ? (t = new er("square", t)) : /\s/.test(n) ? ((t = t.parent), i--) : t.args.length === 0 ? (t.command += n) : ((t = t.parent), i--);
      }
    }
    return e;
  }
  h(ms, "parseLaTeX");
  function gs(r) {
    return bl(r);
  }
  h(gs, "stringifyLaTeX");
  function bl(r) {
    var e = r.children
      .map((t) => {
        switch (t.type) {
          case "block":
            return bl(t);
          case "command":
            return ev(t);
          case "text":
            return t.text;
        }
      })
      .join("");
    switch (r.kind) {
      case "root":
        return e;
      case "curly":
        return "{" + e + "}";
      case "square":
        return "[" + e + "]";
    }
  }
  h(bl, "stringifyBlock");
  function ev(r) {
    return "\\" + r.command + r.args.map(bl).join("");
  }
  h(ev, "stringifyCommand");
  function $r(r) {
    var e = _object_spread_props(_object_spread({}, r), { children: [] });
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.type === "block" && t.kind === "curly") {
          var i = $r(t);
          e.children.push(...i.children);
        } else e.children.push(t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h($r, "flattenLaTeX");
  var Z0 = new Map([
    ["0023", "\\#"],
    ["0024", "\\$"],
    ["0025", "\\%"],
    ["0026", "\\&"],
    ["0027", "'"],
    ["0040", "\\@"],
    ["002a", "\\textasteriskcentered"],
    ["005f", "\\_"],
    ["007c", "\\vert{}"],
    ["00a0", "~"],
    ["00a1", "\\textexclamdown{}"],
    ["00a2", "\\textcent{}"],
    ["00a3", "\\textsterling{}"],
    ["00a4", "\\textcurrency{}"],
    ["00a5", "\\textyen{}"],
    ["00a6", "\\textbrokenbar{}"],
    ["00a7", "\\textsection{}"],
    ["00a8", "\\textasciidieresis{}"],
    ["00a9", "\\textcopyright{}"],
    ["00aa", "\\textordfeminine{}"],
    ["00ab", "\\guillemotleft{}"],
    ["00ac", "\\lnot{}"],
    ["00ad", "\\-"],
    ["00ae", "\\textregistered{}"],
    ["00af", "\\textasciimacron{}"],
    ["00b0", "\\textdegree{}"],
    ["00b1", "\\pm{}"],
    ["00b2", "\\ensuremath{^2}"],
    ["00b3", "\\ensuremath{^3}"],
    ["00b4", "\\textasciiacute{}"],
    ["00b5", "\\mathrm{\\mu}"],
    ["00b6", "\\textparagraph{}"],
    ["00b7", "\\cdot{}"],
    ["00b8", "\\c{}"],
    ["00b9", "\\ensuremath{^1}"],
    ["00ba", "\\textordmasculine{}"],
    ["00bb", "\\guillemotright{}"],
    ["00bc", "\\textonequarter{}"],
    ["00bd", "\\textonehalf{}"],
    ["00be", "\\textthreequarters{}"],
    ["00bf", "\\textquestiondown{}"],
    ["00c0", "\\`{A}"],
    ["00c1", "\\'{A}"],
    ["00c2", "\\^{A}"],
    ["00c3", "\\~{A}"],
    ["00c4", '\\"{A}'],
    ["00c5", "\\AA{}"],
    ["00c6", "\\AE{}"],
    ["00c7", "\\c{C}"],
    ["00c8", "\\`{E}"],
    ["00c9", "\\'{E}"],
    ["00ca", "\\^{E}"],
    ["00cb", '\\"{E}'],
    ["00cc", "\\`{I}"],
    ["00cd", "\\'{I}"],
    ["00ce", "\\^{I}"],
    ["00cf", '\\"{I}'],
    ["00d0", "\\DH{}"],
    ["00d1", "\\~{N}"],
    ["00d2", "\\`{O}"],
    ["00d3", "\\'{O}"],
    ["00d4", "\\^{O}"],
    ["00d5", "\\~{O}"],
    ["00d6", '\\"{O}'],
    ["00d7", "\\texttimes{}"],
    ["00d8", "\\O{}"],
    ["00d9", "\\`{U}"],
    ["00da", "\\'{U}"],
    ["00db", "\\^{U}"],
    ["00dc", '\\"{U}'],
    ["00dd", "\\'{Y}"],
    ["00de", "\\TH{}"],
    ["00df", "\\ss{}"],
    ["00e0", "\\`{a}"],
    ["00e1", "\\'{a}"],
    ["00e2", "\\^{a}"],
    ["00e3", "\\~{a}"],
    ["00e4", '\\"{a}'],
    ["00e5", "\\aa{}"],
    ["00e6", "\\ae{}"],
    ["00e7", "\\c{c}"],
    ["00e8", "\\`{e}"],
    ["00e9", "\\'{e}"],
    ["00ea", "\\^{e}"],
    ["00eb", '\\"{e}'],
    ["00ec", "\\`{\\i}"],
    ["00ed", "\\'{\\i}"],
    ["00ee", "\\^{\\i}"],
    ["00ef", '\\"{\\i}'],
    ["00f0", "\\dh{}"],
    ["00f1", "\\~{n}"],
    ["00f2", "\\`{o}"],
    ["00f3", "\\'{o}"],
    ["00f4", "\\^{o}"],
    ["00f5", "\\~{o}"],
    ["00f6", '\\"{o}'],
    ["00f7", "\\div{}"],
    ["00f8", "\\o{}"],
    ["00f9", "\\`{u}"],
    ["00fa", "\\'{u}"],
    ["00fb", "\\^{u}"],
    ["00fc", '\\"{u}'],
    ["00fd", "\\'{y}"],
    ["00fe", "\\th{}"],
    ["00ff", '\\"{y}'],
    ["0100", "\\={A}"],
    ["0101", "\\={a}"],
    ["0102", "\\u{A}"],
    ["0103", "\\u{a}"],
    ["0104", "\\k{A}"],
    ["0105", "\\k{a}"],
    ["0106", "\\'{C}"],
    ["0107", "\\'{c}"],
    ["0108", "\\^{C}"],
    ["0109", "\\^{c}"],
    ["010a", "\\.{C}"],
    ["010b", "\\.{c}"],
    ["010c", "\\v{C}"],
    ["010d", "\\v{c}"],
    ["010e", "\\v{D}"],
    ["010f", "\\v{d}"],
    ["0110", "\\DJ{}"],
    ["0111", "\\dj{}"],
    ["0112", "\\={E}"],
    ["0113", "\\={e}"],
    ["0114", "\\u{E}"],
    ["0115", "\\u{e}"],
    ["0116", "\\.{E}"],
    ["0117", "\\.{e}"],
    ["0118", "\\k{E}"],
    ["0119", "\\k{e}"],
    ["011a", "\\v{E}"],
    ["011b", "\\v{e}"],
    ["011c", "\\^{G}"],
    ["011d", "\\^{g}"],
    ["011e", "\\u{G}"],
    ["011f", "\\u{g}"],
    ["0120", "\\.{G}"],
    ["0121", "\\.{g}"],
    ["0122", "\\c{G}"],
    ["0123", "\\c{g}"],
    ["0124", "\\^{H}"],
    ["0125", "\\^{h}"],
    ["0126", "{\\fontencoding{LELA}\\selectfont\\char40}"],
    ["0127", "\\Elzxh{}"],
    ["0128", "\\~{I}"],
    ["0129", "\\~{\\i}"],
    ["012a", "\\={I}"],
    ["012b", "\\={\\i}"],
    ["012c", "\\u{I}"],
    ["012d", "\\u{\\i}"],
    ["012e", "\\k{I}"],
    ["012f", "\\k{i}"],
    ["0130", "\\.{I}"],
    ["0131", "\\i{}"],
    ["0132", "IJ"],
    ["0133", "ij"],
    ["0134", "\\^{J}"],
    ["0135", "\\^{\\j}"],
    ["0136", "\\c{K}"],
    ["0137", "\\c{k}"],
    ["0138", "{\\fontencoding{LELA}\\selectfont\\char91}"],
    ["0139", "\\'{L}"],
    ["013a", "\\'{l}"],
    ["013b", "\\c{L}"],
    ["013c", "\\c{l}"],
    ["013d", "\\v{L}"],
    ["013e", "\\v{l}"],
    ["013f", "{\\fontencoding{LELA}\\selectfont\\char201}"],
    ["0140", "{\\fontencoding{LELA}\\selectfont\\char202}"],
    ["0141", "\\L{}"],
    ["0142", "\\l{}"],
    ["0143", "\\'{N}"],
    ["0144", "\\'{n}"],
    ["0145", "\\c{N}"],
    ["0146", "\\c{n}"],
    ["0147", "\\v{N}"],
    ["0148", "\\v{n}"],
    ["0149", "'n"],
    ["014a", "\\NG{}"],
    ["014b", "\\ng{}"],
    ["014c", "\\={O}"],
    ["014d", "\\={o}"],
    ["014e", "\\u{O}"],
    ["014f", "\\u{o}"],
    ["0150", "\\H{O}"],
    ["0151", "\\H{o}"],
    ["0152", "\\OE{}"],
    ["0153", "\\oe{}"],
    ["0154", "\\'{R}"],
    ["0155", "\\'{r}"],
    ["0156", "\\c{R}"],
    ["0157", "\\c{r}"],
    ["0158", "\\v{R}"],
    ["0159", "\\v{r}"],
    ["015a", "\\'{S}"],
    ["015b", "\\'{s}"],
    ["015c", "\\^{S}"],
    ["015d", "\\^{s}"],
    ["015e", "\\c{S}"],
    ["015f", "\\c{s}"],
    ["0160", "\\v{S}"],
    ["0161", "\\v{s}"],
    ["0162", "\\c{T}"],
    ["0163", "\\c{t}"],
    ["0164", "\\v{T}"],
    ["0165", "\\v{t}"],
    ["0166", "{\\fontencoding{LELA}\\selectfont\\char47}"],
    ["0167", "{\\fontencoding{LELA}\\selectfont\\char63}"],
    ["0168", "\\~{U}"],
    ["0169", "\\~{u}"],
    ["016a", "\\={U}"],
    ["016b", "\\={u}"],
    ["016c", "\\u{U}"],
    ["016d", "\\u{u}"],
    ["016e", "\\r{U}"],
    ["016f", "\\r{u}"],
    ["0170", "\\H{U}"],
    ["0171", "\\H{u}"],
    ["0172", "\\k{U}"],
    ["0173", "\\k{u}"],
    ["0174", "\\^{W}"],
    ["0175", "\\^{w}"],
    ["0176", "\\^{Y}"],
    ["0177", "\\^{y}"],
    ["0178", '\\"{Y}'],
    ["0179", "\\'{Z}"],
    ["017a", "\\'{z}"],
    ["017b", "\\.{Z}"],
    ["017c", "\\.{z}"],
    ["017d", "\\v{Z}"],
    ["017e", "\\v{z}"],
    ["0195", "\\texthvlig{}"],
    ["019e", "\\textnrleg{}"],
    ["01aa", "\\eth{}"],
    ["01ba", "{\\fontencoding{LELA}\\selectfont\\char195}"],
    ["01c2", "\\textdoublepipe{}"],
    ["01f5", "\\'{g}"],
    ["0250", "\\Elztrna{}"],
    ["0252", "\\Elztrnsa{}"],
    ["0254", "\\Elzopeno{}"],
    ["0256", "\\Elzrtld{}"],
    ["0258", "{\\fontencoding{LEIP}\\selectfont\\char61}"],
    ["0259", "\\Elzschwa{}"],
    ["025b", "\\varepsilon{}"],
    ["0263", "\\Elzpgamma{}"],
    ["0264", "\\Elzpbgam{}"],
    ["0265", "\\Elztrnh{}"],
    ["026c", "\\Elzbtdl{}"],
    ["026d", "\\Elzrtll{}"],
    ["026f", "\\Elztrnm{}"],
    ["0270", "\\Elztrnmlr{}"],
    ["0271", "\\Elzltlmr{}"],
    ["0272", "\\Elzltln{}"],
    ["0273", "\\Elzrtln{}"],
    ["0277", "\\Elzclomeg{}"],
    ["0278", "\\textphi{}"],
    ["0279", "\\Elztrnr{}"],
    ["027a", "\\Elztrnrl{}"],
    ["027b", "\\Elzrttrnr{}"],
    ["027c", "\\Elzrl{}"],
    ["027d", "\\Elzrtlr{}"],
    ["027e", "\\Elzfhr{}"],
    ["027f", "{\\fontencoding{LEIP}\\selectfont\\char202}"],
    ["0282", "\\Elzrtls{}"],
    ["0283", "\\Elzesh{}"],
    ["0287", "\\Elztrnt{}"],
    ["0288", "\\Elzrtlt{}"],
    ["028a", "\\Elzpupsil{}"],
    ["028b", "\\Elzpscrv{}"],
    ["028c", "\\Elzinvv{}"],
    ["028d", "\\Elzinvw{}"],
    ["028e", "\\Elztrny{}"],
    ["0290", "\\Elzrtlz{}"],
    ["0292", "\\Elzyogh{}"],
    ["0294", "\\Elzglst{}"],
    ["0295", "\\Elzreglst{}"],
    ["0296", "\\Elzinglst{}"],
    ["029e", "\\textturnk{}"],
    ["02a4", "\\Elzdyogh{}"],
    ["02a7", "\\Elztesh{}"],
    ["02c7", "\\textasciicaron{}"],
    ["02c8", "\\Elzverts{}"],
    ["02cc", "\\Elzverti{}"],
    ["02d0", "\\Elzlmrk{}"],
    ["02d1", "\\Elzhlmrk{}"],
    ["02d2", "\\Elzsbrhr{}"],
    ["02d3", "\\Elzsblhr{}"],
    ["02d4", "\\Elzrais{}"],
    ["02d5", "\\Elzlow{}"],
    ["02d8", "\\textasciibreve{}"],
    ["02d9", "\\textperiodcentered{}"],
    ["02da", "\\r{}"],
    ["02db", "\\k{}"],
    ["02dc", "\\texttildelow{}"],
    ["02dd", "\\H{}"],
    ["02e5", "\\tone{55}"],
    ["02e6", "\\tone{44}"],
    ["02e7", "\\tone{33}"],
    ["02e8", "\\tone{22}"],
    ["02e9", "\\tone{11}"],
    ["0300", "\\`"],
    ["0301", "\\'"],
    ["0302", "\\^"],
    ["0303", "\\~"],
    ["0304", "\\="],
    ["0306", "\\u"],
    ["0307", "\\."],
    ["0308", '\\"'],
    ["030a", "\\r"],
    ["030b", "\\H"],
    ["030c", "\\v"],
    ["030f", "\\cyrchar\\C"],
    ["0311", "{\\fontencoding{LECO}\\selectfont\\char177}"],
    ["0318", "{\\fontencoding{LECO}\\selectfont\\char184}"],
    ["0319", "{\\fontencoding{LECO}\\selectfont\\char185}"],
    ["0321", "\\Elzpalh{}"],
    ["0322", "\\Elzrh{}"],
    ["0327", "\\c"],
    ["0328", "\\k"],
    ["032a", "\\Elzsbbrg{}"],
    ["032b", "{\\fontencoding{LECO}\\selectfont\\char203}"],
    ["032f", "{\\fontencoding{LECO}\\selectfont\\char207}"],
    ["0335", "\\Elzxl{}"],
    ["0336", "\\Elzbar{}"],
    ["0337", "{\\fontencoding{LECO}\\selectfont\\char215}"],
    ["0338", "{\\fontencoding{LECO}\\selectfont\\char216}"],
    ["033a", "{\\fontencoding{LECO}\\selectfont\\char218}"],
    ["033b", "{\\fontencoding{LECO}\\selectfont\\char219}"],
    ["033c", "{\\fontencoding{LECO}\\selectfont\\char220}"],
    ["033d", "{\\fontencoding{LECO}\\selectfont\\char221}"],
    ["0361", "{\\fontencoding{LECO}\\selectfont\\char225}"],
    ["0386", "\\'{A}"],
    ["0388", "\\'{E}"],
    ["0389", "\\'{H}"],
    ["038a", "\\'{}{I}"],
    ["038c", "\\'{}O"],
    ["038e", "\\mathrm{'Y}"],
    ["038f", "\\mathrm{'\\Omega}"],
    ["0390", "\\acute{\\ddot{\\iota}}"],
    ["0391", "\\ensuremath{\\Alpha}"],
    ["0392", "\\ensuremath{\\Beta}"],
    ["0393", "\\ensuremath{\\Gamma}"],
    ["0394", "\\ensuremath{\\Delta}"],
    ["0395", "\\ensuremath{\\Epsilon}"],
    ["0396", "\\ensuremath{\\Zeta}"],
    ["0397", "\\ensuremath{\\Eta}"],
    ["0398", "\\ensuremath{\\Theta}"],
    ["0399", "\\ensuremath{\\Iota}"],
    ["039a", "\\ensuremath{\\Kappa}"],
    ["039b", "\\ensuremath{\\Lambda}"],
    ["039e", "\\ensuremath{\\Xi}"],
    ["03a0", "\\ensuremath{\\Pi}"],
    ["03a1", "\\ensuremath{\\Rho}"],
    ["03a3", "\\ensuremath{\\Sigma}"],
    ["03a4", "\\ensuremath{\\Tau}"],
    ["03a5", "\\ensuremath{\\Upsilon}"],
    ["03a6", "\\ensuremath{\\Phi}"],
    ["03a7", "\\ensuremath{\\Chi}"],
    ["03a8", "\\ensuremath{\\Psi}"],
    ["03a9", "\\ensuremath{\\Omega}"],
    ["03aa", "\\mathrm{\\ddot{I}}"],
    ["03ab", "\\mathrm{\\ddot{Y}}"],
    ["03ac", "\\'{$\\alpha$}"],
    ["03ad", "\\acute{\\epsilon}"],
    ["03ae", "\\acute{\\eta}"],
    ["03af", "\\acute{\\iota}"],
    ["03b0", "\\acute{\\ddot{\\upsilon}}"],
    ["03b1", "\\ensuremath{\\alpha}"],
    ["03b2", "\\ensuremath{\\beta}"],
    ["03b3", "\\ensuremath{\\gamma}"],
    ["03b4", "\\ensuremath{\\delta}"],
    ["03b5", "\\ensuremath{\\epsilon}"],
    ["03b6", "\\ensuremath{\\zeta}"],
    ["03b7", "\\ensuremath{\\eta}"],
    ["03b8", "\\texttheta{}"],
    ["03b9", "\\ensuremath{\\iota}"],
    ["03ba", "\\ensuremath{\\kappa}"],
    ["03bb", "\\ensuremath{\\lambda}"],
    ["03bc", "\\ensuremath{\\mu}"],
    ["03bd", "\\ensuremath{\\nu}"],
    ["03be", "\\ensuremath{\\xi}"],
    ["03c0", "\\ensuremath{\\pi}"],
    ["03c1", "\\ensuremath{\\rho}"],
    ["03c2", "\\ensuremath{\\varsigma}"],
    ["03c3", "\\ensuremath{\\sigma}"],
    ["03c4", "\\ensuremath{\\tau}"],
    ["03c5", "\\ensuremath{\\upsilon}"],
    ["03c6", "\\ensuremath{\\varphi}"],
    ["03c7", "\\ensuremath{\\chi}"],
    ["03c8", "\\ensuremath{\\psi}"],
    ["03c9", "\\ensuremath{\\omega}"],
    ["03ca", "\\ensuremath{\\ddot{\\iota}}"],
    ["03cb", "\\ensuremath{\\ddot{\\upsilon}}"],
    ["03cc", "\\'{o}"],
    ["03cd", "\\acute{\\upsilon}"],
    ["03ce", "\\acute{\\omega}"],
    ["03d0", "\\Pisymbol{ppi022}{87}"],
    ["03d1", "\\textvartheta{}"],
    ["03d2", "\\ensuremath{\\Upsilon}"],
    ["03d5", "\\ensuremath{\\phi}"],
    ["03d6", "\\ensuremath{\\varpi}"],
    ["03da", "\\Stigma{}"],
    ["03dc", "\\Digamma{}"],
    ["03dd", "\\digamma{}"],
    ["03de", "\\Koppa{}"],
    ["03e0", "\\Sampi{}"],
    ["03f0", "\\varkappa{}"],
    ["03f1", "\\varrho{}"],
    ["03f4", "\\textTheta{}"],
    ["03f6", "\\backepsilon{}"],
    ["0401", "\\cyrchar\\CYRYO{}"],
    ["0402", "\\cyrchar\\CYRDJE{}"],
    ["0403", "\\cyrchar{\\'\\CYRG}"],
    ["0404", "\\cyrchar\\CYRIE{}"],
    ["0405", "\\cyrchar\\CYRDZE{}"],
    ["0406", "\\cyrchar\\CYRII{}"],
    ["0407", "\\cyrchar\\CYRYI{}"],
    ["0408", "\\cyrchar\\CYRJE{}"],
    ["0409", "\\cyrchar\\CYRLJE{}"],
    ["040a", "\\cyrchar\\CYRNJE{}"],
    ["040b", "\\cyrchar\\CYRTSHE{}"],
    ["040c", "\\cyrchar{\\'\\CYRK}"],
    ["040e", "\\cyrchar\\CYRUSHRT{}"],
    ["040f", "\\cyrchar\\CYRDZHE{}"],
    ["0410", "\\cyrchar\\CYRA{}"],
    ["0411", "\\cyrchar\\CYRB{}"],
    ["0412", "\\cyrchar\\CYRV{}"],
    ["0413", "\\cyrchar\\CYRG{}"],
    ["0414", "\\cyrchar\\CYRD{}"],
    ["0415", "\\cyrchar\\CYRE{}"],
    ["0416", "\\cyrchar\\CYRZH{}"],
    ["0417", "\\cyrchar\\CYRZ{}"],
    ["0418", "\\cyrchar\\CYRI{}"],
    ["0419", "\\cyrchar\\CYRISHRT{}"],
    ["041a", "\\cyrchar\\CYRK{}"],
    ["041b", "\\cyrchar\\CYRL{}"],
    ["041c", "\\cyrchar\\CYRM{}"],
    ["041d", "\\cyrchar\\CYRN{}"],
    ["041e", "\\cyrchar\\CYRO{}"],
    ["041f", "\\cyrchar\\CYRP{}"],
    ["0420", "\\cyrchar\\CYRR{}"],
    ["0421", "\\cyrchar\\CYRS{}"],
    ["0422", "\\cyrchar\\CYRT{}"],
    ["0423", "\\cyrchar\\CYRU{}"],
    ["0424", "\\cyrchar\\CYRF{}"],
    ["0425", "\\cyrchar\\CYRH{}"],
    ["0426", "\\cyrchar\\CYRC{}"],
    ["0427", "\\cyrchar\\CYRCH{}"],
    ["0428", "\\cyrchar\\CYRSH{}"],
    ["0429", "\\cyrchar\\CYRSHCH{}"],
    ["042a", "\\cyrchar\\CYRHRDSN{}"],
    ["042b", "\\cyrchar\\CYRERY{}"],
    ["042c", "\\cyrchar\\CYRSFTSN{}"],
    ["042d", "\\cyrchar\\CYREREV{}"],
    ["042e", "\\cyrchar\\CYRYU{}"],
    ["042f", "\\cyrchar\\CYRYA{}"],
    ["0430", "\\cyrchar\\cyra{}"],
    ["0431", "\\cyrchar\\cyrb{}"],
    ["0432", "\\cyrchar\\cyrv{}"],
    ["0433", "\\cyrchar\\cyrg{}"],
    ["0434", "\\cyrchar\\cyrd{}"],
    ["0435", "\\cyrchar\\cyre{}"],
    ["0436", "\\cyrchar\\cyrzh{}"],
    ["0437", "\\cyrchar\\cyrz{}"],
    ["0438", "\\cyrchar\\cyri{}"],
    ["0439", "\\cyrchar\\cyrishrt{}"],
    ["043a", "\\cyrchar\\cyrk{}"],
    ["043b", "\\cyrchar\\cyrl{}"],
    ["043c", "\\cyrchar\\cyrm{}"],
    ["043d", "\\cyrchar\\cyrn{}"],
    ["043e", "\\cyrchar\\cyro{}"],
    ["043f", "\\cyrchar\\cyrp{}"],
    ["0440", "\\cyrchar\\cyrr{}"],
    ["0441", "\\cyrchar\\cyrs{}"],
    ["0442", "\\cyrchar\\cyrt{}"],
    ["0443", "\\cyrchar\\cyru{}"],
    ["0444", "\\cyrchar\\cyrf{}"],
    ["0445", "\\cyrchar\\cyrh{}"],
    ["0446", "\\cyrchar\\cyrc{}"],
    ["0447", "\\cyrchar\\cyrch{}"],
    ["0448", "\\cyrchar\\cyrsh{}"],
    ["0449", "\\cyrchar\\cyrshch{}"],
    ["044a", "\\cyrchar\\cyrhrdsn{}"],
    ["044b", "\\cyrchar\\cyrery{}"],
    ["044c", "\\cyrchar\\cyrsftsn{}"],
    ["044d", "\\cyrchar\\cyrerev{}"],
    ["044e", "\\cyrchar\\cyryu{}"],
    ["044f", "\\cyrchar\\cyrya{}"],
    ["0451", "\\cyrchar\\cyryo{}"],
    ["0452", "\\cyrchar\\cyrdje{}"],
    ["0453", "\\cyrchar{\\'\\cyrg}"],
    ["0454", "\\cyrchar\\cyrie{}"],
    ["0455", "\\cyrchar\\cyrdze{}"],
    ["0456", "\\cyrchar\\cyrii{}"],
    ["0457", "\\cyrchar\\cyryi{}"],
    ["0458", "\\cyrchar\\cyrje{}"],
    ["0459", "\\cyrchar\\cyrlje{}"],
    ["045a", "\\cyrchar\\cyrnje{}"],
    ["045b", "\\cyrchar\\cyrtshe{}"],
    ["045c", "\\cyrchar{\\'\\cyrk}"],
    ["045e", "\\cyrchar\\cyrushrt{}"],
    ["045f", "\\cyrchar\\cyrdzhe{}"],
    ["0460", "\\cyrchar\\CYROMEGA{}"],
    ["0461", "\\cyrchar\\cyromega{}"],
    ["0462", "\\cyrchar\\CYRYAT{}"],
    ["0464", "\\cyrchar\\CYRIOTE{}"],
    ["0465", "\\cyrchar\\cyriote{}"],
    ["0466", "\\cyrchar\\CYRLYUS{}"],
    ["0467", "\\cyrchar\\cyrlyus{}"],
    ["0468", "\\cyrchar\\CYRIOTLYUS{}"],
    ["0469", "\\cyrchar\\cyriotlyus{}"],
    ["046a", "\\cyrchar\\CYRBYUS{}"],
    ["046c", "\\cyrchar\\CYRIOTBYUS{}"],
    ["046d", "\\cyrchar\\cyriotbyus{}"],
    ["046e", "\\cyrchar\\CYRKSI{}"],
    ["046f", "\\cyrchar\\cyrksi{}"],
    ["0470", "\\cyrchar\\CYRPSI{}"],
    ["0471", "\\cyrchar\\cyrpsi{}"],
    ["0472", "\\cyrchar\\CYRFITA{}"],
    ["0474", "\\cyrchar\\CYRIZH{}"],
    ["0478", "\\cyrchar\\CYRUK{}"],
    ["0479", "\\cyrchar\\cyruk{}"],
    ["047a", "\\cyrchar\\CYROMEGARND{}"],
    ["047b", "\\cyrchar\\cyromegarnd{}"],
    ["047c", "\\cyrchar\\CYROMEGATITLO{}"],
    ["047d", "\\cyrchar\\cyromegatitlo{}"],
    ["047e", "\\cyrchar\\CYROT{}"],
    ["047f", "\\cyrchar\\cyrot{}"],
    ["0480", "\\cyrchar\\CYRKOPPA{}"],
    ["0481", "\\cyrchar\\cyrkoppa{}"],
    ["0482", "\\cyrchar\\cyrthousands{}"],
    ["0488", "\\cyrchar\\cyrhundredthousands{}"],
    ["0489", "\\cyrchar\\cyrmillions{}"],
    ["048c", "\\cyrchar\\CYRSEMISFTSN{}"],
    ["048d", "\\cyrchar\\cyrsemisftsn{}"],
    ["048e", "\\cyrchar\\CYRRTICK{}"],
    ["048f", "\\cyrchar\\cyrrtick{}"],
    ["0490", "\\cyrchar\\CYRGUP{}"],
    ["0491", "\\cyrchar\\cyrgup{}"],
    ["0492", "\\cyrchar\\CYRGHCRS{}"],
    ["0493", "\\cyrchar\\cyrghcrs{}"],
    ["0494", "\\cyrchar\\CYRGHK{}"],
    ["0495", "\\cyrchar\\cyrghk{}"],
    ["0496", "\\cyrchar\\CYRZHDSC{}"],
    ["0497", "\\cyrchar\\cyrzhdsc{}"],
    ["0498", "\\cyrchar\\CYRZDSC{}"],
    ["0499", "\\cyrchar\\cyrzdsc{}"],
    ["049a", "\\cyrchar\\CYRKDSC{}"],
    ["049b", "\\cyrchar\\cyrkdsc{}"],
    ["049c", "\\cyrchar\\CYRKVCRS{}"],
    ["049d", "\\cyrchar\\cyrkvcrs{}"],
    ["049e", "\\cyrchar\\CYRKHCRS{}"],
    ["049f", "\\cyrchar\\cyrkhcrs{}"],
    ["04a0", "\\cyrchar\\CYRKBEAK{}"],
    ["04a1", "\\cyrchar\\cyrkbeak{}"],
    ["04a2", "\\cyrchar\\CYRNDSC{}"],
    ["04a3", "\\cyrchar\\cyrndsc{}"],
    ["04a4", "\\cyrchar\\CYRNG{}"],
    ["04a5", "\\cyrchar\\cyrng{}"],
    ["04a6", "\\cyrchar\\CYRPHK{}"],
    ["04a7", "\\cyrchar\\cyrphk{}"],
    ["04a8", "\\cyrchar\\CYRABHHA{}"],
    ["04a9", "\\cyrchar\\cyrabhha{}"],
    ["04aa", "\\cyrchar\\CYRSDSC{}"],
    ["04ab", "\\cyrchar\\cyrsdsc{}"],
    ["04ac", "\\cyrchar\\CYRTDSC{}"],
    ["04ad", "\\cyrchar\\cyrtdsc{}"],
    ["04ae", "\\cyrchar\\CYRY{}"],
    ["04af", "\\cyrchar\\cyry{}"],
    ["04b0", "\\cyrchar\\CYRYHCRS{}"],
    ["04b1", "\\cyrchar\\cyryhcrs{}"],
    ["04b2", "\\cyrchar\\CYRHDSC{}"],
    ["04b3", "\\cyrchar\\cyrhdsc{}"],
    ["04b4", "\\cyrchar\\CYRTETSE{}"],
    ["04b5", "\\cyrchar\\cyrtetse{}"],
    ["04b6", "\\cyrchar\\CYRCHRDSC{}"],
    ["04b7", "\\cyrchar\\cyrchrdsc{}"],
    ["04b8", "\\cyrchar\\CYRCHVCRS{}"],
    ["04b9", "\\cyrchar\\cyrchvcrs{}"],
    ["04ba", "\\cyrchar\\CYRSHHA{}"],
    ["04bb", "\\cyrchar\\cyrshha{}"],
    ["04bc", "\\cyrchar\\CYRABHCH{}"],
    ["04bd", "\\cyrchar\\cyrabhch{}"],
    ["04be", "\\cyrchar\\CYRABHCHDSC{}"],
    ["04bf", "\\cyrchar\\cyrabhchdsc{}"],
    ["04c0", "\\cyrchar\\CYRpalochka{}"],
    ["04c3", "\\cyrchar\\CYRKHK{}"],
    ["04c4", "\\cyrchar\\cyrkhk{}"],
    ["04c7", "\\cyrchar\\CYRNHK{}"],
    ["04c8", "\\cyrchar\\cyrnhk{}"],
    ["04cb", "\\cyrchar\\CYRCHLDSC{}"],
    ["04cc", "\\cyrchar\\cyrchldsc{}"],
    ["04d4", "\\cyrchar\\CYRAE{}"],
    ["04d5", "\\cyrchar\\cyrae{}"],
    ["04d8", "\\cyrchar\\CYRSCHWA{}"],
    ["04d9", "\\cyrchar\\cyrschwa{}"],
    ["04e0", "\\cyrchar\\CYRABHDZE{}"],
    ["04e1", "\\cyrchar\\cyrabhdze{}"],
    ["04e8", "\\cyrchar\\CYROTLD{}"],
    ["04e9", "\\cyrchar\\cyrotld{}"],
    ["2002", "\\hspace{0.6em}"],
    ["2003", "\\hspace{1em}"],
    ["2004", "\\hspace{0.33em}"],
    ["2005", "\\hspace{0.25em}"],
    ["2006", "\\hspace{0.166em}"],
    ["2007", "\\hphantom{0}"],
    ["2008", "\\hphantom{,}"],
    ["2009", "\\hspace{0.167em}"],
    ["200a", "\\mkern1mu{}"],
    ["2010", "-"],
    ["2014", "--"],
    ["2015", "\\rule{1em}{1pt}"],
    ["2016", "\\Vert{}"],
    ["2018", "`"],
    ["2019", "'"],
    ["201b", "\\Elzreapos{}"],
    ["201c", "``"],
    ["201d", "''"],
    ["201e", ",,"],
    ["2020", "\\textdagger{}"],
    ["2021", "\\textdaggerdbl{}"],
    ["2022", "\\textbullet{}"],
    ["2025", ".."],
    ["2026", "\\ldots{}"],
    ["2030", "\\textperthousand{}"],
    ["2031", "\\textpertenthousand{}"],
    ["2032", "\\ensuremath{'}"],
    ["2033", "\\ensuremath{''}"],
    ["2034", "\\ensuremath{'''}"],
    ["2035", "\\backprime{}"],
    ["2039", "\\guilsinglleft{}"],
    ["203a", "\\guilsinglright{}"],
    ["2057", "''''"],
    ["205f", "\\mkern4mu{}"],
    ["2060", "\\nolinebreak{}"],
    ["20a7", "\\ensuremath{\\Elzpes}"],
    ["20ac", "\\mbox{\\texteuro}{}"],
    ["20db", "\\dddot{}"],
    ["20dc", "\\ddddot{}"],
    ["2102", "\\mathbb{C}"],
    ["210a", "\\mathscr{g}"],
    ["210b", "\\mathscr{H}"],
    ["210c", "\\mathfrak{H}"],
    ["210d", "\\mathbb{H}"],
    ["210f", "\\hslash{}"],
    ["2110", "\\mathscr{I}"],
    ["2111", "\\mathfrak{I}"],
    ["2112", "\\mathscr{L}"],
    ["2113", "\\mathscr{l}"],
    ["2115", "\\mathbb{N}"],
    ["2116", "\\cyrchar\\textnumero{}"],
    ["2118", "\\wp{}"],
    ["2119", "\\mathbb{P}"],
    ["211a", "\\mathbb{Q}"],
    ["211b", "\\mathscr{R}"],
    ["211c", "\\mathfrak{R}"],
    ["211d", "\\mathbb{R}"],
    ["211e", "\\Elzxrat{}"],
    ["2122", "\\texttrademark{}"],
    ["2124", "\\mathbb{Z}"],
    ["2126", "\\Omega{}"],
    ["2127", "\\mho{}"],
    ["2128", "\\mathfrak{Z}"],
    ["2129", "\\ElsevierGlyph{2129}"],
    ["212b", "\\AA{}"],
    ["212c", "\\mathscr{B}"],
    ["212d", "\\mathfrak{C}"],
    ["212f", "\\mathscr{e}"],
    ["2130", "\\mathscr{E}"],
    ["2131", "\\mathscr{F}"],
    ["2133", "\\mathscr{M}"],
    ["2134", "\\mathscr{o}"],
    ["2135", "\\aleph{}"],
    ["2136", "\\beth{}"],
    ["2137", "\\gimel{}"],
    ["2138", "\\daleth{}"],
    ["2153", "\\textfrac{1}{3}"],
    ["2154", "\\textfrac{2}{3}"],
    ["2155", "\\textfrac{1}{5}"],
    ["2156", "\\textfrac{2}{5}"],
    ["2157", "\\textfrac{3}{5}"],
    ["2158", "\\textfrac{4}{5}"],
    ["2159", "\\textfrac{1}{6}"],
    ["215a", "\\textfrac{5}{6}"],
    ["215b", "\\textfrac{1}{8}"],
    ["215c", "\\textfrac{3}{8}"],
    ["215d", "\\textfrac{5}{8}"],
    ["215e", "\\textfrac{7}{8}"],
    ["2190", "\\leftarrow{}"],
    ["2191", "\\uparrow{}"],
    ["2192", "\\rightarrow{}"],
    ["2193", "\\downarrow{}"],
    ["2194", "\\leftrightarrow{}"],
    ["2195", "\\updownarrow{}"],
    ["2196", "\\nwarrow{}"],
    ["2197", "\\nearrow{}"],
    ["2198", "\\searrow{}"],
    ["2199", "\\swarrow{}"],
    ["219a", "\\nleftarrow{}"],
    ["219b", "\\nrightarrow{}"],
    ["219c", "\\arrowwaveright{}"],
    ["219d", "\\arrowwaveright{}"],
    ["219e", "\\twoheadleftarrow{}"],
    ["21a0", "\\twoheadrightarrow{}"],
    ["21a2", "\\leftarrowtail{}"],
    ["21a3", "\\rightarrowtail{}"],
    ["21a6", "\\mapsto{}"],
    ["21a9", "\\hookleftarrow{}"],
    ["21aa", "\\hookrightarrow{}"],
    ["21ab", "\\looparrowleft{}"],
    ["21ac", "\\looparrowright{}"],
    ["21ad", "\\leftrightsquigarrow{}"],
    ["21ae", "\\nleftrightarrow{}"],
    ["21b0", "\\Lsh{}"],
    ["21b1", "\\Rsh{}"],
    ["21b3", "\\ElsevierGlyph{21B3}"],
    ["21b6", "\\curvearrowleft{}"],
    ["21b7", "\\curvearrowright{}"],
    ["21ba", "\\circlearrowleft{}"],
    ["21bb", "\\circlearrowright{}"],
    ["21bc", "\\leftharpoonup{}"],
    ["21bd", "\\leftharpoondown{}"],
    ["21be", "\\upharpoonright{}"],
    ["21bf", "\\upharpoonleft{}"],
    ["21c0", "\\rightharpoonup{}"],
    ["21c1", "\\rightharpoondown{}"],
    ["21c2", "\\downharpoonright{}"],
    ["21c3", "\\downharpoonleft{}"],
    ["21c4", "\\rightleftarrows{}"],
    ["21c5", "\\dblarrowupdown{}"],
    ["21c6", "\\leftrightarrows{}"],
    ["21c7", "\\leftleftarrows{}"],
    ["21c8", "\\upuparrows{}"],
    ["21c9", "\\rightrightarrows{}"],
    ["21ca", "\\downdownarrows{}"],
    ["21cb", "\\leftrightharpoons{}"],
    ["21cc", "\\rightleftharpoons{}"],
    ["21cd", "\\nLeftarrow{}"],
    ["21ce", "\\nLeftrightarrow{}"],
    ["21cf", "\\nRightarrow{}"],
    ["21d0", "\\Leftarrow{}"],
    ["21d1", "\\Uparrow{}"],
    ["21d2", "\\Rightarrow{}"],
    ["21d3", "\\Downarrow{}"],
    ["21d4", "\\Leftrightarrow{}"],
    ["21d5", "\\Updownarrow{}"],
    ["21da", "\\Lleftarrow{}"],
    ["21db", "\\Rrightarrow{}"],
    ["21dd", "\\rightsquigarrow{}"],
    ["21f5", "\\DownArrowUpArrow{}"],
    ["2200", "\\forall{}"],
    ["2201", "\\complement{}"],
    ["2202", "\\partial{}"],
    ["2203", "\\exists{}"],
    ["2204", "\\nexists{}"],
    ["2205", "\\varnothing{}"],
    ["2207", "\\nabla{}"],
    ["2208", "\\in{}"],
    ["2209", "\\not\\in{}"],
    ["220b", "\\ni{}"],
    ["220c", "\\not\\ni{}"],
    ["220f", "\\prod{}"],
    ["2210", "\\coprod{}"],
    ["2211", "\\sum{}"],
    ["2212", "-"],
    ["2213", "\\mp{}"],
    ["2214", "\\dotplus{}"],
    ["2216", "\\setminus{}"],
    ["2217", "{\\_\\ast}"],
    ["2218", "\\circ{}"],
    ["2219", "\\bullet{}"],
    ["221a", "\\surd{}"],
    ["221d", "\\propto{}"],
    ["221e", "\\infty{}"],
    ["221f", "\\rightangle{}"],
    ["2220", "\\angle{}"],
    ["2221", "\\measuredangle{}"],
    ["2222", "\\sphericalangle{}"],
    ["2223", "\\mid{}"],
    ["2224", "\\nmid{}"],
    ["2225", "\\parallel{}"],
    ["2226", "\\nparallel{}"],
    ["2227", "\\wedge{}"],
    ["2228", "\\vee{}"],
    ["2229", "\\cap{}"],
    ["222a", "\\cup{}"],
    ["222b", "\\int{}"],
    ["222c", "\\int\\!\\int{}"],
    ["222d", "\\int\\!\\int\\!\\int{}"],
    ["222e", "\\oint{}"],
    ["222f", "\\surfintegral{}"],
    ["2230", "\\volintegral{}"],
    ["2231", "\\clwintegral{}"],
    ["2232", "\\ElsevierGlyph{2232}"],
    ["2233", "\\ElsevierGlyph{2233}"],
    ["2234", "\\therefore{}"],
    ["2235", "\\because{}"],
    ["2237", "\\Colon{}"],
    ["2238", "\\ElsevierGlyph{2238}"],
    ["223a", "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}"],
    ["223b", "\\homothetic{}"],
    ["223c", "\\sim{}"],
    ["223d", "\\backsim{}"],
    ["223e", "\\lazysinv{}"],
    ["2240", "\\wr{}"],
    ["2241", "\\not\\sim{}"],
    ["2242", "\\ElsevierGlyph{2242}"],
    ["2243", "\\simeq{}"],
    ["2244", "\\not\\simeq{}"],
    ["2245", "\\cong{}"],
    ["2246", "\\approxnotequal{}"],
    ["2247", "\\not\\cong{}"],
    ["2248", "\\approx{}"],
    ["2249", "\\not\\approx{}"],
    ["224a", "\\approxeq{}"],
    ["224b", "\\tildetrpl{}"],
    ["224c", "\\allequal{}"],
    ["224d", "\\asymp{}"],
    ["224e", "\\Bumpeq{}"],
    ["224f", "\\bumpeq{}"],
    ["2250", "\\doteq{}"],
    ["2251", "\\doteqdot{}"],
    ["2252", "\\fallingdotseq{}"],
    ["2253", "\\risingdotseq{}"],
    ["2254", ":="],
    ["2255", "=:"],
    ["2256", "\\eqcirc{}"],
    ["2257", "\\circeq{}"],
    ["2259", "\\estimates{}"],
    ["225a", "\\ElsevierGlyph{225A}"],
    ["225b", "\\starequal{}"],
    ["225c", "\\triangleq{}"],
    ["225f", "\\ElsevierGlyph{225F}"],
    ["2260", "\\not ="],
    ["2261", "\\equiv{}"],
    ["2262", "\\not\\equiv{}"],
    ["2264", "\\leq{}"],
    ["2265", "\\geq{}"],
    ["2266", "\\leqq{}"],
    ["2267", "\\geqq{}"],
    ["2268", "\\lneqq{}"],
    ["2269", "\\gneqq{}"],
    ["226a", "\\ll{}"],
    ["226b", "\\gg{}"],
    ["226c", "\\between{}"],
    ["226d", "\\not\\kern-0.3em\\times{}"],
    ["226e", "\\not&lt;"],
    ["226f", "\\not&gt;"],
    ["2270", "\\not\\leq{}"],
    ["2271", "\\not\\geq{}"],
    ["2272", "\\lessequivlnt{}"],
    ["2273", "\\greaterequivlnt{}"],
    ["2274", "\\ElsevierGlyph{2274}"],
    ["2275", "\\ElsevierGlyph{2275}"],
    ["2276", "\\lessgtr{}"],
    ["2277", "\\gtrless{}"],
    ["2278", "\\notlessgreater{}"],
    ["2279", "\\notgreaterless{}"],
    ["227a", "\\prec{}"],
    ["227b", "\\succ{}"],
    ["227c", "\\preccurlyeq{}"],
    ["227d", "\\succcurlyeq{}"],
    ["227e", "\\precapprox{}"],
    ["227f", "\\succapprox{}"],
    ["2280", "\\not\\prec{}"],
    ["2281", "\\not\\succ{}"],
    ["2282", "\\subset{}"],
    ["2283", "\\supset{}"],
    ["2284", "\\not\\subset{}"],
    ["2285", "\\not\\supset{}"],
    ["2286", "\\subseteq{}"],
    ["2287", "\\supseteq{}"],
    ["2288", "\\not\\subseteq{}"],
    ["2289", "\\not\\supseteq{}"],
    ["228a", "\\subsetneq{}"],
    ["228b", "\\supsetneq{}"],
    ["228e", "\\uplus{}"],
    ["228f", "\\sqsubset{}"],
    ["2290", "\\sqsupset{}"],
    ["2291", "\\sqsubseteq{}"],
    ["2292", "\\sqsupseteq{}"],
    ["2293", "\\sqcap{}"],
    ["2294", "\\sqcup{}"],
    ["2295", "\\oplus{}"],
    ["2296", "\\ominus{}"],
    ["2297", "\\otimes{}"],
    ["2298", "\\oslash{}"],
    ["2299", "\\odot{}"],
    ["229a", "\\circledcirc{}"],
    ["229b", "\\circledast{}"],
    ["229d", "\\circleddash{}"],
    ["229e", "\\boxplus{}"],
    ["229f", "\\boxminus{}"],
    ["22a0", "\\boxtimes{}"],
    ["22a1", "\\boxdot{}"],
    ["22a2", "\\vdash{}"],
    ["22a3", "\\dashv{}"],
    ["22a4", "\\top{}"],
    ["22a5", "\\perp{}"],
    ["22a7", "\\truestate{}"],
    ["22a8", "\\forcesextra{}"],
    ["22a9", "\\Vdash{}"],
    ["22aa", "\\Vvdash{}"],
    ["22ab", "\\VDash{}"],
    ["22ac", "\\nvdash{}"],
    ["22ad", "\\nvDash{}"],
    ["22ae", "\\nVdash{}"],
    ["22af", "\\nVDash{}"],
    ["22b2", "\\vartriangleleft{}"],
    ["22b3", "\\vartriangleright{}"],
    ["22b4", "\\trianglelefteq{}"],
    ["22b5", "\\trianglerighteq{}"],
    ["22b6", "\\original{}"],
    ["22b7", "\\image{}"],
    ["22b8", "\\multimap{}"],
    ["22b9", "\\hermitconjmatrix{}"],
    ["22ba", "\\intercal{}"],
    ["22bb", "\\veebar{}"],
    ["22be", "\\rightanglearc{}"],
    ["22c0", "\\ElsevierGlyph{22C0}"],
    ["22c1", "\\ElsevierGlyph{22C1}"],
    ["22c2", "\\bigcap{}"],
    ["22c3", "\\bigcup{}"],
    ["22c4", "\\diamond{}"],
    ["22c5", "\\cdot{}"],
    ["22c6", "\\star{}"],
    ["22c7", "\\divideontimes{}"],
    ["22c8", "\\bowtie{}"],
    ["22c9", "\\ltimes{}"],
    ["22ca", "\\rtimes{}"],
    ["22cb", "\\leftthreetimes{}"],
    ["22cc", "\\rightthreetimes{}"],
    ["22cd", "\\backsimeq{}"],
    ["22ce", "\\curlyvee{}"],
    ["22cf", "\\curlywedge{}"],
    ["22d0", "\\Subset{}"],
    ["22d1", "\\Supset{}"],
    ["22d2", "\\Cap{}"],
    ["22d3", "\\Cup{}"],
    ["22d4", "\\pitchfork{}"],
    ["22d6", "\\lessdot{}"],
    ["22d7", "\\gtrdot{}"],
    ["22d8", "\\verymuchless{}"],
    ["22d9", "\\verymuchgreater{}"],
    ["22da", "\\lesseqgtr{}"],
    ["22db", "\\gtreqless{}"],
    ["22de", "\\curlyeqprec{}"],
    ["22df", "\\curlyeqsucc{}"],
    ["22e2", "\\not\\sqsubseteq{}"],
    ["22e3", "\\not\\sqsupseteq{}"],
    ["22e5", "\\Elzsqspne{}"],
    ["22e6", "\\lnsim{}"],
    ["22e7", "\\gnsim{}"],
    ["22e8", "\\precedesnotsimilar{}"],
    ["22e9", "\\succnsim{}"],
    ["22ea", "\\ntriangleleft{}"],
    ["22eb", "\\ntriangleright{}"],
    ["22ec", "\\ntrianglelefteq{}"],
    ["22ed", "\\ntrianglerighteq{}"],
    ["22ee", "\\vdots{}"],
    ["22ef", "\\cdots{}"],
    ["22f0", "\\upslopeellipsis{}"],
    ["22f1", "\\downslopeellipsis{}"],
    ["2305", "\\barwedge{}"],
    ["2306", "\\perspcorrespond{}"],
    ["2308", "\\lceil{}"],
    ["2309", "\\rceil{}"],
    ["230a", "\\lfloor{}"],
    ["230b", "\\rfloor{}"],
    ["2315", "\\recorder{}"],
    ["2316", '\\mathchar"2208'],
    ["231c", "\\ulcorner{}"],
    ["231d", "\\urcorner{}"],
    ["231e", "\\llcorner{}"],
    ["231f", "\\lrcorner{}"],
    ["2322", "\\frown{}"],
    ["2323", "\\smile{}"],
    ["2329", "\\langle{}"],
    ["232a", "\\rangle{}"],
    ["233d", "\\ElsevierGlyph{E838}"],
    ["23a3", "\\Elzdlcorn{}"],
    ["23b0", "\\lmoustache{}"],
    ["23b1", "\\rmoustache{}"],
    ["2423", "\\textvisiblespace{}"],
    ["2460", "\\ding{172}"],
    ["2461", "\\ding{173}"],
    ["2462", "\\ding{174}"],
    ["2463", "\\ding{175}"],
    ["2464", "\\ding{176}"],
    ["2465", "\\ding{177}"],
    ["2466", "\\ding{178}"],
    ["2467", "\\ding{179}"],
    ["2468", "\\ding{180}"],
    ["2469", "\\ding{181}"],
    ["24c8", "\\circledS{}"],
    ["2506", "\\Elzdshfnc{}"],
    ["2519", "\\Elzsqfnw{}"],
    ["2571", "\\diagup{}"],
    ["25a0", "\\ding{110}"],
    ["25a1", "\\square{}"],
    ["25aa", "\\blacksquare{}"],
    ["25ad", "\\fbox{~~}"],
    ["25af", "\\Elzvrecto{}"],
    ["25b1", "\\ElsevierGlyph{E381}"],
    ["25b2", "\\ding{115}"],
    ["25b3", "\\bigtriangleup{}"],
    ["25b4", "\\blacktriangle{}"],
    ["25b5", "\\vartriangle{}"],
    ["25b8", "\\blacktriangleright{}"],
    ["25b9", "\\triangleright{}"],
    ["25bc", "\\ding{116}"],
    ["25bd", "\\bigtriangledown{}"],
    ["25be", "\\blacktriangledown{}"],
    ["25bf", "\\triangledown{}"],
    ["25c2", "\\blacktriangleleft{}"],
    ["25c3", "\\triangleleft{}"],
    ["25c6", "\\ding{117}"],
    ["25ca", "\\lozenge{}"],
    ["25cb", "\\bigcirc{}"],
    ["25cf", "\\ding{108}"],
    ["25d0", "\\Elzcirfl{}"],
    ["25d1", "\\Elzcirfr{}"],
    ["25d2", "\\Elzcirfb{}"],
    ["25d7", "\\ding{119}"],
    ["25d8", "\\Elzrvbull{}"],
    ["25e7", "\\Elzsqfl{}"],
    ["25e8", "\\Elzsqfr{}"],
    ["25ea", "\\Elzsqfse{}"],
    ["25ef", "\\bigcirc{}"],
    ["2605", "\\ding{72}"],
    ["2606", "\\ding{73}"],
    ["260e", "\\ding{37}"],
    ["261b", "\\ding{42}"],
    ["261e", "\\ding{43}"],
    ["263e", "\\rightmoon{}"],
    ["263f", "\\mercury{}"],
    ["2640", "\\venus{}"],
    ["2642", "\\male{}"],
    ["2643", "\\jupiter{}"],
    ["2644", "\\saturn{}"],
    ["2645", "\\uranus{}"],
    ["2646", "\\neptune{}"],
    ["2647", "\\pluto{}"],
    ["2648", "\\aries{}"],
    ["2649", "\\taurus{}"],
    ["264a", "\\gemini{}"],
    ["264b", "\\cancer{}"],
    ["264c", "\\leo{}"],
    ["264d", "\\virgo{}"],
    ["264e", "\\libra{}"],
    ["264f", "\\scorpio{}"],
    ["2650", "\\sagittarius{}"],
    ["2651", "\\capricornus{}"],
    ["2652", "\\aquarius{}"],
    ["2653", "\\pisces{}"],
    ["2660", "\\ding{171}"],
    ["2662", "\\diamond{}"],
    ["2663", "\\ding{168}"],
    ["2665", "\\ding{170}"],
    ["2666", "\\ding{169}"],
    ["2669", "\\quarternote{}"],
    ["266a", "\\eighthnote{}"],
    ["266d", "\\flat{}"],
    ["266e", "\\natural{}"],
    ["266f", "\\sharp{}"],
    ["2701", "\\ding{33}"],
    ["2702", "\\ding{34}"],
    ["2703", "\\ding{35}"],
    ["2704", "\\ding{36}"],
    ["2706", "\\ding{38}"],
    ["2707", "\\ding{39}"],
    ["2708", "\\ding{40}"],
    ["2709", "\\ding{41}"],
    ["270c", "\\ding{44}"],
    ["270d", "\\ding{45}"],
    ["270e", "\\ding{46}"],
    ["270f", "\\ding{47}"],
    ["2710", "\\ding{48}"],
    ["2711", "\\ding{49}"],
    ["2712", "\\ding{50}"],
    ["2713", "\\ding{51}"],
    ["2714", "\\ding{52}"],
    ["2715", "\\ding{53}"],
    ["2716", "\\ding{54}"],
    ["2717", "\\ding{55}"],
    ["2718", "\\ding{56}"],
    ["2719", "\\ding{57}"],
    ["271a", "\\ding{58}"],
    ["271b", "\\ding{59}"],
    ["271c", "\\ding{60}"],
    ["271d", "\\ding{61}"],
    ["271e", "\\ding{62}"],
    ["271f", "\\ding{63}"],
    ["2720", "\\ding{64}"],
    ["2721", "\\ding{65}"],
    ["2722", "\\ding{66}"],
    ["2723", "\\ding{67}"],
    ["2724", "\\ding{68}"],
    ["2725", "\\ding{69}"],
    ["2726", "\\ding{70}"],
    ["2727", "\\ding{71}"],
    ["2729", "\\ding{73}"],
    ["272a", "\\ding{74}"],
    ["272b", "\\ding{75}"],
    ["272c", "\\ding{76}"],
    ["272d", "\\ding{77}"],
    ["272e", "\\ding{78}"],
    ["272f", "\\ding{79}"],
    ["2730", "\\ding{80}"],
    ["2731", "\\ding{81}"],
    ["2732", "\\ding{82}"],
    ["2733", "\\ding{83}"],
    ["2734", "\\ding{84}"],
    ["2735", "\\ding{85}"],
    ["2736", "\\ding{86}"],
    ["2737", "\\ding{87}"],
    ["2738", "\\ding{88}"],
    ["2739", "\\ding{89}"],
    ["273a", "\\ding{90}"],
    ["273b", "\\ding{91}"],
    ["273c", "\\ding{92}"],
    ["273d", "\\ding{93}"],
    ["273e", "\\ding{94}"],
    ["273f", "\\ding{95}"],
    ["2740", "\\ding{96}"],
    ["2741", "\\ding{97}"],
    ["2742", "\\ding{98}"],
    ["2743", "\\ding{99}"],
    ["2744", "\\ding{100}"],
    ["2745", "\\ding{101}"],
    ["2746", "\\ding{102}"],
    ["2747", "\\ding{103}"],
    ["2748", "\\ding{104}"],
    ["2749", "\\ding{105}"],
    ["274a", "\\ding{106}"],
    ["274b", "\\ding{107}"],
    ["274d", "\\ding{109}"],
    ["274f", "\\ding{111}"],
    ["2750", "\\ding{112}"],
    ["2751", "\\ding{113}"],
    ["2752", "\\ding{114}"],
    ["2756", "\\ding{118}"],
    ["2758", "\\ding{120}"],
    ["2759", "\\ding{121}"],
    ["275a", "\\ding{122}"],
    ["275b", "\\ding{123}"],
    ["275c", "\\ding{124}"],
    ["275d", "\\ding{125}"],
    ["275e", "\\ding{126}"],
    ["2761", "\\ding{161}"],
    ["2762", "\\ding{162}"],
    ["2763", "\\ding{163}"],
    ["2764", "\\ding{164}"],
    ["2765", "\\ding{165}"],
    ["2766", "\\ding{166}"],
    ["2767", "\\ding{167}"],
    ["2776", "\\ding{182}"],
    ["2777", "\\ding{183}"],
    ["2778", "\\ding{184}"],
    ["2779", "\\ding{185}"],
    ["277a", "\\ding{186}"],
    ["277b", "\\ding{187}"],
    ["277c", "\\ding{188}"],
    ["277d", "\\ding{189}"],
    ["277e", "\\ding{190}"],
    ["277f", "\\ding{191}"],
    ["2780", "\\ding{192}"],
    ["2781", "\\ding{193}"],
    ["2782", "\\ding{194}"],
    ["2783", "\\ding{195}"],
    ["2784", "\\ding{196}"],
    ["2785", "\\ding{197}"],
    ["2786", "\\ding{198}"],
    ["2787", "\\ding{199}"],
    ["2788", "\\ding{200}"],
    ["2789", "\\ding{201}"],
    ["278a", "\\ding{202}"],
    ["278b", "\\ding{203}"],
    ["278c", "\\ding{204}"],
    ["278d", "\\ding{205}"],
    ["278e", "\\ding{206}"],
    ["278f", "\\ding{207}"],
    ["2790", "\\ding{208}"],
    ["2791", "\\ding{209}"],
    ["2792", "\\ding{210}"],
    ["2793", "\\ding{211}"],
    ["2794", "\\ding{212}"],
    ["2798", "\\ding{216}"],
    ["2799", "\\ding{217}"],
    ["279a", "\\ding{218}"],
    ["279b", "\\ding{219}"],
    ["279c", "\\ding{220}"],
    ["279d", "\\ding{221}"],
    ["279e", "\\ding{222}"],
    ["279f", "\\ding{223}"],
    ["27a0", "\\ding{224}"],
    ["27a1", "\\ding{225}"],
    ["27a2", "\\ding{226}"],
    ["27a3", "\\ding{227}"],
    ["27a4", "\\ding{228}"],
    ["27a5", "\\ding{229}"],
    ["27a6", "\\ding{230}"],
    ["27a7", "\\ding{231}"],
    ["27a8", "\\ding{232}"],
    ["27a9", "\\ding{233}"],
    ["27aa", "\\ding{234}"],
    ["27ab", "\\ding{235}"],
    ["27ac", "\\ding{236}"],
    ["27ad", "\\ding{237}"],
    ["27ae", "\\ding{238}"],
    ["27af", "\\ding{239}"],
    ["27b1", "\\ding{241}"],
    ["27b2", "\\ding{242}"],
    ["27b3", "\\ding{243}"],
    ["27b4", "\\ding{244}"],
    ["27b5", "\\ding{245}"],
    ["27b6", "\\ding{246}"],
    ["27b7", "\\ding{247}"],
    ["27b8", "\\ding{248}"],
    ["27b9", "\\ding{249}"],
    ["27ba", "\\ding{250}"],
    ["27bb", "\\ding{251}"],
    ["27bc", "\\ding{252}"],
    ["27bd", "\\ding{253}"],
    ["27be", "\\ding{254}"],
    ["27f5", "\\longleftarrow{}"],
    ["27f6", "\\longrightarrow{}"],
    ["27f7", "\\longleftrightarrow{}"],
    ["27f8", "\\Longleftarrow{}"],
    ["27f9", "\\Longrightarrow{}"],
    ["27fa", "\\Longleftrightarrow{}"],
    ["27fc", "\\longmapsto{}"],
    ["27ff", "\\sim\\joinrel\\leadsto"],
    ["2905", "\\ElsevierGlyph{E212}"],
    ["2912", "\\UpArrowBar{}"],
    ["2913", "\\DownArrowBar{}"],
    ["2923", "\\ElsevierGlyph{E20C}"],
    ["2924", "\\ElsevierGlyph{E20D}"],
    ["2925", "\\ElsevierGlyph{E20B}"],
    ["2926", "\\ElsevierGlyph{E20A}"],
    ["2927", "\\ElsevierGlyph{E211}"],
    ["2928", "\\ElsevierGlyph{E20E}"],
    ["2929", "\\ElsevierGlyph{E20F}"],
    ["292a", "\\ElsevierGlyph{E210}"],
    ["2933", "\\ElsevierGlyph{E21C}"],
    ["2936", "\\ElsevierGlyph{E21A}"],
    ["2937", "\\ElsevierGlyph{E219}"],
    ["2940", "\\Elolarr{}"],
    ["2941", "\\Elorarr{}"],
    ["2942", "\\ElzRlarr{}"],
    ["2944", "\\ElzrLarr{}"],
    ["2947", "\\Elzrarrx{}"],
    ["294e", "\\LeftRightVector{}"],
    ["294f", "\\RightUpDownVector{}"],
    ["2950", "\\DownLeftRightVector{}"],
    ["2951", "\\LeftUpDownVector{}"],
    ["2952", "\\LeftVectorBar{}"],
    ["2953", "\\RightVectorBar{}"],
    ["2954", "\\RightUpVectorBar{}"],
    ["2955", "\\RightDownVectorBar{}"],
    ["2956", "\\DownLeftVectorBar{}"],
    ["2957", "\\DownRightVectorBar{}"],
    ["2958", "\\LeftUpVectorBar{}"],
    ["2959", "\\LeftDownVectorBar{}"],
    ["295a", "\\LeftTeeVector{}"],
    ["295b", "\\RightTeeVector{}"],
    ["295c", "\\RightUpTeeVector{}"],
    ["295d", "\\RightDownTeeVector{}"],
    ["295e", "\\DownLeftTeeVector{}"],
    ["295f", "\\DownRightTeeVector{}"],
    ["2960", "\\LeftUpTeeVector{}"],
    ["2961", "\\LeftDownTeeVector{}"],
    ["296e", "\\UpEquilibrium{}"],
    ["296f", "\\ReverseUpEquilibrium{}"],
    ["2970", "\\RoundImplies{}"],
    ["297c", "\\ElsevierGlyph{E214}"],
    ["297d", "\\ElsevierGlyph{E215}"],
    ["2980", "\\Elztfnc{}"],
    ["2985", "\\ElsevierGlyph{3018}"],
    ["2986", "\\Elroang{}"],
    ["2993", "&lt;\\kern-0.58em("],
    ["2994", "\\ElsevierGlyph{E291}"],
    ["2999", "\\Elzddfnc{}"],
    ["299c", "\\Angle{}"],
    ["29a0", "\\Elzlpargt{}"],
    ["29b5", "\\ElsevierGlyph{E260}"],
    ["29b6", "\\ElsevierGlyph{E61B}"],
    ["29ca", "\\ElzLap{}"],
    ["29cb", "\\Elzdefas{}"],
    ["29cf", "\\LeftTriangleBar{}"],
    ["29d0", "\\RightTriangleBar{}"],
    ["29dc", "\\ElsevierGlyph{E372}"],
    ["29eb", "\\blacklozenge{}"],
    ["29f4", "\\RuleDelayed{}"],
    ["2a04", "\\Elxuplus{}"],
    ["2a05", "\\ElzThr{}"],
    ["2a06", "\\Elxsqcup{}"],
    ["2a07", "\\ElzInf{}"],
    ["2a08", "\\ElzSup{}"],
    ["2a0d", "\\ElzCint{}"],
    ["2a0f", "\\clockoint{}"],
    ["2a10", "\\ElsevierGlyph{E395}"],
    ["2a16", "\\sqrint{}"],
    ["2a25", "\\ElsevierGlyph{E25A}"],
    ["2a2a", "\\ElsevierGlyph{E25B}"],
    ["2a2d", "\\ElsevierGlyph{E25C}"],
    ["2a2e", "\\ElsevierGlyph{E25D}"],
    ["2a2f", "\\ElzTimes{}"],
    ["2a34", "\\ElsevierGlyph{E25E}"],
    ["2a35", "\\ElsevierGlyph{E25E}"],
    ["2a3c", "\\ElsevierGlyph{E259}"],
    ["2a3f", "\\amalg{}"],
    ["2a53", "\\ElzAnd{}"],
    ["2a54", "\\ElzOr{}"],
    ["2a55", "\\ElsevierGlyph{E36E}"],
    ["2a56", "\\ElOr{}"],
    ["2a5e", "\\perspcorrespond{}"],
    ["2a5f", "\\Elzminhat{}"],
    ["2a63", "\\ElsevierGlyph{225A}"],
    ["2a6e", "\\stackrel{*}{=}"],
    ["2a75", "\\Equal{}"],
    ["2a7d", "\\leqslant{}"],
    ["2a7e", "\\geqslant{}"],
    ["2a85", "\\lessapprox{}"],
    ["2a86", "\\gtrapprox{}"],
    ["2a87", "\\lneq{}"],
    ["2a88", "\\gneq{}"],
    ["2a89", "\\lnapprox{}"],
    ["2a8a", "\\gnapprox{}"],
    ["2a8b", "\\lesseqqgtr{}"],
    ["2a8c", "\\gtreqqless{}"],
    ["2a95", "\\eqslantless{}"],
    ["2a96", "\\eqslantgtr{}"],
    ["2a9d", "\\Pisymbol{ppi020}{117}"],
    ["2a9e", "\\Pisymbol{ppi020}{105}"],
    ["2aa1", "\\NestedLessLess{}"],
    ["2aa2", "\\NestedGreaterGreater{}"],
    ["2aaf", "\\preceq{}"],
    ["2ab0", "\\succeq{}"],
    ["2ab5", "\\precneqq{}"],
    ["2ab6", "\\succneqq{}"],
    ["2ab7", "\\precapprox{}"],
    ["2ab8", "\\succapprox{}"],
    ["2ab9", "\\precnapprox{}"],
    ["2aba", "\\succnapprox{}"],
    ["2ac5", "\\subseteqq{}"],
    ["2ac6", "\\supseteqq{}"],
    ["2acb", "\\subsetneqq{}"],
    ["2acc", "\\supsetneqq{}"],
    ["2aeb", "\\ElsevierGlyph{E30D}"],
    ["2af6", "\\Elztdcol{}"],
    ["2afd", "{{/}\\!\\!{/}}"],
    ["300a", "\\ElsevierGlyph{300A}"],
    ["300b", "\\ElsevierGlyph{300B}"],
    ["3018", "\\ElsevierGlyph{3018}"],
    ["3019", "\\ElsevierGlyph{3019}"],
    ["301a", "\\openbracketleft{}"],
    ["301b", "\\openbracketright{}"],
    ["fb00", "ff"],
    ["fb01", "fi"],
    ["fb02", "fl"],
    ["fb03", "ffi"],
    ["fb04", "ffl"],
    ["d400", "\\mathbf{A}"],
    ["d401", "\\mathbf{B}"],
    ["d402", "\\mathbf{C}"],
    ["d403", "\\mathbf{D}"],
    ["d404", "\\mathbf{E}"],
    ["d405", "\\mathbf{F}"],
    ["d406", "\\mathbf{G}"],
    ["d407", "\\mathbf{H}"],
    ["d408", "\\mathbf{I}"],
    ["d409", "\\mathbf{J}"],
    ["d40a", "\\mathbf{K}"],
    ["d40b", "\\mathbf{L}"],
    ["d40c", "\\mathbf{M}"],
    ["d40d", "\\mathbf{N}"],
    ["d40e", "\\mathbf{O}"],
    ["d40f", "\\mathbf{P}"],
    ["d410", "\\mathbf{Q}"],
    ["d411", "\\mathbf{R}"],
    ["d412", "\\mathbf{S}"],
    ["d413", "\\mathbf{T}"],
    ["d414", "\\mathbf{U}"],
    ["d415", "\\mathbf{V}"],
    ["d416", "\\mathbf{W}"],
    ["d417", "\\mathbf{X}"],
    ["d418", "\\mathbf{Y}"],
    ["d419", "\\mathbf{Z}"],
    ["d41a", "\\mathbf{a}"],
    ["d41b", "\\mathbf{b}"],
    ["d41c", "\\mathbf{c}"],
    ["d41d", "\\mathbf{d}"],
    ["d41e", "\\mathbf{e}"],
    ["d41f", "\\mathbf{f}"],
    ["d420", "\\mathbf{g}"],
    ["d421", "\\mathbf{h}"],
    ["d422", "\\mathbf{i}"],
    ["d423", "\\mathbf{j}"],
    ["d424", "\\mathbf{k}"],
    ["d425", "\\mathbf{l}"],
    ["d426", "\\mathbf{m}"],
    ["d427", "\\mathbf{n}"],
    ["d428", "\\mathbf{o}"],
    ["d429", "\\mathbf{p}"],
    ["d42a", "\\mathbf{q}"],
    ["d42b", "\\mathbf{r}"],
    ["d42c", "\\mathbf{s}"],
    ["d42d", "\\mathbf{t}"],
    ["d42e", "\\mathbf{u}"],
    ["d42f", "\\mathbf{v}"],
    ["d430", "\\mathbf{w}"],
    ["d431", "\\mathbf{x}"],
    ["d432", "\\mathbf{y}"],
    ["d433", "\\mathbf{z}"],
    ["d434", "\\mathsl{A}"],
    ["d435", "\\mathsl{B}"],
    ["d436", "\\mathsl{C}"],
    ["d437", "\\mathsl{D}"],
    ["d438", "\\mathsl{E}"],
    ["d439", "\\mathsl{F}"],
    ["d43a", "\\mathsl{G}"],
    ["d43b", "\\mathsl{H}"],
    ["d43c", "\\mathsl{I}"],
    ["d43d", "\\mathsl{J}"],
    ["d43e", "\\mathsl{K}"],
    ["d43f", "\\mathsl{L}"],
    ["d440", "\\mathsl{M}"],
    ["d441", "\\mathsl{N}"],
    ["d442", "\\mathsl{O}"],
    ["d443", "\\mathsl{P}"],
    ["d444", "\\mathsl{Q}"],
    ["d445", "\\mathsl{R}"],
    ["d446", "\\mathsl{S}"],
    ["d447", "\\mathsl{T}"],
    ["d448", "\\mathsl{U}"],
    ["d449", "\\mathsl{V}"],
    ["d44a", "\\mathsl{W}"],
    ["d44b", "\\mathsl{X}"],
    ["d44c", "\\mathsl{Y}"],
    ["d44d", "\\mathsl{Z}"],
    ["d44e", "\\mathsl{a}"],
    ["d44f", "\\mathsl{b}"],
    ["d450", "\\mathsl{c}"],
    ["d451", "\\mathsl{d}"],
    ["d452", "\\mathsl{e}"],
    ["d453", "\\mathsl{f}"],
    ["d454", "\\mathsl{g}"],
    ["d456", "\\mathsl{i}"],
    ["d457", "\\mathsl{j}"],
    ["d458", "\\mathsl{k}"],
    ["d459", "\\mathsl{l}"],
    ["d45a", "\\mathsl{m}"],
    ["d45b", "\\mathsl{n}"],
    ["d45c", "\\mathsl{o}"],
    ["d45d", "\\mathsl{p}"],
    ["d45e", "\\mathsl{q}"],
    ["d45f", "\\mathsl{r}"],
    ["d460", "\\mathsl{s}"],
    ["d461", "\\mathsl{t}"],
    ["d462", "\\mathsl{u}"],
    ["d463", "\\mathsl{v}"],
    ["d464", "\\mathsl{w}"],
    ["d465", "\\mathsl{x}"],
    ["d466", "\\mathsl{y}"],
    ["d467", "\\mathsl{z}"],
    ["d468", "\\mathbit{A}"],
    ["d469", "\\mathbit{B}"],
    ["d46a", "\\mathbit{C}"],
    ["d46b", "\\mathbit{D}"],
    ["d46c", "\\mathbit{E}"],
    ["d46d", "\\mathbit{F}"],
    ["d46e", "\\mathbit{G}"],
    ["d46f", "\\mathbit{H}"],
    ["d470", "\\mathbit{I}"],
    ["d471", "\\mathbit{J}"],
    ["d472", "\\mathbit{K}"],
    ["d473", "\\mathbit{L}"],
    ["d474", "\\mathbit{M}"],
    ["d475", "\\mathbit{N}"],
    ["d476", "\\mathbit{O}"],
    ["d477", "\\mathbit{P}"],
    ["d478", "\\mathbit{Q}"],
    ["d479", "\\mathbit{R}"],
    ["d47a", "\\mathbit{S}"],
    ["d47b", "\\mathbit{T}"],
    ["d47c", "\\mathbit{U}"],
    ["d47d", "\\mathbit{V}"],
    ["d47e", "\\mathbit{W}"],
    ["d47f", "\\mathbit{X}"],
    ["d480", "\\mathbit{Y}"],
    ["d481", "\\mathbit{Z}"],
    ["d482", "\\mathbit{a}"],
    ["d483", "\\mathbit{b}"],
    ["d484", "\\mathbit{c}"],
    ["d485", "\\mathbit{d}"],
    ["d486", "\\mathbit{e}"],
    ["d487", "\\mathbit{f}"],
    ["d488", "\\mathbit{g}"],
    ["d489", "\\mathbit{h}"],
    ["d48a", "\\mathbit{i}"],
    ["d48b", "\\mathbit{j}"],
    ["d48c", "\\mathbit{k}"],
    ["d48d", "\\mathbit{l}"],
    ["d48e", "\\mathbit{m}"],
    ["d48f", "\\mathbit{n}"],
    ["d490", "\\mathbit{o}"],
    ["d491", "\\mathbit{p}"],
    ["d492", "\\mathbit{q}"],
    ["d493", "\\mathbit{r}"],
    ["d494", "\\mathbit{s}"],
    ["d495", "\\mathbit{t}"],
    ["d496", "\\mathbit{u}"],
    ["d497", "\\mathbit{v}"],
    ["d498", "\\mathbit{w}"],
    ["d499", "\\mathbit{x}"],
    ["d49a", "\\mathbit{y}"],
    ["d49b", "\\mathbit{z}"],
    ["d49c", "\\mathscr{A}"],
    ["d49e", "\\mathscr{C}"],
    ["d49f", "\\mathscr{D}"],
    ["d4a2", "\\mathscr{G}"],
    ["d4a5", "\\mathscr{J}"],
    ["d4a6", "\\mathscr{K}"],
    ["d4a9", "\\mathscr{N}"],
    ["d4aa", "\\mathscr{O}"],
    ["d4ab", "\\mathscr{P}"],
    ["d4ac", "\\mathscr{Q}"],
    ["d4ae", "\\mathscr{S}"],
    ["d4af", "\\mathscr{T}"],
    ["d4b0", "\\mathscr{U}"],
    ["d4b1", "\\mathscr{V}"],
    ["d4b2", "\\mathscr{W}"],
    ["d4b3", "\\mathscr{X}"],
    ["d4b4", "\\mathscr{Y}"],
    ["d4b5", "\\mathscr{Z}"],
    ["d4b6", "\\mathscr{a}"],
    ["d4b7", "\\mathscr{b}"],
    ["d4b8", "\\mathscr{c}"],
    ["d4b9", "\\mathscr{d}"],
    ["d4bb", "\\mathscr{f}"],
    ["d4bd", "\\mathscr{h}"],
    ["d4be", "\\mathscr{i}"],
    ["d4bf", "\\mathscr{j}"],
    ["d4c0", "\\mathscr{k}"],
    ["d4c1", "\\mathscr{l}"],
    ["d4c2", "\\mathscr{m}"],
    ["d4c3", "\\mathscr{n}"],
    ["d4c5", "\\mathscr{p}"],
    ["d4c6", "\\mathscr{q}"],
    ["d4c7", "\\mathscr{r}"],
    ["d4c8", "\\mathscr{s}"],
    ["d4c9", "\\mathscr{t}"],
    ["d4ca", "\\mathscr{u}"],
    ["d4cb", "\\mathscr{v}"],
    ["d4cc", "\\mathscr{w}"],
    ["d4cd", "\\mathscr{x}"],
    ["d4ce", "\\mathscr{y}"],
    ["d4cf", "\\mathscr{z}"],
    ["d4d0", "\\mathmit{A}"],
    ["d4d1", "\\mathmit{B}"],
    ["d4d2", "\\mathmit{C}"],
    ["d4d3", "\\mathmit{D}"],
    ["d4d4", "\\mathmit{E}"],
    ["d4d5", "\\mathmit{F}"],
    ["d4d6", "\\mathmit{G}"],
    ["d4d7", "\\mathmit{H}"],
    ["d4d8", "\\mathmit{I}"],
    ["d4d9", "\\mathmit{J}"],
    ["d4da", "\\mathmit{K}"],
    ["d4db", "\\mathmit{L}"],
    ["d4dc", "\\mathmit{M}"],
    ["d4dd", "\\mathmit{N}"],
    ["d4de", "\\mathmit{O}"],
    ["d4df", "\\mathmit{P}"],
    ["d4e0", "\\mathmit{Q}"],
    ["d4e1", "\\mathmit{R}"],
    ["d4e2", "\\mathmit{S}"],
    ["d4e3", "\\mathmit{T}"],
    ["d4e4", "\\mathmit{U}"],
    ["d4e5", "\\mathmit{V}"],
    ["d4e6", "\\mathmit{W}"],
    ["d4e7", "\\mathmit{X}"],
    ["d4e8", "\\mathmit{Y}"],
    ["d4e9", "\\mathmit{Z}"],
    ["d4ea", "\\mathmit{a}"],
    ["d4eb", "\\mathmit{b}"],
    ["d4ec", "\\mathmit{c}"],
    ["d4ed", "\\mathmit{d}"],
    ["d4ee", "\\mathmit{e}"],
    ["d4ef", "\\mathmit{f}"],
    ["d4f0", "\\mathmit{g}"],
    ["d4f1", "\\mathmit{h}"],
    ["d4f2", "\\mathmit{i}"],
    ["d4f3", "\\mathmit{j}"],
    ["d4f4", "\\mathmit{k}"],
    ["d4f5", "\\mathmit{l}"],
    ["d4f6", "\\mathmit{m}"],
    ["d4f7", "\\mathmit{n}"],
    ["d4f8", "\\mathmit{o}"],
    ["d4f9", "\\mathmit{p}"],
    ["d4fa", "\\mathmit{q}"],
    ["d4fb", "\\mathmit{r}"],
    ["d4fc", "\\mathmit{s}"],
    ["d4fd", "\\mathmit{t}"],
    ["d4fe", "\\mathmit{u}"],
    ["d4ff", "\\mathmit{v}"],
    ["d500", "\\mathmit{w}"],
    ["d501", "\\mathmit{x}"],
    ["d502", "\\mathmit{y}"],
    ["d503", "\\mathmit{z}"],
    ["d504", "\\mathfrak{A}"],
    ["d505", "\\mathfrak{B}"],
    ["d507", "\\mathfrak{D}"],
    ["d508", "\\mathfrak{E}"],
    ["d509", "\\mathfrak{F}"],
    ["d50a", "\\mathfrak{G}"],
    ["d50d", "\\mathfrak{J}"],
    ["d50e", "\\mathfrak{K}"],
    ["d50f", "\\mathfrak{L}"],
    ["d510", "\\mathfrak{M}"],
    ["d511", "\\mathfrak{N}"],
    ["d512", "\\mathfrak{O}"],
    ["d513", "\\mathfrak{P}"],
    ["d514", "\\mathfrak{Q}"],
    ["d516", "\\mathfrak{S}"],
    ["d517", "\\mathfrak{T}"],
    ["d518", "\\mathfrak{U}"],
    ["d519", "\\mathfrak{V}"],
    ["d51a", "\\mathfrak{W}"],
    ["d51b", "\\mathfrak{X}"],
    ["d51c", "\\mathfrak{Y}"],
    ["d51e", "\\mathfrak{a}"],
    ["d51f", "\\mathfrak{b}"],
    ["d520", "\\mathfrak{c}"],
    ["d521", "\\mathfrak{d}"],
    ["d522", "\\mathfrak{e}"],
    ["d523", "\\mathfrak{f}"],
    ["d524", "\\mathfrak{g}"],
    ["d525", "\\mathfrak{h}"],
    ["d526", "\\mathfrak{i}"],
    ["d527", "\\mathfrak{j}"],
    ["d528", "\\mathfrak{k}"],
    ["d529", "\\mathfrak{l}"],
    ["d52a", "\\mathfrak{m}"],
    ["d52b", "\\mathfrak{n}"],
    ["d52c", "\\mathfrak{o}"],
    ["d52d", "\\mathfrak{p}"],
    ["d52e", "\\mathfrak{q}"],
    ["d52f", "\\mathfrak{r}"],
    ["d530", "\\mathfrak{s}"],
    ["d531", "\\mathfrak{t}"],
    ["d532", "\\mathfrak{u}"],
    ["d533", "\\mathfrak{v}"],
    ["d534", "\\mathfrak{w}"],
    ["d535", "\\mathfrak{x}"],
    ["d536", "\\mathfrak{y}"],
    ["d537", "\\mathfrak{z}"],
    ["d538", "\\mathbb{A}"],
    ["d539", "\\mathbb{B}"],
    ["d53b", "\\mathbb{D}"],
    ["d53c", "\\mathbb{E}"],
    ["d53d", "\\mathbb{F}"],
    ["d53e", "\\mathbb{G}"],
    ["d540", "\\mathbb{I}"],
    ["d541", "\\mathbb{J}"],
    ["d542", "\\mathbb{K}"],
    ["d543", "\\mathbb{L}"],
    ["d544", "\\mathbb{M}"],
    ["d546", "\\mathbb{O}"],
    ["d54a", "\\mathbb{S}"],
    ["d54b", "\\mathbb{T}"],
    ["d54c", "\\mathbb{U}"],
    ["d54d", "\\mathbb{V}"],
    ["d54e", "\\mathbb{W}"],
    ["d54f", "\\mathbb{X}"],
    ["d550", "\\mathbb{Y}"],
    ["d552", "\\mathbb{a}"],
    ["d553", "\\mathbb{b}"],
    ["d554", "\\mathbb{c}"],
    ["d555", "\\mathbb{d}"],
    ["d556", "\\mathbb{e}"],
    ["d557", "\\mathbb{f}"],
    ["d558", "\\mathbb{g}"],
    ["d559", "\\mathbb{h}"],
    ["d55a", "\\mathbb{i}"],
    ["d55b", "\\mathbb{j}"],
    ["d55c", "\\mathbb{k}"],
    ["d55d", "\\mathbb{l}"],
    ["d55e", "\\mathbb{m}"],
    ["d55f", "\\mathbb{n}"],
    ["d560", "\\mathbb{o}"],
    ["d561", "\\mathbb{p}"],
    ["d562", "\\mathbb{q}"],
    ["d563", "\\mathbb{r}"],
    ["d564", "\\mathbb{s}"],
    ["d565", "\\mathbb{t}"],
    ["d566", "\\mathbb{u}"],
    ["d567", "\\mathbb{v}"],
    ["d568", "\\mathbb{w}"],
    ["d569", "\\mathbb{x}"],
    ["d56a", "\\mathbb{y}"],
    ["d56b", "\\mathbb{z}"],
    ["d56c", "\\mathslbb{A}"],
    ["d56d", "\\mathslbb{B}"],
    ["d56e", "\\mathslbb{C}"],
    ["d56f", "\\mathslbb{D}"],
    ["d570", "\\mathslbb{E}"],
    ["d571", "\\mathslbb{F}"],
    ["d572", "\\mathslbb{G}"],
    ["d573", "\\mathslbb{H}"],
    ["d574", "\\mathslbb{I}"],
    ["d575", "\\mathslbb{J}"],
    ["d576", "\\mathslbb{K}"],
    ["d577", "\\mathslbb{L}"],
    ["d578", "\\mathslbb{M}"],
    ["d579", "\\mathslbb{N}"],
    ["d57a", "\\mathslbb{O}"],
    ["d57b", "\\mathslbb{P}"],
    ["d57c", "\\mathslbb{Q}"],
    ["d57d", "\\mathslbb{R}"],
    ["d57e", "\\mathslbb{S}"],
    ["d57f", "\\mathslbb{T}"],
    ["d580", "\\mathslbb{U}"],
    ["d581", "\\mathslbb{V}"],
    ["d582", "\\mathslbb{W}"],
    ["d583", "\\mathslbb{X}"],
    ["d584", "\\mathslbb{Y}"],
    ["d585", "\\mathslbb{Z}"],
    ["d586", "\\mathslbb{a}"],
    ["d587", "\\mathslbb{b}"],
    ["d588", "\\mathslbb{c}"],
    ["d589", "\\mathslbb{d}"],
    ["d58a", "\\mathslbb{e}"],
    ["d58b", "\\mathslbb{f}"],
    ["d58c", "\\mathslbb{g}"],
    ["d58d", "\\mathslbb{h}"],
    ["d58e", "\\mathslbb{i}"],
    ["d58f", "\\mathslbb{j}"],
    ["d590", "\\mathslbb{k}"],
    ["d591", "\\mathslbb{l}"],
    ["d592", "\\mathslbb{m}"],
    ["d593", "\\mathslbb{n}"],
    ["d594", "\\mathslbb{o}"],
    ["d595", "\\mathslbb{p}"],
    ["d596", "\\mathslbb{q}"],
    ["d597", "\\mathslbb{r}"],
    ["d598", "\\mathslbb{s}"],
    ["d599", "\\mathslbb{t}"],
    ["d59a", "\\mathslbb{u}"],
    ["d59b", "\\mathslbb{v}"],
    ["d59c", "\\mathslbb{w}"],
    ["d59d", "\\mathslbb{x}"],
    ["d59e", "\\mathslbb{y}"],
    ["d59f", "\\mathslbb{z}"],
    ["d5a0", "\\mathsf{A}"],
    ["d5a1", "\\mathsf{B}"],
    ["d5a2", "\\mathsf{C}"],
    ["d5a3", "\\mathsf{D}"],
    ["d5a4", "\\mathsf{E}"],
    ["d5a5", "\\mathsf{F}"],
    ["d5a6", "\\mathsf{G}"],
    ["d5a7", "\\mathsf{H}"],
    ["d5a8", "\\mathsf{I}"],
    ["d5a9", "\\mathsf{J}"],
    ["d5aa", "\\mathsf{K}"],
    ["d5ab", "\\mathsf{L}"],
    ["d5ac", "\\mathsf{M}"],
    ["d5ad", "\\mathsf{N}"],
    ["d5ae", "\\mathsf{O}"],
    ["d5af", "\\mathsf{P}"],
    ["d5b0", "\\mathsf{Q}"],
    ["d5b1", "\\mathsf{R}"],
    ["d5b2", "\\mathsf{S}"],
    ["d5b3", "\\mathsf{T}"],
    ["d5b4", "\\mathsf{U}"],
    ["d5b5", "\\mathsf{V}"],
    ["d5b6", "\\mathsf{W}"],
    ["d5b7", "\\mathsf{X}"],
    ["d5b8", "\\mathsf{Y}"],
    ["d5b9", "\\mathsf{Z}"],
    ["d5ba", "\\mathsf{a}"],
    ["d5bb", "\\mathsf{b}"],
    ["d5bc", "\\mathsf{c}"],
    ["d5bd", "\\mathsf{d}"],
    ["d5be", "\\mathsf{e}"],
    ["d5bf", "\\mathsf{f}"],
    ["d5c0", "\\mathsf{g}"],
    ["d5c1", "\\mathsf{h}"],
    ["d5c2", "\\mathsf{i}"],
    ["d5c3", "\\mathsf{j}"],
    ["d5c4", "\\mathsf{k}"],
    ["d5c5", "\\mathsf{l}"],
    ["d5c6", "\\mathsf{m}"],
    ["d5c7", "\\mathsf{n}"],
    ["d5c8", "\\mathsf{o}"],
    ["d5c9", "\\mathsf{p}"],
    ["d5ca", "\\mathsf{q}"],
    ["d5cb", "\\mathsf{r}"],
    ["d5cc", "\\mathsf{s}"],
    ["d5cd", "\\mathsf{t}"],
    ["d5ce", "\\mathsf{u}"],
    ["d5cf", "\\mathsf{v}"],
    ["d5d0", "\\mathsf{w}"],
    ["d5d1", "\\mathsf{x}"],
    ["d5d2", "\\mathsf{y}"],
    ["d5d3", "\\mathsf{z}"],
    ["d5d4", "\\mathsfbf{A}"],
    ["d5d5", "\\mathsfbf{B}"],
    ["d5d6", "\\mathsfbf{C}"],
    ["d5d7", "\\mathsfbf{D}"],
    ["d5d8", "\\mathsfbf{E}"],
    ["d5d9", "\\mathsfbf{F}"],
    ["d5da", "\\mathsfbf{G}"],
    ["d5db", "\\mathsfbf{H}"],
    ["d5dc", "\\mathsfbf{I}"],
    ["d5dd", "\\mathsfbf{J}"],
    ["d5de", "\\mathsfbf{K}"],
    ["d5df", "\\mathsfbf{L}"],
    ["d5e0", "\\mathsfbf{M}"],
    ["d5e1", "\\mathsfbf{N}"],
    ["d5e2", "\\mathsfbf{O}"],
    ["d5e3", "\\mathsfbf{P}"],
    ["d5e4", "\\mathsfbf{Q}"],
    ["d5e5", "\\mathsfbf{R}"],
    ["d5e6", "\\mathsfbf{S}"],
    ["d5e7", "\\mathsfbf{T}"],
    ["d5e8", "\\mathsfbf{U}"],
    ["d5e9", "\\mathsfbf{V}"],
    ["d5ea", "\\mathsfbf{W}"],
    ["d5eb", "\\mathsfbf{X}"],
    ["d5ec", "\\mathsfbf{Y}"],
    ["d5ed", "\\mathsfbf{Z}"],
    ["d5ee", "\\mathsfbf{a}"],
    ["d5ef", "\\mathsfbf{b}"],
    ["d5f0", "\\mathsfbf{c}"],
    ["d5f1", "\\mathsfbf{d}"],
    ["d5f2", "\\mathsfbf{e}"],
    ["d5f3", "\\mathsfbf{f}"],
    ["d5f4", "\\mathsfbf{g}"],
    ["d5f5", "\\mathsfbf{h}"],
    ["d5f6", "\\mathsfbf{i}"],
    ["d5f7", "\\mathsfbf{j}"],
    ["d5f8", "\\mathsfbf{k}"],
    ["d5f9", "\\mathsfbf{l}"],
    ["d5fa", "\\mathsfbf{m}"],
    ["d5fb", "\\mathsfbf{n}"],
    ["d5fc", "\\mathsfbf{o}"],
    ["d5fd", "\\mathsfbf{p}"],
    ["d5fe", "\\mathsfbf{q}"],
    ["d5ff", "\\mathsfbf{r}"],
    ["d600", "\\mathsfbf{s}"],
    ["d601", "\\mathsfbf{t}"],
    ["d602", "\\mathsfbf{u}"],
    ["d603", "\\mathsfbf{v}"],
    ["d604", "\\mathsfbf{w}"],
    ["d605", "\\mathsfbf{x}"],
    ["d606", "\\mathsfbf{y}"],
    ["d607", "\\mathsfbf{z}"],
    ["d608", "\\mathsfsl{A}"],
    ["d609", "\\mathsfsl{B}"],
    ["d60a", "\\mathsfsl{C}"],
    ["d60b", "\\mathsfsl{D}"],
    ["d60c", "\\mathsfsl{E}"],
    ["d60d", "\\mathsfsl{F}"],
    ["d60e", "\\mathsfsl{G}"],
    ["d60f", "\\mathsfsl{H}"],
    ["d610", "\\mathsfsl{I}"],
    ["d611", "\\mathsfsl{J}"],
    ["d612", "\\mathsfsl{K}"],
    ["d613", "\\mathsfsl{L}"],
    ["d614", "\\mathsfsl{M}"],
    ["d615", "\\mathsfsl{N}"],
    ["d616", "\\mathsfsl{O}"],
    ["d617", "\\mathsfsl{P}"],
    ["d618", "\\mathsfsl{Q}"],
    ["d619", "\\mathsfsl{R}"],
    ["d61a", "\\mathsfsl{S}"],
    ["d61b", "\\mathsfsl{T}"],
    ["d61c", "\\mathsfsl{U}"],
    ["d61d", "\\mathsfsl{V}"],
    ["d61e", "\\mathsfsl{W}"],
    ["d61f", "\\mathsfsl{X}"],
    ["d620", "\\mathsfsl{Y}"],
    ["d621", "\\mathsfsl{Z}"],
    ["d622", "\\mathsfsl{a}"],
    ["d623", "\\mathsfsl{b}"],
    ["d624", "\\mathsfsl{c}"],
    ["d625", "\\mathsfsl{d}"],
    ["d626", "\\mathsfsl{e}"],
    ["d627", "\\mathsfsl{f}"],
    ["d628", "\\mathsfsl{g}"],
    ["d629", "\\mathsfsl{h}"],
    ["d62a", "\\mathsfsl{i}"],
    ["d62b", "\\mathsfsl{j}"],
    ["d62c", "\\mathsfsl{k}"],
    ["d62d", "\\mathsfsl{l}"],
    ["d62e", "\\mathsfsl{m}"],
    ["d62f", "\\mathsfsl{n}"],
    ["d630", "\\mathsfsl{o}"],
    ["d631", "\\mathsfsl{p}"],
    ["d632", "\\mathsfsl{q}"],
    ["d633", "\\mathsfsl{r}"],
    ["d634", "\\mathsfsl{s}"],
    ["d635", "\\mathsfsl{t}"],
    ["d636", "\\mathsfsl{u}"],
    ["d637", "\\mathsfsl{v}"],
    ["d638", "\\mathsfsl{w}"],
    ["d639", "\\mathsfsl{x}"],
    ["d63a", "\\mathsfsl{y}"],
    ["d63b", "\\mathsfsl{z}"],
    ["d63c", "\\mathsfbfsl{A}"],
    ["d63d", "\\mathsfbfsl{B}"],
    ["d63e", "\\mathsfbfsl{C}"],
    ["d63f", "\\mathsfbfsl{D}"],
    ["d640", "\\mathsfbfsl{E}"],
    ["d641", "\\mathsfbfsl{F}"],
    ["d642", "\\mathsfbfsl{G}"],
    ["d643", "\\mathsfbfsl{H}"],
    ["d644", "\\mathsfbfsl{I}"],
    ["d645", "\\mathsfbfsl{J}"],
    ["d646", "\\mathsfbfsl{K}"],
    ["d647", "\\mathsfbfsl{L}"],
    ["d648", "\\mathsfbfsl{M}"],
    ["d649", "\\mathsfbfsl{N}"],
    ["d64a", "\\mathsfbfsl{O}"],
    ["d64b", "\\mathsfbfsl{P}"],
    ["d64c", "\\mathsfbfsl{Q}"],
    ["d64d", "\\mathsfbfsl{R}"],
    ["d64e", "\\mathsfbfsl{S}"],
    ["d64f", "\\mathsfbfsl{T}"],
    ["d650", "\\mathsfbfsl{U}"],
    ["d651", "\\mathsfbfsl{V}"],
    ["d652", "\\mathsfbfsl{W}"],
    ["d653", "\\mathsfbfsl{X}"],
    ["d654", "\\mathsfbfsl{Y}"],
    ["d655", "\\mathsfbfsl{Z}"],
    ["d656", "\\mathsfbfsl{a}"],
    ["d657", "\\mathsfbfsl{b}"],
    ["d658", "\\mathsfbfsl{c}"],
    ["d659", "\\mathsfbfsl{d}"],
    ["d65a", "\\mathsfbfsl{e}"],
    ["d65b", "\\mathsfbfsl{f}"],
    ["d65c", "\\mathsfbfsl{g}"],
    ["d65d", "\\mathsfbfsl{h}"],
    ["d65e", "\\mathsfbfsl{i}"],
    ["d65f", "\\mathsfbfsl{j}"],
    ["d660", "\\mathsfbfsl{k}"],
    ["d661", "\\mathsfbfsl{l}"],
    ["d662", "\\mathsfbfsl{m}"],
    ["d663", "\\mathsfbfsl{n}"],
    ["d664", "\\mathsfbfsl{o}"],
    ["d665", "\\mathsfbfsl{p}"],
    ["d666", "\\mathsfbfsl{q}"],
    ["d667", "\\mathsfbfsl{r}"],
    ["d668", "\\mathsfbfsl{s}"],
    ["d669", "\\mathsfbfsl{t}"],
    ["d66a", "\\mathsfbfsl{u}"],
    ["d66b", "\\mathsfbfsl{v}"],
    ["d66c", "\\mathsfbfsl{w}"],
    ["d66d", "\\mathsfbfsl{x}"],
    ["d66e", "\\mathsfbfsl{y}"],
    ["d66f", "\\mathsfbfsl{z}"],
    ["d670", "\\mathtt{A}"],
    ["d671", "\\mathtt{B}"],
    ["d672", "\\mathtt{C}"],
    ["d673", "\\mathtt{D}"],
    ["d674", "\\mathtt{E}"],
    ["d675", "\\mathtt{F}"],
    ["d676", "\\mathtt{G}"],
    ["d677", "\\mathtt{H}"],
    ["d678", "\\mathtt{I}"],
    ["d679", "\\mathtt{J}"],
    ["d67a", "\\mathtt{K}"],
    ["d67b", "\\mathtt{L}"],
    ["d67c", "\\mathtt{M}"],
    ["d67d", "\\mathtt{N}"],
    ["d67e", "\\mathtt{O}"],
    ["d67f", "\\mathtt{P}"],
    ["d680", "\\mathtt{Q}"],
    ["d681", "\\mathtt{R}"],
    ["d682", "\\mathtt{S}"],
    ["d683", "\\mathtt{T}"],
    ["d684", "\\mathtt{U}"],
    ["d685", "\\mathtt{V}"],
    ["d686", "\\mathtt{W}"],
    ["d687", "\\mathtt{X}"],
    ["d688", "\\mathtt{Y}"],
    ["d689", "\\mathtt{Z}"],
    ["d68a", "\\mathtt{a}"],
    ["d68b", "\\mathtt{b}"],
    ["d68c", "\\mathtt{c}"],
    ["d68d", "\\mathtt{d}"],
    ["d68e", "\\mathtt{e}"],
    ["d68f", "\\mathtt{f}"],
    ["d690", "\\mathtt{g}"],
    ["d691", "\\mathtt{h}"],
    ["d692", "\\mathtt{i}"],
    ["d693", "\\mathtt{j}"],
    ["d694", "\\mathtt{k}"],
    ["d695", "\\mathtt{l}"],
    ["d696", "\\mathtt{m}"],
    ["d697", "\\mathtt{n}"],
    ["d698", "\\mathtt{o}"],
    ["d699", "\\mathtt{p}"],
    ["d69a", "\\mathtt{q}"],
    ["d69b", "\\mathtt{r}"],
    ["d69c", "\\mathtt{s}"],
    ["d69d", "\\mathtt{t}"],
    ["d69e", "\\mathtt{u}"],
    ["d69f", "\\mathtt{v}"],
    ["d6a0", "\\mathtt{w}"],
    ["d6a1", "\\mathtt{x}"],
    ["d6a2", "\\mathtt{y}"],
    ["d6a3", "\\mathtt{z}"],
    ["d6a8", "\\mathbf{\\Alpha}"],
    ["d6a9", "\\mathbf{\\Beta}"],
    ["d6aa", "\\mathbf{\\Gamma}"],
    ["d6ab", "\\mathbf{\\Delta}"],
    ["d6ac", "\\mathbf{\\Epsilon}"],
    ["d6ad", "\\mathbf{\\Zeta}"],
    ["d6ae", "\\mathbf{\\Eta}"],
    ["d6af", "\\mathbf{\\Theta}"],
    ["d6b0", "\\mathbf{\\Iota}"],
    ["d6b1", "\\mathbf{\\Kappa}"],
    ["d6b2", "\\mathbf{\\Lambda}"],
    ["d6b5", "\\mathbf{\\Xi}"],
    ["d6b7", "\\mathbf{\\Pi}"],
    ["d6b8", "\\mathbf{\\Rho}"],
    ["d6b9", "\\mathbf{\\vartheta}"],
    ["d6ba", "\\mathbf{\\Sigma}"],
    ["d6bb", "\\mathbf{\\Tau}"],
    ["d6bc", "\\mathbf{\\Upsilon}"],
    ["d6bd", "\\mathbf{\\Phi}"],
    ["d6be", "\\mathbf{\\Chi}"],
    ["d6bf", "\\mathbf{\\Psi}"],
    ["d6c0", "\\mathbf{\\Omega}"],
    ["d6c1", "\\mathbf{\\nabla}"],
    ["d6c2", "\\mathbf{\\Alpha}"],
    ["d6c3", "\\mathbf{\\Beta}"],
    ["d6c4", "\\mathbf{\\Gamma}"],
    ["d6c5", "\\mathbf{\\Delta}"],
    ["d6c6", "\\mathbf{\\Epsilon}"],
    ["d6c7", "\\mathbf{\\Zeta}"],
    ["d6c8", "\\mathbf{\\Eta}"],
    ["d6c9", "\\mathbf{\\theta}"],
    ["d6ca", "\\mathbf{\\Iota}"],
    ["d6cb", "\\mathbf{\\Kappa}"],
    ["d6cc", "\\mathbf{\\Lambda}"],
    ["d6cf", "\\mathbf{\\Xi}"],
    ["d6d1", "\\mathbf{\\Pi}"],
    ["d6d2", "\\mathbf{\\Rho}"],
    ["d6d3", "\\mathbf{\\varsigma}"],
    ["d6d4", "\\mathbf{\\Sigma}"],
    ["d6d5", "\\mathbf{\\Tau}"],
    ["d6d6", "\\mathbf{\\Upsilon}"],
    ["d6d7", "\\mathbf{\\Phi}"],
    ["d6d8", "\\mathbf{\\Chi}"],
    ["d6d9", "\\mathbf{\\Psi}"],
    ["d6da", "\\mathbf{\\Omega}"],
    ["d6db", "\\partial{}"],
    ["d6dc", "\\in"],
    ["d6dd", "\\mathbf{\\vartheta}"],
    ["d6de", "\\mathbf{\\varkappa}"],
    ["d6df", "\\mathbf{\\phi}"],
    ["d6e0", "\\mathbf{\\varrho}"],
    ["d6e1", "\\mathbf{\\varpi}"],
    ["d6e2", "\\mathsl{\\Alpha}"],
    ["d6e3", "\\mathsl{\\Beta}"],
    ["d6e4", "\\mathsl{\\Gamma}"],
    ["d6e5", "\\mathsl{\\Delta}"],
    ["d6e6", "\\mathsl{\\Epsilon}"],
    ["d6e7", "\\mathsl{\\Zeta}"],
    ["d6e8", "\\mathsl{\\Eta}"],
    ["d6e9", "\\mathsl{\\Theta}"],
    ["d6ea", "\\mathsl{\\Iota}"],
    ["d6eb", "\\mathsl{\\Kappa}"],
    ["d6ec", "\\mathsl{\\Lambda}"],
    ["d6ef", "\\mathsl{\\Xi}"],
    ["d6f1", "\\mathsl{\\Pi}"],
    ["d6f2", "\\mathsl{\\Rho}"],
    ["d6f3", "\\mathsl{\\vartheta}"],
    ["d6f4", "\\mathsl{\\Sigma}"],
    ["d6f5", "\\mathsl{\\Tau}"],
    ["d6f6", "\\mathsl{\\Upsilon}"],
    ["d6f7", "\\mathsl{\\Phi}"],
    ["d6f8", "\\mathsl{\\Chi}"],
    ["d6f9", "\\mathsl{\\Psi}"],
    ["d6fa", "\\mathsl{\\Omega}"],
    ["d6fb", "\\mathsl{\\nabla}"],
    ["d6fc", "\\mathsl{\\Alpha}"],
    ["d6fd", "\\mathsl{\\Beta}"],
    ["d6fe", "\\mathsl{\\Gamma}"],
    ["d6ff", "\\mathsl{\\Delta}"],
    ["d700", "\\mathsl{\\Epsilon}"],
    ["d701", "\\mathsl{\\Zeta}"],
    ["d702", "\\mathsl{\\Eta}"],
    ["d703", "\\mathsl{\\Theta}"],
    ["d704", "\\mathsl{\\Iota}"],
    ["d705", "\\mathsl{\\Kappa}"],
    ["d706", "\\mathsl{\\Lambda}"],
    ["d709", "\\mathsl{\\Xi}"],
    ["d70b", "\\mathsl{\\Pi}"],
    ["d70c", "\\mathsl{\\Rho}"],
    ["d70d", "\\mathsl{\\varsigma}"],
    ["d70e", "\\mathsl{\\Sigma}"],
    ["d70f", "\\mathsl{\\Tau}"],
    ["d710", "\\mathsl{\\Upsilon}"],
    ["d711", "\\mathsl{\\Phi}"],
    ["d712", "\\mathsl{\\Chi}"],
    ["d713", "\\mathsl{\\Psi}"],
    ["d714", "\\mathsl{\\Omega}"],
    ["d715", "\\partial{}"],
    ["d716", "\\in"],
    ["d717", "\\mathsl{\\vartheta}"],
    ["d718", "\\mathsl{\\varkappa}"],
    ["d719", "\\mathsl{\\phi}"],
    ["d71a", "\\mathsl{\\varrho}"],
    ["d71b", "\\mathsl{\\varpi}"],
    ["d71c", "\\mathbit{\\Alpha}"],
    ["d71d", "\\mathbit{\\Beta}"],
    ["d71e", "\\mathbit{\\Gamma}"],
    ["d71f", "\\mathbit{\\Delta}"],
    ["d720", "\\mathbit{\\Epsilon}"],
    ["d721", "\\mathbit{\\Zeta}"],
    ["d722", "\\mathbit{\\Eta}"],
    ["d723", "\\mathbit{\\Theta}"],
    ["d724", "\\mathbit{\\Iota}"],
    ["d725", "\\mathbit{\\Kappa}"],
    ["d726", "\\mathbit{\\Lambda}"],
    ["d729", "\\mathbit{\\Xi}"],
    ["d72b", "\\mathbit{\\Pi}"],
    ["d72c", "\\mathbit{\\Rho}"],
    ["d72d", "\\mathbit{O}"],
    ["d72e", "\\mathbit{\\Sigma}"],
    ["d72f", "\\mathbit{\\Tau}"],
    ["d730", "\\mathbit{\\Upsilon}"],
    ["d731", "\\mathbit{\\Phi}"],
    ["d732", "\\mathbit{\\Chi}"],
    ["d733", "\\mathbit{\\Psi}"],
    ["d734", "\\mathbit{\\Omega}"],
    ["d735", "\\mathbit{\\nabla}"],
    ["d736", "\\mathbit{\\Alpha}"],
    ["d737", "\\mathbit{\\Beta}"],
    ["d738", "\\mathbit{\\Gamma}"],
    ["d739", "\\mathbit{\\Delta}"],
    ["d73a", "\\mathbit{\\Epsilon}"],
    ["d73b", "\\mathbit{\\Zeta}"],
    ["d73c", "\\mathbit{\\Eta}"],
    ["d73d", "\\mathbit{\\Theta}"],
    ["d73e", "\\mathbit{\\Iota}"],
    ["d73f", "\\mathbit{\\Kappa}"],
    ["d740", "\\mathbit{\\Lambda}"],
    ["d743", "\\mathbit{\\Xi}"],
    ["d745", "\\mathbit{\\Pi}"],
    ["d746", "\\mathbit{\\Rho}"],
    ["d747", "\\mathbit{\\varsigma}"],
    ["d748", "\\mathbit{\\Sigma}"],
    ["d749", "\\mathbit{\\Tau}"],
    ["d74a", "\\mathbit{\\Upsilon}"],
    ["d74b", "\\mathbit{\\Phi}"],
    ["d74c", "\\mathbit{\\Chi}"],
    ["d74d", "\\mathbit{\\Psi}"],
    ["d74e", "\\mathbit{\\Omega}"],
    ["d74f", "\\partial{}"],
    ["d750", "\\in"],
    ["d751", "\\mathbit{\\vartheta}"],
    ["d752", "\\mathbit{\\varkappa}"],
    ["d753", "\\mathbit{\\phi}"],
    ["d754", "\\mathbit{\\varrho}"],
    ["d755", "\\mathbit{\\varpi}"],
    ["d756", "\\mathsfbf{\\Alpha}"],
    ["d757", "\\mathsfbf{\\Beta}"],
    ["d758", "\\mathsfbf{\\Gamma}"],
    ["d759", "\\mathsfbf{\\Delta}"],
    ["d75a", "\\mathsfbf{\\Epsilon}"],
    ["d75b", "\\mathsfbf{\\Zeta}"],
    ["d75c", "\\mathsfbf{\\Eta}"],
    ["d75d", "\\mathsfbf{\\Theta}"],
    ["d75e", "\\mathsfbf{\\Iota}"],
    ["d75f", "\\mathsfbf{\\Kappa}"],
    ["d760", "\\mathsfbf{\\Lambda}"],
    ["d763", "\\mathsfbf{\\Xi}"],
    ["d765", "\\mathsfbf{\\Pi}"],
    ["d766", "\\mathsfbf{\\Rho}"],
    ["d767", "\\mathsfbf{\\vartheta}"],
    ["d768", "\\mathsfbf{\\Sigma}"],
    ["d769", "\\mathsfbf{\\Tau}"],
    ["d76a", "\\mathsfbf{\\Upsilon}"],
    ["d76b", "\\mathsfbf{\\Phi}"],
    ["d76c", "\\mathsfbf{\\Chi}"],
    ["d76d", "\\mathsfbf{\\Psi}"],
    ["d76e", "\\mathsfbf{\\Omega}"],
    ["d76f", "\\mathsfbf{\\nabla}"],
    ["d770", "\\mathsfbf{\\Alpha}"],
    ["d771", "\\mathsfbf{\\Beta}"],
    ["d772", "\\mathsfbf{\\Gamma}"],
    ["d773", "\\mathsfbf{\\Delta}"],
    ["d774", "\\mathsfbf{\\Epsilon}"],
    ["d775", "\\mathsfbf{\\Zeta}"],
    ["d776", "\\mathsfbf{\\Eta}"],
    ["d777", "\\mathsfbf{\\Theta}"],
    ["d778", "\\mathsfbf{\\Iota}"],
    ["d779", "\\mathsfbf{\\Kappa}"],
    ["d77a", "\\mathsfbf{\\Lambda}"],
    ["d77d", "\\mathsfbf{\\Xi}"],
    ["d77f", "\\mathsfbf{\\Pi}"],
    ["d780", "\\mathsfbf{\\Rho}"],
    ["d781", "\\mathsfbf{\\varsigma}"],
    ["d782", "\\mathsfbf{\\Sigma}"],
    ["d783", "\\mathsfbf{\\Tau}"],
    ["d784", "\\mathsfbf{\\Upsilon}"],
    ["d785", "\\mathsfbf{\\Phi}"],
    ["d786", "\\mathsfbf{\\Chi}"],
    ["d787", "\\mathsfbf{\\Psi}"],
    ["d788", "\\mathsfbf{\\Omega}"],
    ["d789", "\\partial{}"],
    ["d78a", "\\in"],
    ["d78b", "\\mathsfbf{\\vartheta}"],
    ["d78c", "\\mathsfbf{\\varkappa}"],
    ["d78d", "\\mathsfbf{\\phi}"],
    ["d78e", "\\mathsfbf{\\varrho}"],
    ["d78f", "\\mathsfbf{\\varpi}"],
    ["d790", "\\mathsfbfsl{\\Alpha}"],
    ["d791", "\\mathsfbfsl{\\Beta}"],
    ["d792", "\\mathsfbfsl{\\Gamma}"],
    ["d793", "\\mathsfbfsl{\\Delta}"],
    ["d794", "\\mathsfbfsl{\\Epsilon}"],
    ["d795", "\\mathsfbfsl{\\Zeta}"],
    ["d796", "\\mathsfbfsl{\\Eta}"],
    ["d797", "\\mathsfbfsl{\\vartheta}"],
    ["d798", "\\mathsfbfsl{\\Iota}"],
    ["d799", "\\mathsfbfsl{\\Kappa}"],
    ["d79a", "\\mathsfbfsl{\\Lambda}"],
    ["d79d", "\\mathsfbfsl{\\Xi}"],
    ["d79f", "\\mathsfbfsl{\\Pi}"],
    ["d7a0", "\\mathsfbfsl{\\Rho}"],
    ["d7a1", "\\mathsfbfsl{\\vartheta}"],
    ["d7a2", "\\mathsfbfsl{\\Sigma}"],
    ["d7a3", "\\mathsfbfsl{\\Tau}"],
    ["d7a4", "\\mathsfbfsl{\\Upsilon}"],
    ["d7a5", "\\mathsfbfsl{\\Phi}"],
    ["d7a6", "\\mathsfbfsl{\\Chi}"],
    ["d7a7", "\\mathsfbfsl{\\Psi}"],
    ["d7a8", "\\mathsfbfsl{\\Omega}"],
    ["d7a9", "\\mathsfbfsl{\\nabla}"],
    ["d7aa", "\\mathsfbfsl{\\Alpha}"],
    ["d7ab", "\\mathsfbfsl{\\Beta}"],
    ["d7ac", "\\mathsfbfsl{\\Gamma}"],
    ["d7ad", "\\mathsfbfsl{\\Delta}"],
    ["d7ae", "\\mathsfbfsl{\\Epsilon}"],
    ["d7af", "\\mathsfbfsl{\\Zeta}"],
    ["d7b0", "\\mathsfbfsl{\\Eta}"],
    ["d7b1", "\\mathsfbfsl{\\vartheta}"],
    ["d7b2", "\\mathsfbfsl{\\Iota}"],
    ["d7b3", "\\mathsfbfsl{\\Kappa}"],
    ["d7b4", "\\mathsfbfsl{\\Lambda}"],
    ["d7b7", "\\mathsfbfsl{\\Xi}"],
    ["d7b9", "\\mathsfbfsl{\\Pi}"],
    ["d7ba", "\\mathsfbfsl{\\Rho}"],
    ["d7bb", "\\mathsfbfsl{\\varsigma}"],
    ["d7bc", "\\mathsfbfsl{\\Sigma}"],
    ["d7bd", "\\mathsfbfsl{\\Tau}"],
    ["d7be", "\\mathsfbfsl{\\Upsilon}"],
    ["d7bf", "\\mathsfbfsl{\\Phi}"],
    ["d7c0", "\\mathsfbfsl{\\Chi}"],
    ["d7c1", "\\mathsfbfsl{\\Psi}"],
    ["d7c2", "\\mathsfbfsl{\\Omega}"],
    ["d7c3", "\\partial{}"],
    ["d7c4", "\\in"],
    ["d7c5", "\\mathsfbfsl{\\vartheta}"],
    ["d7c6", "\\mathsfbfsl{\\varkappa}"],
    ["d7c7", "\\mathsfbfsl{\\phi}"],
    ["d7c8", "\\mathsfbfsl{\\varrho}"],
    ["d7c9", "\\mathsfbfsl{\\varpi}"],
    ["d7ce", "\\mathbf{0}"],
    ["d7cf", "\\mathbf{1}"],
    ["d7d0", "\\mathbf{2}"],
    ["d7d1", "\\mathbf{3}"],
    ["d7d2", "\\mathbf{4}"],
    ["d7d3", "\\mathbf{5}"],
    ["d7d4", "\\mathbf{6}"],
    ["d7d5", "\\mathbf{7}"],
    ["d7d6", "\\mathbf{8}"],
    ["d7d7", "\\mathbf{9}"],
    ["d7d8", "\\mathbb{0}"],
    ["d7d9", "\\mathbb{1}"],
    ["d7da", "\\mathbb{2}"],
    ["d7db", "\\mathbb{3}"],
    ["d7dc", "\\mathbb{4}"],
    ["d7dd", "\\mathbb{5}"],
    ["d7de", "\\mathbb{6}"],
    ["d7df", "\\mathbb{7}"],
    ["d7e0", "\\mathbb{8}"],
    ["d7e1", "\\mathbb{9}"],
    ["d7e2", "\\mathsf{0}"],
    ["d7e3", "\\mathsf{1}"],
    ["d7e4", "\\mathsf{2}"],
    ["d7e5", "\\mathsf{3}"],
    ["d7e6", "\\mathsf{4}"],
    ["d7e7", "\\mathsf{5}"],
    ["d7e8", "\\mathsf{6}"],
    ["d7e9", "\\mathsf{7}"],
    ["d7ea", "\\mathsf{8}"],
    ["d7eb", "\\mathsf{9}"],
    ["d7ec", "\\mathsfbf{0}"],
    ["d7ed", "\\mathsfbf{1}"],
    ["d7ee", "\\mathsfbf{2}"],
    ["d7ef", "\\mathsfbf{3}"],
    ["d7f0", "\\mathsfbf{4}"],
    ["d7f1", "\\mathsfbf{5}"],
    ["d7f2", "\\mathsfbf{6}"],
    ["d7f3", "\\mathsfbf{7}"],
    ["d7f4", "\\mathsfbf{8}"],
    ["d7f5", "\\mathsfbf{9}"],
    ["d7f6", "\\mathtt{0}"],
    ["d7f7", "\\mathtt{1}"],
    ["d7f8", "\\mathtt{2}"],
    ["d7f9", "\\mathtt{3}"],
    ["d7fa", "\\mathtt{4}"],
    ["d7fb", "\\mathtt{5}"],
    ["d7fc", "\\mathtt{6}"],
    ["d7fd", "\\mathtt{7}"],
    ["d7fe", "\\mathtt{8}"],
    ["d7ff", "\\mathtt{9}"],
  ]);
  function em(r) {
    var e = [];
    r = r.replace(/\$[^$]+\$/, (n) => (e.push(n), "MATH.EXP.".concat(e.length - 1)));
    var t = "",
      i = !1;
    for (var n = 0; n < r.length; n++) {
      if (i) {
        (i = !1), (t += r[n]);
        continue;
      }
      if (r[n] === "\\") {
        (i = !0), (t += r[n]);
        continue;
      }
      var s = r.charCodeAt(n).toString(16).padStart(4, "0");
      var _Z0_get;
      t += (_Z0_get = Z0.get(s)) !== null && _Z0_get !== void 0 ? _Z0_get : r[n];
    }
    var _e_Number;
    return t.replace(/MATH\.EXP\.(\d+)/, (n, s) => ((_e_Number = e[Number(s)]) !== null && _e_Number !== void 0 ? _e_Number : ""));
  }
  h(em, "escapeSpecialCharacters");
  function tm(r) {
    return r.replace(/(\w)(\S*)/g, (e, t, i) => {
      var n = t + i;
      return tv(n) ? n : t.toLocaleUpperCase() + i.toLocaleLowerCase();
    });
  }
  h(tm, "titleCase");
  function tv(r) {
    return /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/.test(r);
  }
  h(tv, "isRomanNumeral");
  function tr(r) {
    return r.replace(/[^0-9A-Za-z]/g, "").toLocaleLowerCase();
  }
  h(tr, "alphaNum");
  function im(r) {
    return r.replace(/\r\n?/g, "\n");
  }
  h(im, "convertCRLF");
  function rm(r, e) {
    var t = r.split(" "),
      i = [],
      n = "";
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = t.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _sliced_to_array(_step.value, 2),
          s = _step_value[0],
          o = _step_value[1];
        n.length + o.length + 1 > e && s > 0 && (i.push(n.trim()), (n = "")), (n += o + " ");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return [...i, n.trim()];
  }
  h(rm, "wrapText");
  function nm(r) {
    return r
      .replace(/\s*\n\s*\n\s*/g, "<<BIBTEX_TIDY_PARA>>")
      .replace(/\s*\n\s*/g, " ")
      .replace(/<<BIBTEX_TIDY_PARA>>/g, "\n\n");
  }
  h(nm, "unwrapText");
  function yl(r, e) {
    return e && (r = gs($r(ms(r)))), "{".concat(r, "}");
  }
  h(yl, "addEnclosingBraces");
  function sm(r) {
    return r.replace(/^\{([^{}]*)\}$/g, "$1");
  }
  h(sm, "removeEnclosingBraces");
  function om(r) {
    return r.replace(/\\?_/g, "\\%5F");
  }
  h(om, "escapeURL");
  function um(r, e) {
    var t = r.split(" and ");
    return t.length > e ? [...t.slice(0, e), "others"].join(" and ") : r;
  }
  h(um, "limitAuthors");
  function lm(r) {
    for (var e = 0; e < 4; e++) r = r.replace(/(\d)\s*-\s*(\d)/g, "$1--$2");
    return r;
  }
  h(lm, "formatPageRange");
  function qr(r) {
    var _r_block;
    return r.type !== "text" && ((_r_block = r.block) === null || _r_block === void 0 ? void 0 : _r_block.type) === "entry";
  }
  h(qr, "isEntryNode");
  function am(r, e, t, i) {
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (t)
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var f = _step.value;
          n.set(f, !!i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    n.has("key") || n.set("key", !1);
    var s = new Set(),
      o = [],
      u = new Map(),
      l = new Map(),
      a = new Map(),
      c = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = Di(r)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var f1 = _step1.value;
        var d = e.get(f1);
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _step_value = _sliced_to_array(_step2.value, 2),
              p = _step_value[0],
              m = _step_value[1];
            var F = void 0,
              g = void 0;
            switch (p) {
              case "key": {
                if (!f1.key) continue;
                var D = f1.key.toLocaleLowerCase();
                (F = u.get(D)), F ? (g = "The citation key ".concat(f1.key, " has already been used.")) : u.set(D, f1);
                break;
              }
              case "doi": {
                var _d_get;
                var D1 = tr((_d_get = d.get("doi")) !== null && _d_get !== void 0 ? _d_get : "");
                if (!D1) continue;
                (F = l.get(D1)), F ? (g = "Entry ".concat(f1.key, " has an identical DOI to entry ").concat(F.key, ".")) : l.set(D1, f1);
                break;
              }
              case "citation": {
                var D2 = d.get("title"),
                  b = d.get("author"),
                  A = d.get("number");
                if (!D2 || !b) continue;
                var v = [tr(b.split(/,| and/)[0]), tr(D2), tr(A !== null && A !== void 0 ? A : "0")].join(":");
                (F = a.get(v)), F ? (g = "Entry ".concat(f1.key, " has similar content to entry ").concat(F.key, ".")) : a.set(v, f1);
                break;
              }
              case "abstract": {
                var _d_get1;
                var b1 = tr((_d_get1 = d.get("abstract")) !== null && _d_get1 !== void 0 ? _d_get1 : "").slice(0, 100);
                if (!b1) continue;
                (F = c.get(b1)), F ? (g = "Entry ".concat(f1.key, " has a similar abstract to entry ").concat(F.key, ".")) : c.set(b1, f1);
                break;
              }
            }
            F && m && (s.add(f1), iv(i, F, f1)), g && o.push({ code: "DUPLICATE_ENTRY", rule: p, message: "Duplicate ".concat(m ? "removed" : "detected", ". ").concat(g) });
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return { entries: s, warnings: o };
  }
  h(am, "checkForDuplicates");
  function iv(r, e, t) {
    if (r)
      switch (r) {
        case "last":
          (e.key = t.key), (e.fields = t.fields);
          break;
        case "combine":
        case "overwrite":
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            var _loop = function () {
              var i = _step.value;
              var n = e.fields.find((s) => s.name.toLocaleLowerCase() === i.name.toLocaleLowerCase());
              n ? r === "overwrite" && (n.value = i.value) : e.fields.push(i);
            };
            for (var _iterator = t.fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          break;
        case "first":
          return;
      }
  }
  h(iv, "mergeEntries");
  var El = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"],
    hm = new Set(El),
    cm = {
      1: "jan",
      2: "feb",
      3: "mar",
      4: "apr",
      5: "may",
      6: "jun",
      7: "jul",
      8: "aug",
      9: "sep",
      10: "oct",
      11: "nov",
      12: "dec",
      jan: "jan",
      feb: "feb",
      mar: "mar",
      apr: "apr",
      may: "may",
      jun: "jun",
      jul: "jul",
      aug: "aug",
      sep: "sep",
      oct: "oct",
      nov: "nov",
      dec: "dec",
      january: "jan",
      february: "feb",
      march: "mar",
      april: "apr",
      june: "jun",
      july: "jul",
      august: "aug",
      september: "sep",
      october: "oct",
      november: "nov",
      december: "dec",
    };
  function dm(r, e, t) {
    var i = e.omit,
      n = e.tab,
      s = e.space,
      o = n ? "	" : " ".repeat(s),
      u = new Set(i),
      l = r.children
        .map((a) => rv(a, e, o, u, t))
        .join("")
        .trimEnd();
    return l.endsWith("\n") || (l += "\n"), l;
  }
  h(dm, "formatBibtex");
  function rv(r, e, t, i, n) {
    if (r.type === "text") return fm(r.text, e);
    if (!r.block) throw new Error("FATAL!");
    switch (r.block.type) {
      case "preamble":
      case "string":
        return "".concat(r.block.raw, "\n") + (e.blankLines ? "\n" : "");
      case "comment":
        return fm(r.block.raw, e);
      case "entry":
        var _n;
        return nv(r.command, r.block, e, t, i, (_n = n) === null || _n === void 0 ? void 0 : _n.get(r.block)) + (e.blankLines ? "\n" : "");
    }
  }
  h(rv, "formatNode");
  function nv(r, e, t, i, n, s) {
    var o = t.align,
      u = t.trailingCommas,
      l = t.removeDuplicateFields,
      a = t.removeEmptyFields,
      c = t.lowercase,
      f = "",
      d = c ? r.toLocaleLowerCase() : r;
    f += "@".concat(d, "{");
    var p = s !== null && s !== void 0 ? s : e.key;
    p && (f += "".concat(p, ","));
    var m = new Set();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.fields.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _sliced_to_array(_step.value, 2),
          F = _step_value[0],
          g = _step_value[1];
        var D = g.name.toLocaleLowerCase(),
          b = c ? D : g.name;
        if (g.name !== "" && !n.has(D) && !(l && m.has(D))) {
          if ((m.add(D), g.value.concat.length === 0)) {
            if (a) continue;
            f += "\n".concat(i).concat(b);
          } else {
            var A = Cl(g, t);
            if (a && (A === "{}" || A === '""')) continue;
            f += "\n"
              .concat(i)
              .concat(b.trim().padEnd(o - 1), " = ")
              .concat(A);
          }
          (F < e.fields.length - 1 || u) && (f += ",");
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return (f += "\n}\n"), f;
  }
  h(nv, "formatEntry");
  function fm(r, param) {
    var e = param.stripComments,
      t = param.tidyComments;
    if (e) return "";
    if (t) {
      var i = r.trim();
      return i === "" ? "" : i + "\n";
    } else return r.replace(/^[ \t]*\n|[ \t]*$/g, "");
  }
  h(fm, "formatComment");
  function Cl(r, e) {
    var t = e.curly,
      i = e.numeric,
      n = e.align,
      s = e.stripEnclosingBraces,
      o = e.dropAllCaps,
      u = e.escape,
      l = e.encodeUrls,
      a = e.wrap,
      c = e.maxAuthors,
      f = e.tab,
      d = e.space,
      p = e.enclosingBraces,
      m = e.removeBraces,
      F = e.months,
      g = r.name.toLocaleLowerCase(),
      D = f ? "	" : " ".repeat(d),
      b = new Set((p !== null && p !== void 0 ? p : []).map((v) => v.toLocaleLowerCase())),
      A = new Set((m !== null && m !== void 0 ? m : []).map((v) => v.toLocaleLowerCase()));
    return r.value.concat
      .map((param) => {
        var v = param.type,
          C = param.value;
        var w = C.match(/^[1-9][0-9]*$/);
        if ((w && t && (v = "braced"), F && g === "month")) {
          var q = cm[C.toLowerCase()];
          if (q) return q;
        }
        if (v === "literal" || (i && w)) return C;
        var P = C.slice(0, 3).toLowerCase(),
          K = g === "month" && hm.has(P);
        if (!t && i && K) return P;
        if (((C = nm(C)), s && (C = sm(C)), o && !C.match(/[a-z]/) && (C = tm(C)), g === "url" && l && (C = om(C)), u && (C = em(C)), g === "pages" && (C = lm(C)), g === "author" && c && (C = um(C, c)), A.has(g) && (C = gs($r(ms(C)))), b.has(g) && (v === "braced" || t) && (C = yl(C, !0)), v === "braced" && r.value.concat.length === 1 && (C = C.trim()), v === "braced" || t)) {
          var q1 = "".concat(D).concat(n, "{").concat(C, "}").length,
            H = C.includes("\n\n");
          if ((a && q1 > a) || H) {
            var I = C.split("\n\n"),
              ne = D.repeat(2);
            if (a) {
              var le = a;
              I = I.map((V) => rm(V, le - ne.length).join("\n" + ne));
            }
            C = "\n" + ne + I.join("\n\n".concat(ne)) + "\n" + D;
          }
          return yl(C);
        } else return '"'.concat(C, '"');
      })
      .join(" # ");
  }
  h(Cl, "formatValue");
  function Vr(r, e) {
    return r
      .replace(/\s+/g, " ")
      .split(/ and /i)
      .map((t) => {
        var i = t.trim();
        e && (i = i.replace(/["{}]/g, ""));
        var n = i.indexOf(",");
        if (n > -1) return { firstNames: i.slice(n + 1).trim(), lastName: i.slice(0, n).trim() };
        {
          var s = i.lastIndexOf(" ");
          return { firstNames: i.slice(0, s).trim(), lastName: i.slice(s).trim() };
        }
      });
  }
  h(Vr, "parseAuthors");
  var _r_get;
  var sv = {
      auth: {
        description: "Last name of first authors",
        callback: (r) => {
          var _Vr_;
          var _r_get;
          var t =
            (_Vr_ = Vr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0)[0]) === null || _Vr_ === void 0
              ? void 0
              : _Vr_.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_",
                );
          return t ? [t] : [];
        },
      },
      authEtAl: {
        description: "If 1 or 2 authors, both authors, otherwise first author and EtAl",
        callback: (r) => {
          var _r_get;
          var e = Vr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0);
          return [
            ...e
              .slice(0, 2)
              .map((t) =>
                t.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_",
                ),
              ),
            ...(e.length > 2 ? ["Et", "Al"] : []),
          ];
        },
      },
      authors: {
        description: "Last name all authors",
        callback: (r) =>
          Vr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0).map((t) =>
            t.lastName.replace(
              /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
              "_",
            ),
          ),
      },
      authorsN: {
        description: "Last name N authors, with EtAl if more",
        callback: (r, e) => {
          var _r_get;
          var t = Vr((_r_get = r.get("author")) !== null && _r_get !== void 0 ? _r_get : "", !0);
          return [
            ...t
              .slice(0, e)
              .map((i) =>
                i.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_",
                ),
              ),
            ...(t.length > e ? ["Et", "Al"] : []),
          ];
        },
      },
      veryshorttitle: { description: "First non-function word of the title", callback: (r) => pm(Ds(r)).slice(0, 1) },
      shorttitle: { description: "First three non-function words of the title", callback: (r) => pm(Ds(r)).slice(0, 3) },
      title: { description: "Full title, capitalized", callback: (r) => gm(bs(Ds(r))) },
      fulltitle: { description: "Full title, verbatim", callback: (r) => bs(Ds(r)) },
      year: {
        description: "Year",
        callback: (r) => {
          var _r_get;
          var e = (_r_get = r.get("year")) === null || _r_get === void 0 ? void 0 : _r_get.replace(/[^0-9]/g, "");
          return e ? [e] : [];
        },
      },
      duplicateLetter: { description: "If the multiple entries end up with the same key, then insert a letter a-z. By default this will be inserted at the end.", callback: () => ["[duplicateLetter]"] },
      duplicateNumber: { description: "If the multiple entries end up with the same key, then insert a number.", callback: () => ["[duplicateNumber]"] },
    },
    ov = {
      required: {
        description: "If data is missing, revert to existing key",
        callback: (r) => {
          if (r.length === 0) throw new Fs();
          return r;
        },
      },
      lower: { description: "Convert to lowercase", callback: (r) => r.map((e) => e.toLocaleLowerCase()) },
      upper: { description: "Convert to uppercase", callback: (r) => r.map((e) => e.toLocaleUpperCase()) },
      capitalize: { description: "Capitalize first letter of each word", callback: gm },
    },
    Fs =
      ((_class17 = class _class extends Error {}),
      (() => {
        h(_class17, "MissingRequiredData");
      })(),
      _class17);
  function mm(r, e, t) {
    var i = t;
    !t.includes("[duplicateLetter]") && !t.includes("[duplicateNumber]") && (i = t + "[duplicateLetter]");
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var o = _step.value;
        if (qr(o)) {
          var u = e.get(o.block);
          if (!u) continue;
          var l = uv(u, i);
          if (!l) continue;
          var _n_get;
          var a = (_n_get = n.get(l)) !== null && _n_get !== void 0 ? _n_get : [];
          n.set(l, [...a, o.block]);
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var s = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined,
      _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
        var _step_value = _sliced_to_array(_step1.value, 2),
          o1 = _step_value[0],
          u1 = _step_value[1];
        try {
          for (var _iterator2 = u1.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
            var _step_value1 = _sliced_to_array(_step2.value, 2),
              l1 = _step_value1[0],
              a1 = _step_value1[1];
            var c = u1.length > 1 ? String.fromCharCode(97 + l1) : "",
              f = u1.length > 1 ? String(l1 + 1) : "";
            a1.key = o1.replace(/\[duplicateLetter\]/g, c).replace(/\[duplicateNumber\]/g, f);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
    return s;
  }
  h(mm, "generateKeys");
  function uv(r, e) {
    try {
      var _$t = e.replace(/\[[^:\]]+(?::[^:\]]+)*\]/g, (i) => {
        var _i_slice_split = _to_array(i.slice(1, -1).split(":")),
          n = _i_slice_split[0],
          s = _i_slice_split.slice(1);
        if (!n) throw new Error("Token parse error");
        var o,
          u = n.replace(/[0-9]+/g, (c) => ((o = Number(c)), "N")),
          l = sv[u],
          a;
        if (l) a = l.callback(r, o);
        else if (u === u.toLocaleUpperCase()) {
          var c = r.get(u.toLocaleLowerCase());
          a = c ? bs(c) : [];
        } else throw new Error("Invalid citation key token ".concat(u));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var c1 = _step.value;
            var f = ov[c1];
            if (f) a = f.callback(a);
            else throw new Error("Invalid modifier ".concat(c1));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return a.join("");
      });
      return _$t === "" ? void 0 : _$t;
    } catch (t) {
      if (t instanceof Fs) return;
      throw t;
    }
  }
  h(uv, "generateKey");
  var lv = new Set([
    "a",
    "about",
    "above",
    "across",
    "against",
    "along",
    "among",
    "an",
    "and",
    "around",
    "at",
    "before",
    "behind",
    "below",
    "beneath",
    "beside",
    "between",
    "beyond",
    "but",
    "by",
    "down",
    "during",
    "except",
    "for",
    "for",
    "from",
    "in",
    "inside",
    "into",
    "like",
    "near",
    "nor",
    "of",
    "off",
    "on",
    "onto",
    "or",
    "since",
    "so",
    "the",
    "through",
    "to",
    "toward",
    "under",
    "until",
    "up",
    "upon",
    "with",
    "within",
    "without",
    "yet",
  ]);
  function pm(r) {
    return bs(r).filter((e) => !lv.has(e.toLocaleLowerCase()));
  }
  h(pm, "nonFunctionWords");
  function bs(r) {
    return r
      .split(
        /(?:[\0-\/:-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/,
      )
      .filter((e) => e.length > 0);
  }
  h(bs, "words");
  function gm(r) {
    return r.map((e) => e.slice(0, 1).toLocaleUpperCase() + e.slice(1).toLocaleLowerCase());
  }
  h(gm, "capitalize");
  function Ds(r) {
    var _r_get, _ref;
    return (_ref = (_r_get = r.get("title")) !== null && _r_get !== void 0 ? _r_get : r.get("booktitle")) !== null && _ref !== void 0 ? _ref : "";
  }
  h(Ds, "title");
  var Dm = ["doi", "citation", "abstract"];
  var ys = ["title", "shorttitle", "author", "year", "month", "day", "journal", "booktitle", "location", "on", "publisher", "address", "series", "volume", "number", "pages", "doi", "isbn", "issn", "url", "urldate", "copyright", "category", "note", "metadata"],
    Bl = ["key"],
    Fm = "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]",
    Wr = [
      { key: "help", cli: { "--help": !0, "-h": !0 }, title: "Help", description: ["Show help"], type: "boolean" },
      { key: "v2", cli: { "--v2": !0 }, title: "Enable planned v2 CLI changes", description: ["Input files will no longer be modified by default. Instead, you will need to specify `--modify`/`-m` option to overwrite the file, or `--output`/`-o` to output to a different file."], type: "string", defaultValue: void 0 },
      { key: "outputPath", cli: { "--output": (r) => r[0], "-o": (r) => r[0] }, title: "Output path", description: ["Write output to specified path. When omitted (and -m/--modify is not used), the result will be printed to stdout."], type: "string", defaultValue: void 0 },
      { key: "modify", cli: { "--modify": !0, "-m": !0, "--no-modify": !1 }, title: "Modify input files", description: ["Overwrite the original input files with the tidied result. This is enabled by default but will be disabled by default in v2. For v1, use --no-modify to output to stdout instead of overwriting the input files."], type: "boolean", defaultValue: !0 },
      { key: "omit", cli: { "--omit": (r) => (r.length === 0 && (console.error("Expected a omit list"), process.exit(1)), r) }, toCLI: (r) => (Array.isArray(r) && r.length > 0 ? "--omit=".concat(r.join(",")) : void 0), title: "Remove fields", description: ["Remove specified fields from bibliography entries."], examples: ["--omit=id,name"], type: "string[]", defaultValue: [] },
      { key: "curly", cli: { "--curly": !0, "--no-curly": !1 }, toCLI: (r) => (r ? "--curly" : void 0), title: "Enclose values in braces", description: ['Enclose all property values in braces. Quoted values will be converted to braces. For example, "Journal of Tea" will become {Journal of Tea}.'], type: "boolean", defaultValue: !1 },
      { key: "numeric", cli: { "--numeric": !0, "--no-numeric": !1 }, toCLI: (r) => (r ? "--numeric" : void 0), title: "Use numeric values where possible", description: ["Strip quotes and braces from numeric/month values. For example, {1998} will become 1998."], type: "boolean", defaultValue: !1 },
      { key: "months", cli: { "--months": !0 }, toCLI: (r) => (r ? "--months" : void 0), title: "Abbreviate months", description: ["Convert all months to three letter abbreviations (jan, feb, etc)."], type: "boolean", defaultValue: !1 },
      {
        key: "space",
        cli: { "--space": (r) => (r.length > 0 ? Number(r[0]) : !0) },
        toCLI: (r, e) => {
          if (!e.tab) {
            if (typeof r == "number" && r !== 2) return "--space=".concat(r);
            if (r && r !== 2) return "--space";
          }
        },
        title: "Indent with spaces",
        description: ["Indent all fields with the specified number of spaces. Ignored if tab is set."],
        examples: ["--space=2 (default)", "--space=4"],
        type: "boolean | number",
        convertBoolean: { true: 2, false: void 0 },
        defaultValue: 2,
      },
      { key: "tab", cli: { "--tab": !0, "--no-tab": !1 }, toCLI: (r) => (r ? "--tab" : void 0), title: "Indent with tabs", description: ["Indent all fields with a tab."], type: "boolean", defaultValue: !1 },
      {
        key: "align",
        cli: { "--align": (r) => Number(r[0]), "--no-align": !1 },
        toCLI: (r) => {
          if (r === !1 || r === 1 || r === 0) return "--no-align";
          if (typeof r == "number" && r !== 14) return "--align=".concat(r);
        },
        title: "Align values",
        description: ["Insert whitespace between fields and values so that values are visually aligned."],
        examples: ["--align=14 (default)"],
        type: "boolean | number",
        convertBoolean: { true: 14, false: 1 },
        defaultValue: 14,
      },
      { key: "blankLines", cli: { "--blank-lines": !0, "--no-blank-lines": !1 }, toCLI: (r) => (r ? "--blank-lines" : void 0), title: "Insert blank lines", description: ["Insert an empty line between each entry."], type: "boolean" },
      {
        key: "sort",
        cli: { "--sort": (r) => (r.length > 0 ? r : !0), "--no-sort": !1 },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--sort=".concat(r.join(","));
          if (r === !0) return "--sort";
        },
        title: "Sort bibliography entries",
        description: [
          "Sort entries by the specified field names (citation key is used if no fields are specified). For descending order, prefix the field with a dash (-).",
          "Multiple fields may be specified to sort everything by first field, then by the second field whenever the first field for entries are equal, etc.",
          "The following additional fields are also permitted: key (entry citation key), type (sorts by the type of entry, e.g. article), and special (ensures that @string, @preamble, @set, and @xdata entries are first). ",
        ],
        examples: ["--sort (sort by citation key)", "--sort=-year,name (sort year descending then name ascending)", "--sort=name,year"],
        type: "boolean | string[]",
        convertBoolean: { true: Bl, false: void 0 },
      },
      {
        key: "duplicates",
        cli: {
          "--duplicates": (r) => {
            if (r.length === 0) return !0;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var e = _step.value;
                e !== "doi" && e !== "key" && e !== "abstract" && e !== "citation" && (console.error('Invalid key for merge option: "'.concat(e, '"')), process.exit(1));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            return r;
          },
        },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--duplicates=".concat(r.join(","));
          if (r === !0) return "--duplicates";
        },
        title: "Check for duplicates",
        description: ["Warn if duplicates are found, which are entries where DOI, abstract, or author and title are the same."],
        examples: ["--duplicates doi (same DOIs)", "--duplicates key (same IDs)", "--duplicates abstract (similar abstracts)", "--duplicates citation (similar author and titles)", "--duplicates doi, key (identical DOI or keys)", "--duplicates (same DOI, key, abstract, or citation)"],
        type: "boolean | ('doi' | 'key' | 'abstract' | 'citation')[]",
        convertBoolean: { true: Dm, false: void 0 },
        defaultValue: (r) => (r.merge ? Dm : void 0),
      },
      {
        key: "merge",
        cli: { "--merge": (r) => (r.length === 0 ? !0 : (r[0] !== "first" && r[0] !== "last" && r[0] !== "combine" && r[0] !== "overwrite" && (console.error('Invalid merge strategy: "'.concat(r[0], '"')), process.exit(1)), r[0])), "--no-merge": !1 },
        toCLI: (r) => {
          if (typeof r == "string") return "--merge=".concat(r);
          if (r) return "--merge";
        },
        title: "Merge duplicate entries",
        description: [
          "Merge duplicates entries. Use the duplicates option to determine how duplicates are identified. There are different ways to merge:",
          "- first: only keep the original entry",
          "- last: only keep the last found duplicate",
          "- combine: keep original entry and merge in fields of duplicates if they do not already exist",
          "- overwrite: keep original entry and merge in fields of duplicates, overwriting existing fields if they exist",
        ],
        type: "boolean | 'first' | 'last' | 'combine' | 'overwrite'",
        convertBoolean: { true: "combine", false: void 0 },
      },
      { key: "stripEnclosingBraces", cli: { "--strip-enclosing-braces": !0 }, toCLI: (r) => (r ? "--strip-enclosing-braces" : void 0), title: "Strip double-braced values", description: ["Where an entire value is enclosed in double braces, remove the extra braces. For example, {{Journal of Tea}} will become {Journal of Tea}."], type: "boolean", defaultValue: !1 },
      { key: "dropAllCaps", cli: { "--drop-all-caps": !0 }, toCLI: (r) => (r ? "--drop-all-caps" : void 0), title: "Drop all caps", description: ["Where values are all caps, make them title case. For example, {JOURNAL OF TEA} will become {Journal of Tea}. Roman numerals will be left unchanged."], type: "boolean", defaultValue: !1 },
      { key: "escape", cli: { "--escape": !0, "--no-escape": !1 }, toCLI: (r) => (r === !1 ? "--no-escape" : void 0), title: "Escape special characters", description: ["Escape special characters, such as umlaut. This ensures correct typesetting with latex. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "sortFields",
        cli: { "--sort-fields": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return JSON.stringify(r) === JSON.stringify(ys) ? "--sort-fields" : "--sort-fields=".concat(r.join(","));
          if (r === !0) return "--sort-fields";
        },
        title: "Sort fields",
        description: ["Sort the fields within entries.", "If no fields are specified fields will be sorted by: title, shorttitle, author, year, month, day, journal, booktitle, location, on, publisher, address, series, volume, number, pages, doi, isbn, issn, url, urldate, copyright, category, note, metadata"],
        examples: ["--sort-fields=name,author"],
        type: "boolean | string[]",
        convertBoolean: { true: ys, false: void 0 },
        defaultValue: void 0,
      },
      { key: "sortProperties", cli: { "--sort-properties": (r) => (r.length > 0 ? r : !0) }, title: "Sort properties", description: ["Alias of sort fields (legacy)"], type: "boolean | string[]", deprecated: !0 },
      { key: "stripComments", cli: { "--strip-comments": !0, "--no-strip-comments": !1 }, toCLI: (r) => (r ? "--strip-comments" : void 0), title: "Remove comments", description: ["Remove all comments from the bibtex source."], type: "boolean", defaultValue: !1 },
      { key: "trailingCommas", cli: { "--trailing-commas": !0, "--no-trailing-commas": !0 }, toCLI: (r) => (r ? "--trailing-commas" : void 0), title: "Trailing commas", description: ["End the last key value pair in each entry with a comma."], type: "boolean", defaultValue: !1 },
      { key: "encodeUrls", cli: { "--encode-urls": !0, "--no-encode-urls": !0 }, toCLI: (r) => (r ? "--encode-urls" : void 0), title: "Encode URLs", description: ["Replace invalid URL characters with percent encoded values."], type: "boolean", defaultValue: !1 },
      { key: "tidyComments", cli: { "--tidy-comments": !0, "--no-tidy-comments": !1 }, toCLI: (r) => (r === !1 ? "--no-tidy-comments" : void 0), title: "Tidy comments", description: ["Remove whitespace surrounding comments."], type: "boolean", defaultValue: !0 },
      { key: "removeEmptyFields", cli: { "--remove-empty-fields": !0, "--no-remove-empty-fields": !1 }, toCLI: (r) => (r ? "--remove-empty-fields" : void 0), title: "Remove empty fields", description: ["Remove any fields that have empty values."], type: "boolean", defaultValue: !1 },
      { key: "removeDuplicateFields", cli: { "--remove-dupe-fields": !0, "--no-remove-dupe-fields": !1 }, toCLI: (r) => (r === !1 ? "--no-remove-dupe-fields" : void 0), title: "Remove duplicate fields", description: ["Only allow one of each field in each entry. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "generateKeys",
        cli: { "--generate-keys": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (r === !0 || r === Fm) return "--generate-keys";
          if (typeof r == "string") return '--generate-keys="'.concat(r.replace(/"/g, '\\"'), '"');
        },
        title: "Generate citation keys [Experimental]",
        description: ["For all entries replace the key with a new key of the form <author><year><title>. A JabRef citation pattern can be provided. This is an experimental option that may change without warning."],
        type: "boolean | string",
        convertBoolean: { true: Fm, false: void 0 },
        defaultValue: void 0,
      },
      { key: "maxAuthors", cli: { "--max-authors": (r) => Number(r[0]) }, toCLI: (r) => (r ? "--max-authors=".concat(r) : void 0), title: "Maximum authors", description: ['Truncate authors if above a given number into "and others".'], type: "number" },
      { key: "lowercase", cli: { "--no-lowercase": !1 }, toCLI: (r) => (r === !1 ? "--no-lowercase" : void 0), title: "Lowercase fields", description: ["Lowercase field names and entry type. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "enclosingBraces",
        cli: { "--enclosing-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--enclosing-braces=".concat(r.join(","));
          if (r === !0) return "--enclosing-braces";
        },
        title: "Enclose values in double braces",
        description: ["Enclose the given fields in double braces, such that case is preserved during BibTeX compilation."],
        examples: ["--enclosing-braces=title,journal (output title and journal fields will be of the form {{This is a title}})", "--enclosing-braces (equivalent to ---enclosing-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      {
        key: "removeBraces",
        cli: { "--remove-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--remove-braces=".concat(r.join(","));
          if (r === !0) return "--remove-braces";
        },
        title: "Remove braces",
        description: ["Remove any curly braces within the value, unless they are part of a command."],
        examples: ["--remove-braces=title,journal", "--remove-braces (equivalent to ---remove-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      { key: "wrap", cli: { "--wrap": (r) => (r.length > 0 ? Number(r[0]) : !0), "--no-wrap": !1 }, toCLI: (r) => (r ? "--wrap=".concat(r) : void 0), title: "Wrap values", description: ["Wrap long values at the given column"], examples: ["--wrap (80 by default)", "--wrap=82"], type: "boolean | number", convertBoolean: { true: 80, false: void 0 } },
      { key: "version", cli: { "--version": !0, "-v": !0 }, title: "Version", description: ["Show bibtex-tidy version."], type: "boolean" },
      { key: "quiet", cli: { "--quiet": !0 }, title: "Quiet", description: ["Suppress logs on stdout."], type: "boolean" },
      { key: "backup", cli: { "--backup": !0, "--no-backup": !1 }, title: "Backup", description: ["Make a backup <filename>.original. Enabled by default (unless --modify is explicitly provided or outputting to a different file/stdio). Deprecated but provided for backward compatibility."], type: "boolean", defaultValue: !0, deprecated: !0 },
    ],
    bm = Object.fromEntries(Wr.map((r) => [r.key, r]));
  function zr(r) {
    return Object.fromEntries(
      Wr.map((e) => {
        var t = e.key,
          i = r[t];
        return e.convertBoolean && typeof i == "boolean" ? [t, i ? e.convertBoolean.true : e.convertBoolean.false] : typeof i > "u" && e.defaultValue !== void 0 ? (typeof e.defaultValue == "function" ? [t, e.defaultValue(r)] : [t, e.defaultValue]) : [t, i];
      }),
    );
  }
  h(zr, "normalizeOptions");
  function ym(r, e, t) {
    var i = new Map(),
      n = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var _s_block;
        if (s.type === "text" || (((_s_block = s.block) === null || _s_block === void 0 ? void 0 : _s_block.type) !== "entry" && !t.includes("special"))) {
          n.push(s);
          continue;
        }
        var o = new Map();
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var u = _step1.value;
            u.startsWith("-") && (u = u.slice(1));
            var l = void 0;
            switch (u) {
              case "key":
                var _s_block1;
                if (((_s_block1 = s.block) === null || _s_block1 === void 0 ? void 0 : _s_block1.type) !== "entry") continue;
                var _s_block_key;
                l = (_s_block_key = s.block.key) !== null && _s_block_key !== void 0 ? _s_block_key : "";
                break;
              case "type":
                l = s.command;
                break;
              case "month": {
                var _s_block2, _e_get;
                if (((_s_block2 = s.block) === null || _s_block2 === void 0 ? void 0 : _s_block2.type) !== "entry") continue;
                var a = (_e_get = e.get(s.block)) === null || _e_get === void 0 ? void 0 : _e_get.get(u),
                  c = a ? El.indexOf(a) : -1;
                l = c > -1 ? c : "";
                break;
              }
              case "special":
                l = hv(s) ? 0 : 1;
                break;
              default:
                var _s_block3, _e_get1;
                if (((_s_block3 = s.block) === null || _s_block3 === void 0 ? void 0 : _s_block3.type) !== "entry") continue;
                var _e_get_get;
                l = (_e_get_get = (_e_get1 = e.get(s.block)) === null || _e_get1 === void 0 ? void 0 : _e_get1.get(u)) !== null && _e_get_get !== void 0 ? _e_get_get : "";
            }
            o.set(u, typeof l == "string" ? l.toLowerCase() : l);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        for (i.set(s, o); n.length > 0; ) i.set(n.pop(), o);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      var _loop = function () {
        var s = _step2.value;
        var o = s.startsWith("-"),
          u = o ? s.slice(1) : s;
        r.children.sort((l, a) => {
          var _i_get, _i_get1;
          var _i_get_get, _i_get_get1;
          var c = (_i_get_get = (_i_get = i.get(l)) === null || _i_get === void 0 ? void 0 : _i_get.get(u)) !== null && _i_get_get !== void 0 ? _i_get_get : "￰",
            f = (_i_get_get1 = (_i_get1 = i.get(a)) === null || _i_get1 === void 0 ? void 0 : _i_get1.get(u)) !== null && _i_get_get1 !== void 0 ? _i_get_get1 : "￰";
          return typeof c == "number" && (c = String(c).padStart(50, "0")), typeof f == "number" && (f = String(f).padStart(50, "0")), (o ? f : c).localeCompare(o ? c : f);
        });
      };
      for (var _iterator2 = [...t].reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) _loop();
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }
  h(ym, "sortEntries");
  var av = new Set(["string", "preamble", "set", "xdata"]);
  function hv(r) {
    return av.has(r.command.toLowerCase());
  }
  h(hv, "isBibLaTeXSpecialEntry");
  function Em(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = Di(r)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        t.fields.sort((i, n) => {
          var s = e.indexOf(i.name.toLocaleLowerCase()),
            o = e.indexOf(n.name.toLocaleLowerCase());
          return s === -1 && o === -1 ? 0 : s === -1 ? 1 : o === -1 ? -1 : o < s ? 1 : o > s ? -1 : 0;
        });
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(Em, "sortEntryFields");
  function Cm(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = zr(e);
    r = im(r);
    var i = K0(r),
      n = Di(i)
        .filter((a) => !a.key)
        .map((a) => ({ code: "MISSING_KEY", message: "".concat(a.parent.command, " entry does not have a citation key.") })),
      s = cv(i, t),
      o = am(i, s, t.duplicates, t.merge);
    n.push(...o.warnings), (i.children = i.children.filter((a) => !qr(a) || !o.entries.has(a.block))), t.sort && ym(i, s, t.sort), t.sortFields && Em(i, t.sortFields);
    var u = t.generateKeys ? mm(i, s, t.generateKeys) : void 0;
    return { bibtex: dm(i, t, u), warnings: n, count: Di(i).length };
  }
  h(Cm, "tidy");
  function Di(r) {
    return r.children.filter(qr).map((e) => e.block);
  }
  h(Di, "getEntries");
  function cv(r, e) {
    var _Cl;
    return new Map(Di(r).map((t) => [t, new Map(t.fields.map((i) => [i.name.toLocaleLowerCase(), (_Cl = Cl(i, e)) !== null && _Cl !== void 0 ? _Cl : ""]))]));
  }
  h(cv, "generateValueLookup");
  var fe =
      ((_r2 = class r {
        lineAt(e) {
          if (e < 0 || e > this.length) throw new RangeError("Invalid position ".concat(e, " in document of length ").concat(this.length));
          return this.lineInner(e, !1, 1, 0);
        }
        line(e) {
          if (e < 1 || e > this.lines) throw new RangeError("Invalid line number ".concat(e, " in ").concat(this.lines, "-line document"));
          return this.lineInner(e, !0, 1, 0);
        }
        replace(e, t, i) {
          var n = [];
          return this.decompose(0, e, n, 2), i.length && i.decompose(0, i.length, n, 3), this.decompose(t, this.length, n, 1), rr.from(n, this.length - (t - e) + i.length);
        }
        append(e) {
          return this.replace(this.length, this.length, e);
        }
        slice(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
          var i = [];
          return this.decompose(e, t, i, 0), rr.from(i, t - e);
        }
        eq(e) {
          if (e == this) return !0;
          if (e.length != this.length || e.lines != this.lines) return !1;
          var t = this.scanIdentical(e, 1),
            i = this.length - this.scanIdentical(e, -1),
            n = new yi(this),
            s = new yi(e);
          for (var o = t, u = t; ; ) {
            if ((n.next(o), s.next(o), (o = 0), n.lineBreak != s.lineBreak || n.done != s.done || n.value != s.value)) return !1;
            if (((u += n.value.length), n.done || u >= i)) return !0;
          }
        }
        iter() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          return new yi(this, e);
        }
        iterRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
          return new vs(this, e, t);
        }
        iterLines(e, t) {
          var i;
          if (e == null) i = this.iter();
          else {
            t == null && (t = this.lines + 1);
            var n = this.line(e).from;
            i = this.iterRange(n, Math.max(n, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
          }
          return new xs(i);
        }
        toString() {
          return this.sliceString(0);
        }
        toJSON() {
          var e = [];
          return this.flatten(e), e;
        }
        static of(e) {
          if (e.length == 0) throw new RangeError("A document must have at least one line");
          return e.length == 1 && !e[0] ? r.empty : e.length <= 32 ? new Ke(e) : rr.from(Ke.split(e, []));
        }
        constructor() {}
      }),
      (() => {
        h(_r2, "Text");
      })(),
      _r2),
    Ke =
      ((_r3 = class r extends fe {
        get lines() {
          return this.text.length;
        }
        get children() {
          return null;
        }
        lineInner(e, t, i, n) {
          for (var s = 0; ; s++) {
            var o = this.text[s],
              u = n + o.length;
            if ((t ? i : u) >= e) return new xl(n, u, i, o);
            (n = u + 1), i++;
          }
        }
        decompose(e, t, i, n) {
          var s = e <= 0 && t >= this.length ? this : new r(Bm(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
          if (n & 1) {
            var o = i.pop(),
              u = Bs(s.text, o.text.slice(), 0, s.length);
            if (u.length <= 32) i.push(new r(u, o.length + s.length));
            else {
              var l = u.length >> 1;
              i.push(new r(u.slice(0, l)), new r(u.slice(l)));
            }
          } else i.push(s);
        }
        replace(e, t, i) {
          if (!(i instanceof r)) return super.replace(e, t, i);
          var n = Bs(this.text, Bs(i.text, Bm(this.text, 0, e)), t),
            s = this.length + i.length - (t - e);
          return n.length <= 32 ? new r(n, s) : rr.from(r.split(n, []), s);
        }
        sliceString(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
          var n = "";
          for (var s = 0, o = 0; s <= t && o < this.text.length; o++) {
            var u = this.text[o],
              l = s + u.length;
            s > e && o && (n += i), e < l && t > s && (n += u.slice(Math.max(0, e - s), t - s)), (s = l + 1);
          }
          return n;
        }
        flatten(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              e.push(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        scanIdentical() {
          return 0;
        }
        static split(e, t) {
          var i = [],
            n = -1;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              i.push(s), (n += s.length + 1), i.length == 32 && (t.push(new r(i, n)), (i = []), (n = -1));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n > -1 && t.push(new r(i, n)), t;
        }
        constructor(e, ref) {
          var t = ref === void 0 ? fv(e) : ref;
          super(), (this.text = e), (this.length = t);
        }
      }),
      (() => {
        h(_r3, "TextLeaf");
      })(),
      _r3),
    rr =
      ((_r4 = class r extends fe {
        lineInner(e, t, i, n) {
          for (var s = 0; ; s++) {
            var o = this.children[s],
              u = n + o.length,
              l = i + o.lines - 1;
            if ((t ? l : u) >= e) return o.lineInner(e, t, i, n);
            (n = u + 1), (i = l + 1);
          }
        }
        decompose(e, t, i, n) {
          for (var s = 0, o = 0; o <= t && s < this.children.length; s++) {
            var u = this.children[s],
              l = o + u.length;
            if (e <= l && t >= o) {
              var a = n & ((o <= e ? 1 : 0) | (l >= t ? 2 : 0));
              o >= e && l <= t && !a ? i.push(u) : u.decompose(e - o, t - o, i, a);
            }
            o = l + 1;
          }
        }
        replace(e, t, i) {
          if (i.lines < this.lines)
            for (var n = 0, s = 0; n < this.children.length; n++) {
              var o = this.children[n],
                u = s + o.length;
              if (e >= s && t <= u) {
                var l = o.replace(e - s, t - s, i),
                  a = this.lines - o.lines + l.lines;
                if (l.lines < a >> 4 && l.lines > a >> 6) {
                  var c = this.children.slice();
                  return (c[n] = l), new r(c, this.length - (t - e) + i.length);
                }
                return super.replace(s, u, l);
              }
              s = u + 1;
            }
          return super.replace(e, t, i);
        }
        sliceString(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
          var n = "";
          for (var s = 0, o = 0; s < this.children.length && o <= t; s++) {
            var u = this.children[s],
              l = o + u.length;
            o > e && s && (n += i), e < l && t > o && (n += u.sliceString(e - o, t - o, i)), (o = l + 1);
          }
          return n;
        }
        flatten(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.flatten(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        scanIdentical(e, t) {
          if (!(e instanceof r)) return 0;
          var i = 0,
            _ref = _sliced_to_array(t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1], 4),
            n = _ref[0],
            s = _ref[1],
            o = _ref[2],
            u = _ref[3];
          for (; ; n += t, s += t) {
            if (n == o || s == u) return i;
            var l = this.children[n],
              a = e.children[s];
            if (l != a) return i + l.scanIdentical(a, t);
            i += l.length + 1;
          }
        }
        static from(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.reduce((i, n) => i + n.length + 1, -1);
          var i = 0;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var p = _step.value;
              i += p.lines;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if (i < 32) {
            var p1 = [];
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var m = _step1.value;
                m.flatten(p1);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            return new Ke(p1, t);
          }
          var n = Math.max(32, i >> 5),
            s = n << 1,
            o = n >> 1,
            u = [],
            l = 0,
            a = -1,
            c = [];
          function f(p) {
            var m;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (p.lines > s && p instanceof r)
              try {
                for (var _iterator = p.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var F = _step.value;
                  f(F);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            else p.lines > o && (l > o || !l) ? (d(), u.push(p)) : p instanceof Ke && l && (m = c[c.length - 1]) instanceof Ke && p.lines + m.lines <= 32 ? ((l += p.lines), (a += p.length + 1), (c[c.length - 1] = new Ke(m.text.concat(p.text), m.length + 1 + p.length))) : (l + p.lines > n && d(), (l += p.lines), (a += p.length + 1), c.push(p));
          }
          h(f, "add");
          function d() {
            l != 0 && (u.push(c.length == 1 ? c[0] : r.from(c, a)), (a = -1), (l = c.length = 0));
          }
          h(d, "flush");
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator2 = e[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var p2 = _step2.value;
              f(p2);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return d(), u.length == 1 ? u[0] : new r(u, t);
        }
        constructor(e, t) {
          super(), (this.children = e), (this.length = t), (this.lines = 0);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              this.lines += i.lines;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      (() => {
        h(_r4, "TextNode");
      })(),
      _r4);
  fe.empty = new Ke([""], 0);
  function fv(r) {
    var e = -1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        e += t.length + 1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(fv, "textLength");
  function Bs(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1e9;
    for (var n = 0, s = 0, o = !0; s < r.length && n <= i; s++) {
      var u = r[s],
        l = n + u.length;
      l >= t && (l > i && (u = u.slice(0, i - n)), n < t && (u = u.slice(t - n)), o ? ((e[e.length - 1] += u), (o = !1)) : e.push(u)), (n = l + 1);
    }
    return e;
  }
  h(Bs, "appendText");
  function Bm(r, e, t) {
    return Bs(r, [""], e, t);
  }
  h(Bm, "sliceText");
  var yi =
      ((_class18 = class _class {
        nextInner(e, t) {
          for (this.done = this.lineBreak = !1; ; ) {
            var i = this.nodes.length - 1,
              n = this.nodes[i],
              s = this.offsets[i],
              o = s >> 1,
              u = n instanceof Ke ? n.text.length : n.children.length;
            if (o == (t > 0 ? u : 0)) {
              if (i == 0) return (this.done = !0), (this.value = ""), this;
              t > 0 && this.offsets[i - 1]++, this.nodes.pop(), this.offsets.pop();
            } else if ((s & 1) == (t > 0 ? 0 : 1)) {
              if (((this.offsets[i] += t), e == 0)) return (this.lineBreak = !0), (this.value = "\n"), this;
              e--;
            } else if (n instanceof Ke) {
              var l = n.text[o + (t < 0 ? -1 : 0)];
              if (((this.offsets[i] += t), l.length > Math.max(0, e))) return (this.value = e == 0 ? l : t > 0 ? l.slice(e) : l.slice(0, l.length - e)), this;
              e -= l.length;
            } else {
              var l1 = n.children[o + (t < 0 ? -1 : 0)];
              e > l1.length ? ((e -= l1.length), (this.offsets[i] += t)) : (t < 0 && this.offsets[i]--, this.nodes.push(l1), this.offsets.push(t > 0 ? 1 : (l1 instanceof Ke ? l1.text.length : l1.children.length) << 1));
            }
          }
        }
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return e < 0 && (this.nextInner(-e, -this.dir), (e = this.value.length)), this.nextInner(e, this.dir);
        }
        constructor(e, ref) {
          var t = ref === void 0 ? 1 : ref;
          (this.dir = t), (this.done = !1), (this.lineBreak = !1), (this.value = ""), (this.nodes = [e]), (this.offsets = [t > 0 ? 1 : (e instanceof Ke ? e.text.length : e.children.length) << 1]);
        }
      }),
      (() => {
        h(_class18, "RawTextCursor");
      })(),
      _class18),
    vs =
      ((_class19 = class _class {
        nextInner(e, t) {
          if (t < 0 ? this.pos <= this.from : this.pos >= this.to) return (this.value = ""), (this.done = !0), this;
          e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
          var i = t < 0 ? this.pos - this.from : this.to - this.pos;
          e > i && (e = i), (i -= e);
          var _this_cursor_next = this.cursor.next(e),
            n = _this_cursor_next.value;
          return (this.pos += (n.length + e) * t), (this.value = n.length <= i ? n : t < 0 ? n.slice(n.length - i) : n.slice(0, i)), (this.done = !this.value), this;
        }
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return e < 0 ? (e = Math.max(e, this.from - this.pos)) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
        }
        get lineBreak() {
          return this.cursor.lineBreak && this.value != "";
        }
        constructor(e, t, i) {
          (this.value = ""), (this.done = !1), (this.cursor = new yi(e, t > i ? -1 : 1)), (this.pos = t > i ? e.length : 0), (this.from = Math.min(t, i)), (this.to = Math.max(t, i));
        }
      }),
      (() => {
        h(_class19, "PartialTextCursor");
      })(),
      _class19),
    xs =
      ((_class20 = class _class {
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          var _this_inner_next = this.inner.next(e),
            t = _this_inner_next.done,
            i = _this_inner_next.lineBreak,
            n = _this_inner_next.value;
          return t ? ((this.done = !0), (this.value = "")) : i ? (this.afterBreak ? (this.value = "") : ((this.afterBreak = !0), this.next())) : ((this.value = n), (this.afterBreak = !1)), this;
        }
        get lineBreak() {
          return !1;
        }
        constructor(e) {
          (this.inner = e), (this.afterBreak = !0), (this.value = ""), (this.done = !1);
        }
      }),
      (() => {
        h(_class20, "LineCursor");
      })(),
      _class20);
  typeof Symbol < "u" &&
    ((fe.prototype[Symbol.iterator] = function () {
      return this.iter();
    }),
    (yi.prototype[Symbol.iterator] =
      vs.prototype[Symbol.iterator] =
      xs.prototype[Symbol.iterator] =
        function () {
          return this;
        }));
  var xl =
      ((_class21 = class _class {
        get length() {
          return this.to - this.from;
        }
        constructor(e, t, i, n) {
          (this.from = e), (this.to = t), (this.number = i), (this.text = n);
        }
      }),
      (() => {
        h(_class21, "Line");
      })(),
      _class21),
    nr =
      "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o"
        .split(",")
        .map((r) => (r ? parseInt(r, 36) : 1));
  for (var r = 1; r < nr.length; r++) nr[r] += nr[r - 1];
  function dv(r) {
    for (var e = 1; e < nr.length; e += 2) if (nr[e] > r) return nr[e - 1] <= r;
    return !1;
  }
  h(dv, "isExtendingChar");
  function vm(r) {
    return r >= 127462 && r <= 127487;
  }
  h(vm, "isRegionalIndicator");
  var xm = 8205;
  function lt(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0;
    return (t ? _m : pv)(r, e, i);
  }
  h(lt, "findClusterBreak");
  function _m(r, e, t) {
    if (e == r.length) return e;
    e && Um(r.charCodeAt(e)) && Lm(r.charCodeAt(e - 1)) && e--;
    var i = jr(r, e);
    for (e += As(i); e < r.length; ) {
      var n = jr(r, e);
      if (i == xm || n == xm || (t && dv(n))) (e += As(n)), (i = n);
      else if (vm(n)) {
        var s = 0,
          o = e - 2;
        for (; o >= 0 && vm(jr(r, o)); ) s++, (o -= 2);
        if (s % 2 == 0) break;
        e += 2;
      } else break;
    }
    return e;
  }
  h(_m, "nextClusterBreak");
  function pv(r, e, t) {
    for (; e > 0; ) {
      var i = _m(r, e - 2, t);
      if (i < e) return i;
      e--;
    }
    return 0;
  }
  h(pv, "prevClusterBreak");
  function Um(r) {
    return r >= 56320 && r < 57344;
  }
  h(Um, "surrogateLow");
  function Lm(r) {
    return r >= 55296 && r < 56320;
  }
  h(Lm, "surrogateHigh");
  function jr(r, e) {
    var t = r.charCodeAt(e);
    if (!Lm(t) || e + 1 == r.length) return t;
    var i = r.charCodeAt(e + 1);
    return Um(i) ? ((t - 55296) << 10) + (i - 56320) + 65536 : t;
  }
  h(jr, "codePointAt");
  function As(r) {
    return r < 65536 ? 1 : 2;
  }
  h(As, "codePointSize");
  var Al = /\r\n?|\n/,
    We = (function (r) {
      return (r[(r.Simple = 0)] = "Simple"), (r[(r.TrackDel = 1)] = "TrackDel"), (r[(r.TrackBefore = 2)] = "TrackBefore"), (r[(r.TrackAfter = 3)] = "TrackAfter"), r;
    })(We || (We = {})),
    Vt =
      ((_r5 = class r {
        get length() {
          var e = 0;
          for (var t = 0; t < this.sections.length; t += 2) e += this.sections[t];
          return e;
        }
        get newLength() {
          var e = 0;
          for (var t = 0; t < this.sections.length; t += 2) {
            var i = this.sections[t + 1];
            e += i < 0 ? this.sections[t] : i;
          }
          return e;
        }
        get empty() {
          return this.sections.length == 0 || (this.sections.length == 2 && this.sections[1] < 0);
        }
        iterGaps(e) {
          for (var t = 0, i = 0, n = 0; t < this.sections.length; ) {
            var s = this.sections[t++],
              o = this.sections[t++];
            o < 0 ? (e(i, n, s), (n += s)) : (n += o), (i += s);
          }
        }
        iterChangedRanges(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          kl(this, e, t);
        }
        get invertedDesc() {
          var e = [];
          for (var t = 0; t < this.sections.length; ) {
            var i = this.sections[t++],
              n = this.sections[t++];
            n < 0 ? e.push(i, n) : e.push(n, i);
          }
          return new r(e);
        }
        composeDesc(e) {
          return this.empty ? e : e.empty ? this : Om(this, e);
        }
        mapDesc(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return e.empty ? this : Sl(this, e, t);
        }
        mapPos(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : We.Simple;
          var n = 0,
            s = 0;
          for (var o = 0; o < this.sections.length; ) {
            var u = this.sections[o++],
              l = this.sections[o++],
              a = n + u;
            if (l < 0) {
              if (a > e) return s + (e - n);
              s += u;
            } else {
              if (i != We.Simple && a >= e && ((i == We.TrackDel && n < e && a > e) || (i == We.TrackBefore && n < e) || (i == We.TrackAfter && a > e))) return null;
              if (a > e || (a == e && t < 0 && !u)) return e == n || t < 0 ? s : s + l;
              s += l;
            }
            n = a;
          }
          if (e > n) throw new RangeError("Position ".concat(e, " is out of range for changeset of length ").concat(n));
          return s;
        }
        touchesRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          for (var i = 0, n = 0; i < this.sections.length && n <= t; ) {
            var s = this.sections[i++],
              o = this.sections[i++],
              u = n + s;
            if (o >= 0 && n <= t && u >= e) return n < e && u > t ? "cover" : !0;
            n = u;
          }
          return !1;
        }
        toString() {
          var e = "";
          for (var t = 0; t < this.sections.length; ) {
            var i = this.sections[t++],
              n = this.sections[t++];
            e += (e ? " " : "") + i + (n >= 0 ? ":" + n : "");
          }
          return e;
        }
        toJSON() {
          return this.sections;
        }
        static fromJSON(e) {
          if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number")) throw new RangeError("Invalid JSON representation of ChangeDesc");
          return new r(e);
        }
        static create(e) {
          return new r(e);
        }
        constructor(e) {
          this.sections = e;
        }
      }),
      (() => {
        h(_r5, "ChangeDesc");
      })(),
      _r5),
    ze =
      ((_r6 = class r extends Vt {
        apply(e) {
          if (this.length != e.length) throw new RangeError("Applying change set to a document with the wrong length");
          return kl(this, (t, i, n, s, o) => (e = e.replace(n, n + (i - t), o)), !1), e;
        }
        mapDesc(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return Sl(this, e, t, !0);
        }
        invert(e) {
          var t = this.sections.slice(),
            i = [];
          for (var n = 0, s = 0; n < t.length; n += 2) {
            var o = t[n],
              u = t[n + 1];
            if (u >= 0) {
              (t[n] = u), (t[n + 1] = o);
              var l = n >> 1;
              for (; i.length < l; ) i.push(fe.empty);
              i.push(o ? e.slice(s, s + o) : fe.empty);
            }
            s += o;
          }
          return new r(t, i);
        }
        compose(e) {
          return this.empty ? e : e.empty ? this : Om(this, e, !0);
        }
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return e.empty ? this : Sl(this, e, t, !0);
        }
        iterChanges(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          kl(this, e, t);
        }
        get desc() {
          return Vt.create(this.sections);
        }
        filter(e) {
          var t = [],
            i = [],
            n = [],
            s = new Ei(this);
          e: for (var o = 0, u = 0; ; ) {
            var l = o == e.length ? 1e9 : e[o++];
            for (; u < l || (u == l && s.len == 0); ) {
              if (s.done) break e;
              var c = Math.min(s.len, l - u);
              Me(n, c, -1);
              var f = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;
              Me(t, c, f), f > 0 && Zt(i, t, s.text), s.forward(c), (u += c);
            }
            var a = e[o++];
            for (; u < a; ) {
              if (s.done) break e;
              var c1 = Math.min(s.len, a - u);
              Me(t, c1, -1), Me(n, c1, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(c1), (u += c1);
            }
          }
          return { changes: new r(t, i), filtered: Vt.create(n) };
        }
        toJSON() {
          var e = [];
          for (var t = 0; t < this.sections.length; t += 2) {
            var i = this.sections[t],
              n = this.sections[t + 1];
            n < 0 ? e.push(i) : n == 0 ? e.push([i]) : e.push([i].concat(this.inserted[t >> 1].toJSON()));
          }
          return e;
        }
        static of(e, t, i) {
          var n = [],
            s = [],
            o = 0,
            u = null;
          function l() {
            var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
            if (!c && !n.length) return;
            o < t && Me(n, t - o, -1);
            var f = new r(n, s);
            (u = u ? u.compose(f.map(u)) : f), (n = []), (s = []), (o = 0);
          }
          h(l, "flush");
          function a(c) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (Array.isArray(c))
              try {
                for (var _iterator = c[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var f = _step.value;
                  a(f);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            else if (c instanceof r) {
              if (c.length != t) throw new RangeError("Mismatched change set length (got ".concat(c.length, ", expected ").concat(t, ")"));
              l(), (u = u ? u.compose(c.map(u)) : c);
            } else {
              var f1 = c.from,
                tmp = c.to,
                d = tmp === void 0 ? f1 : tmp,
                p = c.insert;
              if (f1 > d || f1 < 0 || d > t) throw new RangeError("Invalid change range ".concat(f1, " to ").concat(d, " (in doc of length ").concat(t, ")"));
              var m = p ? (typeof p == "string" ? fe.of(p.split(i || Al)) : p) : fe.empty,
                F = m.length;
              if (f1 == d && F == 0) return;
              f1 < o && l(), f1 > o && Me(n, f1 - o, -1), Me(n, d - f1, F), Zt(s, n, m), (o = d);
            }
          }
          return h(a, "process"), a(e), l(!u), u;
        }
        static empty(e) {
          return new r(e ? [e, -1] : [], []);
        }
        static fromJSON(e) {
          if (!Array.isArray(e)) throw new RangeError("Invalid JSON representation of ChangeSet");
          var t = [],
            i = [];
          for (var n = 0; n < e.length; n++) {
            var s = e[n];
            if (typeof s == "number") t.push(s, -1);
            else {
              if (!Array.isArray(s) || typeof s[0] != "number" || s.some((o, u) => u && typeof o != "string")) throw new RangeError("Invalid JSON representation of ChangeSet");
              if (s.length == 1) t.push(s[0], 0);
              else {
                for (; i.length < n; ) i.push(fe.empty);
                (i[n] = fe.of(s.slice(1))), t.push(s[0], i[n].length);
              }
            }
          }
          return new r(t, i);
        }
        static createSet(e, t) {
          return new r(e, t);
        }
        constructor(e, t) {
          super(e), (this.inserted = t);
        }
      }),
      (() => {
        h(_r6, "ChangeSet");
      })(),
      _r6);
  function Me(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    if (e == 0 && t <= 0) return;
    var n = r.length - 2;
    n >= 0 && t <= 0 && t == r[n + 1] ? (r[n] += e) : e == 0 && r[n] == 0 ? (r[n + 1] += t) : i ? ((r[n] += e), (r[n + 1] += t)) : r.push(e, t);
  }
  h(Me, "addSection");
  function Zt(r, e, t) {
    if (t.length == 0) return;
    var i = (e.length - 2) >> 1;
    if (i < r.length) r[r.length - 1] = r[r.length - 1].append(t);
    else {
      for (; r.length < i; ) r.push(fe.empty);
      r.push(t);
    }
  }
  h(Zt, "addInsert");
  function kl(r, e, t) {
    var i = r.inserted;
    for (var n = 0, s = 0, o = 0; o < r.sections.length; ) {
      var u = r.sections[o++],
        l = r.sections[o++];
      if (l < 0) (n += u), (s += u);
      else {
        var a = n,
          c = s,
          f = fe.empty;
        for (; (a += u), (c += l), l && i && (f = f.append(i[(o - 2) >> 1])), !(t || o == r.sections.length || r.sections[o + 1] < 0); ) (u = r.sections[o++]), (l = r.sections[o++]);
        e(n, a, s, c, f), (n = a), (s = c);
      }
    }
  }
  h(kl, "iterChanges");
  function Sl(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    var n = [],
      s = i ? [] : null,
      o = new Ei(r),
      u = new Ei(e);
    for (var l = -1; ; )
      if (o.ins == -1 && u.ins == -1) {
        var a = Math.min(o.len, u.len);
        Me(n, a, -1), o.forward(a), u.forward(a);
      } else if (u.ins >= 0 && (o.ins < 0 || l == o.i || (o.off == 0 && (u.len < o.len || (u.len == o.len && !t))))) {
        var a1 = u.len;
        for (Me(n, u.ins, -1); a1; ) {
          var c = Math.min(o.len, a1);
          o.ins >= 0 && l < o.i && o.len <= c && (Me(n, 0, o.ins), s && Zt(s, n, o.text), (l = o.i)), o.forward(c), (a1 -= c);
        }
        u.next();
      } else if (o.ins >= 0) {
        var a2 = 0,
          c1 = o.len;
        for (; c1; )
          if (u.ins == -1) {
            var f = Math.min(c1, u.len);
            (a2 += f), (c1 -= f), u.forward(f);
          } else if (u.ins == 0 && u.len < c1) (c1 -= u.len), u.next();
          else break;
        Me(n, a2, l < o.i ? o.ins : 0), s && l < o.i && Zt(s, n, o.text), (l = o.i), o.forward(o.len - c1);
      } else {
        if (o.done && u.done) return s ? ze.createSet(n, s) : Vt.create(n);
        throw new Error("Mismatched change set lengths");
      }
  }
  h(Sl, "mapSet");
  function Om(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    var i = [],
      n = t ? [] : null,
      s = new Ei(r),
      o = new Ei(e);
    for (var u = !1; ; ) {
      if (s.done && o.done) return n ? ze.createSet(i, n) : Vt.create(i);
      if (s.ins == 0) Me(i, s.len, 0, u), s.next();
      else if (o.len == 0 && !o.done) Me(i, 0, o.ins, u), n && Zt(n, i, o.text), o.next();
      else {
        if (s.done || o.done) throw new Error("Mismatched change set lengths");
        {
          var l = Math.min(s.len2, o.len),
            a = i.length;
          if (s.ins == -1) {
            var c = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
            Me(i, l, c, u), n && c && Zt(n, i, o.text);
          } else o.ins == -1 ? (Me(i, s.off ? 0 : s.len, l, u), n && Zt(n, i, s.textBit(l))) : (Me(i, s.off ? 0 : s.len, o.off ? 0 : o.ins, u), n && !o.off && Zt(n, i, o.text));
          (u = (s.ins > l || (o.ins >= 0 && o.len > l)) && (u || i.length > a)), s.forward2(l), o.forward(l);
        }
      }
    }
  }
  h(Om, "composeSets");
  var Ei =
      ((_class22 = class _class {
        next() {
          var _this_set = this.set,
            e = _this_set.sections;
          this.i < e.length ? ((this.len = e[this.i++]), (this.ins = e[this.i++])) : ((this.len = 0), (this.ins = -2)), (this.off = 0);
        }
        get done() {
          return this.ins == -2;
        }
        get len2() {
          return this.ins < 0 ? this.len : this.ins;
        }
        get text() {
          var _this_set = this.set,
            e = _this_set.inserted,
            t = (this.i - 2) >> 1;
          return t >= e.length ? fe.empty : e[t];
        }
        textBit(e) {
          var _this_set = this.set,
            t = _this_set.inserted,
            i = (this.i - 2) >> 1;
          return i >= t.length && !e ? fe.empty : t[i].slice(this.off, e == null ? void 0 : this.off + e);
        }
        forward(e) {
          e == this.len ? this.next() : ((this.len -= e), (this.off += e));
        }
        forward2(e) {
          this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : ((this.ins -= e), (this.off += e));
        }
        constructor(e) {
          (this.set = e), (this.i = 0), this.next();
        }
      }),
      (() => {
        h(_class22, "SectionIter");
      })(),
      _class22),
    ir =
      ((_r7 = class r {
        get anchor() {
          return this.flags & 16 ? this.to : this.from;
        }
        get head() {
          return this.flags & 16 ? this.from : this.to;
        }
        get empty() {
          return this.from == this.to;
        }
        get assoc() {
          return this.flags & 4 ? -1 : this.flags & 8 ? 1 : 0;
        }
        get bidiLevel() {
          var e = this.flags & 3;
          return e == 3 ? null : e;
        }
        get goalColumn() {
          var e = this.flags >> 5;
          return e == 33554431 ? void 0 : e;
        }
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
          var i, n;
          return this.empty ? (i = n = e.mapPos(this.from, t)) : ((i = e.mapPos(this.from, 1)), (n = e.mapPos(this.to, -1))), i == this.from && n == this.to ? this : new r(i, n, this.flags);
        }
        extend(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          if (e <= this.anchor && t >= this.anchor) return X.range(e, t);
          var i = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
          return X.range(this.anchor, i);
        }
        eq(e) {
          return this.anchor == e.anchor && this.head == e.head;
        }
        toJSON() {
          return { anchor: this.anchor, head: this.head };
        }
        static fromJSON(e) {
          if (!e || typeof e.anchor != "number" || typeof e.head != "number") throw new RangeError("Invalid JSON representation for SelectionRange");
          return X.range(e.anchor, e.head);
        }
        static create(e, t, i) {
          return new r(e, t, i);
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.flags = i);
        }
      }),
      (() => {
        h(_r7, "SelectionRange");
      })(),
      _r7),
    X =
      ((_r8 = class r {
        map(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
          return e.empty
            ? this
            : r.create(
                this.ranges.map((i) => i.map(e, t)),
                this.mainIndex,
              );
        }
        eq(e) {
          if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex) return !1;
          for (var t = 0; t < this.ranges.length; t++) if (!this.ranges[t].eq(e.ranges[t])) return !1;
          return !0;
        }
        get main() {
          return this.ranges[this.mainIndex];
        }
        asSingle() {
          return this.ranges.length == 1 ? this : new r([this.main], 0);
        }
        addRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
          return r.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
        }
        replaceRange(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.mainIndex;
          var i = this.ranges.slice();
          return (i[t] = e), r.create(i, this.mainIndex);
        }
        toJSON() {
          return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
        }
        static fromJSON(e) {
          if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length) throw new RangeError("Invalid JSON representation for EditorSelection");
          return new r(
            e.ranges.map((t) => ir.fromJSON(t)),
            e.main,
          );
        }
        static single(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
          return new r([r.range(e, t)], 0);
        }
        static create(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (e.length == 0) throw new RangeError("A selection needs at least one range");
          for (var i = 0, n = 0; n < e.length; n++) {
            var s = e[n];
            if (s.empty ? s.from <= i : s.from < i) return r.normalized(e.slice(), t);
            i = s.to;
          }
          return new r(e, t);
        }
        static cursor(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 ? arguments[2] : void 0,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return ir.create(e, e, (t == 0 ? 0 : t < 0 ? 4 : 8) | (i == null ? 3 : Math.min(2, i)) | ((n !== null && n !== void 0 ? n : 33554431) << 5));
        }
        static range(e, t, i, n) {
          var s = ((i !== null && i !== void 0 ? i : 33554431) << 5) | (n == null ? 3 : Math.min(2, n));
          return t < e ? ir.create(t, e, 24 | s) : ir.create(e, t, (t > e ? 4 : 0) | s);
        }
        static normalized(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var i = e[t];
          e.sort((n, s) => n.from - s.from), (t = e.indexOf(i));
          for (var n = 1; n < e.length; n++) {
            var s = e[n],
              o = e[n - 1];
            if (s.empty ? s.from <= o.to : s.from < o.to) {
              var u = o.from,
                l = Math.max(s.to, o.to);
              n <= t && t--, e.splice(--n, 2, s.anchor > s.head ? r.range(l, u) : r.range(u, l));
            }
          }
          return new r(e, t);
        }
        constructor(e, t) {
          (this.ranges = e), (this.mainIndex = t);
        }
      }),
      (() => {
        h(_r8, "EditorSelection");
      })(),
      _r8);
  function Tm(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.to > e) throw new RangeError("Selection points outside of document");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(Tm, "checkSelection");
  var Nl = 0,
    j =
      ((_r9 = class r {
        static define() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return new r(e.combine || ((t) => t), e.compareInput || ((t, i) => t === i), e.compare || (e.combine ? (t, i) => t === i : Ml), !!e.static, e.enables);
        }
        of(e) {
          return new sr([], this, 0, e);
        }
        compute(e, t) {
          if (this.isStatic) throw new Error("Can't compute a static facet");
          return new sr(e, this, 1, t);
        }
        computeN(e, t) {
          if (this.isStatic) throw new Error("Can't compute a static facet");
          return new sr(e, this, 2, t);
        }
        from(e, t) {
          return t || (t = h((i) => i, "get")), this.compute([e], (i) => t(i.field(e)));
        }
        constructor(e, t, i, n, s) {
          (this.combine = e), (this.compareInput = t), (this.compare = i), (this.isStatic = n), (this.id = Nl++), (this.default = e([])), (this.extensions = typeof s == "function" ? s(this) : s);
        }
      }),
      (() => {
        h(_r9, "Facet");
      })(),
      _r9);
  function Ml(r, e) {
    return r == e || (r.length == e.length && r.every((t, i) => t === e[i]));
  }
  h(Ml, "sameArray");
  var sr =
    ((_class23 = class _class {
      dynamicSlot(e) {
        var t;
        var i = this.value,
          n = this.facet.compareInput,
          s = this.id,
          o = e[s] >> 1,
          u = this.type == 2,
          l = !1,
          a = !1,
          c = [];
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.dependencies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var f = _step.value;
            f == "doc" ? (l = !0) : f == "selection" ? (a = !0) : ((t = e[f.id]) !== null && t !== void 0 ? t : 1) & 1 || c.push(e[f.id]);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return {
          create(f) {
            return (f.values[o] = i(f)), 1;
          },
          update(f, d) {
            if ((l && d.docChanged) || (a && (d.docChanged || d.selection)) || wl(f, c)) {
              var p = i(f);
              if (u ? !Am(p, f.values[o], n) : !n(p, f.values[o])) return (f.values[o] = p), 1;
            }
            return 0;
          },
          reconfigure: (f, d) => {
            var p,
              m = d.config.address[s];
            if (m != null) {
              var F = ws(d, m);
              if (this.dependencies.every((g) => (g instanceof j ? d.facet(g) === f.facet(g) : g instanceof Pe ? d.field(g, !1) == f.field(g, !1) : !0)) || (u ? Am((p = i(f)), F, n) : n((p = i(f)), F))) return (f.values[o] = F), 0;
            } else p = i(f);
            return (f.values[o] = p), 1;
          },
        };
      }
      constructor(e, t, i, n) {
        (this.dependencies = e), (this.facet = t), (this.type = i), (this.value = n), (this.id = Nl++);
      }
    }),
    (() => {
      h(_class23, "FacetProvider");
    })(),
    _class23);
  function Am(r, e, t) {
    if (r.length != e.length) return !1;
    for (var i = 0; i < r.length; i++) if (!t(r[i], e[i])) return !1;
    return !0;
  }
  h(Am, "compareArray");
  function wl(r, e) {
    var t = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        Yr(r, i) & 1 && (t = !0);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(wl, "ensureAll");
  function mv(r, e, t) {
    var i = t.map((l) => r[l.id]),
      n = t.map((l) => l.type),
      s = i.filter((l) => !(l & 1)),
      o = r[e.id] >> 1;
    function u(l) {
      var a = [];
      for (var c = 0; c < i.length; c++) {
        var f = ws(l, i[c]);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (n[c] == 2)
          try {
            for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              a.push(d);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else a.push(f);
      }
      return e.combine(a);
    }
    return (
      h(u, "get"),
      {
        create(l) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a = _step.value;
              Yr(l, a);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return (l.values[o] = u(l)), 1;
        },
        update(l, a) {
          if (!wl(l, s)) return 0;
          var c = u(l);
          return e.compare(c, l.values[o]) ? 0 : ((l.values[o] = c), 1);
        },
        reconfigure(l, a) {
          var c = wl(l, i),
            f = a.config.facets[e.id],
            d = a.facet(e);
          if (f && !c && Ml(t, f)) return (l.values[o] = d), 0;
          var p = u(l);
          return e.compare(p, d) ? ((l.values[o] = d), 0) : ((l.values[o] = p), 1);
        },
      }
    );
  }
  h(mv, "dynamicFacetSlot");
  var km = j.define({ static: !0 }),
    Pe =
      ((_r10 = class r {
        static define(e) {
          var t = new r(Nl++, e.create, e.update, e.compare || ((i, n) => i === n), e);
          return e.provide && (t.provides = e.provide(t)), t;
        }
        create(e) {
          var _t;
          var t = e.facet(km).find((i) => i.field == this);
          return (((_t = t) === null || _t === void 0 ? void 0 : _t.create) || this.createF)(e);
        }
        slot(e) {
          var t = e[this.id] >> 1;
          return {
            create: (i) => ((i.values[t] = this.create(i)), 1),
            update: (i, n) => {
              var s = i.values[t],
                o = this.updateF(s, n);
              return this.compareF(s, o) ? 0 : ((i.values[t] = o), 1);
            },
            reconfigure: (i, n) => (n.config.address[this.id] != null ? ((i.values[t] = n.field(this)), 0) : ((i.values[t] = this.create(i)), 1)),
          };
        }
        init(e) {
          return [this, km.of({ field: this, create: e })];
        }
        get extension() {
          return this;
        }
        constructor(e, t, i, n, s) {
          (this.id = e), (this.createF = t), (this.updateF = i), (this.compareF = n), (this.spec = s), (this.provides = void 0);
        }
      }),
      (() => {
        h(_r10, "StateField");
      })(),
      _r10),
    Fi = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
  function Hr(r) {
    return (e) => new ks(e, r);
  }
  h(Hr, "prec");
  var lr = { highest: Hr(Fi.highest), high: Hr(Fi.high), default: Hr(Fi.default), low: Hr(Fi.low), lowest: Hr(Fi.lowest) },
    ks =
      ((_class24 = class _class {
        constructor(e, t) {
          (this.inner = e), (this.prec = t);
        }
      }),
      (() => {
        h(_class24, "PrecExtension");
      })(),
      _class24),
    ur =
      ((_r11 = class r {
        of(e) {
          return new Jr(this, e);
        }
        reconfigure(e) {
          return r.reconfigure.of({ compartment: this, extension: e });
        }
        get(e) {
          return e.config.compartments.get(this);
        }
      }),
      (() => {
        h(_r11, "Compartment");
      })(),
      _r11),
    Jr =
      ((_class25 = class _class {
        constructor(e, t) {
          (this.compartment = e), (this.inner = t);
        }
      }),
      (() => {
        h(_class25, "CompartmentInstance");
      })(),
      _class25),
    Ss =
      ((_r12 = class r {
        staticFacet(e) {
          var t = this.address[e.id];
          return t == null ? e.default : this.staticValues[t >> 1];
        }
        static resolve(e, t, i) {
          var _loop = function (d1) {
            var p = s[d1],
              m = p[0].facet,
              F = (c && c[d1]) || [];
            if (p.every((g) => g.type == 0))
              if (((u[m.id] = (l.length << 1) | 1), Ml(F, p))) l.push(i.facet(m));
              else {
                var g = m.combine(p.map((D) => D.value));
                l.push(i && m.compare(g, i.facet(m)) ? i.facet(m) : g);
              }
            else {
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                var _loop = function () {
                  var g = _step.value;
                  g.type == 0 ? ((u[g.id] = (l.length << 1) | 1), l.push(g.value)) : ((u[g.id] = a.length << 1), a.push((D) => g.dynamicSlot(D)));
                };
                for (var _iterator = p[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              (u[m.id] = a.length << 1), a.push((g) => mv(g, m, p));
            }
          };
          var _i;
          var n = [],
            s = Object.create(null),
            o = new Map();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = gv(e, t, o)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              d instanceof Pe ? n.push(d) : (s[d.facet.id] || (s[d.facet.id] = [])).push(d);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var u = Object.create(null),
            l = [],
            a = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            var _loop1 = function () {
              var d = _step1.value;
              (u[d.id] = a.length << 1), a.push((p) => d.slot(p));
            };
            for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) _loop1();
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var c = (_i = i) === null || _i === void 0 ? void 0 : _i.config.facets;
          for (var d1 in s) _loop(d1);
          var f = a.map((d) => d(u));
          return new r(e, o, f, u, l, s);
        }
        constructor(e, t, i, n, s, o) {
          for (this.base = e, this.compartments = t, this.dynamicSlots = i, this.address = n, this.staticValues = s, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < i.length; ) this.statusTemplate.push(0);
        }
      }),
      (() => {
        h(_r12, "Configuration");
      })(),
      _r12);
  function gv(r, e, t) {
    var i = [[], [], [], [], []],
      n = new Map();
    function s(o, u) {
      var l = n.get(o);
      if (l != null) {
        if (l <= u) return;
        var a = i[l].indexOf(o);
        a > -1 && i[l].splice(a, 1), o instanceof Jr && t.delete(o.compartment);
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if ((n.set(o, u), Array.isArray(o)))
        try {
          for (var _iterator = o[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var a1 = _step.value;
            s(a1, u);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      else if (o instanceof Jr) {
        if (t.has(o.compartment)) throw new RangeError("Duplicate use of compartment in extensions");
        var a2 = e.get(o.compartment) || o.inner;
        t.set(o.compartment, a2), s(a2, u);
      } else if (o instanceof ks) s(o.inner, o.prec);
      else if (o instanceof Pe) i[u].push(o), o.provides && s(o.provides, u);
      else if (o instanceof sr) i[u].push(o), o.facet.extensions && s(o.facet.extensions, Fi.default);
      else {
        var a3 = o.extension;
        if (!a3) throw new Error("Unrecognized extension value in extension set (".concat(o, "). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks."));
        s(a3, u);
      }
    }
    return h(s, "inner"), s(r, Fi.default), i.reduce((o, u) => o.concat(u));
  }
  h(gv, "flatten");
  function Yr(r, e) {
    if (e & 1) return 2;
    var t = e >> 1,
      i = r.status[t];
    if (i == 4) throw new Error("Cyclic dependency between fields and/or facets");
    if (i & 2) return i;
    r.status[t] = 4;
    var n = r.computeSlot(r, r.config.dynamicSlots[t]);
    return (r.status[t] = 2 | n);
  }
  h(Yr, "ensureAddr");
  function ws(r, e) {
    return e & 1 ? r.config.staticValues[e >> 1] : r.values[e >> 1];
  }
  h(ws, "getAddr");
  var Rm = j.define(),
    Nm = j.define({ combine: (r) => r.some((e) => e), static: !0 }),
    Mm = j.define({ combine: (r) => (r.length ? r[0] : void 0), static: !0 }),
    Pm = j.define(),
    Im = j.define(),
    $m = j.define(),
    qm = j.define({ combine: (r) => (r.length ? r[0] : !1) }),
    at =
      ((_class26 = class _class {
        static define() {
          return new Ql();
        }
        constructor(e, t) {
          (this.type = e), (this.value = t);
        }
      }),
      (() => {
        h(_class26, "Annotation");
      })(),
      _class26),
    Ql =
      ((_class27 = class _class {
        of(e) {
          return new at(this, e);
        }
      }),
      (() => {
        h(_class27, "AnnotationType");
      })(),
      _class27),
    _l =
      ((_class28 = class _class {
        of(e) {
          return new de(this, e);
        }
        constructor(e) {
          this.map = e;
        }
      }),
      (() => {
        h(_class28, "StateEffectType");
      })(),
      _class28),
    de =
      ((_r13 = class r {
        map(e) {
          var t = this.type.map(this.value, e);
          return t === void 0 ? void 0 : t == this.value ? this : new r(this.type, t);
        }
        is(e) {
          return this.type == e;
        }
        static define() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return new _l(e.map || ((t) => t));
        }
        static mapEffects(e, t) {
          if (!e.length) return e;
          var i = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              var s = n.map(t);
              s && i.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        constructor(e, t) {
          (this.type = e), (this.value = t);
        }
      }),
      (() => {
        h(_r13, "StateEffect");
      })(),
      _r13);
  de.reconfigure = de.define();
  de.appendConfig = de.define();
  var Re =
    ((_r14 = class r {
      static create(e, t, i, n, s, o) {
        return new r(e, t, i, n, s, o);
      }
      get newDoc() {
        return this._doc || (this._doc = this.changes.apply(this.startState.doc));
      }
      get newSelection() {
        return this.selection || this.startState.selection.map(this.changes);
      }
      get state() {
        return this._state || this.startState.applyTransaction(this), this._state;
      }
      annotation(e) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.annotations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            if (t.type == e) return t.value;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      get docChanged() {
        return !this.changes.empty;
      }
      get reconfigured() {
        return this.startState.config != this.state.config;
      }
      isUserEvent(e) {
        var t = this.annotation(r.userEvent);
        return !!(t && (t == e || (t.length > e.length && t.slice(0, e.length) == e && t[e.length] == ".")));
      }
      constructor(e, t, i, n, s, o) {
        (this.startState = e), (this.changes = t), (this.selection = i), (this.effects = n), (this.annotations = s), (this.scrollIntoView = o), (this._doc = null), (this._state = null), i && Tm(i, t.newLength), s.some((u) => u.type == r.time) || (this.annotations = s.concat(r.time.of(Date.now())));
      }
    }),
    (() => {
      h(_r14, "Transaction");
    })(),
    _r14);
  Re.time = at.define();
  Re.userEvent = at.define();
  Re.addToHistory = at.define();
  Re.remote = at.define();
  function Dv(r, e) {
    var t = [];
    for (var i = 0, n = 0; ; ) {
      var s = void 0,
        o = void 0;
      if (i < r.length && (n == e.length || e[n] >= r[i])) (s = r[i++]), (o = r[i++]);
      else if (n < e.length) (s = e[n++]), (o = e[n++]);
      else return t;
      !t.length || t[t.length - 1] < s ? t.push(s, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
    }
  }
  h(Dv, "joinRanges");
  function Vm(r, e, t) {
    var i;
    var n, s, o;
    return (
      t ? ((n = e.changes), (s = ze.empty(e.changes.length)), (o = r.changes.compose(e.changes))) : ((n = e.changes.map(r.changes)), (s = r.changes.mapDesc(e.changes, !0)), (o = r.changes.compose(n))),
      { changes: o, selection: e.selection ? e.selection.map(s) : (i = r.selection) === null || i === void 0 ? void 0 : i.map(n), effects: de.mapEffects(r.effects, n).concat(de.mapEffects(e.effects, s)), annotations: r.annotations.length ? r.annotations.concat(e.annotations) : e.annotations, scrollIntoView: r.scrollIntoView || e.scrollIntoView }
    );
  }
  h(Vm, "mergeTransaction");
  function Ul(r, e, t) {
    var i = e.selection,
      n = or(e.annotations);
    return e.userEvent && (n = n.concat(Re.userEvent.of(e.userEvent))), { changes: e.changes instanceof ze ? e.changes : ze.of(e.changes || [], t, r.facet(Mm)), selection: i && (i instanceof X ? i : X.single(i.anchor, i.head)), effects: or(e.effects), annotations: n, scrollIntoView: !!e.scrollIntoView };
  }
  h(Ul, "resolveTransactionInner");
  function Wm(r, e, t) {
    var i = Ul(r, e.length ? e[0] : {}, r.doc.length);
    e.length && e[0].filter === !1 && (t = !1);
    for (var s = 1; s < e.length; s++) {
      e[s].filter === !1 && (t = !1);
      var o = !!e[s].sequential;
      i = Vm(i, Ul(r, e[s], o ? i.changes.newLength : r.doc.length), o);
    }
    var n = Re.create(r, i.changes, i.selection, i.effects, i.annotations, i.scrollIntoView);
    return bv(t ? Fv(n) : n);
  }
  h(Wm, "resolveTransaction");
  function Fv(r) {
    var e = r.startState,
      t = !0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.facet(Pm)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        var s = n(r);
        if (s === !1) {
          t = !1;
          break;
        }
        Array.isArray(s) && (t = t === !0 ? s : Dv(t, s));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (t !== !0) {
      var n1, s1;
      if (t === !1) (s1 = r.changes.invertedDesc), (n1 = ze.empty(e.doc.length));
      else {
        var o = r.changes.filter(t);
        (n1 = o.changes), (s1 = o.filtered.mapDesc(o.changes).invertedDesc);
      }
      r = Re.create(e, n1, r.selection && r.selection.map(s1), de.mapEffects(r.effects, s1), r.annotations, r.scrollIntoView);
    }
    var i = e.facet(Im);
    for (var n2 = i.length - 1; n2 >= 0; n2--) {
      var s2 = i[n2](r);
      s2 instanceof Re ? (r = s2) : Array.isArray(s2) && s2.length == 1 && s2[0] instanceof Re ? (r = s2[0]) : (r = Wm(e, or(s2), !1));
    }
    return r;
  }
  h(Fv, "filterTransaction");
  function bv(r) {
    var e = r.startState,
      t = e.facet($m),
      i = r;
    for (var n = t.length - 1; n >= 0; n--) {
      var s = t[n](r);
      s && Object.keys(s).length && (i = Vm(i, Ul(e, s, r.changes.newLength), !0));
    }
    return i == r ? r : Re.create(e, r.changes, r.selection, i.effects, i.annotations, i.scrollIntoView);
  }
  h(bv, "extendTransaction");
  var yv = [];
  function or(r) {
    return r == null ? yv : Array.isArray(r) ? r : [r];
  }
  h(or, "asArray");
  var Et = (function (r) {
      return (r[(r.Word = 0)] = "Word"), (r[(r.Space = 1)] = "Space"), (r[(r.Other = 2)] = "Other"), r;
    })(Et || (Et = {})),
    Ev = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/,
    Ll;
  try {
    Ll = new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
  } catch (e) {}
  function Cv(r) {
    if (Ll) return Ll.test(r);
    for (var e = 0; e < r.length; e++) {
      var t = r[e];
      if (/\w/.test(t) || (t > "\x80" && (t.toUpperCase() != t.toLowerCase() || Ev.test(t)))) return !0;
    }
    return !1;
  }
  h(Cv, "hasWordChar");
  function Bv(r) {
    return (e) => {
      if (!/\S/.test(e)) return Et.Space;
      if (Cv(e)) return Et.Word;
      for (var t = 0; t < r.length; t++) if (e.indexOf(r[t]) > -1) return Et.Word;
      return Et.Other;
    };
  }
  h(Bv, "makeCategorizer");
  var Ce =
    ((_r15 = class r {
      field(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        var i = this.config.address[e.id];
        if (i == null) {
          if (t) throw new RangeError("Field is not present in this state");
          return;
        }
        return Yr(this, i), ws(this, i);
      }
      update() {
        for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
          e[_key] = arguments[_key];
        }
        return Wm(this, e, !0);
      }
      applyTransaction(e) {
        var t = this.config,
          i = t.base,
          n = t.compartments;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var o = _step.value;
            o.is(ur.reconfigure) ? (t && ((n = new Map()), t.compartments.forEach((u, l) => n.set(l, u)), (t = null)), n.set(o.value.compartment, o.value.extension)) : o.is(de.reconfigure) ? ((t = null), (i = o.value)) : o.is(de.appendConfig) && ((t = null), (i = or(i).concat(o.value)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var s;
        t
          ? (s = e.startState.values.slice())
          : ((t = Ss.resolve(i, n, this)),
            (s = new r(
              t,
              this.doc,
              this.selection,
              t.dynamicSlots.map(() => null),
              (u, l) => l.reconfigure(u, this),
              null,
            ).values)),
          new r(t, e.newDoc, e.newSelection, s, (o, u) => u.update(o, e), e);
      }
      replaceSelection(e) {
        return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({ changes: { from: t.from, to: t.to, insert: e }, range: X.cursor(t.from + e.length) }));
      }
      changeByRange(e) {
        var t = this.selection,
          i = e(t.ranges[0]),
          n = this.changes(i.changes),
          s = [i.range],
          o = or(i.effects);
        for (var u = 1; u < t.ranges.length; u++) {
          var l = e(t.ranges[u]),
            a = this.changes(l.changes),
            c = a.map(n);
          for (var d = 0; d < u; d++) s[d] = s[d].map(c);
          var f = n.mapDesc(a, !0);
          s.push(l.range.map(f)), (n = n.compose(c)), (o = de.mapEffects(o, c).concat(de.mapEffects(or(l.effects), f)));
        }
        return { changes: n, selection: X.create(s, t.mainIndex), effects: o };
      }
      changes() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return e instanceof ze ? e : ze.of(e, this.doc.length, this.facet(r.lineSeparator));
      }
      toText(e) {
        return fe.of(e.split(this.facet(r.lineSeparator) || Al));
      }
      sliceDoc() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,
          t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.doc.length;
        return this.doc.sliceString(e, t, this.lineBreak);
      }
      facet(e) {
        var t = this.config.address[e.id];
        return t == null ? e.default : (Yr(this, t), ws(this, t));
      }
      toJSON(e) {
        var t = { doc: this.sliceDoc(), selection: this.selection.toJSON() };
        if (e)
          for (var i in e) {
            var n = e[i];
            n instanceof Pe && this.config.address[n.id] != null && (t[i] = n.spec.toJSON(this.field(e[i]), this));
          }
        return t;
      }
      static fromJSON(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
          i = arguments.length > 2 ? arguments[2] : void 0;
        if (!e || typeof e.doc != "string") throw new RangeError("Invalid JSON representation for EditorState");
        var n = [];
        if (i) {
          var _loop = function (s) {
            if (Object.prototype.hasOwnProperty.call(e, s)) {
              var o = i[s],
                u = e[s];
              n.push(o.init((l) => o.spec.fromJSON(u, l)));
            }
          };
          for (var s in i) _loop(s);
        }
        return r.create({ doc: e.doc, selection: X.fromJSON(e.selection), extensions: t.extensions ? n.concat([t.extensions]) : n });
      }
      static create() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var t = Ss.resolve(e.extensions || [], new Map()),
          i = e.doc instanceof fe ? e.doc : fe.of((e.doc || "").split(t.staticFacet(r.lineSeparator) || Al)),
          n = e.selection ? (e.selection instanceof X ? e.selection : X.single(e.selection.anchor, e.selection.head)) : X.single(0);
        return (
          Tm(n, i.length),
          t.staticFacet(Nm) || (n = n.asSingle()),
          new r(
            t,
            i,
            n,
            t.dynamicSlots.map(() => null),
            (s, o) => o.create(s),
            null,
          )
        );
      }
      get tabSize() {
        return this.facet(r.tabSize);
      }
      get lineBreak() {
        return this.facet(r.lineSeparator) || "\n";
      }
      get readOnly() {
        return this.facet(qm);
      }
      phrase(e) {
        for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          t[_key - 1] = arguments[_key];
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.facet(r.phrases)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            if (Object.prototype.hasOwnProperty.call(i, e)) {
              e = i[e];
              break;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return (
          t.length &&
            (e = e.replace(/\$(\$|\d*)/g, (i, n) => {
              if (n == "$") return "$";
              var s = +(n || 1);
              return !s || s > t.length ? i : t[s - 1];
            })),
          e
        );
      }
      languageDataAt(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
        var n = [];
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = this.facet(Rm)[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var s = _step.value;
            try {
              for (var _iterator1 = s(this, t, i)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var o = _step1.value;
                Object.prototype.hasOwnProperty.call(o, e) && n.push(o[e]);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return n;
      }
      charCategorizer(e) {
        return Bv(this.languageDataAt("wordChars", e).join(""));
      }
      wordAt(e) {
        var _this_doc_lineAt = this.doc.lineAt(e),
          t = _this_doc_lineAt.text,
          i = _this_doc_lineAt.from,
          n = _this_doc_lineAt.length,
          s = this.charCategorizer(e),
          o = e - i,
          u = e - i;
        for (; o > 0; ) {
          var l = lt(t, o, !1);
          if (s(t.slice(l, o)) != Et.Word) break;
          o = l;
        }
        for (; u < n; ) {
          var l1 = lt(t, u);
          if (s(t.slice(u, l1)) != Et.Word) break;
          u = l1;
        }
        return o == u ? null : X.range(o + i, u + i);
      }
      constructor(e, t, i, n, s, o) {
        (this.config = e), (this.doc = t), (this.selection = i), (this.values = n), (this.status = e.statusTemplate.slice()), (this.computeSlot = s), o && (o._state = this);
        for (var u = 0; u < this.config.dynamicSlots.length; u++) Yr(this, u << 1);
        this.computeSlot = null;
      }
    }),
    (() => {
      h(_r15, "EditorState");
    })(),
    _r15);
  Ce.allowMultipleSelections = Nm;
  Ce.tabSize = j.define({ combine: (r) => (r.length ? r[0] : 4) });
  Ce.lineSeparator = Mm;
  Ce.readOnly = qm;
  Ce.phrases = j.define({
    compare(r, e) {
      var t = Object.keys(r),
        i = Object.keys(e);
      return t.length == i.length && t.every((n) => r[n] == e[n]);
    },
  });
  Ce.languageData = Rm;
  Ce.changeFilter = Pm;
  Ce.transactionFilter = Im;
  Ce.transactionExtender = $m;
  ur.reconfigure = de.define();
  function zt(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var i = {};
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var n = _step.value;
        try {
          for (var _iterator1 = Object.keys(n)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
            var s = _step1.value;
            var o = n[s],
              u = i[s];
            if (u === void 0) i[s] = o;
            else if (!(u === o || o === void 0))
              if (Object.hasOwnProperty.call(t, s)) i[s] = t[s](u, o);
              else throw new Error("Config merge conflict for field " + s);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    for (var n1 in e) i[n1] === void 0 && (i[n1] = e[n1]);
    return i;
  }
  h(zt, "combineConfig");
  var Wt =
    ((_class29 = class _class {
      eq(e) {
        return this == e;
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        return Gr.create(e, t, this);
      }
    }),
    (() => {
      h(_class29, "RangeValue");
    })(),
    _class29);
  Wt.prototype.startSide = Wt.prototype.endSide = 0;
  Wt.prototype.point = !1;
  Wt.prototype.mapMode = We.TrackDel;
  var Gr =
    ((_r16 = class r {
      static create(e, t, i) {
        return new r(e, t, i);
      }
      constructor(e, t, i) {
        (this.from = e), (this.to = t), (this.value = i);
      }
    }),
    (() => {
      h(_r16, "Range");
    })(),
    _r16);
  function Ol(r, e) {
    return r.from - e.from || r.value.startSide - e.value.startSide;
  }
  h(Ol, "cmpRange");
  var Tl =
      ((_r17 = class r {
        get length() {
          return this.to[this.to.length - 1];
        }
        findIndex(e, t, i) {
          var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          var s = i ? this.to : this.from;
          for (var o = n, u = s.length; ; ) {
            if (o == u) return o;
            var l = (o + u) >> 1,
              a = s[l] - e || (i ? this.value[l].endSide : this.value[l].startSide) - t;
            if (l == o) return a >= 0 ? o : u;
            a >= 0 ? (u = l) : (o = l + 1);
          }
        }
        between(e, t, i, n) {
          for (var s = this.findIndex(t, -1e9, !0), o = this.findIndex(i, 1e9, !1, s); s < o; s++) if (n(this.from[s] + e, this.to[s] + e, this.value[s]) === !1) return !1;
        }
        map(e, t) {
          var i = [],
            n = [],
            s = [],
            o = -1,
            u = -1;
          for (var l = 0; l < this.value.length; l++) {
            var a = this.value[l],
              c = this.from[l] + e,
              f = this.to[l] + e,
              d = void 0,
              p = void 0;
            if (c == f) {
              var m = t.mapPos(c, a.startSide, a.mapMode);
              if (m == null || ((d = p = m), a.startSide != a.endSide && ((p = t.mapPos(c, a.endSide)), p < d))) continue;
            } else if (((d = t.mapPos(c, a.startSide)), (p = t.mapPos(f, a.endSide)), d > p || (d == p && a.startSide > 0 && a.endSide <= 0))) continue;
            (p - d || a.endSide - a.startSide) < 0 || (o < 0 && (o = d), a.point && (u = Math.max(u, p - d)), i.push(a), n.push(d - o), s.push(p - o));
          }
          return { mapped: i.length ? new r(n, s, i, u) : null, pos: o };
        }
        constructor(e, t, i, n) {
          (this.from = e), (this.to = t), (this.value = i), (this.maxPoint = n);
        }
      }),
      (() => {
        h(_r17, "Chunk");
      })(),
      _r17),
    Be =
      ((_r18 = class r {
        static create(e, t, i, n) {
          return new r(e, t, i, n);
        }
        get length() {
          var e = this.chunk.length - 1;
          return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
        }
        get size() {
          if (this.isEmpty) return 0;
          var e = this.nextLayer.size;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.chunk[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              e += t.value.length;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return e;
        }
        chunkEnd(e) {
          return this.chunkPos[e] + this.chunk[e].length;
        }
        update(e) {
          var tmp = e.add,
            t = tmp === void 0 ? [] : tmp,
            tmp1 = e.sort,
            i = tmp1 === void 0 ? !1 : tmp1,
            tmp2 = e.filterFrom,
            n = tmp2 === void 0 ? 0 : tmp2,
            tmp3 = e.filterTo,
            s = tmp3 === void 0 ? this.length : tmp3,
            o = e.filter;
          if (t.length == 0 && !o) return this;
          if ((i && (t = t.slice().sort(Ol)), this.isEmpty)) return t.length ? r.of(t) : this;
          var u = new Qs(this, null, -1).goto(0),
            l = 0,
            a = [],
            c = new Ci();
          for (; u.value || l < t.length; )
            if (l < t.length && (u.from - t[l].from || u.startSide - t[l].value.startSide) >= 0) {
              var f = t[l++];
              c.addInner(f.from, f.to, f.value) || a.push(f);
            } else
              u.rangeIndex == 1 && u.chunkIndex < this.chunk.length && (l == t.length || this.chunkEnd(u.chunkIndex) < t[l].from) && (!o || n > this.chunkEnd(u.chunkIndex) || s < this.chunkPos[u.chunkIndex]) && c.addChunk(this.chunkPos[u.chunkIndex], this.chunk[u.chunkIndex])
                ? u.nextChunk()
                : ((!o || n > u.to || s < u.from || o(u.from, u.to, u.value)) && (c.addInner(u.from, u.to, u.value) || a.push(Gr.create(u.from, u.to, u.value))), u.next());
          return c.finishInner(this.nextLayer.isEmpty && !a.length ? r.empty : this.nextLayer.update({ add: a, filter: o, filterFrom: n, filterTo: s }));
        }
        map(e) {
          if (e.empty || this.isEmpty) return this;
          var t = [],
            i = [],
            n = -1;
          for (var o = 0; o < this.chunk.length; o++) {
            var u = this.chunkPos[o],
              l = this.chunk[o],
              a = e.touchesRange(u, u + l.length);
            if (a === !1) (n = Math.max(n, l.maxPoint)), t.push(l), i.push(e.mapPos(u));
            else if (a === !0) {
              var _l_map = l.map(u, e),
                c = _l_map.mapped,
                f = _l_map.pos;
              c && ((n = Math.max(n, c.maxPoint)), t.push(c), i.push(f));
            }
          }
          var s = this.nextLayer.map(e);
          return t.length == 0 ? s : new r(i, t, s || r.empty, n);
        }
        between(e, t, i) {
          if (!this.isEmpty) {
            for (var n = 0; n < this.chunk.length; n++) {
              var s = this.chunkPos[n],
                o = this.chunk[n];
              if (t >= s && e <= s + o.length && o.between(s, e - s, t - s, i) === !1) return;
            }
            this.nextLayer.between(e, t, i);
          }
        }
        iter() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return Xr.from([this]).goto(e);
        }
        get isEmpty() {
          return this.nextLayer == this;
        }
        static iter(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return Xr.from(e).goto(t);
        }
        static compare(e, t, i, n) {
          var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
          var o = e.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
            u = t.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
            l = Sm(o, u, i),
            a = new bi(o, l, s),
            c = new bi(u, l, s);
          i.iterGaps((f, d, p) => wm(a, f, c, d, p, n)), i.empty && i.length == 0 && wm(a, 0, c, 0, 0, n);
        }
        static eq(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
            n = arguments.length > 3 ? arguments[3] : void 0;
          n == null && (n = 999999999);
          var s = e.filter((c) => !c.isEmpty && t.indexOf(c) < 0),
            o = t.filter((c) => !c.isEmpty && e.indexOf(c) < 0);
          if (s.length != o.length) return !1;
          if (!s.length) return !0;
          var u = Sm(s, o),
            l = new bi(s, u, 0).goto(i),
            a = new bi(o, u, 0).goto(i);
          for (;;) {
            if (l.to != a.to || !Rl(l.active, a.active) || (l.point && (!a.point || !l.point.eq(a.point)))) return !1;
            if (l.to > n) return !0;
            l.next(), a.next();
          }
        }
        static spans(e, t, i, n) {
          var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
          var o = new bi(e, null, s).goto(t),
            u = t,
            l = o.openStart;
          for (;;) {
            var a = Math.min(o.to, i);
            if (o.point) {
              var c = o.activeForPoint(o.to),
                f = o.pointFrom < t ? c.length + 1 : Math.min(c.length, l);
              n.point(u, a, o.point, c, f, o.pointRank), (l = Math.min(o.openEnd(a), c.length));
            } else a > u && (n.span(u, a, o.active, l), (l = o.openEnd(a)));
            if (o.to > i) return l + (o.point && o.to > i ? 1 : 0);
            (u = o.to), o.next();
          }
        }
        static of(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          var i = new Ci();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = (e instanceof Gr ? [e] : t ? vv(e) : e)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              i.add(n.from, n.to, n.value);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i.finish();
        }
        constructor(e, t, i, n) {
          (this.chunkPos = e), (this.chunk = t), (this.nextLayer = i), (this.maxPoint = n);
        }
      }),
      (() => {
        h(_r18, "RangeSet");
      })(),
      _r18);
  Be.empty = new Be([], [], null, -1);
  function vv(r) {
    if (r.length > 1)
      for (var e = r[0], t = 1; t < r.length; t++) {
        var i = r[t];
        if (Ol(e, i) > 0) return r.slice().sort(Ol);
        e = i;
      }
    return r;
  }
  h(vv, "lazySort");
  Be.empty.nextLayer = Be.empty;
  var Ci =
    ((_r19 = class r {
      finishChunk(e) {
        this.chunks.push(new Tl(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), (this.chunkStart = -1), (this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint)), (this.maxPoint = -1), e && ((this.from = []), (this.to = []), (this.value = []));
      }
      add(e, t, i) {
        this.addInner(e, t, i) || (this.nextLayer || (this.nextLayer = new r())).add(e, t, i);
      }
      addInner(e, t, i) {
        var n = e - this.lastTo || i.startSide - this.last.endSide;
        if (n <= 0 && (e - this.lastFrom || i.startSide - this.last.startSide) < 0) throw new Error("Ranges must be added sorted by `from` position and `startSide`");
        return n < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), (this.last = i), (this.lastFrom = e), (this.lastTo = t), this.value.push(i), i.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
      }
      addChunk(e, t) {
        if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0) return !1;
        this.from.length && this.finishChunk(!0), (this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint)), this.chunks.push(t), this.chunkPos.push(e);
        var i = t.value.length - 1;
        return (this.last = t.value[i]), (this.lastFrom = t.from[i] + e), (this.lastTo = t.to[i] + e), !0;
      }
      finish() {
        return this.finishInner(Be.empty);
      }
      finishInner(e) {
        if ((this.from.length && this.finishChunk(!1), this.chunks.length == 0)) return e;
        var t = Be.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
        return (this.from = null), t;
      }
      constructor() {
        (this.chunks = []), (this.chunkPos = []), (this.chunkStart = -1), (this.last = null), (this.lastFrom = -1e9), (this.lastTo = -1e9), (this.from = []), (this.to = []), (this.value = []), (this.maxPoint = -1), (this.setMaxPoint = -1), (this.nextLayer = null);
      }
    }),
    (() => {
      h(_r19, "RangeSetBuilder");
    })(),
    _r19);
  function Sm(r, e, t) {
    var i = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        for (var o = 0; o < s.chunk.length; o++) s.chunk[o].maxPoint <= 0 && i.set(s.chunk[o], s.chunkPos[o]);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var n = new Set();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var s1 = _step1.value;
        for (var o1 = 0; o1 < s1.chunk.length; o1++) {
          var _t;
          var u = i.get(s1.chunk[o1]);
          u != null && (t ? t.mapPos(u) : u) == s1.chunkPos[o1] && !((_t = t) === null || _t === void 0 ? void 0 : _t.touchesRange(u, u + s1.chunk[o1].length)) && n.add(s1.chunk[o1]);
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return n;
  }
  h(Sm, "findSharedChunks");
  var Qs =
      ((_class30 = class _class {
        get startSide() {
          return this.value ? this.value.startSide : 0;
        }
        get endSide() {
          return this.value ? this.value.endSide : 0;
        }
        goto(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
          return (this.chunkIndex = this.rangeIndex = 0), this.gotoInner(e, t, !1), this;
        }
        gotoInner(e, t, i) {
          for (; this.chunkIndex < this.layer.chunk.length; ) {
            var n = this.layer.chunk[this.chunkIndex];
            if (!((this.skip && this.skip.has(n)) || this.layer.chunkEnd(this.chunkIndex) < e || n.maxPoint < this.minPoint)) break;
            this.chunkIndex++, (i = !1);
          }
          if (this.chunkIndex < this.layer.chunk.length) {
            var n1 = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
            (!i || this.rangeIndex < n1) && this.setRangeIndex(n1);
          }
          this.next();
        }
        forward(e, t) {
          (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
        }
        next() {
          for (;;)
            if (this.chunkIndex == this.layer.chunk.length) {
              (this.from = this.to = 1e9), (this.value = null);
              break;
            } else {
              var e = this.layer.chunkPos[this.chunkIndex],
                t = this.layer.chunk[this.chunkIndex],
                i = e + t.from[this.rangeIndex];
              if (((this.from = i), (this.to = e + t.to[this.rangeIndex]), (this.value = t.value[this.rangeIndex]), this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || (this.value.point && this.to - this.from >= this.minPoint))) break;
            }
        }
        setRangeIndex(e) {
          if (e == this.layer.chunk[this.chunkIndex].value.length) {
            if ((this.chunkIndex++, this.skip)) for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); ) this.chunkIndex++;
            this.rangeIndex = 0;
          } else this.rangeIndex = e;
        }
        nextChunk() {
          this.chunkIndex++, (this.rangeIndex = 0), this.next();
        }
        compare(e) {
          return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
        }
        constructor(e, t, i, ref) {
          var n = ref === void 0 ? 0 : ref;
          (this.layer = e), (this.skip = t), (this.minPoint = i), (this.rank = n);
        }
      }),
      (() => {
        h(_class30, "LayerCursor");
      })(),
      _class30),
    Xr =
      ((_r20 = class r {
        static from(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
          var n = [];
          for (var s = 0; s < e.length; s++) for (var o = e[s]; !o.isEmpty; o = o.nextLayer) o.maxPoint >= i && n.push(new Qs(o, t, i, s));
          return n.length == 1 ? n[0] : new r(n);
        }
        get startSide() {
          return this.value ? this.value.startSide : 0;
        }
        goto(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.goto(e, t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) vl(this.heap, i1);
          return this.next(), this;
        }
        forward(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.forward(e, t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) vl(this.heap, i1);
          (this.to - e || this.value.endSide - t) < 0 && this.next();
        }
        next() {
          if (this.heap.length == 0) (this.from = this.to = 1e9), (this.value = null), (this.rank = -1);
          else {
            var e = this.heap[0];
            (this.from = e.from), (this.to = e.to), (this.value = e.value), (this.rank = e.rank), e.value && e.next(), vl(this.heap, 0);
          }
        }
        constructor(e) {
          this.heap = e;
        }
      }),
      (() => {
        h(_r20, "HeapCursor");
      })(),
      _r20);
  function vl(r, e) {
    for (var t = r[e]; ; ) {
      var i = (e << 1) + 1;
      if (i >= r.length) break;
      var n = r[i];
      if ((i + 1 < r.length && n.compare(r[i + 1]) >= 0 && ((n = r[i + 1]), i++), t.compare(n) < 0)) break;
      (r[i] = t), (r[e] = n), (e = i);
    }
  }
  h(vl, "heapBubble");
  var bi =
    ((_class31 = class _class {
      goto(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
        return this.cursor.goto(e, t), (this.active.length = this.activeTo.length = this.activeRank.length = 0), (this.minActive = -1), (this.to = e), (this.endSide = t), (this.openStart = -1), this.next(), this;
      }
      forward(e, t) {
        for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; ) this.removeActive(this.minActive);
        this.cursor.forward(e, t);
      }
      removeActive(e) {
        Es(this.active, e), Es(this.activeTo, e), Es(this.activeRank, e), (this.minActive = Qm(this.active, this.activeTo));
      }
      addActive(e) {
        var t = 0,
          _this_cursor = this.cursor,
          i = _this_cursor.value,
          n = _this_cursor.to,
          s = _this_cursor.rank;
        for (; t < this.activeRank.length && this.activeRank[t] <= s; ) t++;
        Cs(this.active, t, i), Cs(this.activeTo, t, n), Cs(this.activeRank, t, s), e && Cs(e, t, this.cursor.from), (this.minActive = Qm(this.active, this.activeTo));
      }
      next() {
        var e = this.to,
          t = this.point;
        this.point = null;
        var i = this.openStart < 0 ? [] : null;
        for (;;) {
          var n = this.minActive;
          if (n > -1 && (this.activeTo[n] - this.cursor.from || this.active[n].endSide - this.cursor.startSide) < 0) {
            if (this.activeTo[n] > e) {
              (this.to = this.activeTo[n]), (this.endSide = this.active[n].endSide);
              break;
            }
            this.removeActive(n), i && Es(i, n);
          } else if (this.cursor.value)
            if (this.cursor.from > e) {
              (this.to = this.cursor.from), (this.endSide = this.cursor.startSide);
              break;
            } else {
              var s = this.cursor.value;
              if (!s.point) this.addActive(i), this.cursor.next();
              else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to) this.cursor.next();
              else {
                (this.point = s), (this.pointFrom = this.cursor.from), (this.pointRank = this.cursor.rank), (this.to = this.cursor.to), (this.endSide = s.endSide), this.cursor.next(), this.forward(this.to, this.endSide);
                break;
              }
            }
          else {
            this.to = this.endSide = 1e9;
            break;
          }
        }
        if (i) {
          this.openStart = 0;
          for (var n1 = i.length - 1; n1 >= 0 && i[n1] < e; n1--) this.openStart++;
        }
      }
      activeForPoint(e) {
        if (!this.active.length) return this.active;
        var t = [];
        for (var i = this.active.length - 1; i >= 0 && !(this.activeRank[i] < this.pointRank); i--) (this.activeTo[i] > e || (this.activeTo[i] == e && this.active[i].endSide >= this.point.endSide)) && t.push(this.active[i]);
        return t.reverse();
      }
      openEnd(e) {
        var t = 0;
        for (var i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > e; i--) t++;
        return t;
      }
      constructor(e, t, i) {
        (this.minPoint = i), (this.active = []), (this.activeTo = []), (this.activeRank = []), (this.minActive = -1), (this.point = null), (this.pointFrom = 0), (this.pointRank = 0), (this.to = -1e9), (this.endSide = 0), (this.openStart = -1), (this.cursor = Xr.from(e, t, i));
      }
    }),
    (() => {
      h(_class31, "SpanCursor");
    })(),
    _class31);
  function wm(r, e, t, i, n, s) {
    r.goto(e), t.goto(i);
    var o = i + n,
      u = i,
      l = i - e;
    for (;;) {
      var a = r.to + l - t.to || r.endSide - t.endSide,
        c = a < 0 ? r.to + l : t.to,
        f = Math.min(c, o);
      if ((r.point || t.point ? (r.point && t.point && (r.point == t.point || r.point.eq(t.point)) && Rl(r.activeForPoint(r.to), t.activeForPoint(t.to))) || s.comparePoint(u, f, r.point, t.point) : f > u && !Rl(r.active, t.active) && s.compareRange(u, f, r.active, t.active), c > o)) break;
      (u = c), a <= 0 && r.next(), a >= 0 && t.next();
    }
  }
  h(wm, "compare");
  function Rl(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (r[t] != e[t] && !r[t].eq(e[t])) return !1;
    return !0;
  }
  h(Rl, "sameValues");
  function Es(r, e) {
    for (var t = e, i = r.length - 1; t < i; t++) r[t] = r[t + 1];
    r.pop();
  }
  h(Es, "remove");
  function Cs(r, e, t) {
    for (var i = r.length - 1; i >= e; i--) r[i + 1] = r[i];
    r[e] = t;
  }
  h(Cs, "insert");
  function Qm(r, e) {
    var t = -1,
      i = 1e9;
    for (var n = 0; n < e.length; n++) (e[n] - i || r[n].endSide - r[t].endSide) < 0 && ((t = n), (i = e[n]));
    return t;
  }
  h(Qm, "findMinIndex");
  function _s(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : r.length;
    var i = 0;
    for (var n = 0; n < t; ) r.charCodeAt(n) == 9 ? ((i += e - (i % e)), n++) : (i++, (n = lt(r, n)));
    return i;
  }
  h(_s, "countColumn");
  function zm(r, e, t, i) {
    for (var n = 0, s = 0; ; ) {
      if (s >= e) return n;
      if (n == r.length) break;
      (s += r.charCodeAt(n) == 9 ? t - (s % t) : 1), (n = lt(r, n));
    }
    return i === !0 ? -1 : r.length;
  }
  h(zm, "findColumn");
  var Pl = "ͼ",
    Hm = typeof Symbol > "u" ? "__" + Pl : Symbol.for(Pl),
    Il = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"),
    jm = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {},
    ht =
      ((_class32 = class _class {
        getRules() {
          return this.rules.join("\n");
        }
        static newName() {
          var e = jm[Hm] || 1;
          return (jm[Hm] = e + 1), Pl + e.toString(36);
        }
        static mount(e, t) {
          (e[Il] || new $l(e)).mount(Array.isArray(t) ? t : [t]);
        }
        constructor(e, t) {
          this.rules = [];
          var _ref = t || {},
            i = _ref.finish;
          function n(o) {
            return /^@/.test(o) ? [o] : o.split(/,\s*/);
          }
          h(n, "splitSelector");
          function s(o, u, l, a) {
            var c = [],
              f = /^@(\w+)\b/.exec(o[0]),
              d = f && f[1] == "keyframes";
            if (f && u == null) return l.push(o[0] + ";");
            for (var p in u) {
              var m = u[p];
              if (/&/.test(p))
                s(
                  p
                    .split(/,\s*/)
                    .map((F) => o.map((g) => F.replace(/&/, g)))
                    .reduce((F, g) => F.concat(g)),
                  m,
                  l,
                );
              else if (m && typeof m == "object") {
                if (!f) throw new RangeError("The value of a property (" + p + ") should be a primitive value.");
                s(n(p), m, c, d);
              } else m != null && c.push(p.replace(/_.*/, "").replace(/[A-Z]/g, (F) => "-" + F.toLowerCase()) + ": " + m + ";");
            }
            (c.length || d) && l.push((i && !f && !a ? o.map(i) : o).join(", ") + " {" + c.join(" ") + "}");
          }
          h(s, "render");
          for (var o in e) s(n(o), e[o], this.rules);
        }
      }),
      (() => {
        h(_class32, "StyleModule");
      })(),
      _class32),
    Ym = new Map(),
    $l =
      ((_class33 = class _class {
        mount(e) {
          var t = this.sheet,
            i = 0,
            n = 0;
          for (var s = 0; s < e.length; s++) {
            var o = e[s],
              u = this.modules.indexOf(o);
            if ((u < n && u > -1 && (this.modules.splice(u, 1), n--, (u = -1)), u == -1)) {
              if ((this.modules.splice(n++, 0, o), t)) for (var l = 0; l < o.rules.length; l++) t.insertRule(o.rules[l], i++);
            } else {
              for (; n < u; ) i += this.modules[n++].rules.length;
              (i += o.rules.length), n++;
            }
          }
          if (!t) {
            var s1 = "";
            for (var o1 = 0; o1 < this.modules.length; o1++) s1 += this.modules[o1].getRules() + "\n";
            this.styleTag.textContent = s1;
          }
        }
        constructor(e) {
          var t = e.ownerDocument || e,
            i = t.defaultView;
          if (!e.head && e.adoptedStyleSheets && i.CSSStyleSheet) {
            var n = Ym.get(t);
            if (n) return (e.adoptedStyleSheets = [n.sheet, ...e.adoptedStyleSheets]), (e[Il] = n);
            (this.sheet = new i.CSSStyleSheet()), (e.adoptedStyleSheets = [this.sheet, ...e.adoptedStyleSheets]), Ym.set(t, this);
          } else {
            this.styleTag = t.createElement("style");
            var n1 = e.head || e;
            n1.insertBefore(this.styleTag, n1.firstChild);
          }
          (this.modules = []), (e[Il] = this);
        }
      }),
      (() => {
        h(_class33, "StyleSet");
      })(),
      _class33);
  var Ht = {
      8: "Backspace",
      9: "Tab",
      10: "Enter",
      12: "NumLock",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      44: "PrintScreen",
      45: "Insert",
      46: "Delete",
      59: ";",
      61: "=",
      91: "Meta",
      92: "Meta",
      106: "*",
      107: "+",
      108: ",",
      109: "-",
      110: ".",
      111: "/",
      144: "NumLock",
      145: "ScrollLock",
      160: "Shift",
      161: "Shift",
      162: "Control",
      163: "Control",
      164: "Alt",
      165: "Alt",
      173: "-",
      186: ";",
      187: "=",
      188: ",",
      189: "-",
      190: ".",
      191: "/",
      192: "`",
      219: "[",
      220: "\\",
      221: "]",
      222: "'",
    },
    ar = { 48: ")", 49: "!", 50: "@", 51: "#", 52: "$", 53: "%", 54: "^", 55: "&", 56: "*", 57: "(", 59: ":", 61: "+", 173: "_", 186: ":", 187: "+", 188: "<", 189: "_", 190: ">", 191: "?", 192: "~", 219: "{", 220: "|", 221: "}", 222: '"' },
    xv = typeof navigator < "u" && /Mac/.test(navigator.platform),
    Av = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
  for (_e = 0; _e < 10; _e++) Ht[48 + _e] = Ht[96 + _e] = String(_e);
  var _e;
  for (_e = 1; _e <= 24; _e++) Ht[_e + 111] = "F" + _e;
  var _e;
  for (_e = 65; _e <= 90; _e++) (Ht[_e] = String.fromCharCode(_e + 32)), (ar[_e] = String.fromCharCode(_e));
  var _e;
  for (Us in Ht) ar.hasOwnProperty(Us) || (ar[Us] = Ht[Us]);
  var Us;
  function Jm(r) {
    var e = (xv && r.metaKey && r.shiftKey && !r.ctrlKey && !r.altKey) || (Av && r.shiftKey && r.key && r.key.length == 1) || r.key == "Unidentified",
      t = (!e && r.key) || (r.shiftKey ? ar : Ht)[r.keyCode] || r.key || "Unidentified";
    return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
  }
  h(Jm, "keyName");
  function js(r) {
    var e;
    return r.nodeType == 11 ? (e = r.getSelection ? r : r.ownerDocument) : (e = r), e.getSelection();
  }
  h(js, "getSelection");
  function Yl(r, e) {
    return e ? r == e || r.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
  }
  h(Yl, "contains");
  function kv(r) {
    var e = r.activeElement;
    for (; e && e.shadowRoot; ) e = e.shadowRoot.activeElement;
    return e;
  }
  h(kv, "deepActiveElement");
  function $s(r, e) {
    if (!e.anchorNode) return !1;
    try {
      return Yl(r, e.anchorNode);
    } catch (e) {
      return !1;
    }
  }
  h($s, "hasSelection");
  function un(r) {
    return r.nodeType == 3 ? Bi(r, 0, r.nodeValue.length).getClientRects() : r.nodeType == 1 ? r.getClientRects() : [];
  }
  h(un, "clientRectsFor");
  function Ys(r, e, t, i) {
    return t ? Gm(r, e, t, i, -1) || Gm(r, e, t, i, 1) : !1;
  }
  h(Ys, "isEquivalentPosition");
  function Js(r) {
    for (var e = 0; ; e++) if (((r = r.previousSibling), !r)) return e;
  }
  h(Js, "domIndex");
  function Gm(r, e, t, i, n) {
    for (;;) {
      if (r == t && e == i) return !0;
      if (e == (n < 0 ? 0 : ri(r))) {
        if (r.nodeName == "DIV") return !1;
        var s = r.parentNode;
        if (!s || s.nodeType != 1) return !1;
        (e = Js(r) + (n < 0 ? 0 : 1)), (r = s);
      } else if (r.nodeType == 1) {
        if (((r = r.childNodes[e + (n < 0 ? -1 : 0)]), r.nodeType == 1 && r.contentEditable == "false")) return !1;
        e = n < 0 ? ri(r) : 0;
      } else return !1;
    }
  }
  h(Gm, "scanFor");
  function ri(r) {
    return r.nodeType == 3 ? r.nodeValue.length : r.childNodes.length;
  }
  h(ri, "maxOffset");
  function Qa(r, e) {
    var t = e ? r.left : r.right;
    return { left: t, right: t, top: r.top, bottom: r.bottom };
  }
  h(Qa, "flattenRect");
  function Sv(r) {
    return { left: 0, right: r.innerWidth, top: 0, bottom: r.innerHeight };
  }
  h(Sv, "windowRect");
  function wv(r, e, t, i, n, s, o, u) {
    var l = r.ownerDocument,
      a = l.defaultView || window;
    for (var c = r, f = !1; c && !f; )
      if (c.nodeType == 1) {
        var d = void 0,
          p = c == l.body;
        if (p) d = Sv(a);
        else {
          if ((/^(fixed|sticky)$/.test(getComputedStyle(c).position) && (f = !0), c.scrollHeight <= c.clientHeight && c.scrollWidth <= c.clientWidth)) {
            c = c.assignedSlot || c.parentNode;
            continue;
          }
          var g = c.getBoundingClientRect();
          d = { left: g.left, right: g.left + c.clientWidth, top: g.top, bottom: g.top + c.clientHeight };
        }
        var m = 0,
          F = 0;
        if (n == "nearest") e.top < d.top ? ((F = -(d.top - e.top + o)), t > 0 && e.bottom > d.bottom + F && (F = e.bottom - d.bottom + F + o)) : e.bottom > d.bottom && ((F = e.bottom - d.bottom + o), t < 0 && e.top - F < d.top && (F = -(d.top + F - e.top + o)));
        else {
          var g1 = e.bottom - e.top,
            D = d.bottom - d.top;
          F = (n == "center" && g1 <= D ? e.top + g1 / 2 - D / 2 : n == "start" || (n == "center" && t < 0) ? e.top - o : e.bottom - D + o) - d.top;
        }
        if (
          (i == "nearest"
            ? e.left < d.left
              ? ((m = -(d.left - e.left + s)), t > 0 && e.right > d.right + m && (m = e.right - d.right + m + s))
              : e.right > d.right && ((m = e.right - d.right + s), t < 0 && e.left < d.left + m && (m = -(d.left + m - e.left + s)))
            : (m = (i == "center" ? e.left + (e.right - e.left) / 2 - (d.right - d.left) / 2 : (i == "start") == u ? e.left - s : e.right - (d.right - d.left) + s) - d.left),
          m || F)
        )
          if (p) a.scrollBy(m, F);
          else {
            var g2 = 0,
              D1 = 0;
            if (F) {
              var b = c.scrollTop;
              (c.scrollTop += F), (D1 = c.scrollTop - b);
            }
            if (m) {
              var b1 = c.scrollLeft;
              (c.scrollLeft += m), (g2 = c.scrollLeft - b1);
            }
            (e = { left: e.left - g2, top: e.top - D1, right: e.right - g2, bottom: e.bottom - D1 }), g2 && Math.abs(g2 - m) < 1 && (i = "nearest"), D1 && Math.abs(D1 - F) < 1 && (n = "nearest");
          }
        if (p) break;
        c = c.assignedSlot || c.parentNode;
      } else if (c.nodeType == 11) c = c.host;
      else break;
  }
  h(wv, "scrollRectIntoView");
  function Qv(r) {
    var e = r.ownerDocument;
    for (var t = r.parentNode; t && t != e.body; )
      if (t.nodeType == 1) {
        if (t.scrollHeight > t.clientHeight || t.scrollWidth > t.clientWidth) return t;
        t = t.assignedSlot || t.parentNode;
      } else if (t.nodeType == 11) t = t.host;
      else break;
    return null;
  }
  h(Qv, "scrollableParent");
  var Jl =
      ((_class34 = class _class {
        eq(e) {
          return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
        }
        setRange(e) {
          var t = e.anchorNode,
            i = e.focusNode;
          this.set(t, Math.min(e.anchorOffset, t ? ri(t) : 0), i, Math.min(e.focusOffset, i ? ri(i) : 0));
        }
        set(e, t, i, n) {
          (this.anchorNode = e), (this.anchorOffset = t), (this.focusNode = i), (this.focusOffset = n);
        }
        constructor() {
          (this.anchorNode = null), (this.anchorOffset = 0), (this.focusNode = null), (this.focusOffset = 0);
        }
      }),
      (() => {
        h(_class34, "DOMSelectionState");
      })(),
      _class34),
    hr = null;
  function Lg(r) {
    if (r.setActive) return r.setActive();
    if (hr) return r.focus(hr);
    var e = [];
    for (var t = r; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode);
    if (
      (r.focus(
        hr == null
          ? {
              get preventScroll() {
                return (hr = { preventScroll: !0 }), !0;
              },
            }
          : void 0,
      ),
      !hr)
    ) {
      hr = !1;
      for (var t1 = 0; t1 < e.length; ) {
        var i = e[t1++],
          n = e[t1++],
          s = e[t1++];
        i.scrollTop != n && (i.scrollTop = n), i.scrollLeft != s && (i.scrollLeft = s);
      }
    }
  }
  h(Lg, "focusPreventScroll");
  var Xm;
  function Bi(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e;
    var i = Xm || (Xm = document.createRange());
    return i.setEnd(r, t), i.setStart(r, e), i;
  }
  h(Bi, "textRange");
  function mr(r, e, t) {
    var i = { key: e, code: e, keyCode: t, which: t, cancelable: !0 },
      n = new KeyboardEvent("keydown", i);
    (n.synthetic = !0), r.dispatchEvent(n);
    var s = new KeyboardEvent("keyup", i);
    return (s.synthetic = !0), r.dispatchEvent(s), n.defaultPrevented || s.defaultPrevented;
  }
  h(mr, "dispatchKey");
  function _v(r) {
    for (; r; ) {
      if (r && (r.nodeType == 9 || (r.nodeType == 11 && r.host))) return r;
      r = r.assignedSlot || r.parentNode;
    }
    return null;
  }
  h(_v, "getRoot");
  function Og(r) {
    for (; r.attributes.length; ) r.removeAttributeNode(r.attributes[0]);
  }
  h(Og, "clearAttributes");
  function Uv(r, e) {
    var t = e.focusNode,
      i = e.focusOffset;
    if (!t || e.anchorNode != t || e.anchorOffset != i) return !1;
    for (i = Math.min(i, ri(t)); ; )
      if (i) {
        if (t.nodeType != 1) return !1;
        var n = t.childNodes[i - 1];
        n.contentEditable == "false" ? i-- : ((t = n), (i = ri(t)));
      } else {
        if (t == r) return !0;
        (i = Js(t)), (t = t.parentNode);
      }
  }
  h(Uv, "atElementStart");
  function Tg(r) {
    return r.scrollTop > Math.max(1, r.scrollHeight - r.clientHeight - 4);
  }
  h(Tg, "isScrolledToBottom");
  var je =
      ((_r21 = class r {
        static before(e, t) {
          return new r(e.parentNode, Js(e), t);
        }
        static after(e, t) {
          return new r(e.parentNode, Js(e) + 1, t);
        }
        constructor(e, t, ref) {
          var i = ref === void 0 ? !0 : ref;
          (this.node = e), (this.offset = t), (this.precise = i);
        }
      }),
      (() => {
        h(_r21, "DOMPos");
      })(),
      _r21),
    _a = [],
    Ee =
      ((_r22 = class r {
        get overrideDOMText() {
          return null;
        }
        get posAtStart() {
          return this.parent ? this.parent.posBefore(this) : 0;
        }
        get posAtEnd() {
          return this.posAtStart + this.length;
        }
        posBefore(e) {
          var t = this.posAtStart;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (i == e) return t;
              t += i.length + i.breakAfter;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          throw new RangeError("Invalid child in posBefore");
        }
        posAfter(e) {
          return this.posBefore(e) + e.length;
        }
        sync(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.flags & 2) {
            var i = this.dom,
              n = null,
              s;
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
                var o = _step.value;
                if (o.flags & 7) {
                  if (!o.dom && (s = n ? n.nextSibling : i.firstChild)) {
                    var u = r.get(s);
                    (!u || (!u.parent && u.canReuseDOM(o))) && o.reuseDOM(s);
                  }
                  o.sync(e, t), (o.flags &= -8);
                }
                if (((s = n ? n.nextSibling : i.firstChild), t && !t.written && t.node == i && s != o.dom && (t.written = !0), o.dom.parentNode == i)) for (; s && s != o.dom; ) s = Km(s);
                else i.insertBefore(o.dom, s);
                n = o.dom;
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            for (s = n ? n.nextSibling : i.firstChild, s && t && t.node == i && (t.written = !0); s; ) s = Km(s);
          } else if (this.flags & 1)
            try {
              for (var _iterator1 = this.children[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step1.value;
                i1.flags & 7 && (i1.sync(e, t), (i1.flags &= -8));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        reuseDOM(e) {}
        localPosFromDOM(e, t) {
          var i;
          if (e == this.dom) i = this.dom.childNodes[t];
          else {
            var n = ri(e) == 0 ? 0 : t == 0 ? -1 : 1;
            for (;;) {
              var s = e.parentNode;
              if (s == this.dom) break;
              n == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? (n = -1) : (n = 1)), (e = s);
            }
            n < 0 ? (i = e) : (i = e.nextSibling);
          }
          if (i == this.dom.firstChild) return 0;
          for (; i && !r.get(i); ) i = i.nextSibling;
          if (!i) return this.length;
          for (var n1 = 0, s1 = 0; ; n1++) {
            var o = this.children[n1];
            if (o.dom == i) return s1;
            s1 += o.length + o.breakAfter;
          }
        }
        domBoundsAround(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          var n = -1,
            s = -1,
            o = -1,
            u = -1;
          for (var l = 0, a = i, c = i; l < this.children.length; l++) {
            var f = this.children[l],
              d = a + f.length;
            if (a < e && d > t) return f.domBoundsAround(e, t, a);
            if ((d >= e && n == -1 && ((n = l), (s = a)), a > t && f.dom.parentNode == this.dom)) {
              (o = l), (u = c);
              break;
            }
            (c = d), (a = d + f.breakAfter);
          }
          return { from: s, to: u < 0 ? i + this.length : u, startDOM: (n ? this.children[n - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null };
        }
        markDirty() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
          (this.flags |= 2), this.markParentsDirty(e);
        }
        markParentsDirty(e) {
          for (var t = this.parent; t; t = t.parent) {
            if ((e && (t.flags |= 2), t.flags & 1)) return;
            (t.flags |= 1), (e = !1);
          }
        }
        setParent(e) {
          this.parent != e && ((this.parent = e), this.flags & 7 && this.markParentsDirty(!0));
        }
        setDOM(e) {
          this.dom && (this.dom.cmView = null), (this.dom = e), (e.cmView = this);
        }
        get rootView() {
          for (var e = this; ; ) {
            var t = e.parent;
            if (!t) return e;
            e = t;
          }
        }
        replaceChildren(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _a;
          this.markDirty();
          for (var n = e; n < t; n++) {
            var s = this.children[n];
            s.parent == this && s.destroy();
          }
          this.children.splice(e, t - e, ...i);
          for (var n1 = 0; n1 < i.length; n1++) i[n1].setParent(this);
        }
        ignoreMutation(e) {
          return !1;
        }
        ignoreEvent(e) {
          return !1;
        }
        childCursor() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
          return new Gs(this.children, e, this.children.length);
        }
        childPos(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
          return this.childCursor().findPos(e, t);
        }
        toString() {
          var e = this.constructor.name.replace("View", "");
          return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
        }
        static get(e) {
          return e.cmView;
        }
        get isEditable() {
          return !0;
        }
        get isWidget() {
          return !1;
        }
        get isHidden() {
          return !1;
        }
        merge(e, t, i, n, s, o) {
          return !1;
        }
        become(e) {
          return !1;
        }
        canReuseDOM(e) {
          return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
        }
        getSide() {
          return 0;
        }
        destroy() {
          this.parent = null;
        }
        constructor() {
          (this.parent = null), (this.dom = null), (this.flags = 2);
        }
      }),
      (() => {
        h(_r22, "ContentView");
      })(),
      _r22);
  Ee.prototype.breakAfter = 0;
  function Km(r) {
    var e = r.nextSibling;
    return r.parentNode.removeChild(r), e;
  }
  h(Km, "rm$1");
  var Gs =
    ((_class35 = class _class {
      findPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
        for (;;) {
          if (e > this.pos || (e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))) return (this.off = e - this.pos), this;
          var i = this.children[--this.i];
          this.pos -= i.length + i.breakAfter;
        }
      }
      constructor(e, t, i) {
        (this.children = e), (this.pos = t), (this.i = i), (this.off = 0);
      }
    }),
    (() => {
      h(_class35, "ChildCursor");
    })(),
    _class35);
  function Rg(r, e, t, i, n, s, o, u, l) {
    var a = r.children,
      c = a.length ? a[e] : null,
      f = s.length ? s[s.length - 1] : null,
      d = f ? f.breakAfter : o;
    if (!(e == i && c && !o && !d && s.length < 2 && c.merge(t, n, s.length ? f : null, t == 0, u, l))) {
      if (i < a.length) {
        var _p;
        var p = a[i];
        p && n < p.length ? (e == i && ((p = p.split(n)), (n = 0)), !d && f && p.merge(0, n, f, !0, 0, l) ? (s[s.length - 1] = p) : (n && p.merge(0, n, null, !1, 0, l), s.push(p))) : ((_p = p) === null || _p === void 0 ? void 0 : _p.breakAfter) && (f ? (f.breakAfter = 1) : (o = 1)), i++;
      }
      for (c && ((c.breakAfter = o), t > 0 && (!o && s.length && c.merge(t, c.length, s[0], !1, u, 0) ? (c.breakAfter = s.shift().breakAfter) : (t < c.length || (c.children.length && c.children[c.children.length - 1].length == 0)) && c.merge(t, c.length, null, !1, u, 0), e++)); e < i && s.length; )
        if (a[i - 1].become(s[s.length - 1])) i--, s.pop(), (l = s.length ? 0 : u);
        else if (a[e].become(s[0])) e++, s.shift(), (u = s.length ? 0 : l);
        else break;
      !s.length && e && i < a.length && !a[e - 1].breakAfter && a[i].merge(0, 0, a[e - 1], !1, u, l) && e--, (e < i || s.length) && r.replaceChildren(e, i, s);
    }
  }
  h(Rg, "replaceRange");
  function Ng(r, e, t, i, n, s) {
    var o = r.childCursor(),
      _o_findPos = o.findPos(t, 1),
      u = _o_findPos.i,
      l = _o_findPos.off,
      _o_findPos1 = o.findPos(e, -1),
      a = _o_findPos1.i,
      c = _o_findPos1.off,
      f = e - t;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var d = _step.value;
        f += d.length;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    (r.length += f), Rg(r, a, c, u, l, i, 0, n, s);
  }
  h(Ng, "mergeChildrenInto");
  var cr = "￿",
    Xs =
      ((_class36 = class _class {
        append(e) {
          this.text += e;
        }
        lineBreak() {
          this.text += cr;
        }
        readRange(e, t) {
          if (!e) return this;
          var i = e.parentNode;
          for (var n = e; ; ) {
            this.findPointBefore(i, n);
            var s = this.text.length;
            this.readNode(n);
            var o = n.nextSibling;
            if (o == t) break;
            var u = Ee.get(n),
              l = Ee.get(o);
            (u && l ? u.breakAfter : (u ? u.breakAfter : Zm(n)) || (Zm(o) && (n.nodeName != "BR" || n.cmIgnore) && this.text.length > s)) && this.lineBreak(), (n = o);
          }
          return this.findPointBefore(i, t), this;
        }
        readTextNode(e) {
          var t = e.nodeValue;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.node == e && (i.pos = this.text.length + Math.min(i.offset, t.length));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (var i1 = 0, n = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
            var s = -1,
              o = 1,
              u = void 0;
            if ((this.lineSeparator ? ((s = t.indexOf(this.lineSeparator, i1)), (o = this.lineSeparator.length)) : (u = n.exec(t)) && ((s = u.index), (o = u[0].length)), this.append(t.slice(i1, s < 0 ? t.length : s)), s < 0)) break;
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            if ((this.lineBreak(), o > 1))
              try {
                for (var _iterator1 = this.points[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var l = _step1.value;
                  l.node == e && l.pos > this.text.length && (l.pos -= o - 1);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
            i1 = s + o;
          }
        }
        readNode(e) {
          if (e.cmIgnore) return;
          var t = Ee.get(e),
            i = t && t.overrideDOMText;
          if (i != null) {
            this.findPointInside(e, i.length);
            for (var n = i.iter(); !n.next().done; ) n.lineBreak ? this.lineBreak() : this.append(n.value);
          } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
        }
        findPointBefore(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.node == e && e.childNodes[i.offset] == t && (i.pos = this.text.length);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        findPointInside(e, t) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              (e.nodeType == 3 ? i.node == e : e.contains(i.node)) && (i.pos = this.text.length + Math.min(t, i.offset));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        constructor(e, t) {
          (this.points = e), (this.text = ""), (this.lineSeparator = t.facet(Ce.lineSeparator));
        }
      }),
      (() => {
        h(_class36, "DOMReader");
      })(),
      _class36);
  function Zm(r) {
    return r.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(r.nodeName);
  }
  h(Zm, "isBlockElement");
  var Ks =
      ((_class37 = class _class {
        constructor(e, t) {
          (this.node = e), (this.offset = t), (this.pos = -1);
        }
      }),
      (() => {
        h(_class37, "DOMPoint");
      })(),
      _class37),
    et = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" },
    Gl = typeof document < "u" ? document : { documentElement: { style: {} } },
    Xl = /Edge\/(\d+)/.exec(et.userAgent),
    Mg = /MSIE \d/.test(et.userAgent),
    Kl = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(et.userAgent),
    po = !!(Mg || Kl || Xl),
    eg = !po && /gecko\/(\d+)/i.test(et.userAgent),
    ql = !po && /Chrome\/(\d+)/.exec(et.userAgent),
    tg = "webkitFontSmoothing" in Gl.documentElement.style,
    Pg = !po && /Apple Computer/.test(et.vendor),
    ig = Pg && (/Mobile\/\w+/.test(et.userAgent) || et.maxTouchPoints > 2),
    W = {
      mac: ig || /Mac/.test(et.platform),
      windows: /Win/.test(et.platform),
      linux: /Linux|X11/.test(et.platform),
      ie: po,
      ie_version: Mg ? Gl.documentMode || 6 : Kl ? +Kl[1] : Xl ? +Xl[1] : 0,
      gecko: eg,
      gecko_version: eg ? +(/Firefox\/(\d+)/.exec(et.userAgent) || [0, 0])[1] : 0,
      chrome: !!ql,
      chrome_version: ql ? +ql[1] : 0,
      ios: ig,
      android: /Android\b/.test(et.userAgent),
      webkit: tg,
      safari: Pg,
      webkit_version: tg ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
      tabSize: Gl.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size",
    },
    Lv = 256,
    jt =
      ((_r23 = class r extends Ee {
        get length() {
          return this.text.length;
        }
        createDOM(e) {
          this.setDOM(e || document.createTextNode(this.text));
        }
        sync(e, t) {
          this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), (this.dom.nodeValue = this.text));
        }
        reuseDOM(e) {
          e.nodeType == 3 && this.createDOM(e);
        }
        merge(e, t, i) {
          return this.flags & 8 || (i && (!(i instanceof r) || this.length - (t - e) + i.length > Lv || i.flags & 8)) ? !1 : ((this.text = this.text.slice(0, e) + (i ? i.text : "") + this.text.slice(t)), this.markDirty(), !0);
        }
        split(e) {
          var t = new r(this.text.slice(e));
          return (this.text = this.text.slice(0, e)), this.markDirty(), (t.flags |= this.flags & 8), t;
        }
        localPosFromDOM(e, t) {
          return e == this.dom ? t : t ? this.text.length : 0;
        }
        domAtPos(e) {
          return new je(this.dom, e);
        }
        domBoundsAround(e, t, i) {
          return { from: i, to: i + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
        }
        coordsAt(e, t) {
          return Ov(this.dom, e, t);
        }
        constructor(e) {
          super(), (this.text = e);
        }
      }),
      (() => {
        h(_r23, "TextView");
      })(),
      _r23),
    ni =
      ((_r24 = class r extends Ee {
        setAttrs(e) {
          if ((Og(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)) for (var t in this.mark.attrs) e.setAttribute(t, this.mark.attrs[t]);
          return e;
        }
        canReuseDOM(e) {
          return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
        }
        reuseDOM(e) {
          e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), (this.flags |= 6));
        }
        sync(e, t) {
          this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
        }
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r && i.mark.eq(this.mark)) || (e && s <= 0) || (t < this.length && o <= 0)) ? !1 : (Ng(this, e, t, i ? i.children : [], s - 1, o - 1), this.markDirty(), !0);
        }
        split(e) {
          var t = [],
            i = 0,
            n = -1,
            s = 0;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u = _step.value;
              var l = i + u.length;
              l > e && t.push(i < e ? u.split(e - i) : u), n < 0 && i >= e && (n = s), (i = l), s++;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var o = this.length - e;
          return (this.length = e), n > -1 && ((this.children.length = n), this.markDirty()), new r(this.mark, t, o);
        }
        domAtPos(e) {
          return Ig(this, e);
        }
        coordsAt(e, t) {
          return qg(this, e, t);
        }
        constructor(e, ref, ref1) {
          var t = ref === void 0 ? [] : ref,
            i = ref1 === void 0 ? 0 : ref1;
          super(), (this.mark = e), (this.children = t), (this.length = i);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.setParent(this);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      (() => {
        h(_r24, "MarkView");
      })(),
      _r24);
  function Ov(r, e, t) {
    var i = r.nodeValue.length;
    e > i && (e = i);
    var n = e,
      s = e,
      o = 0;
    (e == 0 && t < 0) || (e == i && t >= 0) ? W.chrome || W.gecko || (e ? (n--, (o = 1)) : s < i && (s++, (o = -1))) : t < 0 ? n-- : s < i && s++;
    var u = Bi(r, n, s).getClientRects();
    if (!u.length) return null;
    var l = u[(o ? o < 0 : t >= 0) ? 0 : u.length - 1];
    return W.safari && !o && l.width == 0 && (l = Array.prototype.find.call(u, (a) => a.width) || l), o ? Qa(l, o < 0) : l || null;
  }
  h(Ov, "textCoords");
  var Zs =
      ((_r25 = class r extends Ee {
        static create(e, t, i) {
          return new r(e, t, i);
        }
        split(e) {
          var t = r.create(this.widget, this.length - e, this.side);
          return (this.length -= e), t;
        }
        sync(e) {
          (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), (this.dom.contentEditable = "false"));
        }
        getSide() {
          return this.side;
        }
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
        }
        become(e) {
          return e instanceof r && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), (this.length = e.length), !0) : !1;
        }
        ignoreMutation() {
          return !0;
        }
        ignoreEvent(e) {
          return this.widget.ignoreEvent(e);
        }
        get overrideDOMText() {
          if (this.length == 0) return fe.empty;
          var e = this;
          for (; e.parent; ) e = e.parent;
          var t = e.view,
            i = t && t.state.doc,
            n = this.posAtStart;
          return i ? i.slice(n, n + this.length) : fe.empty;
        }
        domAtPos(e) {
          return (this.length ? e == 0 : this.side > 0) ? je.before(this.dom) : je.after(this.dom, e == this.length);
        }
        domBoundsAround() {
          return null;
        }
        coordsAt(e, t) {
          var i = this.widget.coordsAt(this.dom, e, t);
          if (i) return i;
          var n = this.dom.getClientRects(),
            s = null;
          if (!n.length) return null;
          var o = this.side ? this.side < 0 : e > 0;
          for (var u = o ? n.length - 1 : 0; (s = n[u]), !(e > 0 ? u == 0 : u == n.length - 1 || s.top < s.bottom); u += o ? -1 : 1);
          return Qa(s, !o);
        }
        get isEditable() {
          return !1;
        }
        get isWidget() {
          return !0;
        }
        get isHidden() {
          return this.widget.isHidden;
        }
        destroy() {
          super.destroy(), this.dom && this.widget.destroy(this.dom);
        }
        constructor(e, t, i) {
          super(), (this.widget = e), (this.length = t), (this.side = i), (this.prevWidget = null);
        }
      }),
      (() => {
        h(_r25, "WidgetView");
      })(),
      _r25),
    ln =
      ((_r26 = class r extends Ee {
        get length() {
          return 0;
        }
        merge() {
          return !1;
        }
        become(e) {
          return e instanceof r && e.side == this.side;
        }
        split() {
          return new r(this.side);
        }
        sync() {
          if (!this.dom) {
            var e = document.createElement("img");
            (e.className = "cm-widgetBuffer"), e.setAttribute("aria-hidden", "true"), this.setDOM(e);
          }
        }
        getSide() {
          return this.side;
        }
        domAtPos(e) {
          return this.side > 0 ? je.before(this.dom) : je.after(this.dom);
        }
        localPosFromDOM() {
          return 0;
        }
        domBoundsAround() {
          return null;
        }
        coordsAt(e) {
          return this.dom.getBoundingClientRect();
        }
        get overrideDOMText() {
          return fe.empty;
        }
        get isHidden() {
          return !0;
        }
        constructor(e) {
          super(), (this.side = e);
        }
      }),
      (() => {
        h(_r26, "WidgetBufferView");
      })(),
      _r26);
  jt.prototype.children = Zs.prototype.children = ln.prototype.children = _a;
  function Ig(r, e) {
    var t = r.dom,
      i = r.children,
      n = 0;
    for (var s = 0; n < i.length; n++) {
      var o = i[n],
        u = s + o.length;
      if (!(u == s && o.getSide() <= 0)) {
        if (e > s && e < u && o.dom.parentNode == t) return o.domAtPos(e - s);
        if (e <= s) break;
        s = u;
      }
    }
    for (var s1 = n; s1 > 0; s1--) {
      var o1 = i[s1 - 1];
      if (o1.dom.parentNode == t) return o1.domAtPos(o1.length);
    }
    for (var s2 = n; s2 < i.length; s2++) {
      var o2 = i[s2];
      if (o2.dom.parentNode == t) return o2.domAtPos(0);
    }
    return new je(t, 0);
  }
  h(Ig, "inlineDOMAtPos");
  function $g(r, e, t) {
    var i,
      n = r.children;
    t > 0 && e instanceof ni && n.length && (i = n[n.length - 1]) instanceof ni && i.mark.eq(e.mark) ? $g(i, e.children[0], t - 1) : (n.push(e), e.setParent(r)), (r.length += e.length);
  }
  h($g, "joinInlineInto");
  function qg(r, e, t) {
    var i = null,
      n = -1,
      s = null,
      o = -1;
    function u(a, c) {
      for (var f = 0, d = 0; f < a.children.length && d <= c; f++) {
        var p = a.children[f],
          m = d + p.length;
        m >= c && (p.children.length ? u(p, c - d) : (!s || (s.isHidden && t > 0)) && (m > c || (d == m && p.getSide() > 0)) ? ((s = p), (o = c - d)) : (d < c || (d == m && p.getSide() < 0 && !p.isHidden)) && ((i = p), (n = c - d))), (d = m);
      }
    }
    h(u, "scan"), u(r, e);
    var l = (t < 0 ? i : s) || i || s;
    return l ? l.coordsAt(Math.max(0, l == i ? n : o), t) : Tv(r);
  }
  h(qg, "coordsInChildren");
  function Tv(r) {
    var e = r.dom.lastChild;
    if (!e) return r.dom.getBoundingClientRect();
    var t = un(e);
    return t[t.length - 1] || null;
  }
  h(Tv, "fallbackRect");
  function Zl(r, e) {
    for (var t in r) t == "class" && e.class ? (e.class += " " + r.class) : t == "style" && e.style ? (e.style += ";" + r.style) : (e[t] = r[t]);
    return e;
  }
  h(Zl, "combineAttrs");
  var rg = Object.create(null);
  function Ua(r, e, t) {
    if (r == e) return !0;
    r || (r = rg), e || (e = rg);
    var i = Object.keys(r),
      n = Object.keys(e);
    if (i.length - (t && i.indexOf(t) > -1 ? 1 : 0) != n.length - (t && n.indexOf(t) > -1 ? 1 : 0)) return !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        if (s != t && (n.indexOf(s) == -1 || r[s] !== e[s])) return !1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return !0;
  }
  h(Ua, "attrsEq");
  function ea(r, e, t) {
    var i = null;
    if (e) for (var n in e) (t && n in t) || r.removeAttribute((i = n));
    if (t) for (var n1 in t) (e && e[n1] == t[n1]) || r.setAttribute((i = n1), t[n1]);
    return !!i;
  }
  h(ea, "updateAttrs");
  function Rv(r) {
    var e = Object.create(null);
    for (var t = 0; t < r.attributes.length; t++) {
      var i = r.attributes[t];
      e[i.name] = i.value;
    }
    return e;
  }
  h(Rv, "getAttrs");
  var si =
      ((_class38 = class _class {
        eq(e) {
          return !1;
        }
        updateDOM(e, t) {
          return !1;
        }
        compare(e) {
          return this == e || (this.constructor == e.constructor && this.eq(e));
        }
        get estimatedHeight() {
          return -1;
        }
        get lineBreaks() {
          return 0;
        }
        ignoreEvent(e) {
          return !0;
        }
        coordsAt(e, t, i) {
          return null;
        }
        get isHidden() {
          return !1;
        }
        destroy(e) {}
      }),
      (() => {
        h(_class38, "WidgetType");
      })(),
      _class38),
    ke = (function (r) {
      return (r[(r.Text = 0)] = "Text"), (r[(r.WidgetBefore = 1)] = "WidgetBefore"), (r[(r.WidgetAfter = 2)] = "WidgetAfter"), (r[(r.WidgetRange = 3)] = "WidgetRange"), r;
    })(ke || (ke = {})),
    ge =
      ((_class39 = class _class extends Wt {
        get heightRelevant() {
          return !1;
        }
        static mark(e) {
          return new an(e);
        }
        static widget(e) {
          var t = Math.max(-1e4, Math.min(1e4, e.side || 0)),
            i = !!e.block;
          return (t += i && !e.inlineOrder ? (t > 0 ? 3e8 : -4e8) : t > 0 ? 1e8 : -1e8), new oi(e, t, t, i, e.widget || null, !1);
        }
        static replace(e) {
          var t = !!e.block,
            i,
            n;
          if (e.isBlockGap) (i = -5e8), (n = 4e8);
          else {
            var _Vg = Vg(e, t),
              s = _Vg.start,
              o = _Vg.end;
            (i = (s ? (t ? -3e8 : -1) : 5e8) - 1), (n = (o ? (t ? 2e8 : 1) : -6e8) + 1);
          }
          return new oi(e, i, n, t, e.widget || null, !0);
        }
        static line(e) {
          return new hn(e);
        }
        static set(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return Be.of(e, t);
        }
        hasHeight() {
          return this.widget ? this.widget.estimatedHeight > -1 : !1;
        }
        constructor(e, t, i, n) {
          super(), (this.startSide = e), (this.endSide = t), (this.widget = i), (this.spec = n);
        }
      }),
      (() => {
        h(_class39, "Decoration");
      })(),
      _class39);
  ge.none = Be.empty;
  var an =
    ((_r27 = class r extends ge {
      eq(e) {
        var t, i;
        return this == e || (e instanceof r && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((i = e.attrs) === null || i === void 0 ? void 0 : i.class)) && Ua(this.attrs, e.attrs, "class"));
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (e >= t) throw new RangeError("Mark decorations may not be empty");
        return super.range(e, t);
      }
      constructor(e) {
        var _Vg = Vg(e),
          t = _Vg.start,
          i = _Vg.end;
        super(t ? -1 : 5e8, i ? 1 : -6e8, null, e), (this.tagName = e.tagName || "span"), (this.class = e.class || ""), (this.attrs = e.attributes || null);
      }
    }),
    (() => {
      h(_r27, "MarkDecoration");
    })(),
    _r27);
  an.prototype.point = !1;
  var hn =
    ((_r28 = class r extends ge {
      eq(e) {
        return e instanceof r && this.spec.class == e.spec.class && Ua(this.spec.attributes, e.spec.attributes);
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (t != e) throw new RangeError("Line decoration ranges must be zero-length");
        return super.range(e, t);
      }
      constructor(e) {
        super(-2e8, -2e8, null, e);
      }
    }),
    (() => {
      h(_r28, "LineDecoration");
    })(),
    _r28);
  hn.prototype.mapMode = We.TrackBefore;
  hn.prototype.point = !0;
  var oi =
    ((_r29 = class r extends ge {
      get type() {
        return this.startSide < this.endSide ? ke.WidgetRange : this.startSide <= 0 ? ke.WidgetBefore : ke.WidgetAfter;
      }
      get heightRelevant() {
        return this.block || (!!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0));
      }
      eq(e) {
        return e instanceof r && Nv(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
      }
      range(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        if (this.isReplace && (e > t || (e == t && this.startSide > 0 && this.endSide <= 0))) throw new RangeError("Invalid range for replacement decoration");
        if (!this.isReplace && t != e) throw new RangeError("Widget decorations can only have zero-length ranges");
        return super.range(e, t);
      }
      constructor(e, t, i, n, s, o) {
        super(t, i, s, e), (this.block = n), (this.isReplace = o), (this.mapMode = n ? (t <= 0 ? We.TrackBefore : We.TrackAfter) : We.TrackDel);
      }
    }),
    (() => {
      h(_r29, "PointDecoration");
    })(),
    _r29);
  oi.prototype.point = !0;
  function Vg(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    var t = r.inclusiveStart,
      i = r.inclusiveEnd;
    return t == null && (t = r.inclusive), i == null && (i = r.inclusive), { start: t !== null && t !== void 0 ? t : e, end: i !== null && i !== void 0 ? i : e };
  }
  h(Vg, "getInclusive");
  function Nv(r, e) {
    return r == e || !!(r && e && r.compare(e));
  }
  h(Nv, "widgetsEq");
  function ta(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    var n = t.length - 1;
    n >= 0 && t[n] + i >= r ? (t[n] = Math.max(t[n], e)) : t.push(r, e);
  }
  h(ta, "addRange");
  var Ze =
      ((_r30 = class r extends Ee {
        merge(e, t, i, n, s, o) {
          if (i) {
            if (!(i instanceof r)) return !1;
            this.dom || i.transferDOM(this);
          }
          return n && this.setDeco(i ? i.attrs : null), Ng(this, e, t, i ? i.children : [], s, o), !0;
        }
        split(e) {
          var t = new r();
          if (((t.breakAfter = this.breakAfter), this.length == 0)) return t;
          var _this_childPos = this.childPos(e),
            i = _this_childPos.i,
            n = _this_childPos.off;
          n && (t.append(this.children[i].split(n), 0), this.children[i].merge(n, this.children[i].length, null, !1, 0, 0), i++);
          for (var s = i; s < this.children.length; s++) t.append(this.children[s], 0);
          for (; i > 0 && this.children[i - 1].length == 0; ) this.children[--i].destroy();
          return (this.children.length = i), this.markDirty(), (this.length = e), t;
        }
        transferDOM(e) {
          this.dom && (this.markDirty(), e.setDOM(this.dom), (e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs), (this.prevAttrs = void 0), (this.dom = null));
        }
        setDeco(e) {
          Ua(this.attrs, e) || (this.dom && ((this.prevAttrs = this.attrs), this.markDirty()), (this.attrs = e));
        }
        append(e, t) {
          $g(this, e, t);
        }
        addLineDeco(e) {
          var t = e.spec.attributes,
            i = e.spec.class;
          t && (this.attrs = Zl(t, this.attrs || {})), i && (this.attrs = Zl({ class: i }, this.attrs || {}));
        }
        domAtPos(e) {
          return Ig(this, e);
        }
        reuseDOM(e) {
          e.nodeName == "DIV" && (this.setDOM(e), (this.flags |= 6));
        }
        sync(e, t) {
          var i;
          this.dom ? this.flags & 4 && (Og(this.dom), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)) : (this.setDOM(document.createElement("div")), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)),
            this.prevAttrs !== void 0 && (ea(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), (this.prevAttrs = void 0)),
            super.sync(e, t);
          var n = this.dom.lastChild;
          for (; n && Ee.get(n) instanceof ni; ) n = n.lastChild;
          if (!n || !this.length || (n.nodeName != "BR" && ((i = Ee.get(n)) === null || i === void 0 ? void 0 : i.isEditable) == !1 && (!W.ios || !this.children.some((s) => s instanceof jt)))) {
            var s = document.createElement("BR");
            (s.cmIgnore = !0), this.dom.appendChild(s);
          }
        }
        measureTextSize() {
          if (this.children.length == 0 || this.length > 20) return null;
          var e = 0,
            t;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (!(i instanceof jt) || /[^ -~]/.test(i.text)) return null;
              var n = un(i.dom);
              if (n.length != 1) return null;
              (e += n[0].width), (t = n[0].height);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return e ? { lineHeight: this.dom.getBoundingClientRect().height, charWidth: e / this.length, textHeight: t } : null;
        }
        coordsAt(e, t) {
          var i = qg(this, e, t);
          if (!this.children.length && i && this.parent) {
            var _this_parent_view_viewState = this.parent.view.viewState,
              n = _this_parent_view_viewState.heightOracle,
              s = i.bottom - i.top;
            if (Math.abs(s - n.lineHeight) < 2 && n.textHeight < s) {
              var o = (s - n.textHeight) / 2;
              return { top: i.top + o, bottom: i.bottom - o, left: i.left, right: i.left };
            }
          }
          return i;
        }
        become(e) {
          return !1;
        }
        get type() {
          return ke.Text;
        }
        static find(e, t) {
          for (var i = 0, n = 0; i < e.children.length; i++) {
            var s = e.children[i],
              o = n + s.length;
            if (o >= t) {
              if (s instanceof r) return s;
              if (o > t) break;
            }
            n = o + s.breakAfter;
          }
          return null;
        }
        constructor() {
          super(...arguments), (this.children = []), (this.length = 0), (this.prevAttrs = void 0), (this.attrs = null), (this.breakAfter = 0);
        }
      }),
      (() => {
        h(_r30, "LineView");
      })(),
      _r30),
    cn =
      ((_r31 = class r extends Ee {
        merge(e, t, i, n, s, o) {
          return i && (!(i instanceof r) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
        }
        domAtPos(e) {
          return e == 0 ? je.before(this.dom) : je.after(this.dom, e == this.length);
        }
        split(e) {
          var t = this.length - e;
          this.length = e;
          var i = new r(this.widget, t, this.type);
          return (i.breakAfter = this.breakAfter), i;
        }
        get children() {
          return _a;
        }
        sync(e) {
          (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), (this.dom.contentEditable = "false"));
        }
        get overrideDOMText() {
          return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : fe.empty;
        }
        domBoundsAround() {
          return null;
        }
        become(e) {
          return e instanceof r && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), (this.length = e.length), (this.type = e.type), (this.breakAfter = e.breakAfter), !0) : !1;
        }
        ignoreMutation() {
          return !0;
        }
        ignoreEvent(e) {
          return this.widget.ignoreEvent(e);
        }
        get isEditable() {
          return !1;
        }
        get isWidget() {
          return !0;
        }
        coordsAt(e, t) {
          return this.widget.coordsAt(this.dom, e, t);
        }
        destroy() {
          super.destroy(), this.dom && this.widget.destroy(this.dom);
        }
        constructor(e, t, i) {
          super(), (this.widget = e), (this.length = t), (this.type = i), (this.breakAfter = 0), (this.prevWidget = null);
        }
      }),
      (() => {
        h(_r31, "BlockWidgetView");
      })(),
      _r31),
    rn =
      ((_r32 = class r {
        posCovered() {
          if (this.content.length == 0) return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
          var e = this.content[this.content.length - 1];
          return !e.breakAfter && !(e instanceof cn && e.type == ke.WidgetBefore);
        }
        getLine() {
          return this.curLine || (this.content.push((this.curLine = new Ze())), (this.atCursorPos = !0)), this.curLine;
        }
        flushBuffer() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.bufferMarks;
          this.pendingBuffer && (this.curLine.append(Ls(new ln(-1), e), e.length), (this.pendingBuffer = 0));
        }
        addBlockWidget(e) {
          this.flushBuffer(), (this.curLine = null), this.content.push(e);
        }
        finish(e) {
          this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : (this.pendingBuffer = 0), this.posCovered() || this.getLine();
        }
        buildText(e, t, i) {
          for (; e > 0; ) {
            if (this.textOff == this.text.length) {
              var _this_cursor_next = this.cursor.next(this.skip),
                s = _this_cursor_next.value,
                o = _this_cursor_next.lineBreak,
                u = _this_cursor_next.done;
              if (((this.skip = 0), u)) throw new Error("Ran out of text content when drawing inline views");
              if (o) {
                this.posCovered() || this.getLine(), this.content.length ? (this.content[this.content.length - 1].breakAfter = 1) : (this.breakAtStart = 1), this.flushBuffer(), (this.curLine = null), (this.atCursorPos = !0), e--;
                continue;
              } else (this.text = s), (this.textOff = 0);
            }
            var n = Math.min(this.text.length - this.textOff, e, 512);
            this.flushBuffer(t.slice(t.length - i)), this.getLine().append(Ls(new jt(this.text.slice(this.textOff, this.textOff + n)), t), i), (this.atCursorPos = !0), (this.textOff += n), (e -= n), (i = 0);
          }
        }
        span(e, t, i, n) {
          this.buildText(t - e, i, n), (this.pos = t), this.openStart < 0 && (this.openStart = n);
        }
        point(e, t, i, n, s, o) {
          if (this.disallowBlockEffectsFor[o] && i instanceof oi) {
            if (i.block) throw new RangeError("Block decorations may not be specified via plugins");
            if (t > this.doc.lineAt(this.pos).to) throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
          }
          var u = t - e;
          if (i instanceof oi)
            if (i.block) {
              var l = i.type;
              l == ke.WidgetAfter && !this.posCovered() && this.getLine(), this.addBlockWidget(new cn(i.widget || new eo("div"), u, l));
            } else {
              var l1 = Zs.create(i.widget || new eo("span"), u, u ? 0 : i.startSide),
                a = this.atCursorPos && !l1.isEditable && s <= n.length && (e < t || i.startSide > 0),
                c = !l1.isEditable && (e < t || s > n.length || i.startSide <= 0),
                f = this.getLine();
              this.pendingBuffer == 2 && !a && !l1.isEditable && (this.pendingBuffer = 0), this.flushBuffer(n), a && (f.append(Ls(new ln(1), n), s), (s = n.length + Math.max(0, s - n.length))), f.append(Ls(l1, n), s), (this.atCursorPos = c), (this.pendingBuffer = c ? (e < t || s > n.length ? 1 : 2) : 0), this.pendingBuffer && (this.bufferMarks = n.slice());
            }
          else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(i);
          u && (this.textOff + u <= this.text.length ? (this.textOff += u) : ((this.skip += u - (this.text.length - this.textOff)), (this.text = ""), (this.textOff = 0)), (this.pos = t)), this.openStart < 0 && (this.openStart = s);
        }
        static build(e, t, i, n, s) {
          var o = new r(e, t, i, s);
          return (o.openEnd = Be.spans(n, t, i, o)), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
        }
        constructor(e, t, i, n) {
          (this.doc = e), (this.pos = t), (this.end = i), (this.disallowBlockEffectsFor = n), (this.content = []), (this.curLine = null), (this.breakAtStart = 0), (this.pendingBuffer = 0), (this.bufferMarks = []), (this.atCursorPos = !0), (this.openStart = -1), (this.openEnd = -1), (this.text = ""), (this.textOff = 0), (this.cursor = e.iter()), (this.skip = t);
        }
      }),
      (() => {
        h(_r32, "ContentBuilder");
      })(),
      _r32);
  function Ls(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        r = new ni(t, [r], r.length);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return r;
  }
  h(Ls, "wrapMarks");
  var eo =
      ((_class40 = class _class extends si {
        eq(e) {
          return e.tag == this.tag;
        }
        toDOM() {
          return document.createElement(this.tag);
        }
        updateDOM(e) {
          return e.nodeName.toLowerCase() == this.tag;
        }
        get isHidden() {
          return !0;
        }
        constructor(e) {
          super(), (this.tag = e);
        }
      }),
      (() => {
        h(_class40, "NullWidget");
      })(),
      _class40),
    Wg = j.define(),
    zg = j.define(),
    Hg = j.define(),
    jg = j.define(),
    ia = j.define(),
    Yg = j.define(),
    Jg = j.define(),
    Gg = j.define({ combine: (r) => r.some((e) => e) }),
    Xg = j.define({ combine: (r) => r.some((e) => e) }),
    to =
      ((_r33 = class r {
        map(e) {
          return e.empty ? this : new r(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin);
        }
        constructor(e, ref, ref1, ref2, ref3) {
          var t = ref === void 0 ? "nearest" : ref,
            i = ref1 === void 0 ? "nearest" : ref1,
            n = ref2 === void 0 ? 5 : ref2,
            s = ref3 === void 0 ? 5 : ref3;
          (this.range = e), (this.y = t), (this.x = i), (this.yMargin = n), (this.xMargin = s);
        }
      }),
      (() => {
        h(_r33, "ScrollTarget");
      })(),
      _r33),
    ng = de.define({ map: (r, e) => r.map(e) });
  function ft(r, e, t) {
    var i = r.facet(jg);
    i.length ? i[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
  }
  h(ft, "logException");
  var mo = j.define({ combine: (r) => (r.length ? r[0] : !0) }),
    Mv = 0,
    Kr = j.define(),
    Ye =
      ((_r34 = class r {
        static define(e, t) {
          var _ref = t || {},
            i = _ref.eventHandlers,
            n = _ref.provide,
            s = _ref.decorations;
          return new r(Mv++, e, i, (o) => {
            var u = [Kr.of(o)];
            return (
              s &&
                u.push(
                  fn.of((l) => {
                    var a = l.plugin(o);
                    return a ? s(a) : ge.none;
                  }),
                ),
              n && u.push(n(o)),
              u
            );
          });
        }
        static fromClass(e, t) {
          return r.define((i) => new e(i), t);
        }
        constructor(e, t, i, n) {
          (this.id = e), (this.create = t), (this.domEventHandlers = i), (this.extension = n(this));
        }
      }),
      (() => {
        h(_r34, "ViewPlugin");
      })(),
      _r34),
    nn =
      ((_class41 = class _class {
        update(e) {
          if (this.value) {
            if (this.mustUpdate) {
              var _$t = this.mustUpdate;
              if (((this.mustUpdate = null), this.value.update))
                try {
                  this.value.update(_$t);
                } catch (i) {
                  if ((ft(_$t.state, i, "CodeMirror plugin crashed"), this.value.destroy))
                    try {
                      this.value.destroy();
                    } catch (e) {}
                  this.deactivate();
                }
            }
          } else if (this.spec)
            try {
              this.value = this.spec.create(e);
            } catch (t) {
              ft(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
            }
          return this;
        }
        destroy(e) {
          var t;
          if (!((t = this.value) === null || t === void 0) && t.destroy)
            try {
              this.value.destroy();
            } catch (i) {
              ft(e.state, i, "CodeMirror plugin crashed");
            }
        }
        deactivate() {
          this.spec = this.value = null;
        }
        constructor(e) {
          (this.spec = e), (this.mustUpdate = null), (this.value = null);
        }
      }),
      (() => {
        h(_class41, "PluginInstance");
      })(),
      _class41),
    Kg = j.define(),
    La = j.define(),
    fn = j.define(),
    Oa = j.define(),
    Zg = j.define();
  function eD(r) {
    var e = 0,
      t = 0,
      i = 0,
      n = 0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.state.facet(Zg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var o = s(r);
        o && (o.left != null && (e = Math.max(e, o.left)), o.right != null && (t = Math.max(t, o.right)), o.top != null && (i = Math.max(i, o.top)), o.bottom != null && (n = Math.max(n, o.bottom)));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return { left: e, right: t, top: i, bottom: n };
  }
  h(eD, "getScrollMargins");
  var Zr = j.define(),
    _t =
      ((_r35 = class r {
        join(e) {
          return new r(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
        }
        addToSet(e) {
          var t = e.length,
            i = this;
          for (; t > 0; t--) {
            var n = e[t - 1];
            if (!(n.fromA > i.toA)) {
              if (n.toA < i.fromA) break;
              (i = i.join(n)), e.splice(t - 1, 1);
            }
          }
          return e.splice(t, 0, i), e;
        }
        static extendWithRanges(e, t) {
          if (t.length == 0) return e;
          var i = [];
          for (var n = 0, s = 0, o = 0, u = 0; ; n++) {
            var l = n == e.length ? null : e[n],
              a = o - u,
              c = l ? l.fromB : 1e9;
            for (; s < t.length && t[s] < c; ) {
              var f = t[s],
                d = t[s + 1],
                p = Math.max(u, f),
                m = Math.min(c, d);
              if ((p <= m && new r(p + a, m + a, p, m).addToSet(i), d > c)) break;
              s += 2;
            }
            if (!l) return i;
            new r(l.fromA, l.toA, l.fromB, l.toB).addToSet(i), (o = l.toA), (u = l.toB);
          }
        }
        constructor(e, t, i, n) {
          (this.fromA = e), (this.toA = t), (this.fromB = i), (this.toB = n);
        }
      }),
      (() => {
        h(_r35, "ChangedRange");
      })(),
      _r35),
    io =
      ((_r36 = class r {
        static create(e, t, i) {
          return new r(e, t, i);
        }
        get viewportChanged() {
          return (this.flags & 4) > 0;
        }
        get heightChanged() {
          return (this.flags & 2) > 0;
        }
        get geometryChanged() {
          return this.docChanged || (this.flags & 10) > 0;
        }
        get focusChanged() {
          return (this.flags & 1) > 0;
        }
        get docChanged() {
          return !this.changes.empty;
        }
        get selectionSet() {
          return this.transactions.some((e) => e.selection);
        }
        get empty() {
          return this.flags == 0 && this.transactions.length == 0;
        }
        constructor(e, t, i) {
          (this.view = e), (this.state = t), (this.transactions = i), (this.flags = 0), (this.startState = e.state), (this.changes = ze.empty(this.startState.doc.length));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              this.changes = this.changes.compose(s.changes);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var n = [];
          this.changes.iterChangedRanges((s, o, u, l) => n.push(new _t(s, o, u, l))), (this.changedRanges = n);
        }
      }),
      (() => {
        h(_r36, "ViewUpdate");
      })(),
      _r36),
    Se = (function (r) {
      return (r[(r.LTR = 0)] = "LTR"), (r[(r.RTL = 1)] = "RTL"), r;
    })(Se || (Se = {})),
    ra = Se.LTR,
    Pv = Se.RTL;
  function tD(r) {
    var e = [];
    for (var t = 0; t < r.length; t++) e.push(1 << +r[t]);
    return e;
  }
  h(tD, "dec");
  var Iv = tD("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),
    $v = tD("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),
    na = Object.create(null),
    wt = [];
  for (var _i = 0, _iter = ["()", "[]", "{}"]; _i < _iter.length; _i++) {
    var r1 = _iter[_i];
    var e = r1.charCodeAt(0),
      t = r1.charCodeAt(1);
    (na[e] = t), (na[t] = -e);
  }
  function qv(r) {
    return r <= 247 ? Iv[r] : 1424 <= r && r <= 1524 ? 2 : 1536 <= r && r <= 1785 ? $v[r - 1536] : 1774 <= r && r <= 2220 ? 4 : 8192 <= r && r <= 8203 ? 256 : 64336 <= r && r <= 65023 ? 4 : r == 8204 ? 256 : 1;
  }
  h(qv, "charType");
  var Vv = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/,
    ti =
      ((_class42 = class _class {
        get dir() {
          return this.level % 2 ? Pv : ra;
        }
        side(e, t) {
          return (this.dir == t) == e ? this.to : this.from;
        }
        static find(e, t, i, n) {
          var s = -1;
          for (var o = 0; o < e.length; o++) {
            var u = e[o];
            if (u.from <= t && u.to >= t) {
              if (u.level == i) return o;
              (s < 0 || (n != 0 ? (n < 0 ? u.from < t : u.to > t) : e[s].level > u.level)) && (s = o);
            }
          }
          if (s < 0) throw new RangeError("Index out of range");
          return s;
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.level = i);
        }
      }),
      (() => {
        h(_class42, "BidiSpan");
      })(),
      _class42),
    Ae = [];
  function Wv(r, e) {
    var t = r.length,
      i = e == ra ? 1 : 2,
      n = e == ra ? 2 : 1;
    if (!r || (i == 1 && !Vv.test(r))) return iD(t);
    for (var o = 0, u = i, l = i; o < t; o++) {
      var a = qv(r.charCodeAt(o));
      a == 512 ? (a = u) : a == 8 && l == 4 && (a = 16), (Ae[o] = a == 4 ? 2 : a), a & 7 && (l = a), (u = a);
    }
    for (var o1 = 0, u1 = i, l1 = i; o1 < t; o1++) {
      var a1 = Ae[o1];
      if (a1 == 128) o1 < t - 1 && u1 == Ae[o1 + 1] && u1 & 24 ? (a1 = Ae[o1] = u1) : (Ae[o1] = 256);
      else if (a1 == 64) {
        var c = o1 + 1;
        for (; c < t && Ae[c] == 64; ) c++;
        var f = (o1 && u1 == 8) || (c < t && Ae[c] == 8) ? (l1 == 1 ? 1 : 8) : 256;
        for (var d = o1; d < c; d++) Ae[d] = f;
        o1 = c - 1;
      } else a1 == 8 && l1 == 1 && (Ae[o1] = 1);
      (u1 = a1), a1 & 7 && (l1 = a1);
    }
    for (var o2 = 0, u2 = 0, l2 = 0, a2, c1, f1; o2 < t; o2++)
      if ((c1 = na[(a2 = r.charCodeAt(o2))]))
        if (c1 < 0) {
          for (var d1 = u2 - 3; d1 >= 0; d1 -= 3)
            if (wt[d1 + 1] == -c1) {
              var p = wt[d1 + 2],
                m = p & 2 ? i : p & 4 ? (p & 1 ? n : i) : 0;
              m && (Ae[o2] = Ae[wt[d1]] = m), (u2 = d1);
              break;
            }
        } else {
          if (wt.length == 189) break;
          (wt[u2++] = o2), (wt[u2++] = a2), (wt[u2++] = l2);
        }
      else if ((f1 = Ae[o2]) == 2 || f1 == 1) {
        var d2 = f1 == i;
        l2 = d2 ? 0 : 1;
        for (var p1 = u2 - 3; p1 >= 0; p1 -= 3) {
          var m1 = wt[p1 + 2];
          if (m1 & 2) break;
          if (d2) wt[p1 + 2] |= 2;
          else {
            if (m1 & 4) break;
            wt[p1 + 2] |= 4;
          }
        }
      }
    for (var o3 = 0; o3 < t; o3++)
      if (Ae[o3] == 256) {
        var u3 = o3 + 1;
        for (; u3 < t && Ae[u3] == 256; ) u3++;
        var l3 = (o3 ? Ae[o3 - 1] : i) == 1,
          a3 = (u3 < t ? Ae[u3] : i) == 1,
          c2 = l3 == a3 ? (l3 ? 1 : 2) : i;
        for (var f2 = o3; f2 < u3; f2++) Ae[f2] = c2;
        o3 = u3 - 1;
      }
    var s = [];
    if (i == 1)
      for (var o4 = 0; o4 < t; ) {
        var u4 = o4,
          l4 = Ae[o4++] != 1;
        for (; o4 < t && l4 == (Ae[o4] != 1); ) o4++;
        if (l4)
          for (var a4 = o4; a4 > u4; ) {
            var c3 = a4,
              f3 = Ae[--a4] != 2;
            for (; a4 > u4 && f3 == (Ae[a4 - 1] != 2); ) a4--;
            s.push(new ti(a4, c3, f3 ? 2 : 1));
          }
        else s.push(new ti(u4, o4, 0));
      }
    else
      for (var o5 = 0; o5 < t; ) {
        var u5 = o5,
          l5 = Ae[o5++] == 2;
        for (; o5 < t && l5 == (Ae[o5] == 2); ) o5++;
        s.push(new ti(u5, o5, l5 ? 1 : 2));
      }
    return s;
  }
  h(Wv, "computeOrder");
  function iD(r) {
    return [new ti(0, r, 0)];
  }
  h(iD, "trivialOrder");
  var rD = "";
  function zv(r, e, t, i, n) {
    var s;
    var o = i.head - r.from,
      u = -1;
    if (o == 0) {
      if (!n || !r.length) return null;
      e[0].level != t && ((o = e[0].side(!1, t)), (u = 0));
    } else if (o == r.length) {
      if (n) return null;
      var d = e[e.length - 1];
      d.level != t && ((o = d.side(!0, t)), (u = e.length - 1));
    }
    u < 0 && (u = ti.find(e, o, (s = i.bidiLevel) !== null && s !== void 0 ? s : -1, i.assoc));
    var l = e[u];
    o == l.side(n, t) && ((l = e[(u += n ? 1 : -1)]), (o = l.side(!n, t)));
    var a = n == (l.dir == t),
      c = lt(r.text, o, a);
    if (((rD = r.text.slice(Math.min(o, c), Math.max(o, c))), c != l.side(n, t))) return X.cursor(c + r.from, a ? -1 : 1, l.level);
    var f = u == (n ? e.length - 1 : 0) ? null : e[u + (n ? 1 : -1)];
    return !f && l.level != t ? X.cursor(n ? r.to : r.from, n ? -1 : 1, t) : f && f.level < l.level ? X.cursor(f.side(!n, t) + r.from, n ? 1 : -1, f.level) : X.cursor(c + r.from, n ? -1 : 1, l.level);
  }
  h(zv, "moveVisually");
  var ro =
    ((_class43 = class _class extends Ee {
      get length() {
        return this.view.state.doc.length;
      }
      update(e) {
        var t = e.changedRanges;
        this.minWidth > 0 &&
          t.length &&
          (t.every((param) => {
            var u = param.fromA,
              l = param.toA;
            return l < this.minWidthFrom || u > this.minWidthTo;
          })
            ? ((this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1)), (this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)))
            : (this.minWidth = this.minWidthFrom = this.minWidthTo = 0));
        var i = this.view.inputState.composing < 0 ? null : jv(this.view, e.changes);
        if (this.hasComposition) {
          this.markedForComposition.clear();
          var _this_hasComposition = this.hasComposition,
            u = _this_hasComposition.from,
            l = _this_hasComposition.to;
          t = new _t(u, l, e.changes.mapPos(u, -1), e.changes.mapPos(l, 1)).addToSet(t.slice());
        }
        (this.hasComposition = i ? { from: i.range.fromB, to: i.range.toB } : null), (W.ie || W.chrome) && !i && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
        var n = this.decorations,
          s = this.updateDeco(),
          o = Jv(n, s, e.changes);
        return (t = _t.extendWithRanges(t, o)), !(this.flags & 7) && t.length == 0 ? !1 : (this.updateInner(t, e.startState.doc.length, i), e.transactions.length && (this.lastUpdate = Date.now()), !0);
      }
      updateInner(e, t, i) {
        (this.view.viewState.mustMeasureContent = !0), this.updateChildren(e, t, i);
        var _this_view = this.view,
          n = _this_view.observer;
        n.ignore(() => {
          (this.dom.style.height = this.view.viewState.contentHeight + "px"), (this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "");
          var o = W.chrome || W.ios ? { node: n.selectionRange.focusNode, written: !1 } : void 0;
          this.sync(this.view, o), (this.flags &= -8), o && (o.written || n.selectionRange.focusNode != o.node) && (this.forceSelection = !0), (this.dom.style.height = "");
        }),
          this.markedForComposition.forEach((o) => (o.flags &= -9));
        var s = [];
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var o = _step.value;
              o instanceof cn && o.widget instanceof no && s.push(o.dom);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        n.updateGaps(s);
      }
      updateChildren(e, t, i) {
        var n = i ? i.range.addToSet(e.slice()) : e,
          s = this.childCursor(t);
        for (var o = n.length - 1; ; o--) {
          var u = o >= 0 ? n[o] : null;
          if (!u) break;
          var l = u.fromA,
            a = u.toA,
            c = u.fromB,
            f = u.toB,
            d = void 0,
            p = void 0,
            m = void 0,
            F = void 0;
          var ref;
          if (i && i.range.fromB < f && i.range.toB > c) {
            var v = rn.build(this.view.state.doc, c, i.range.fromB, this.decorations, this.dynamicDecorationMap),
              C = rn.build(this.view.state.doc, i.range.toB, f, this.decorations, this.dynamicDecorationMap);
            (p = v.breakAtStart), (m = v.openStart), (F = C.openEnd);
            var w = this.compositionView(i);
            C.breakAtStart ? (w.breakAfter = 1) : C.content.length && w.merge(w.length, w.length, C.content[0], !1, C.openStart, 0) && ((w.breakAfter = C.content[0].breakAfter), C.content.shift()), v.content.length && w.merge(0, 0, v.content[v.content.length - 1], !0, 0, v.openEnd) && v.content.pop(), (d = v.content.concat(w).concat(C.content));
          } else (ref = rn.build(this.view.state.doc, c, f, this.decorations, this.dynamicDecorationMap)), (d = ref.content), (p = ref.breakAtStart), (m = ref.openStart), (F = ref.openEnd), ref;
          var _s_findPos = s.findPos(a, 1),
            g = _s_findPos.i,
            D = _s_findPos.off,
            _s_findPos1 = s.findPos(l, -1),
            b = _s_findPos1.i,
            A = _s_findPos1.off;
          Rg(this, b, A, g, D, d, p, m, F);
        }
        i && this.fixCompositionDOM(i);
      }
      compositionView(e) {
        var t = new jt(e.text.nodeValue);
        t.flags |= 8;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.marks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step_value = _step.value,
              n = _step_value.deco;
            t = new ni(n, [t], t.length);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var i = new Ze();
        return i.append(t, 0), i;
      }
      fixCompositionDOM(e) {
        var t = h((s, o) => {
            (o.flags |= 8), this.markedForComposition.add(o);
            var u = Ee.get(s);
            u != o && (u && (u.dom = null), o.setDOM(s));
          }, "fix"),
          i = this.childPos(e.range.fromB, 1),
          n = this.children[i.i];
        t(e.line, n);
        for (var s = e.marks.length - 1; s >= -1; s--) (i = n.childPos(i.off, 1)), (n = n.children[i.i]), t(s >= 0 ? e.marks[s].node : e.text, n);
      }
      updateSelection() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
          t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
        var i = this.view.root.activeElement,
          n = i == this.dom,
          s = !n && $s(this.dom, this.view.observer.selectionRange) && !(i && this.dom.contains(i));
        if (!(n || t || s)) return;
        var o = this.forceSelection;
        this.forceSelection = !1;
        var u = this.view.state.selection.main,
          l = this.domAtPos(u.anchor),
          a = u.empty ? l : this.domAtPos(u.head);
        if (W.gecko && u.empty && !this.hasComposition && Hv(l)) {
          var f = document.createTextNode("");
          this.view.observer.ignore(() => l.node.insertBefore(f, l.node.childNodes[l.offset] || null)), (l = a = new je(f, 0)), (o = !0);
        }
        var c = this.view.observer.selectionRange;
        (o || !c.focusNode || !Ys(l.node, l.offset, c.anchorNode, c.anchorOffset) || !Ys(a.node, a.offset, c.focusNode, c.focusOffset)) &&
          (this.view.observer.ignore(() => {
            W.android && W.chrome && this.dom.contains(c.focusNode) && Gv(c.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
            var f = js(this.view.root);
            if (f)
              if (u.empty) {
                if (W.gecko) {
                  var d = Yv(l.node, l.offset);
                  if (d && d != 3) {
                    var p = sD(l.node, l.offset, d == 1 ? 1 : -1);
                    p && (l = new je(p, d == 1 ? 0 : p.nodeValue.length));
                  }
                }
                f.collapse(l.node, l.offset), u.bidiLevel != null && c.cursorBidiLevel != null && (c.cursorBidiLevel = u.bidiLevel);
              } else if (f.extend) {
                f.collapse(l.node, l.offset);
                try {
                  f.extend(a.node, a.offset);
                } catch (e) {}
              } else {
                var d1 = document.createRange();
                var ref;
                u.anchor > u.head && ((ref = [a, l]), (l = ref[0]), (a = ref[1]), ref), d1.setEnd(a.node, a.offset), d1.setStart(l.node, l.offset), f.removeAllRanges(), f.addRange(d1);
              }
            s && this.view.root.activeElement == this.dom && (this.dom.blur(), i && i.focus());
          }),
          this.view.observer.setSelectionRange(l, a)),
          (this.impreciseAnchor = l.precise ? null : new je(c.anchorNode, c.anchorOffset)),
          (this.impreciseHead = a.precise ? null : new je(c.focusNode, c.focusOffset));
      }
      enforceCursorAssoc() {
        if (this.hasComposition) return;
        var _this = this,
          e = _this.view,
          t = e.state.selection.main,
          i = js(e.root),
          _e_observer_selectionRange = e.observer.selectionRange,
          n = _e_observer_selectionRange.anchorNode,
          s = _e_observer_selectionRange.anchorOffset;
        if (!i || !t.empty || !t.assoc || !i.modify) return;
        var o = Ze.find(this, t.head);
        if (!o) return;
        var u = o.posAtStart;
        if (t.head == u || t.head == u + o.length) return;
        var l = this.coordsAt(t.head, -1),
          a = this.coordsAt(t.head, 1);
        if (!l || !a || l.bottom > a.top) return;
        var c = this.domAtPos(t.head + t.assoc);
        i.collapse(c.node, c.offset), i.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
        var f = e.observer.selectionRange;
        e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != t.from && i.collapse(n, s);
      }
      nearest(e) {
        for (var t = e; t; ) {
          var i = Ee.get(t);
          if (i && i.rootView == this) return i;
          t = t.parentNode;
        }
        return null;
      }
      posFromDOM(e, t) {
        var i = this.nearest(e);
        if (!i) throw new RangeError("Trying to find position for a DOM position outside of the document");
        return i.localPosFromDOM(e, t) + i.posAtStart;
      }
      domAtPos(e) {
        var _this_childCursor_findPos = this.childCursor().findPos(e, -1),
          t = _this_childCursor_findPos.i,
          i = _this_childCursor_findPos.off;
        for (; t < this.children.length - 1; ) {
          var n = this.children[t];
          if (i < n.length || n instanceof Ze) break;
          t++, (i = 0);
        }
        return this.children[t].domAtPos(i);
      }
      coordsAt(e, t) {
        for (var i = this.length, n = this.children.length - 1; ; n--) {
          var s = this.children[n],
            o = i - s.breakAfter - s.length;
          if (e > o || (e == o && s.type != ke.WidgetBefore && s.type != ke.WidgetAfter && (!n || t == 2 || this.children[n - 1].breakAfter || (this.children[n - 1].type == ke.WidgetBefore && t > -2)))) return s.coordsAt(e - o, t);
          i = o;
        }
      }
      coordsForChar(e) {
        var _this_childPos = this.childPos(e, 1),
          t = _this_childPos.i,
          i = _this_childPos.off,
          n = this.children[t];
        if (!(n instanceof Ze)) return null;
        for (; n.children.length; ) {
          var _n_childPos = n.childPos(i, 1),
            u = _n_childPos.i,
            l = _n_childPos.off;
          for (; ; u++) {
            if (u == n.children.length) return null;
            if ((n = n.children[u]).length) break;
          }
          i = l;
        }
        if (!(n instanceof jt)) return null;
        var s = lt(n.text, i);
        if (s == i) return null;
        var o = Bi(n.dom, i, s).getClientRects();
        return !o.length || o[0].top >= o[0].bottom ? null : o[0];
      }
      measureVisibleLineHeights(e) {
        var t = [],
          i = e.from,
          n = e.to,
          s = this.view.contentDOM.clientWidth,
          o = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1,
          u = -1,
          l = this.view.textDirection == Se.LTR;
        for (var a = 0, c = 0; c < this.children.length; c++) {
          var f = this.children[c],
            d = a + f.length;
          if (d > n) break;
          if (a >= i) {
            var p = f.dom.getBoundingClientRect();
            if ((t.push(p.height), o)) {
              var m = f.dom.lastChild,
                F = m ? un(m) : [];
              if (F.length) {
                var g = F[F.length - 1],
                  D = l ? g.right - p.left : p.right - g.left;
                D > u && ((u = D), (this.minWidth = s), (this.minWidthFrom = a), (this.minWidthTo = d));
              }
            }
          }
          a = d + f.breakAfter;
        }
        return t;
      }
      textDirectionAt(e) {
        var _this_childPos = this.childPos(e, 1),
          t = _this_childPos.i;
        return getComputedStyle(this.children[t].dom).direction == "rtl" ? Se.RTL : Se.LTR;
      }
      measureTextSize() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            if (s instanceof Ze) {
              var o = s.measureTextSize();
              if (o) return o;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var e = document.createElement("div"),
          t,
          i,
          n;
        return (
          (e.className = "cm-line"),
          (e.style.width = "99999px"),
          (e.style.position = "absolute"),
          (e.textContent = "abc def ghi jkl mno pqr stu"),
          this.view.observer.ignore(() => {
            this.dom.appendChild(e);
            var s = un(e.firstChild)[0];
            (t = e.getBoundingClientRect().height), (i = s ? s.width / 27 : 7), (n = s ? s.height : t), e.remove();
          }),
          { lineHeight: t, charWidth: i, textHeight: n }
        );
      }
      childCursor() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
        var t = this.children.length;
        return t && (e -= this.children[--t].length), new Gs(this.children, e, t);
      }
      computeBlockGapDeco() {
        var e = [],
          t = this.view.viewState;
        for (var i = 0, n = 0; ; n++) {
          var s = n == t.viewports.length ? null : t.viewports[n],
            o = s ? s.from - 1 : this.length;
          if (o > i) {
            var u = t.lineBlockAt(o).bottom - t.lineBlockAt(i).top;
            e.push(ge.replace({ widget: new no(u), block: !0, inclusive: !0, isBlockGap: !0 }).range(i, o));
          }
          if (!s) break;
          i = s.to + 1;
        }
        return ge.set(e);
      }
      updateDeco() {
        var e = this.view.state.facet(fn).map((t, i) => ((this.dynamicDecorationMap[i] = typeof t == "function") ? t(this.view) : t));
        for (var t = e.length; t < e.length + 3; t++) this.dynamicDecorationMap[t] = !1;
        return (this.decorations = [...e, this.computeBlockGapDeco(), this.view.viewState.lineGapDeco]);
      }
      scrollIntoView(e) {
        var t = e.range,
          i = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1),
          n;
        if (!i) return;
        !t.empty && (n = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (i = { left: Math.min(i.left, n.left), top: Math.min(i.top, n.top), right: Math.max(i.right, n.right), bottom: Math.max(i.bottom, n.bottom) });
        var s = eD(this.view),
          o = { left: i.left - s.left, top: i.top - s.top, right: i.right + s.right, bottom: i.bottom + s.bottom };
        wv(this.view.scrollDOM, o, t.head < t.anchor ? -1 : 1, e.x, e.y, e.xMargin, e.yMargin, this.view.textDirection == Se.LTR);
      }
      constructor(e) {
        super(),
          (this.view = e),
          (this.decorations = []),
          (this.dynamicDecorationMap = []),
          (this.hasComposition = null),
          (this.markedForComposition = new Set()),
          (this.minWidth = 0),
          (this.minWidthFrom = 0),
          (this.minWidthTo = 0),
          (this.impreciseAnchor = null),
          (this.impreciseHead = null),
          (this.forceSelection = !1),
          (this.lastUpdate = Date.now()),
          this.setDOM(e.contentDOM),
          (this.children = [new Ze()]),
          this.children[0].setParent(this),
          this.updateDeco(),
          this.updateInner([new _t(0, 0, 0, e.state.doc.length)], 0, null);
      }
    }),
    (() => {
      h(_class43, "DocView");
    })(),
    _class43);
  function Hv(r) {
    return r.node.nodeType == 1 && r.node.firstChild && (r.offset == 0 || r.node.childNodes[r.offset - 1].contentEditable == "false") && (r.offset == r.node.childNodes.length || r.node.childNodes[r.offset].contentEditable == "false");
  }
  h(Hv, "betweenUneditable");
  var no =
    ((_class44 = class _class extends si {
      toDOM() {
        var e = document.createElement("div");
        return this.updateDOM(e), e;
      }
      eq(e) {
        return e.height == this.height;
      }
      updateDOM(e) {
        return (e.style.height = this.height + "px"), !0;
      }
      get estimatedHeight() {
        return this.height;
      }
      constructor(e) {
        super(), (this.height = e);
      }
    }),
    (() => {
      h(_class44, "BlockGapWidget");
    })(),
    _class44);
  function nD(r) {
    var e = r.observer.selectionRange,
      t = e.focusNode && sD(e.focusNode, e.focusOffset, 0);
    if (!t) return null;
    var i = Ee.get(t),
      n,
      s;
    if (i instanceof jt) (n = i.posAtStart), (s = n + i.length);
    else
      e: for (var o = 0, u = t; ; ) {
        for (var a = u.previousSibling, c = void 0; a; a = a.previousSibling) {
          if ((c = Ee.get(a))) {
            n = s = c.posAtEnd + o;
            break e;
          }
          var f = new Xs([], r.state);
          if ((f.readNode(a), f.text.indexOf(cr) > -1)) return null;
          o += f.text.length;
        }
        if (((u = u.parentNode), !u)) return null;
        var l = Ee.get(u);
        if (l) {
          n = s = l.posAtStart + o;
          break;
        }
      }
    return { from: n, to: s, node: t };
  }
  h(nD, "findCompositionNode");
  function jv(r, e) {
    var t = nD(r);
    if (!t) return null;
    var i = t.from,
      n = t.to,
      s = t.node,
      o = e.mapPos(i, -1),
      u = e.mapPos(n, 1),
      l = s.nodeValue;
    if (/[\n\r]/.test(l)) return null;
    if (u - o != l.length) {
      var d = e.mapPos(i, 1),
        p = e.mapPos(n, -1);
      if (p - d == l.length) (o = d), (u = p);
      else if (r.state.doc.sliceString(u - l.length, u) == l) o = u - l.length;
      else if (r.state.doc.sliceString(o, o + l.length) == l) u = o + l.length;
      else return null;
    }
    var _r_state_selection = r.state.selection,
      a = _r_state_selection.main;
    if (r.state.doc.sliceString(o, u) != l || o > a.head || u < a.head) return null;
    var c = [],
      f = new _t(i, n, o, u);
    for (var d1 = s.parentNode; ; d1 = d1.parentNode) {
      var p1 = Ee.get(d1);
      if (p1 instanceof ni) c.push({ node: d1, deco: p1.mark });
      else {
        if (p1 instanceof Ze || (d1.nodeName == "DIV" && d1.parentNode == r.contentDOM)) return { range: f, text: s, marks: c, line: d1 };
        if (d1 != r.contentDOM) c.push({ node: d1, deco: new an({ inclusive: !0, attributes: Rv(d1), tagName: d1.tagName.toLowerCase() }) });
        else return null;
      }
    }
  }
  h(jv, "findCompositionRange");
  function sD(r, e, t) {
    if (t <= 0)
      for (var i = r, n = e; ; ) {
        if (i.nodeType == 3) return i;
        if (i.nodeType == 1 && n > 0) (i = i.childNodes[n - 1]), (n = ri(i));
        else break;
      }
    if (t >= 0)
      for (var i1 = r, n1 = e; ; ) {
        if (i1.nodeType == 3) return i1;
        if (i1.nodeType == 1 && n1 < i1.childNodes.length && t >= 0) (i1 = i1.childNodes[n1]), (n1 = 0);
        else break;
      }
    return null;
  }
  h(sD, "nearbyTextNode");
  function Yv(r, e) {
    return r.nodeType != 1 ? 0 : (e && r.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < r.childNodes.length && r.childNodes[e].contentEditable == "false" ? 2 : 0);
  }
  h(Yv, "nextToUneditable");
  var sa =
    ((_class45 = class _class {
      compareRange(e, t) {
        ta(e, t, this.changes);
      }
      comparePoint(e, t) {
        ta(e, t, this.changes);
      }
      constructor() {
        this.changes = [];
      }
    }),
    (() => {
      h(_class45, "DecorationComparator$1");
    })(),
    _class45);
  function Jv(r, e, t) {
    var i = new sa();
    return Be.compare(r, e, t, i), i.changes;
  }
  h(Jv, "findChangedDeco");
  function Gv(r, e) {
    for (var t = r; t && t != e; t = t.assignedSlot || t.parentNode) if (t.nodeType == 1 && t.contentEditable == "false") return !0;
    return !1;
  }
  h(Gv, "inUneditable");
  function Xv(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    var i = r.charCategorizer(e),
      n = r.doc.lineAt(e),
      s = e - n.from;
    if (n.length == 0) return X.cursor(e);
    s == 0 ? (t = 1) : s == n.length && (t = -1);
    var o = s,
      u = s;
    t < 0 ? (o = lt(n.text, s, !1)) : (u = lt(n.text, s));
    var l = i(n.text.slice(o, u));
    for (; o > 0; ) {
      var a = lt(n.text, o, !1);
      if (i(n.text.slice(a, o)) != l) break;
      o = a;
    }
    for (; u < n.length; ) {
      var a1 = lt(n.text, u);
      if (i(n.text.slice(u, a1)) != l) break;
      u = a1;
    }
    return X.range(o + n.from, u + n.from);
  }
  h(Xv, "groupAt");
  function Kv(r, e) {
    return e.left > r ? e.left - r : Math.max(0, r - e.right);
  }
  h(Kv, "getdx");
  function Zv(r, e) {
    return e.top > r ? e.top - r : Math.max(0, r - e.bottom);
  }
  h(Zv, "getdy");
  function Vl(r, e) {
    return r.top < e.bottom - 1 && r.bottom > e.top + 1;
  }
  h(Vl, "yOverlap");
  function sg(r, e) {
    return e < r.top ? { top: e, left: r.left, right: r.right, bottom: r.bottom } : r;
  }
  h(sg, "upTop");
  function og(r, e) {
    return e > r.bottom ? { top: r.top, left: r.left, right: r.right, bottom: e } : r;
  }
  h(og, "upBot");
  function oa(r, e, t) {
    var i,
      n,
      s,
      o,
      u = !1,
      l,
      a,
      c,
      f;
    for (var m = r.firstChild; m; m = m.nextSibling) {
      var F = un(m);
      for (var g = 0; g < F.length; g++) {
        var D = F[g];
        n && Vl(n, D) && (D = sg(og(D, n.bottom), n.top));
        var b = Kv(e, D),
          A = Zv(t, D);
        if (b == 0 && A == 0) return m.nodeType == 3 ? ug(m, e, t) : oa(m, e, t);
        if (!i || o > A || (o == A && s > b)) {
          (i = m), (n = D), (s = b), (o = A);
          var v = A ? (t < D.top ? -1 : 1) : b ? (e < D.left ? -1 : 1) : 0;
          u = !v || (v > 0 ? g < F.length - 1 : g > 0);
        }
        b == 0 ? (t > D.bottom && (!c || c.bottom < D.bottom) ? ((l = m), (c = D)) : t < D.top && (!f || f.top > D.top) && ((a = m), (f = D))) : c && Vl(c, D) ? (c = og(c, D.bottom)) : f && Vl(f, D) && (f = sg(f, D.top));
      }
    }
    if ((c && c.bottom >= t ? ((i = l), (n = c)) : f && f.top <= t && ((i = a), (n = f)), !i)) return { node: r, offset: 0 };
    var d = Math.max(n.left, Math.min(n.right, e));
    if (i.nodeType == 3) return ug(i, d, t);
    if (u && i.contentEditable != "false") return oa(i, d, t);
    var p = Array.prototype.indexOf.call(r.childNodes, i) + (e >= (n.left + n.right) / 2 ? 1 : 0);
    return { node: r, offset: p };
  }
  h(oa, "domPosAtCoords");
  function ug(r, e, t) {
    var i = r.nodeValue.length,
      n = -1,
      s = 1e9,
      o = 0;
    for (var u = 0; u < i; u++) {
      var l = Bi(r, u, u + 1).getClientRects();
      for (var a = 0; a < l.length; a++) {
        var c = l[a];
        if (c.top == c.bottom) continue;
        o || (o = e - c.left);
        var f = (c.top > t ? c.top - t : t - c.bottom) - 1;
        if (c.left - 1 <= e && c.right + 1 >= e && f < s) {
          var d = e >= (c.left + c.right) / 2,
            p = d;
          if (((W.chrome || W.gecko) && Bi(r, u).getBoundingClientRect().left == c.right && (p = !d), f <= 0)) return { node: r, offset: u + (p ? 1 : 0) };
          (n = u + (p ? 1 : 0)), (s = f);
        }
      }
    }
    return { node: r, offset: n > -1 ? n : o > 0 ? r.nodeValue.length : 0 };
  }
  h(ug, "domPosInText");
  function oD(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : -1;
    var n, s;
    var o = r.contentDOM.getBoundingClientRect(),
      u = o.top + r.viewState.paddingTop,
      l,
      _r_viewState = r.viewState,
      a = _r_viewState.docHeight,
      c = e.x,
      f = e.y,
      d = f - u;
    if (d < 0) return 0;
    if (d > a) return r.state.doc.length;
    for (var v = r.viewState.heightOracle.textHeight / 2, C = !1; (l = r.elementAtHeight(d)), l.type != ke.Text; )
      for (; (d = i > 0 ? l.bottom + v : l.top - v), !(d >= 0 && d <= a); ) {
        if (C) return t ? null : 0;
        (C = !0), (i = -i);
      }
    f = u + d;
    var p = l.from;
    if (p < r.viewport.from) return r.viewport.from == 0 ? 0 : t ? null : lg(r, o, l, c, f);
    if (p > r.viewport.to) return r.viewport.to == r.state.doc.length ? r.state.doc.length : t ? null : lg(r, o, l, c, f);
    var m = r.dom.ownerDocument,
      F = r.root.elementFromPoint ? r.root : m,
      g = F.elementFromPoint(c, f);
    g && !r.contentDOM.contains(g) && (g = null), g || ((c = Math.max(o.left + 1, Math.min(o.right - 1, c))), (g = F.elementFromPoint(c, f)), g && !r.contentDOM.contains(g) && (g = null));
    var D,
      b = -1;
    if (g && ((n = r.docView.nearest(g)) === null || n === void 0 ? void 0 : n.isEditable) != !1) {
      if (m.caretPositionFromPoint) {
        var v1 = m.caretPositionFromPoint(c, f);
        var ref;
        v1 && ((ref = v1), (D = ref.offsetNode), (b = ref.offset), ref);
      } else if (m.caretRangeFromPoint) {
        var v2 = m.caretRangeFromPoint(c, f);
        var ref1;
        v2 && ((ref1 = v2), (D = ref1.startContainer), (b = ref1.startOffset), ref1, (!r.contentDOM.contains(D) || (W.safari && ex(D, b, c)) || (W.chrome && tx(D, b, c))) && (D = void 0));
      }
    }
    if (!D || !r.docView.dom.contains(D)) {
      var v3 = Ze.find(r.docView, p);
      if (!v3) return d > l.top + l.height / 2 ? l.to : l.from;
      var ref2;
      (ref2 = oa(v3.dom, c, f)), (D = ref2.node), (b = ref2.offset), ref2;
    }
    var A = r.docView.nearest(D);
    if (!A) return null;
    if (A.isWidget && ((s = A.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {
      var v4 = A.dom.getBoundingClientRect();
      return e.y < v4.top || (e.y <= v4.bottom && e.x <= (v4.left + v4.right) / 2) ? A.posAtStart : A.posAtEnd;
    } else return A.localPosFromDOM(D, b) + A.posAtStart;
  }
  h(oD, "posAtCoords");
  function lg(r, e, t, i, n) {
    var s = Math.round((i - e.left) * r.defaultCharacterWidth);
    if (r.lineWrapping && t.height > r.defaultLineHeight * 1.5) {
      var u = r.viewState.heightOracle.textHeight,
        l = Math.floor((n - t.top - (r.defaultLineHeight - u) * 0.5) / u);
      s += l * r.viewState.heightOracle.lineLength;
    }
    var o = r.state.sliceDoc(t.from, t.to);
    return t.from + zm(o, s, r.state.tabSize);
  }
  h(lg, "posAtCoordsImprecise");
  function ex(r, e, t) {
    var i;
    if (r.nodeType != 3 || e != (i = r.nodeValue.length)) return !1;
    for (var n = r.nextSibling; n; n = n.nextSibling) if (n.nodeType != 1 || n.nodeName != "BR") return !1;
    return Bi(r, i - 1, i).getBoundingClientRect().left > t;
  }
  h(ex, "isSuspiciousSafariCaretResult");
  function tx(r, e, t) {
    if (e != 0) return !1;
    for (var n = r; ; ) {
      var s = n.parentNode;
      if (!s || s.nodeType != 1 || s.firstChild != n) return !1;
      if (s.classList.contains("cm-line")) break;
      n = s;
    }
    var i = r.nodeType == 1 ? r.getBoundingClientRect() : Bi(r, 0, Math.max(r.nodeValue.length, 1)).getBoundingClientRect();
    return t - i.left > 5;
  }
  h(tx, "isSuspiciousChromeCaretResult");
  function ua(r, e) {
    var t = r.lineBlockAt(e);
    if (Array.isArray(t.type)) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.type[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.to > e || (i.to == e && (i.to == t.to || i.type == ke.Text))) return i;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return t;
  }
  h(ua, "blockAt");
  function ix(r, e, t, i) {
    var n = ua(r, e.head),
      s = !i || n.type != ke.Text || !(r.lineWrapping || n.widgetLineBreaks) ? null : r.coordsAtPos(e.assoc < 0 && e.head > n.from ? e.head - 1 : e.head);
    if (s) {
      var o = r.dom.getBoundingClientRect(),
        u = r.textDirectionAt(n.from),
        l = r.posAtCoords({ x: t == (u == Se.LTR) ? o.right - 1 : o.left + 1, y: (s.top + s.bottom) / 2 });
      if (l != null) return X.cursor(l, t ? -1 : 1);
    }
    return X.cursor(t ? n.to : n.from, t ? -1 : 1);
  }
  h(ix, "moveToLineBoundary");
  function ag(r, e, t, i) {
    var n = r.state.doc.lineAt(e.head),
      s = r.bidiSpans(n),
      o = r.textDirectionAt(n.from);
    for (var u = e, l = null; ; ) {
      var a = zv(n, s, o, u, t),
        c = rD;
      if (!a) {
        if (n.number == (t ? r.state.doc.lines : 1)) return u;
        (c = "\n"), (n = r.state.doc.line(n.number + (t ? 1 : -1))), (s = r.bidiSpans(n)), (a = X.cursor(t ? n.from : n.to));
      }
      if (l) {
        if (!l(c)) return u;
      } else {
        if (!i) return a;
        l = i(c);
      }
      u = a;
    }
  }
  h(ag, "moveByChar");
  function rx(r, e, t) {
    var i = r.state.charCategorizer(e),
      n = i(t);
    return (s) => {
      var o = i(s);
      return n == Et.Space && (n = o), n == o;
    };
  }
  h(rx, "byGroup");
  function nx(r, e, t, i) {
    var n = e.head,
      s = t ? 1 : -1;
    if (n == (t ? r.state.doc.length : 0)) return X.cursor(n, e.assoc);
    var o = e.goalColumn,
      u,
      l = r.contentDOM.getBoundingClientRect(),
      a = r.coordsAtPos(n),
      c = r.documentTop;
    if (a) o == null && (o = a.left - l.left), (u = s < 0 ? a.top : a.bottom);
    else {
      var p = r.viewState.lineBlockAt(n);
      o == null && (o = Math.min(l.right - l.left, r.defaultCharacterWidth * (n - p.from))), (u = (s < 0 ? p.top : p.bottom) + c);
    }
    var f = l.left + o,
      d = i !== null && i !== void 0 ? i : r.viewState.heightOracle.textHeight >> 1;
    for (var p1 = 0; ; p1 += 10) {
      var m = u + (d + p1) * s,
        F = oD(r, { x: f, y: m }, !1, s);
      if (m < l.top || m > l.bottom || (s < 0 ? F < n : F > n)) return X.cursor(F, e.assoc, void 0, o);
    }
  }
  h(nx, "moveVertically");
  function qs(r, e, t) {
    for (;;) {
      var i = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          n.between(e - 1, e + 1, (s, o, u) => {
            if (e > s && e < o) {
              var l = i || t || (e - s < o - e ? -1 : 1);
              (e = l < 0 ? s : o), (i = l);
            }
          });
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if (!i) return e;
    }
  }
  h(qs, "skipAtomicRanges");
  function Wl(r, e, t) {
    var i = qs(
      r.state.facet(Oa).map((n) => n(r)),
      t.from,
      e.head > t.from ? -1 : 1,
    );
    return i == t.from ? t : X.cursor(i, i < t.from ? 1 : -1);
  }
  h(Wl, "skipAtoms");
  var la =
      ((_class46 = class _class {
        setSelectionOrigin(e) {
          (this.lastSelectionOrigin = e), (this.lastSelectionTime = Date.now());
        }
        ensureHandlers(e, t) {
          var i;
          var n;
          this.customHandlers = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              if ((n = (i = s.update(e).spec) === null || i === void 0 ? void 0 : i.domEventHandlers)) {
                var _this = this,
                  _loop = function (o) {
                    _this.registeredEvents.indexOf(o) < 0 &&
                      o != "scroll" &&
                      (_this.registeredEvents.push(o),
                      e.contentDOM.addEventListener(o, (u) => {
                        hg(e, u) && _this.runCustomHandlers(o, e, u) && u.preventDefault();
                      }));
                  };
                this.customHandlers.push({ plugin: s.value, handlers: n });
                for (var o in n) _loop(o);
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        runCustomHandlers(e, t, i) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.customHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              var s = n.handlers[e];
              if (s)
                try {
                  if (s.call(n.plugin, i, t) || i.defaultPrevented) return !0;
                } catch (o) {
                  ft(t.state, o);
                }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return !1;
        }
        runScrollHandlers(e, t) {
          (this.lastScrollTop = e.scrollDOM.scrollTop), (this.lastScrollLeft = e.scrollDOM.scrollLeft);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.customHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              var n = i.handlers.scroll;
              if (n)
                try {
                  n.call(i.plugin, t, e);
                } catch (s) {
                  ft(e.state, s);
                }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        keydown(e, t) {
          if (((this.lastKeyCode = t.keyCode), (this.lastKeyTime = Date.now()), t.keyCode == 9 && Date.now() < this.lastEscPress + 2e3)) return !0;
          if ((t.keyCode != 27 && lD.indexOf(t.keyCode) < 0 && (e.inputState.lastEscPress = 0), W.android && W.chrome && !t.synthetic && (t.keyCode == 13 || t.keyCode == 8))) return e.observer.delayAndroidKey(t.key, t.keyCode), !0;
          var i;
          return W.ios && !t.synthetic && !t.altKey && !t.metaKey && (((i = uD.find((n) => n.keyCode == t.keyCode)) && !t.ctrlKey) || (sx.indexOf(t.key) > -1 && t.ctrlKey && !t.shiftKey)) ? ((this.pendingIOSKey = i || t), setTimeout(() => this.flushIOSKey(e), 250), !0) : !1;
        }
        flushIOSKey(e) {
          var t = this.pendingIOSKey;
          return t ? ((this.pendingIOSKey = void 0), mr(e.contentDOM, t.key, t.keyCode)) : !1;
        }
        ignoreDuringComposition(e) {
          return /^key/.test(e.type) ? (this.composing > 0 ? !0 : W.safari && !W.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? ((this.compositionPendingKey = !1), !0) : !1) : !1;
        }
        mustFlushObserver(e) {
          return e.type == "keydown" && e.keyCode != 229;
        }
        startMouseSelection(e) {
          this.mouseSelection && this.mouseSelection.destroy(), (this.mouseSelection = e);
        }
        update(e) {
          this.mouseSelection && this.mouseSelection.update(e), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
        }
        destroy() {
          this.mouseSelection && this.mouseSelection.destroy();
        }
        constructor(e) {
          var _this = this,
            _loop = function (i) {
              var n = Ue[i];
              e.contentDOM.addEventListener(
                i,
                (s) => {
                  hg(e, s) && t(n, s);
                },
                ha[i],
              ),
                _this.registeredEvents.push(i);
            };
          (this.lastKeyCode = 0),
            (this.lastKeyTime = 0),
            (this.lastTouchTime = 0),
            (this.lastFocusTime = 0),
            (this.lastScrollTop = 0),
            (this.lastScrollLeft = 0),
            (this.chromeScrollHack = -1),
            (this.pendingIOSKey = void 0),
            (this.lastSelectionOrigin = null),
            (this.lastSelectionTime = 0),
            (this.lastEscPress = 0),
            (this.lastContextMenu = 0),
            (this.scrollHandlers = []),
            (this.registeredEvents = []),
            (this.customHandlers = []),
            (this.composing = -1),
            (this.compositionFirstChange = null),
            (this.compositionEndedAt = 0),
            (this.compositionPendingKey = !1),
            (this.compositionPendingChange = !1),
            (this.mouseSelection = null);
          var t = h((i, n) => {
            this.ignoreDuringComposition(n) || (n.type == "keydown" && this.keydown(e, n)) || (this.mustFlushObserver(n) && e.observer.forceFlush(), this.runCustomHandlers(n.type, e, n) ? n.preventDefault() : i(e, n));
          }, "handleEvent");
          for (var i in Ue) _loop(i);
          e.scrollDOM.addEventListener("mousedown", (i) => {
            if (i.target == e.scrollDOM && i.clientY > e.contentDOM.getBoundingClientRect().bottom && (t(Ue.mousedown, i), !i.defaultPrevented && i.button == 2)) {
              var n = e.contentDOM.style.minHeight;
              (e.contentDOM.style.minHeight = "100%"), setTimeout(() => (e.contentDOM.style.minHeight = n), 200);
            }
          }),
            e.scrollDOM.addEventListener("drop", (i) => {
              i.target == e.scrollDOM && i.clientY > e.contentDOM.getBoundingClientRect().bottom && t(Ue.drop, i);
            }),
            W.chrome &&
              W.chrome_version == 102 &&
              e.scrollDOM.addEventListener(
                "wheel",
                () => {
                  this.chromeScrollHack < 0 ? (e.contentDOM.style.pointerEvents = "none") : window.clearTimeout(this.chromeScrollHack),
                    (this.chromeScrollHack = setTimeout(() => {
                      (this.chromeScrollHack = -1), (e.contentDOM.style.pointerEvents = "");
                    }, 100));
                },
                { passive: !0 },
              ),
            (this.notifiedFocused = e.hasFocus),
            W.safari && e.contentDOM.addEventListener("input", () => null);
        }
      }),
      (() => {
        h(_class46, "InputState");
      })(),
      _class46),
    uD = [
      { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
      { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
      { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
      { key: "Delete", keyCode: 46, inputType: "deleteContentForward" },
    ],
    sx = "dthko",
    lD = [16, 17, 18, 20, 91, 92, 224, 225],
    Os = 6;
  function Ts(r) {
    return Math.max(0, r) * 0.7 + 8;
  }
  h(Ts, "dragScrollSpeed");
  function ox(r, e) {
    return Math.max(Math.abs(r.clientX - e.clientX), Math.abs(r.clientY - e.clientY));
  }
  h(ox, "dist");
  var aa =
    ((_class47 = class _class {
      start(e) {
        this.dragging === !1 && (e.preventDefault(), this.select(e));
      }
      move(e) {
        var t;
        if (e.buttons == 0) return this.destroy();
        if (this.dragging || (this.dragging == null && ox(this.startEvent, e) < 10)) return;
        this.select((this.lastEvent = e));
        var i = 0,
          n = 0,
          s = ((t = this.scrollParent) === null || t === void 0 ? void 0 : t.getBoundingClientRect()) || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight },
          o = eD(this.view);
        e.clientX - o.left <= s.left + Os ? (i = -Ts(s.left - e.clientX)) : e.clientX + o.right >= s.right - Os && (i = Ts(e.clientX - s.right)), e.clientY - o.top <= s.top + Os ? (n = -Ts(s.top - e.clientY)) : e.clientY + o.bottom >= s.bottom - Os && (n = Ts(e.clientY - s.bottom)), this.setScrollSpeed(i, n);
      }
      up(e) {
        this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
      }
      destroy() {
        this.setScrollSpeed(0, 0);
        var e = this.view.contentDOM.ownerDocument;
        e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), (this.view.inputState.mouseSelection = null);
      }
      setScrollSpeed(e, t) {
        (this.scrollSpeed = { x: e, y: t }), e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), (this.scrolling = -1));
      }
      scroll() {
        this.scrollParent ? ((this.scrollParent.scrollLeft += this.scrollSpeed.x), (this.scrollParent.scrollTop += this.scrollSpeed.y)) : this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y), this.dragging === !1 && this.select(this.lastEvent);
      }
      skipAtoms(e) {
        var t = null;
        for (var i = 0; i < e.ranges.length; i++) {
          var n = e.ranges[i],
            s = null;
          if (n.empty) {
            var o = qs(this.atoms, n.from, 0);
            o != n.from && (s = X.cursor(o, -1));
          } else {
            var o1 = qs(this.atoms, n.from, -1),
              u = qs(this.atoms, n.to, 1);
            (o1 != n.from || u != n.to) && (s = X.range(n.from == n.anchor ? o1 : u, n.from == n.head ? o1 : u));
          }
          s && (t || (t = e.ranges.slice()), (t[i] = s));
        }
        return t ? X.create(t, e.mainIndex) : e;
      }
      select(e) {
        var _this = this,
          t = _this.view,
          i = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
        (this.mustSelect || !i.eq(t.state.selection) || (i.main.assoc != t.state.selection.main.assoc && this.dragging === !1)) && this.view.dispatch({ selection: i, userEvent: "select.pointer" }), (this.mustSelect = !1);
      }
      update(e) {
        e.docChanged && this.dragging && (this.dragging = this.dragging.map(e.changes)), this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
      }
      constructor(e, t, i, n) {
        (this.view = e), (this.startEvent = t), (this.style = i), (this.mustSelect = n), (this.scrollSpeed = { x: 0, y: 0 }), (this.scrolling = -1), (this.lastEvent = t), (this.scrollParent = Qv(e.contentDOM)), (this.atoms = e.state.facet(Oa).map((o) => o(e)));
        var s = e.contentDOM.ownerDocument;
        s.addEventListener("mousemove", (this.move = this.move.bind(this))), s.addEventListener("mouseup", (this.up = this.up.bind(this))), (this.extend = t.shiftKey), (this.multiple = e.state.facet(Ce.allowMultipleSelections) && ux(e, t)), (this.dragging = ax(e, t) && fD(t) == 1 ? null : !1);
      }
    }),
    (() => {
      h(_class47, "MouseSelection");
    })(),
    _class47);
  function ux(r, e) {
    var t = r.state.facet(Wg);
    return t.length ? t[0](e) : W.mac ? e.metaKey : e.ctrlKey;
  }
  h(ux, "addsSelectionRange");
  function lx(r, e) {
    var t = r.state.facet(zg);
    return t.length ? t[0](e) : W.mac ? !e.altKey : !e.ctrlKey;
  }
  h(lx, "dragMovesSelection");
  function ax(r, e) {
    var _r_state_selection = r.state.selection,
      t = _r_state_selection.main;
    if (t.empty) return !1;
    var i = js(r.root);
    if (!i || i.rangeCount == 0) return !0;
    var n = i.getRangeAt(0).getClientRects();
    for (var s = 0; s < n.length; s++) {
      var o = n[s];
      if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY) return !0;
    }
    return !1;
  }
  h(ax, "isInPrimarySelection");
  function hg(r, e) {
    if (!e.bubbles) return !0;
    if (e.defaultPrevented) return !1;
    for (var t = e.target, i; t != r.contentDOM; t = t.parentNode) if (!t || t.nodeType == 11 || ((i = Ee.get(t)) && i.ignoreEvent(e))) return !1;
    return !0;
  }
  h(hg, "eventBelongsToEditor");
  var Ue = Object.create(null),
    ha = Object.create(null),
    aD = (W.ie && W.ie_version < 15) || (W.ios && W.webkit_version < 604);
  function hx(r) {
    var e = r.dom.parentNode;
    if (!e) return;
    var t = e.appendChild(document.createElement("textarea"));
    (t.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      t.focus(),
      setTimeout(() => {
        r.focus(), t.remove(), hD(r, t.value);
      }, 50);
  }
  h(hx, "capturePaste");
  function hD(r, e) {
    var t = r.state,
      i,
      n = 1,
      s = t.toText(e),
      o = s.lines == t.selection.ranges.length;
    if (ca != null && t.selection.ranges.every((l) => l.empty) && ca == s.toString()) {
      var l = -1;
      i = t.changeByRange((a) => {
        var c = t.doc.lineAt(a.from);
        if (c.from == l) return { range: a };
        l = c.from;
        var f = t.toText((o ? s.line(n++).text : e) + t.lineBreak);
        return { changes: { from: c.from, insert: f }, range: X.cursor(a.from + f.length) };
      });
    } else
      o
        ? (i = t.changeByRange((l) => {
            var a = s.line(n++);
            return { changes: { from: l.from, to: l.to, insert: a.text }, range: X.cursor(l.from + a.length) };
          }))
        : (i = t.replaceSelection(s));
    r.dispatch(i, { userEvent: "input.paste", scrollIntoView: !0 });
  }
  h(hD, "doPaste");
  Ue.keydown = (r, e) => {
    r.inputState.setSelectionOrigin("select"), e.keyCode == 27 && (r.inputState.lastEscPress = Date.now());
  };
  Ue.touchstart = (r, e) => {
    (r.inputState.lastTouchTime = Date.now()), r.inputState.setSelectionOrigin("select.pointer");
  };
  Ue.touchmove = (r) => {
    r.inputState.setSelectionOrigin("select.pointer");
  };
  ha.touchstart = ha.touchmove = { passive: !0 };
  Ue.mousedown = (r, e) => {
    if ((r.observer.flush(), r.inputState.lastTouchTime > Date.now() - 2e3)) return;
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.state.facet(Hg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        if (((t = i(r, e)), t)) break;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if ((!t && e.button == 0 && (t = dx(r, e)), t)) {
      var i1 = !r.hasFocus;
      r.inputState.startMouseSelection(new aa(r, e, t, i1)), i1 && r.observer.ignore(() => Lg(r.contentDOM)), r.inputState.mouseSelection && r.inputState.mouseSelection.start(e);
    }
  };
  function cg(r, e, t, i) {
    if (i == 1) return X.cursor(e, t);
    if (i == 2) return Xv(r.state, e, t);
    {
      var n = Ze.find(r.docView, e),
        s = r.state.doc.lineAt(n ? n.posAtEnd : e),
        o = n ? n.posAtStart : s.from,
        u = n ? n.posAtEnd : s.to;
      return u < r.state.doc.length && u == s.to && u++, X.range(o, u);
    }
  }
  h(cg, "rangeForClick");
  var cD = h((r, e) => r >= e.top && r <= e.bottom, "insideY"),
    fg = h((r, e, t) => cD(e, t) && r >= t.left && r <= t.right, "inside");
  function cx(r, e, t, i) {
    var n = Ze.find(r.docView, e);
    if (!n) return 1;
    var s = e - n.posAtStart;
    if (s == 0) return 1;
    if (s == n.length) return -1;
    var o = n.coordsAt(s, -1);
    if (o && fg(t, i, o)) return -1;
    var u = n.coordsAt(s, 1);
    return u && fg(t, i, u) ? 1 : o && cD(i, o) ? -1 : 1;
  }
  h(cx, "findPositionSide");
  function dg(r, e) {
    var t = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
    return { pos: t, bias: cx(r, t, e.clientX, e.clientY) };
  }
  h(dg, "queryPos");
  var fx = W.ie && W.ie_version <= 11,
    pg = null,
    mg = 0,
    gg = 0;
  function fD(r) {
    if (!fx) return r.detail;
    var e = pg,
      t = gg;
    return (pg = r), (gg = Date.now()), (mg = !e || (t > Date.now() - 400 && Math.abs(e.clientX - r.clientX) < 2 && Math.abs(e.clientY - r.clientY) < 2) ? (mg + 1) % 3 : 1);
  }
  h(fD, "getClickType");
  function dx(r, e) {
    var t = dg(r, e),
      i = fD(e),
      n = r.state.selection;
    return {
      update(s) {
        s.docChanged && ((t.pos = s.changes.mapPos(t.pos)), (n = n.map(s.changes)));
      },
      get(s, o, u) {
        var l = dg(r, s),
          a,
          c = cg(r, l.pos, l.bias, i);
        if (t.pos != l.pos && !o) {
          var f = cg(r, t.pos, t.bias, i),
            d = Math.min(f.from, c.from),
            p = Math.max(f.to, c.to);
          c = d < c.from ? X.range(d, p) : X.range(p, d);
        }
        return o ? n.replaceRange(n.main.extend(c.from, c.to)) : u && i == 1 && n.ranges.length > 1 && (a = px(n, l.pos)) ? a : u ? n.addRange(c) : X.create([c]);
      },
    };
  }
  h(dx, "basicMouseSelection");
  function px(r, e) {
    for (var t = 0; t < r.ranges.length; t++) {
      var _r_ranges_t = r.ranges[t],
        i = _r_ranges_t.from,
        n = _r_ranges_t.to;
      if (i <= e && n >= e) return X.create(r.ranges.slice(0, t).concat(r.ranges.slice(t + 1)), r.mainIndex == t ? 0 : r.mainIndex - (r.mainIndex > t ? 1 : 0));
    }
    return null;
  }
  h(px, "removeRangeAround");
  Ue.dragstart = (r, e) => {
    var _r_state = r.state,
      _r_state_selection = _r_state.selection,
      t = _r_state_selection.main,
      _r_inputState = r.inputState,
      i = _r_inputState.mouseSelection;
    i && (i.dragging = t), e.dataTransfer && (e.dataTransfer.setData("Text", r.state.sliceDoc(t.from, t.to)), (e.dataTransfer.effectAllowed = "copyMove"));
  };
  function Dg(r, e, t, i) {
    if (!t) return;
    var n = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
    e.preventDefault();
    var _r_inputState = r.inputState,
      s = _r_inputState.mouseSelection,
      o = i && s && s.dragging && lx(r, e) ? { from: s.dragging.from, to: s.dragging.to } : null,
      u = { from: n, insert: t },
      l = r.state.changes(o ? [o, u] : u);
    r.focus(), r.dispatch({ changes: l, selection: { anchor: l.mapPos(n, -1), head: l.mapPos(n, 1) }, userEvent: o ? "move.drop" : "input.drop" });
  }
  h(Dg, "dropText");
  Ue.drop = (r, e) => {
    if (!e.dataTransfer) return;
    if (r.state.readOnly) return e.preventDefault();
    var t = e.dataTransfer.files;
    if (t && t.length) {
      var _loop = function (o) {
        var u = new FileReader();
        (u.onerror = s),
          (u.onload = () => {
            /[\x00-\x08\x0e-\x1f]{2}/.test(u.result) || (i[o] = u.result), s();
          }),
          u.readAsText(t[o]);
      };
      e.preventDefault();
      var i = Array(t.length),
        n = 0,
        s = h(() => {
          ++n == t.length && Dg(r, e, i.filter((o) => o != null).join(r.state.lineBreak), !1);
        }, "finishFile");
      for (var o = 0; o < t.length; o++) _loop(o);
    } else Dg(r, e, e.dataTransfer.getData("Text"), !0);
  };
  Ue.paste = (r, e) => {
    if (r.state.readOnly) return e.preventDefault();
    r.observer.flush();
    var t = aD ? null : e.clipboardData;
    t ? (hD(r, t.getData("text/plain") || t.getData("text/uri-text")), e.preventDefault()) : hx(r);
  };
  function mx(r, e) {
    var t = r.dom.parentNode;
    if (!t) return;
    var i = t.appendChild(document.createElement("textarea"));
    (i.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      (i.value = e),
      i.focus(),
      (i.selectionEnd = e.length),
      (i.selectionStart = 0),
      setTimeout(() => {
        i.remove(), r.focus();
      }, 50);
  }
  h(mx, "captureCopy");
  function gx(r) {
    var e = [],
      t = [],
      i = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        n.empty || (e.push(r.sliceDoc(n.from, n.to)), t.push(n));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!e.length) {
      var n1 = -1;
      var _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        for (var _iterator1 = r.selection.ranges[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
          var _step_value = _step1.value,
            s = _step_value.from;
          var o = r.doc.lineAt(s);
          o.number > n1 && (e.push(o.text), t.push({ from: o.from, to: Math.min(r.doc.length, o.to + 1) })), (n1 = o.number);
        }
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
            _iterator1.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
      i = !0;
    }
    return { text: e.join(r.lineBreak), ranges: t, linewise: i };
  }
  h(gx, "copiedRange");
  var ca = null;
  Ue.copy = Ue.cut = (r, e) => {
    var _gx = gx(r.state),
      t = _gx.text,
      i = _gx.ranges,
      n = _gx.linewise;
    if (!t && !n) return;
    ca = n ? t : null;
    var s = aD ? null : e.clipboardData;
    s ? (e.preventDefault(), s.clearData(), s.setData("text/plain", t)) : mx(r, t), e.type == "cut" && !r.state.readOnly && r.dispatch({ changes: i, scrollIntoView: !0, userEvent: "delete.cut" });
  };
  var dD = at.define();
  function pD(r, e) {
    var t = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.facet(Jg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i(r, e);
        n && t.push(n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t ? r.update({ effects: t, annotations: dD.of(!0) }) : null;
  }
  h(pD, "focusChangeTransaction");
  function mD(r) {
    setTimeout(() => {
      var e = r.hasFocus;
      if (e != r.inputState.notifiedFocused) {
        var t = pD(r.state, e);
        t ? r.dispatch(t) : r.update([]);
      }
    }, 10);
  }
  h(mD, "updateForFocusChange");
  Ue.focus = (r) => {
    (r.inputState.lastFocusTime = Date.now()), !r.scrollDOM.scrollTop && (r.inputState.lastScrollTop || r.inputState.lastScrollLeft) && ((r.scrollDOM.scrollTop = r.inputState.lastScrollTop), (r.scrollDOM.scrollLeft = r.inputState.lastScrollLeft)), mD(r);
  };
  Ue.blur = (r) => {
    r.observer.clearSelectionRange(), mD(r);
  };
  Ue.compositionstart = Ue.compositionupdate = (r) => {
    r.inputState.compositionFirstChange == null && (r.inputState.compositionFirstChange = !0), r.inputState.composing < 0 && (r.inputState.composing = 0);
  };
  Ue.compositionend = (r) => {
    (r.inputState.composing = -1),
      (r.inputState.compositionEndedAt = Date.now()),
      (r.inputState.compositionPendingKey = !0),
      (r.inputState.compositionPendingChange = r.observer.pendingRecords().length > 0),
      (r.inputState.compositionFirstChange = null),
      W.chrome && W.android
        ? r.observer.flushSoon()
        : r.inputState.compositionPendingChange
        ? Promise.resolve().then(() => r.observer.flush())
        : setTimeout(() => {
            r.inputState.composing < 0 && r.docView.hasComposition && r.update([]);
          }, 50);
  };
  Ue.contextmenu = (r) => {
    r.inputState.lastContextMenu = Date.now();
  };
  Ue.beforeinput = (r, e) => {
    var t;
    var i;
    if (W.chrome && W.android && (i = uD.find((n) => n.inputType == e.inputType)) && (r.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
      var n = ((t = window.visualViewport) === null || t === void 0 ? void 0 : t.height) || 0;
      setTimeout(() => {
        var s;
        (((s = window.visualViewport) === null || s === void 0 ? void 0 : s.height) || 0) > n + 10 && r.hasFocus && (r.contentDOM.blur(), r.focus());
      }, 100);
    }
  };
  var Fg = ["pre-wrap", "normal", "pre-line", "break-spaces"],
    fa =
      ((_class48 = class _class {
        heightForGap(e, t) {
          var i = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
          return this.lineWrapping && (i += Math.max(0, Math.ceil((t - e - i * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * i;
        }
        heightForLine(e) {
          return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
        }
        setDoc(e) {
          return (this.doc = e), this;
        }
        mustRefreshForWrapping(e) {
          return Fg.indexOf(e) > -1 != this.lineWrapping;
        }
        mustRefreshForHeights(e) {
          var t = !1;
          for (var i = 0; i < e.length; i++) {
            var n = e[i];
            n < 0 ? i++ : this.heightSamples[Math.floor(n * 10)] || ((t = !0), (this.heightSamples[Math.floor(n * 10)] = !0));
          }
          return t;
        }
        refresh(e, t, i, n, s, o) {
          var u = Fg.indexOf(e) > -1,
            l = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != u;
          if (((this.lineWrapping = u), (this.lineHeight = t), (this.charWidth = i), (this.textHeight = n), (this.lineLength = s), l)) {
            this.heightSamples = {};
            for (var a = 0; a < o.length; a++) {
              var c = o[a];
              c < 0 ? a++ : (this.heightSamples[Math.floor(c * 10)] = !0);
            }
          }
          return l;
        }
        constructor(e) {
          (this.lineWrapping = e), (this.doc = fe.empty), (this.heightSamples = {}), (this.lineHeight = 14), (this.charWidth = 7), (this.textHeight = 14), (this.lineLength = 30), (this.heightChanged = !1);
        }
      }),
      (() => {
        h(_class48, "HeightOracle");
      })(),
      _class48),
    da =
      ((_class49 = class _class {
        get more() {
          return this.index < this.heights.length;
        }
        constructor(e, t) {
          (this.from = e), (this.heights = t), (this.index = 0);
        }
      }),
      (() => {
        h(_class49, "MeasuredHeights");
      })(),
      _class49),
    Qt =
      ((_r37 = class r {
        get type() {
          return typeof this._content == "number" ? ke.Text : Array.isArray(this._content) ? this._content : this._content.type;
        }
        get to() {
          return this.from + this.length;
        }
        get bottom() {
          return this.top + this.height;
        }
        get widget() {
          return this._content instanceof oi ? this._content.widget : null;
        }
        get widgetLineBreaks() {
          return typeof this._content == "number" ? this._content : 0;
        }
        join(e) {
          var t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
          return new r(this.from, this.length + e.length, this.top, this.height + e.height, t);
        }
        constructor(e, t, i, n, s) {
          (this.from = e), (this.length = t), (this.top = i), (this.height = n), (this._content = s);
        }
      }),
      (() => {
        h(_r37, "BlockInfo");
      })(),
      _r37),
    ye = (function (r) {
      return (r[(r.ByPos = 0)] = "ByPos"), (r[(r.ByHeight = 1)] = "ByHeight"), (r[(r.ByPosNoHeight = 2)] = "ByPosNoHeight"), r;
    })(ye || (ye = {})),
    Vs = 0.001,
    tt =
      ((_r38 = class r {
        get outdated() {
          return (this.flags & 2) > 0;
        }
        set outdated(e) {
          this.flags = (e ? 2 : 0) | (this.flags & -3);
        }
        setHeight(e, t) {
          this.height != t && (Math.abs(this.height - t) > Vs && (e.heightChanged = !0), (this.height = t));
        }
        replace(e, t, i) {
          return r.of(i);
        }
        decomposeLeft(e, t) {
          t.push(this);
        }
        decomposeRight(e, t) {
          t.push(this);
        }
        applyChanges(e, t, i, n) {
          var s = this,
            o = i.doc;
          for (var u = n.length - 1; u >= 0; u--) {
            var _n_u = n[u],
              l = _n_u.fromA,
              a = _n_u.toA,
              c = _n_u.fromB,
              f = _n_u.toB,
              d = s.lineAt(l, ye.ByPosNoHeight, i.setDoc(t), 0, 0),
              p = d.to >= a ? d : s.lineAt(a, ye.ByPosNoHeight, i, 0, 0);
            for (f += p.to - a, a = p.to; u > 0 && d.from <= n[u - 1].toA; ) (l = n[u - 1].fromA), (c = n[u - 1].fromB), u--, l < d.from && (d = s.lineAt(l, ye.ByPosNoHeight, i, 0, 0));
            (c += d.from - l), (l = d.from);
            var m = ma.build(i.setDoc(o), e, c, f);
            s = s.replace(l, a, m);
          }
          return s.updateHeight(i, 0);
        }
        static empty() {
          return new ct(0, 0);
        }
        static of(e) {
          if (e.length == 1) return e[0];
          var t = 0,
            i = e.length,
            n = 0,
            s = 0;
          for (;;)
            if (t == i)
              if (n > s * 2) {
                var u = e[t - 1];
                u.break ? e.splice(--t, 1, u.left, null, u.right) : e.splice(--t, 1, u.left, u.right), (i += 1 + u.break), (n -= u.size);
              } else if (s > n * 2) {
                var u1 = e[i];
                u1.break ? e.splice(i, 1, u1.left, null, u1.right) : e.splice(i, 1, u1.left, u1.right), (i += 2 + u1.break), (s -= u1.size);
              } else break;
            else if (n < s) {
              var u2 = e[t++];
              u2 && (n += u2.size);
            } else {
              var u3 = e[--i];
              u3 && (s += u3.size);
            }
          var o = 0;
          return e[t - 1] == null ? ((o = 1), t--) : e[t] == null && ((o = 1), i++), new pa(r.of(e.slice(0, t)), o, r.of(e.slice(i)));
        }
        constructor(e, t, ref) {
          var i = ref === void 0 ? 2 : ref;
          (this.length = e), (this.height = t), (this.flags = i);
        }
      }),
      (() => {
        h(_r38, "HeightMap");
      })(),
      _r38);
  tt.prototype.size = 1;
  var so =
      ((_class50 = class _class extends tt {
        blockAt(e, t, i, n) {
          return new Qt(n, this.length, i, this.height, this.deco || 0);
        }
        lineAt(e, t, i, n, s) {
          return this.blockAt(0, i, n, s);
        }
        forEachLine(e, t, i, n, s, o) {
          e <= s + this.length && t >= s && o(this.blockAt(0, i, n, s));
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return n && n.from <= t && n.more && this.setHeight(e, n.heights[n.index++]), (this.outdated = !1), this;
        }
        toString() {
          return "block(".concat(this.length, ")");
        }
        constructor(e, t, i) {
          super(e, t), (this.deco = i);
        }
      }),
      (() => {
        h(_class50, "HeightMapBlock");
      })(),
      _class50),
    ct =
      ((_r39 = class r extends so {
        blockAt(e, t, i, n) {
          return new Qt(n, this.length, i, this.height, this.breaks);
        }
        replace(e, t, i) {
          var n = i[0];
          return i.length == 1 && (n instanceof r || (n instanceof ii && n.flags & 4)) && Math.abs(this.length - n.length) < 10 ? (n instanceof ii ? (n = new r(n.length, this.height)) : (n.height = this.height), this.outdated || (n.outdated = !1), n) : tt.of(i);
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          return n && n.from <= t && n.more ? this.setHeight(e, n.heights[n.index++]) : (i || this.outdated) && this.setHeight(e, Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), (this.outdated = !1), this;
        }
        toString() {
          return "line("
            .concat(this.length)
            .concat(this.collapsed ? -this.collapsed : "")
            .concat(this.widgetHeight ? ":" + this.widgetHeight : "", ")");
        }
        constructor(e, t) {
          super(e, t, null), (this.collapsed = 0), (this.widgetHeight = 0), (this.breaks = 0);
        }
      }),
      (() => {
        h(_r39, "HeightMapText");
      })(),
      _r39),
    ii =
      ((_r40 = class r extends tt {
        heightMetrics(e, t) {
          var i = e.doc.lineAt(t).number,
            n = e.doc.lineAt(t + this.length).number,
            s = n - i + 1,
            o,
            u = 0;
          if (e.lineWrapping) {
            var l = Math.min(this.height, e.lineHeight * s);
            (o = l / s), this.length > s + 1 && (u = (this.height - l) / (this.length - s - 1));
          } else o = this.height / s;
          return { firstLine: i, lastLine: n, perLine: o, perChar: u };
        }
        blockAt(e, t, i, n) {
          var _this_heightMetrics = this.heightMetrics(t, n),
            s = _this_heightMetrics.firstLine,
            o = _this_heightMetrics.lastLine,
            u = _this_heightMetrics.perLine,
            l = _this_heightMetrics.perChar;
          if (t.lineWrapping) {
            var a = n + Math.round(Math.max(0, Math.min(1, (e - i) / this.height)) * this.length),
              c = t.doc.lineAt(a),
              f = u + c.length * l,
              d = Math.max(i, e - f / 2);
            return new Qt(c.from, c.length, d, f, 0);
          } else {
            var a1 = Math.max(0, Math.min(o - s, Math.floor((e - i) / u))),
              _t_doc_line = t.doc.line(s + a1),
              c1 = _t_doc_line.from,
              f1 = _t_doc_line.length;
            return new Qt(c1, f1, i + u * a1, u, 0);
          }
        }
        lineAt(e, t, i, n, s) {
          if (t == ye.ByHeight) return this.blockAt(e, i, n, s);
          if (t == ye.ByPosNoHeight) {
            var _i_doc_lineAt = i.doc.lineAt(e),
              p = _i_doc_lineAt.from,
              m = _i_doc_lineAt.to;
            return new Qt(p, m - p, 0, 0, 0);
          }
          var _this_heightMetrics = this.heightMetrics(i, s),
            o = _this_heightMetrics.firstLine,
            u = _this_heightMetrics.perLine,
            l = _this_heightMetrics.perChar,
            a = i.doc.lineAt(e),
            c = u + a.length * l,
            f = a.number - o,
            d = n + u * f + l * (a.from - s - f);
          return new Qt(a.from, a.length, Math.max(n, Math.min(d, n + this.height - c)), c, 0);
        }
        forEachLine(e, t, i, n, s, o) {
          (e = Math.max(e, s)), (t = Math.min(t, s + this.length));
          var _this_heightMetrics = this.heightMetrics(i, s),
            u = _this_heightMetrics.firstLine,
            l = _this_heightMetrics.perLine,
            a = _this_heightMetrics.perChar;
          for (var c = e, f = n; c <= t; ) {
            var d = i.doc.lineAt(c);
            if (c == e) {
              var m = d.number - u;
              f += l * m + a * (e - s - m);
            }
            var p = l + a * d.length;
            o(new Qt(d.from, d.length, f, p, 0)), (f += p), (c = d.to + 1);
          }
        }
        replace(e, t, i) {
          var n = this.length - t;
          if (n > 0) {
            var s = i[i.length - 1];
            s instanceof r ? (i[i.length - 1] = new r(s.length + n)) : i.push(null, new r(n - 1));
          }
          if (e > 0) {
            var s1 = i[0];
            s1 instanceof r ? (i[0] = new r(e + s1.length)) : i.unshift(new r(e - 1), null);
          }
          return tt.of(i);
        }
        decomposeLeft(e, t) {
          t.push(new r(e - 1), null);
        }
        decomposeRight(e, t) {
          t.push(null, new r(this.length - e - 1));
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          var s = t + this.length;
          if (n && n.from <= t + this.length && n.more) {
            var o = [],
              u = Math.max(t, n.from),
              l = -1;
            for (n.from > t && o.push(new r(n.from - t - 1).updateHeight(e, t)); u <= s && n.more; ) {
              var c = e.doc.lineAt(u).length;
              o.length && o.push(null);
              var f = n.heights[n.index++];
              l == -1 ? (l = f) : Math.abs(f - l) >= Vs && (l = -2);
              var d = new ct(c, f);
              (d.outdated = !1), o.push(d), (u += c + 1);
            }
            u <= s && o.push(null, new r(s - u).updateHeight(e, u));
            var a = tt.of(o);
            return (l < 0 || Math.abs(a.height - this.height) >= Vs || Math.abs(l - this.heightMetrics(e, t).perLine) >= Vs) && (e.heightChanged = !0), a;
          } else (i || this.outdated) && (this.setHeight(e, e.heightForGap(t, t + this.length)), (this.outdated = !1));
          return this;
        }
        toString() {
          return "gap(".concat(this.length, ")");
        }
        constructor(e) {
          super(e, 0);
        }
      }),
      (() => {
        h(_r40, "HeightMapGap");
      })(),
      _r40),
    pa =
      ((_class51 = class _class extends tt {
        get break() {
          return this.flags & 1;
        }
        blockAt(e, t, i, n) {
          var s = i + this.left.height;
          return e < s ? this.left.blockAt(e, t, i, n) : this.right.blockAt(e, t, s, n + this.left.length + this.break);
        }
        lineAt(e, t, i, n, s) {
          var o = n + this.left.height,
            u = s + this.left.length + this.break,
            l = t == ye.ByHeight ? e < o : e < u,
            a = l ? this.left.lineAt(e, t, i, n, s) : this.right.lineAt(e, t, i, o, u);
          if (this.break || (l ? a.to < u : a.from > u)) return a;
          var c = t == ye.ByPosNoHeight ? ye.ByPosNoHeight : ye.ByPos;
          return l ? a.join(this.right.lineAt(u, c, i, o, u)) : this.left.lineAt(u, c, i, n, s).join(a);
        }
        forEachLine(e, t, i, n, s, o) {
          var u = n + this.left.height,
            l = s + this.left.length + this.break;
          if (this.break) e < l && this.left.forEachLine(e, t, i, n, s, o), t >= l && this.right.forEachLine(e, t, i, u, l, o);
          else {
            var a = this.lineAt(l, ye.ByPos, i, n, s);
            e < a.from && this.left.forEachLine(e, a.from - 1, i, n, s, o), a.to >= e && a.from <= t && o(a), t > a.to && this.right.forEachLine(a.to + 1, t, i, u, l, o);
          }
        }
        replace(e, t, i) {
          var n = this.left.length + this.break;
          if (t < n) return this.balanced(this.left.replace(e, t, i), this.right);
          if (e > this.left.length) return this.balanced(this.left, this.right.replace(e - n, t - n, i));
          var s = [];
          e > 0 && this.decomposeLeft(e, s);
          var o = s.length;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u = _step.value;
              s.push(u);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if ((e > 0 && bg(s, o - 1), t < this.length)) {
            var u1 = s.length;
            this.decomposeRight(t, s), bg(s, u1);
          }
          return tt.of(s);
        }
        decomposeLeft(e, t) {
          var i = this.left.length;
          if (e <= i) return this.left.decomposeLeft(e, t);
          t.push(this.left), this.break && (i++, e >= i && t.push(null)), e > i && this.right.decomposeLeft(e - i, t);
        }
        decomposeRight(e, t) {
          var i = this.left.length,
            n = i + this.break;
          if (e >= n) return this.right.decomposeRight(e - n, t);
          e < i && this.left.decomposeRight(e, t), this.break && e < n && t.push(null), t.push(this.right);
        }
        balanced(e, t) {
          return e.size > 2 * t.size || t.size > 2 * e.size ? tt.of(this.break ? [e, null, t] : [e, t]) : ((this.left = e), (this.right = t), (this.height = e.height + t.height), (this.outdated = e.outdated || t.outdated), (this.size = e.size + t.size), (this.length = e.length + this.break + t.length), this);
        }
        updateHeight(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
            n = arguments.length > 3 ? arguments[3] : void 0;
          var _this = this,
            s = _this.left,
            o = _this.right,
            u = t + s.length + this.break,
            l = null;
          return n && n.from <= t + s.length && n.more ? (l = s = s.updateHeight(e, t, i, n)) : s.updateHeight(e, t, i), n && n.from <= u + o.length && n.more ? (l = o = o.updateHeight(e, u, i, n)) : o.updateHeight(e, u, i), l ? this.balanced(s, o) : ((this.height = this.left.height + this.right.height), (this.outdated = !1), this);
        }
        toString() {
          return this.left + (this.break ? " " : "-") + this.right;
        }
        constructor(e, t, i) {
          super(e.length + t + i.length, e.height + i.height, t | (e.outdated || i.outdated ? 2 : 0)), (this.left = e), (this.right = i), (this.size = e.size + i.size);
        }
      }),
      (() => {
        h(_class51, "HeightMapBranch");
      })(),
      _class51);
  function bg(r, e) {
    var t, i;
    r[e] == null && (t = r[e - 1]) instanceof ii && (i = r[e + 1]) instanceof ii && r.splice(e - 1, 3, new ii(t.length + 1 + i.length));
  }
  h(bg, "mergeGaps");
  var Dx = 5,
    ma =
      ((_r41 = class r {
        get isCovered() {
          return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
        }
        span(e, t) {
          if (this.lineStart > -1) {
            var i = Math.min(t, this.lineEnd),
              n = this.nodes[this.nodes.length - 1];
            n instanceof ct ? (n.length += i - this.pos) : (i > this.pos || !this.isCovered) && this.nodes.push(new ct(i - this.pos, -1)), (this.writtenTo = i), t > i && (this.nodes.push(null), this.writtenTo++, (this.lineStart = -1));
          }
          this.pos = t;
        }
        point(e, t, i) {
          if (e < t || i.heightRelevant) {
            var n = i.widget ? i.widget.estimatedHeight : 0,
              s = i.widget ? i.widget.lineBreaks : 0;
            n < 0 && (n = this.oracle.lineHeight);
            var o = t - e;
            i.block ? this.addBlock(new so(o, n, i)) : (o || s || n >= Dx) && this.addLineDeco(n, s, o);
          } else t > e && this.span(e, t);
          this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
        }
        enterLine() {
          if (this.lineStart > -1) return;
          var _this_oracle_doc_lineAt = this.oracle.doc.lineAt(this.pos),
            e = _this_oracle_doc_lineAt.from,
            t = _this_oracle_doc_lineAt.to;
          (this.lineStart = e), (this.lineEnd = t), this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new ct(this.pos - e, -1)), (this.writtenTo = this.pos);
        }
        blankContent(e, t) {
          var i = new ii(t - e);
          return this.oracle.doc.lineAt(e).to == t && (i.flags |= 4), i;
        }
        ensureLine() {
          this.enterLine();
          var e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
          if (e instanceof ct) return e;
          var t = new ct(0, -1);
          return this.nodes.push(t), t;
        }
        addBlock(e) {
          var t;
          this.enterLine();
          var i = (t = e.deco) === null || t === void 0 ? void 0 : t.type;
          i == ke.WidgetAfter && !this.isCovered && this.ensureLine(), this.nodes.push(e), (this.writtenTo = this.pos = this.pos + e.length), i != ke.WidgetBefore && (this.covering = e);
        }
        addLineDeco(e, t, i) {
          var n = this.ensureLine();
          (n.length += i), (n.collapsed += i), (n.widgetHeight = Math.max(n.widgetHeight, e)), (n.breaks += t), (this.writtenTo = this.pos = this.pos + i);
        }
        finish(e) {
          var t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
          this.lineStart > -1 && !(t instanceof ct) && !this.isCovered ? this.nodes.push(new ct(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
          var i = e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n instanceof ct && n.updateHeight(this.oracle, i), (i += n ? n.length : 1);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.nodes;
        }
        static build(e, t, i, n) {
          var s = new r(i, e);
          return Be.spans(t, i, n, s, 0), s.finish(i);
        }
        constructor(e, t) {
          (this.pos = e), (this.oracle = t), (this.nodes = []), (this.lineStart = -1), (this.lineEnd = -1), (this.covering = null), (this.writtenTo = e);
        }
      }),
      (() => {
        h(_r41, "NodeBuilder");
      })(),
      _r41);
  function Fx(r, e, t) {
    var i = new ga();
    return Be.compare(r, e, t, i, 0), i.changes;
  }
  h(Fx, "heightRelevantDecoChanges");
  var ga =
    ((_class52 = class _class {
      compareRange() {}
      comparePoint(e, t, i, n) {
        (e < t || (i && i.heightRelevant) || (n && n.heightRelevant)) && ta(e, t, this.changes, 5);
      }
      constructor() {
        this.changes = [];
      }
    }),
    (() => {
      h(_class52, "DecorationComparator");
    })(),
    _class52);
  function bx(r, e) {
    var t = r.getBoundingClientRect(),
      i = r.ownerDocument,
      n = i.defaultView || window,
      s = Math.max(0, t.left),
      o = Math.min(n.innerWidth, t.right),
      u = Math.max(0, t.top),
      l = Math.min(n.innerHeight, t.bottom);
    for (var a = r.parentNode; a && a != i.body; )
      if (a.nodeType == 1) {
        var c = a,
          f = window.getComputedStyle(c);
        if ((c.scrollHeight > c.clientHeight || c.scrollWidth > c.clientWidth) && f.overflow != "visible") {
          var d = c.getBoundingClientRect();
          (s = Math.max(s, d.left)), (o = Math.min(o, d.right)), (u = Math.max(u, d.top)), (l = a == r.parentNode ? d.bottom : Math.min(l, d.bottom));
        }
        a = f.position == "absolute" || f.position == "fixed" ? c.offsetParent : c.parentNode;
      } else if (a.nodeType == 11) a = a.host;
      else break;
    return { left: s - t.left, right: Math.max(s, o) - t.left, top: u - (t.top + e), bottom: Math.max(u, l) - (t.top + e) };
  }
  h(bx, "visiblePixelRange");
  function yx(r, e) {
    var t = r.getBoundingClientRect();
    return { left: 0, right: t.right - t.left, top: e, bottom: t.bottom - (t.top + e) };
  }
  h(yx, "fullPixelRange");
  var sn =
      ((_class53 = class _class {
        static same(e, t) {
          if (e.length != t.length) return !1;
          for (var i = 0; i < e.length; i++) {
            var n = e[i],
              s = t[i];
            if (n.from != s.from || n.to != s.to || n.size != s.size) return !1;
          }
          return !0;
        }
        draw(e) {
          return ge.replace({ widget: new Da(this.size, e) }).range(this.from, this.to);
        }
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.size = i);
        }
      }),
      (() => {
        h(_class53, "LineGap");
      })(),
      _class53),
    Da =
      ((_class54 = class _class extends si {
        eq(e) {
          return e.size == this.size && e.vertical == this.vertical;
        }
        toDOM() {
          var e = document.createElement("div");
          return this.vertical ? (e.style.height = this.size + "px") : ((e.style.width = this.size + "px"), (e.style.height = "2px"), (e.style.display = "inline-block")), e;
        }
        get estimatedHeight() {
          return this.vertical ? this.size : -1;
        }
        constructor(e, t) {
          super(), (this.size = e), (this.vertical = t);
        }
      }),
      (() => {
        h(_class54, "LineGapWidget");
      })(),
      _class54),
    oo =
      ((_class55 = class _class {
        updateForViewport() {
          var _this = this,
            _loop = function (i) {
              var n = i ? t.head : t.anchor;
              if (
                !e.some((param) => {
                  var s = param.from,
                    o = param.to;
                  return n >= s && n <= o;
                })
              ) {
                var _this_lineBlockAt = _this.lineBlockAt(n),
                  s = _this_lineBlockAt.from,
                  o = _this_lineBlockAt.to;
                e.push(new fr(s, o));
              }
            };
          var e = [this.viewport],
            _this_state_selection = this.state.selection,
            t = _this_state_selection.main;
          for (var i = 0; i <= 1; i++) _loop(i);
          (this.viewports = e.sort((i, n) => i.from - n.from)), (this.scaler = this.heightMap.height <= 7e6 ? yg : new Fa(this.heightOracle, this.heightMap, this.viewports));
        }
        updateViewportLines() {
          (this.viewportLines = []),
            this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
              this.viewportLines.push(this.scaler.scale == 1 ? e : en(e, this.scaler));
            });
        }
        update(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
          this.state = e.state;
          var i = this.stateDeco;
          this.stateDeco = this.state.facet(fn).filter((c) => typeof c != "function");
          var n = e.changedRanges,
            s = _t.extendWithRanges(n, Fx(i, this.stateDeco, e ? e.changes : ze.empty(this.state.doc.length))),
            o = this.heightMap.height,
            u = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
          (this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s)), this.heightMap.height != o && (e.flags |= 2), u ? ((this.scrollAnchorPos = e.changes.mapPos(u.from, -1)), (this.scrollAnchorHeight = u.top)) : ((this.scrollAnchorPos = -1), (this.scrollAnchorHeight = this.heightMap.height));
          var l = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
          ((t && (t.range.head < l.from || t.range.head > l.to)) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, t));
          var a = !e.changes.empty || e.flags & 2 || l.from != this.viewport.from || l.to != this.viewport.to;
          (this.viewport = l),
            this.updateForViewport(),
            a && this.updateViewportLines(),
            (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))),
            (e.flags |= this.computeVisibleRanges()),
            t && (this.scrollTarget = t),
            !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(Xg) && (this.mustEnforceCursorAssoc = !0);
        }
        measure(e) {
          var t = e.contentDOM,
            i = window.getComputedStyle(t),
            n = this.heightOracle,
            s = i.whiteSpace;
          this.defaultTextDirection = i.direction == "rtl" ? Se.RTL : Se.LTR;
          var o = this.heightOracle.mustRefreshForWrapping(s),
            u = t.getBoundingClientRect(),
            l = o || this.mustMeasureContent || this.contentDOMHeight != u.height;
          (this.contentDOMHeight = u.height), (this.mustMeasureContent = !1);
          var a = 0,
            c = 0,
            f = parseInt(i.paddingTop) || 0,
            d = parseInt(i.paddingBottom) || 0;
          (this.paddingTop != f || this.paddingBottom != d) && ((this.paddingTop = f), (this.paddingBottom = d), (a |= 10)),
            this.editorWidth != e.scrollDOM.clientWidth && (n.lineWrapping && (l = !0), (this.editorWidth = e.scrollDOM.clientWidth), (a |= 8)),
            this.scrollTop != e.scrollDOM.scrollTop && ((this.scrollAnchorHeight = -1), (this.scrollTop = e.scrollDOM.scrollTop)),
            (this.scrolledToBottom = Tg(e.scrollDOM));
          var p = (this.printing ? yx : bx)(t, this.paddingTop),
            m = p.top - this.pixelViewport.top,
            F = p.bottom - this.pixelViewport.bottom;
          this.pixelViewport = p;
          var g = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
          if ((g != this.inView && ((this.inView = g), g && (l = !0)), !this.inView && !this.scrollTarget)) return 0;
          var D = u.width;
          if (((this.contentDOMWidth != D || this.editorHeight != e.scrollDOM.clientHeight) && ((this.contentDOMWidth = u.width), (this.editorHeight = e.scrollDOM.clientHeight), (a |= 8)), l)) {
            var A = e.docView.measureVisibleLineHeights(this.viewport);
            if ((n.mustRefreshForHeights(A) && (o = !0), o || (n.lineWrapping && Math.abs(D - this.contentDOMWidth) > n.charWidth))) {
              var _e_docView_measureTextSize = e.docView.measureTextSize(),
                v = _e_docView_measureTextSize.lineHeight,
                C = _e_docView_measureTextSize.charWidth,
                w = _e_docView_measureTextSize.textHeight;
              (o = v > 0 && n.refresh(s, v, C, w, D / C, A)), o && ((e.docView.minWidth = 0), (a |= 8));
            }
            m > 0 && F > 0 ? (c = Math.max(m, F)) : m < 0 && F < 0 && (c = Math.min(m, F)), (n.heightChanged = !1);
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var v1 = _step.value;
                var C1 = v1.from == this.viewport.from ? A : e.docView.measureVisibleLineHeights(v1);
                this.heightMap = (o ? tt.empty().applyChanges(this.stateDeco, fe.empty, this.heightOracle, [new _t(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(n, 0, o, new da(v1.from, C1));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            n.heightChanged && (a |= 2);
          }
          var b = !this.viewportIsAppropriate(this.viewport, c) || (this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to));
          return (
            b && (this.viewport = this.getViewport(c, this.scrollTarget)),
            this.updateForViewport(),
            (a & 2 || b) && this.updateViewportLines(),
            (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)),
            (a |= this.computeVisibleRanges()),
            this.mustEnforceCursorAssoc && ((this.mustEnforceCursorAssoc = !1), e.docView.enforceCursorAssoc()),
            a
          );
        }
        get visibleTop() {
          return this.scaler.fromDOM(this.pixelViewport.top);
        }
        get visibleBottom() {
          return this.scaler.fromDOM(this.pixelViewport.bottom);
        }
        getViewport(e, t) {
          var i = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)),
            n = this.heightMap,
            s = this.heightOracle,
            _this = this,
            o = _this.visibleTop,
            u = _this.visibleBottom,
            l = new fr(n.lineAt(o - i * 1e3, ye.ByHeight, s, 0, 0).from, n.lineAt(u + (1 - i) * 1e3, ye.ByHeight, s, 0, 0).to);
          if (t) {
            var _t_range = t.range,
              a = _t_range.head;
            if (a < l.from || a > l.to) {
              var c = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top),
                f = n.lineAt(a, ye.ByPos, s, 0, 0),
                d;
              t.y == "center" ? (d = (f.top + f.bottom) / 2 - c / 2) : t.y == "start" || (t.y == "nearest" && a < l.from) ? (d = f.top) : (d = f.bottom - c), (l = new fr(n.lineAt(d - 1e3 / 2, ye.ByHeight, s, 0, 0).from, n.lineAt(d + c + 1e3 / 2, ye.ByHeight, s, 0, 0).to));
            }
          }
          return l;
        }
        mapViewport(e, t) {
          var i = t.mapPos(e.from, -1),
            n = t.mapPos(e.to, 1);
          return new fr(this.heightMap.lineAt(i, ye.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(n, ye.ByPos, this.heightOracle, 0, 0).to);
        }
        viewportIsAppropriate(param) {
          var e = param.from,
            t = param.to,
            i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (!this.inView) return !0;
          var _this_heightMap_lineAt = this.heightMap.lineAt(e, ye.ByPos, this.heightOracle, 0, 0),
            n = _this_heightMap_lineAt.top,
            _this_heightMap_lineAt1 = this.heightMap.lineAt(t, ye.ByPos, this.heightOracle, 0, 0),
            s = _this_heightMap_lineAt1.bottom,
            _this = this,
            o = _this.visibleTop,
            u = _this.visibleBottom;
          return (e == 0 || n <= o - Math.max(10, Math.min(-i, 250))) && (t == this.state.doc.length || s >= u + Math.max(10, Math.min(i, 250))) && n > o - 2 * 1e3 && s < u + 2 * 1e3;
        }
        mapLineGaps(e, t) {
          if (!e.length || t.empty) return e;
          var i = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              t.touchesRange(n.from, n.to) || i.push(new sn(t.mapPos(n.from), t.mapPos(n.to), n.size));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        ensureLineGaps(e, t) {
          var i = this.heightOracle.lineWrapping,
            n = i ? 1e4 : 2e3,
            s = n >> 1,
            o = n << 1;
          if (this.defaultTextDirection != Se.LTR && !i) return [];
          var u = [],
            l = h((a, c, f, d) => {
              if (c - a < s) return;
              var p = this.state.selection.main,
                m = [p.from];
              p.empty || m.push(p.to);
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = m[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var g = _step.value;
                  if (g > a && g < c) {
                    l(a, g - 10, f, d), l(g + 10, c, f, d);
                    return;
                  }
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              var F = Cx(e, (g) => g.from >= f.from && g.to <= f.to && Math.abs(g.from - a) < s && Math.abs(g.to - c) < s && !m.some((D) => g.from < D && g.to > D));
              if (!F) {
                if (c < f.to && t && i && t.visibleRanges.some((g) => g.from <= c && g.to >= c)) {
                  var g1 = t.moveToLineBoundary(X.cursor(c), !1, !0).head;
                  g1 > a && (c = g1);
                }
                F = new sn(a, c, this.gapSize(f, a, c, d));
              }
              u.push(F);
            }, "addGap");
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.viewportLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a = _step.value;
              if (a.length < o) continue;
              var c = Ex(a.from, a.to, this.stateDeco);
              if (c.total < o) continue;
              var f = this.scrollTarget ? this.scrollTarget.range.head : null,
                d = void 0,
                p = void 0;
              if (i) {
                var m = (n / this.heightOracle.lineLength) * this.heightOracle.lineHeight,
                  F = void 0,
                  g = void 0;
                if (f != null) {
                  var D = Ns(c, f),
                    b = ((this.visibleBottom - this.visibleTop) / 2 + m) / a.height;
                  (F = D - b), (g = D + b);
                } else (F = (this.visibleTop - a.top - m) / a.height), (g = (this.visibleBottom - a.top + m) / a.height);
                (d = Rs(c, F)), (p = Rs(c, g));
              } else {
                var m1 = c.total * this.heightOracle.charWidth,
                  F1 = n * this.heightOracle.charWidth,
                  g1 = void 0,
                  D1 = void 0;
                if (f != null) {
                  var b1 = Ns(c, f),
                    A = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + F1) / m1;
                  (g1 = b1 - A), (D1 = b1 + A);
                } else (g1 = (this.pixelViewport.left - F1) / m1), (D1 = (this.pixelViewport.right + F1) / m1);
                (d = Rs(c, g1)), (p = Rs(c, D1));
              }
              d > a.from && l(a.from, d, a, c), p < a.to && l(p, a.to, a, c);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return u;
        }
        gapSize(e, t, i, n) {
          var s = Ns(n, i) - Ns(n, t);
          return this.heightOracle.lineWrapping ? e.height * s : n.total * this.heightOracle.charWidth * s;
        }
        updateLineGaps(e) {
          sn.same(e, this.lineGaps) || ((this.lineGaps = e), (this.lineGapDeco = ge.set(e.map((t) => t.draw(this.heightOracle.lineWrapping)))));
        }
        computeVisibleRanges() {
          var e = this.stateDeco;
          this.lineGaps.length && (e = e.concat(this.lineGapDeco));
          var t = [];
          Be.spans(
            e,
            this.viewport.from,
            this.viewport.to,
            {
              span(n, s) {
                t.push({ from: n, to: s });
              },
              point() {},
            },
            20,
          );
          var i = t.length != this.visibleRanges.length || this.visibleRanges.some((n, s) => n.from != t[s].from || n.to != t[s].to);
          return (this.visibleRanges = t), i ? 4 : 0;
        }
        lineBlockAt(e) {
          return (e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e)) || en(this.heightMap.lineAt(e, ye.ByPos, this.heightOracle, 0, 0), this.scaler);
        }
        lineBlockAtHeight(e) {
          return en(this.heightMap.lineAt(this.scaler.fromDOM(e), ye.ByHeight, this.heightOracle, 0, 0), this.scaler);
        }
        scrollAnchorAt(e) {
          var t = this.lineBlockAtHeight(e + 8);
          return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
        }
        elementAtHeight(e) {
          return en(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
        }
        get docHeight() {
          return this.scaler.toDOM(this.heightMap.height);
        }
        get contentHeight() {
          return this.docHeight + this.paddingTop + this.paddingBottom;
        }
        constructor(e) {
          (this.state = e),
            (this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }),
            (this.inView = !0),
            (this.paddingTop = 0),
            (this.paddingBottom = 0),
            (this.contentDOMWidth = 0),
            (this.contentDOMHeight = 0),
            (this.editorHeight = 0),
            (this.editorWidth = 0),
            (this.scrollTop = 0),
            (this.scrolledToBottom = !0),
            (this.scrollAnchorPos = 0),
            (this.scrollAnchorHeight = -1),
            (this.scaler = yg),
            (this.scrollTarget = null),
            (this.printing = !1),
            (this.mustMeasureContent = !0),
            (this.defaultTextDirection = Se.LTR),
            (this.visibleRanges = []),
            (this.mustEnforceCursorAssoc = !1);
          var t = e.facet(La).some((i) => typeof i != "function" && i.class == "cm-lineWrapping");
          (this.heightOracle = new fa(t)),
            (this.stateDeco = e.facet(fn).filter((i) => typeof i != "function")),
            (this.heightMap = tt.empty().applyChanges(this.stateDeco, fe.empty, this.heightOracle.setDoc(e.doc), [new _t(0, 0, 0, e.doc.length)])),
            (this.viewport = this.getViewport(0, null)),
            this.updateViewportLines(),
            this.updateForViewport(),
            (this.lineGaps = this.ensureLineGaps([])),
            (this.lineGapDeco = ge.set(this.lineGaps.map((i) => i.draw(!1)))),
            this.computeVisibleRanges();
        }
      }),
      (() => {
        h(_class55, "ViewState");
      })(),
      _class55),
    fr =
      ((_class56 = class _class {
        constructor(e, t) {
          (this.from = e), (this.to = t);
        }
      }),
      (() => {
        h(_class56, "Viewport");
      })(),
      _class56);
  function Ex(r, e, t) {
    var i = [],
      n = r,
      s = 0;
    return (
      Be.spans(
        t,
        r,
        e,
        {
          span() {},
          point(o, u) {
            o > n && (i.push({ from: n, to: o }), (s += o - n)), (n = u);
          },
        },
        20,
      ),
      n < e && (i.push({ from: n, to: e }), (s += e - n)),
      { total: s, ranges: i }
    );
  }
  h(Ex, "lineStructure");
  function Rs(param, t) {
    var r = param.total,
      e = param.ranges;
    if (t <= 0) return e[0].from;
    if (t >= 1) return e[e.length - 1].to;
    var i = Math.floor(r * t);
    for (var n = 0; ; n++) {
      var _e_n = e[n],
        s = _e_n.from,
        o = _e_n.to,
        u = o - s;
      if (i <= u) return s + i;
      i -= u;
    }
  }
  h(Rs, "findPosition");
  function Ns(r, e) {
    var t = 0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _step.value,
          i = _step_value.from,
          n = _step_value.to;
        if (e <= n) {
          t += e - i;
          break;
        }
        t += n - i;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t / r.total;
  }
  h(Ns, "findFraction");
  function Cx(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (e(t)) return t;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(Cx, "find");
  var yg = {
      toDOM(r) {
        return r;
      },
      fromDOM(r) {
        return r;
      },
      scale: 1,
    },
    Fa =
      ((_class57 = class _class {
        toDOM(e) {
          for (var t = 0, i = 0, n = 0; ; t++) {
            var s = t < this.viewports.length ? this.viewports[t] : null;
            if (!s || e < s.top) return n + (e - i) * this.scale;
            if (e <= s.bottom) return s.domTop + (e - s.top);
            (i = s.bottom), (n = s.domBottom);
          }
        }
        fromDOM(e) {
          for (var t = 0, i = 0, n = 0; ; t++) {
            var s = t < this.viewports.length ? this.viewports[t] : null;
            if (!s || e < s.domTop) return i + (e - n) / this.scale;
            if (e <= s.domBottom) return s.top + (e - s.domTop);
            (i = s.bottom), (n = s.domBottom);
          }
        }
        constructor(e, t, i) {
          var n = 0,
            s = 0,
            o = 0;
          (this.viewports = i.map((param) => {
            var u = param.from,
              l = param.to;
            var a = t.lineAt(u, ye.ByPos, e, 0, 0).top,
              c = t.lineAt(l, ye.ByPos, e, 0, 0).bottom;
            return (n += c - a), { from: u, to: l, top: a, bottom: c, domTop: 0, domBottom: 0 };
          })),
            (this.scale = (7e6 - n) / (t.height - n));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u = _step.value;
              (u.domTop = o + (u.top - s) * this.scale), (o = u.domBottom = u.domTop + (u.bottom - u.top)), (s = u.bottom);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }),
      (() => {
        h(_class57, "BigScaler");
      })(),
      _class57);
  function en(r, e) {
    if (e.scale == 1) return r;
    var t = e.toDOM(r.top),
      i = e.toDOM(r.bottom);
    return new Qt(r.from, r.length, t, i - t, Array.isArray(r._content) ? r._content.map((n) => en(n, e)) : r._content);
  }
  h(en, "scaleBlock");
  var Ms = j.define({ combine: (r) => r.join(" ") }),
    ba = j.define({ combine: (r) => r.indexOf(!0) > -1 }),
    ya = ht.newName(),
    gD = ht.newName(),
    DD = ht.newName(),
    FD = { "&light": "." + gD, "&dark": "." + DD };
  function Ea(r, e, t) {
    return new ht(e, {
      finish(i) {
        return /&/.test(i)
          ? i.replace(/&\w*/, (n) => {
              if (n == "&") return r;
              if (!t || !t[n]) throw new RangeError("Unsupported selector: ".concat(n));
              return t[n];
            })
          : r + " " + i;
      },
    });
  }
  h(Ea, "buildTheme");
  var Bx = Ea(
      "." + ya,
      {
        "&": { position: "relative !important", boxSizing: "border-box", "&.cm-focused": { outline: "1px dotted #212121" }, display: "flex !important", flexDirection: "column" },
        ".cm-scroller": { display: "flex !important", alignItems: "flex-start !important", fontFamily: "monospace", lineHeight: 1.4, height: "100%", overflowX: "auto", position: "relative", zIndex: 0 },
        ".cm-content": { margin: 0, flexGrow: 2, flexShrink: 0, display: "block", whiteSpace: "pre", wordWrap: "normal", boxSizing: "border-box", padding: "4px 0", outline: "none", "&[contenteditable=true]": { WebkitUserModify: "read-write-plaintext-only" } },
        ".cm-lineWrapping": { whiteSpace_fallback: "pre-wrap", whiteSpace: "break-spaces", wordBreak: "break-word", overflowWrap: "anywhere", flexShrink: 1 },
        "&light .cm-content": { caretColor: "black" },
        "&dark .cm-content": { caretColor: "white" },
        ".cm-line": { display: "block", padding: "0 2px 0 6px" },
        ".cm-layer": { position: "absolute", left: 0, top: 0, contain: "size style", "& > *": { position: "absolute" } },
        "&light .cm-selectionBackground": { background: "#d9d9d9" },
        "&dark .cm-selectionBackground": { background: "#222" },
        "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": { background: "#d7d4f0" },
        "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": { background: "#233" },
        ".cm-cursorLayer": { pointerEvents: "none" },
        "&.cm-focused > .cm-scroller > .cm-cursorLayer": { animation: "steps(1) cm-blink 1.2s infinite" },
        "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        ".cm-cursor, .cm-dropCursor": { borderLeft: "1.2px solid black", marginLeft: "-0.6px", pointerEvents: "none" },
        ".cm-cursor": { display: "none" },
        "&dark .cm-cursor": { borderLeftColor: "#444" },
        ".cm-dropCursor": { position: "absolute" },
        "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": { display: "block" },
        "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
        "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
        "&light .cm-specialChar": { color: "red" },
        "&dark .cm-specialChar": { color: "#f78" },
        ".cm-gutters": { flexShrink: 0, display: "flex", height: "100%", boxSizing: "border-box", insetInlineStart: 0, zIndex: 200 },
        "&light .cm-gutters": { backgroundColor: "#f5f5f5", color: "#6c6c6c", borderRight: "1px solid #ddd" },
        "&dark .cm-gutters": { backgroundColor: "#333338", color: "#ccc" },
        ".cm-gutter": { display: "flex !important", flexDirection: "column", flexShrink: 0, boxSizing: "border-box", minHeight: "100%", overflow: "hidden" },
        ".cm-gutterElement": { boxSizing: "border-box" },
        ".cm-lineNumbers .cm-gutterElement": { padding: "0 3px 0 5px", minWidth: "20px", textAlign: "right", whiteSpace: "nowrap" },
        "&light .cm-activeLineGutter": { backgroundColor: "#e2f2ff" },
        "&dark .cm-activeLineGutter": { backgroundColor: "#222227" },
        ".cm-panels": { boxSizing: "border-box", position: "sticky", left: 0, right: 0 },
        "&light .cm-panels": { backgroundColor: "#f5f5f5", color: "black" },
        "&light .cm-panels-top": { borderBottom: "1px solid #ddd" },
        "&light .cm-panels-bottom": { borderTop: "1px solid #ddd" },
        "&dark .cm-panels": { backgroundColor: "#333338", color: "white" },
        ".cm-tab": { display: "inline-block", overflow: "hidden", verticalAlign: "bottom" },
        ".cm-widgetBuffer": { verticalAlign: "text-top", height: "1em", width: 0, display: "inline" },
        ".cm-placeholder": { color: "#888", display: "inline-block", verticalAlign: "top" },
        ".cm-highlightSpace:before": { content: "attr(data-display)", position: "absolute", pointerEvents: "none", color: "#888" },
        ".cm-highlightTab": { backgroundImage: 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')', backgroundSize: "auto 100%", backgroundPosition: "right 90%", backgroundRepeat: "no-repeat" },
        ".cm-trailingSpace": { backgroundColor: "#ff332255" },
        ".cm-button": { verticalAlign: "middle", color: "inherit", fontSize: "70%", padding: ".2em 1em", borderRadius: "1px" },
        "&light .cm-button": { backgroundImage: "linear-gradient(#eff1f5, #d9d9df)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)" } },
        "&dark .cm-button": { backgroundImage: "linear-gradient(#393939, #111)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#111, #333)" } },
        ".cm-textfield": { verticalAlign: "middle", color: "inherit", fontSize: "70%", border: "1px solid silver", padding: ".2em .5em" },
        "&light .cm-textfield": { backgroundColor: "white" },
        "&dark .cm-textfield": { border: "1px solid #555", backgroundColor: "inherit" },
      },
      FD,
    ),
    Ca =
      ((_class58 = class _class {
        constructor(e, t, i, n) {
          (this.typeOver = n), (this.bounds = null), (this.text = "");
          var _e_docView = e.docView,
            s = _e_docView.impreciseHead,
            o = _e_docView.impreciseAnchor;
          if (e.state.readOnly && t > -1) this.newSel = null;
          else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, i, 0))) {
            var u = s || o ? [] : xx(e),
              l = new Xs(u, e.state);
            l.readRange(this.bounds.startDOM, this.bounds.endDOM), (this.text = l.text), (this.newSel = Ax(u, this.bounds.from));
          } else {
            var u1 = e.observer.selectionRange,
              l1 = (s && s.node == u1.focusNode && s.offset == u1.focusOffset) || !Yl(e.contentDOM, u1.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(u1.focusNode, u1.focusOffset),
              a = (o && o.node == u1.anchorNode && o.offset == u1.anchorOffset) || !Yl(e.contentDOM, u1.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(u1.anchorNode, u1.anchorOffset);
            this.newSel = X.single(a, l1);
          }
        }
      }),
      (() => {
        h(_class58, "DOMChange");
      })(),
      _class58);
  function bD(r, e) {
    var t,
      i = e.newSel,
      n = r.state.selection.main,
      s = r.inputState.lastKeyTime > Date.now() - 100 ? r.inputState.lastKeyCode : -1;
    if (e.bounds) {
      var _e_bounds = e.bounds,
        o = _e_bounds.from,
        u = _e_bounds.to,
        l = n.from,
        a = null;
      (s === 8 || (W.android && e.text.length < u - o)) && ((l = n.to), (a = "end"));
      var c = vx(r.state.doc.sliceString(o, u, cr), e.text, l - o, a);
      c && (W.chrome && s == 13 && c.toB == c.from + 2 && e.text.slice(c.from, c.toB) == cr + cr && c.toB--, (t = { from: o + c.from, to: o + c.toA, insert: fe.of(e.text.slice(c.from, c.toB).split(cr)) }));
    } else i && ((!r.hasFocus && r.state.facet(mo)) || i.main.eq(n)) && (i = null);
    if (!t && !i) return !1;
    if (
      (!t && e.typeOver && !n.empty && i && i.main.empty
        ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, n.to) })
        : t && t.from >= n.from && t.to <= n.to && (t.from != n.from || t.to != n.to) && n.to - n.from - (t.to - t.from) <= 4
        ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, t.from).append(t.insert).append(r.state.doc.slice(t.to, n.to)) })
        : (W.mac || W.android) && t && t.from == t.to && t.from == n.head - 1 && /^\. ?$/.test(t.insert.toString()) && r.contentDOM.getAttribute("autocorrect") == "off"
        ? (i && t.insert.length == 2 && (i = X.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: fe.of([" "]) }))
        : W.chrome && t && t.from == t.to && t.from == n.head && t.insert.toString() == "\n " && r.lineWrapping && (i && (i = X.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: fe.of([" "]) })),
      t)
    ) {
      var o1 = r.state;
      if (
        (W.ios && r.inputState.flushIOSKey(r)) ||
        (W.android && ((t.from == n.from && t.to == n.to && t.insert.length == 1 && t.insert.lines == 2 && mr(r.contentDOM, "Enter", 13)) || (((t.from == n.from - 1 && t.to == n.to && t.insert.length == 0) || (s == 8 && t.insert.length < t.to - t.from)) && mr(r.contentDOM, "Backspace", 8)) || (t.from == n.from && t.to == n.to + 1 && t.insert.length == 0 && mr(r.contentDOM, "Delete", 46))))
      )
        return !0;
      var u1 = t.insert.toString();
      if (r.state.facet(Yg).some((c) => c(r, t.from, t.to, u1))) return !0;
      r.inputState.composing >= 0 && r.inputState.composing++;
      var l1;
      if (t.from >= n.from && t.to <= n.to && t.to - t.from >= (n.to - n.from) / 3 && (!i || (i.main.empty && i.main.from == t.from + t.insert.length)) && r.inputState.composing < 0) {
        var c1 = n.from < t.from ? o1.sliceDoc(n.from, t.from) : "",
          f = n.to > t.to ? o1.sliceDoc(t.to, n.to) : "";
        l1 = o1.replaceSelection(r.state.toText(c1 + t.insert.sliceString(0, void 0, r.state.lineBreak) + f));
      } else {
        var c2 = o1.changes(t),
          f1 = i && i.main.to <= c2.newLength ? i.main : void 0;
        if (o1.selection.ranges.length > 1 && r.inputState.composing >= 0 && t.to <= n.to && t.to >= n.to - 10) {
          var d = r.state.sliceDoc(t.from, t.to),
            p = nD(r) || r.state.doc.lineAt(n.head),
            m = n.to - t.to,
            F = n.to - n.from;
          l1 = o1.changeByRange((g) => {
            if (g.from == n.from && g.to == n.to) return { changes: c2, range: f1 || g.map(c2) };
            var D = g.to - m,
              b = D - d.length;
            if (g.to - g.from != F || r.state.sliceDoc(b, D) != d || (p && g.to >= p.from && g.from <= p.to)) return { range: g };
            var A = o1.changes({ from: b, to: D, insert: t.insert }),
              v = g.to - n.to;
            return { changes: A, range: f1 ? X.range(Math.max(0, f1.anchor + v), Math.max(0, f1.head + v)) : g.map(A) };
          });
        } else l1 = { changes: c2, selection: f1 && o1.selection.replaceRange(f1) };
      }
      var a1 = "input.type";
      return (r.composing || (r.inputState.compositionPendingChange && r.inputState.compositionEndedAt > Date.now() - 50)) && ((r.inputState.compositionPendingChange = !1), (a1 += ".compose"), r.inputState.compositionFirstChange && ((a1 += ".start"), (r.inputState.compositionFirstChange = !1))), r.dispatch(l1, { scrollIntoView: !0, userEvent: a1 }), !0;
    } else if (i && !i.main.eq(n)) {
      var o2 = !1,
        u2 = "select";
      return r.inputState.lastSelectionTime > Date.now() - 50 && (r.inputState.lastSelectionOrigin == "select" && (o2 = !0), (u2 = r.inputState.lastSelectionOrigin)), r.dispatch({ selection: i, scrollIntoView: o2, userEvent: u2 }), !0;
    } else return !1;
  }
  h(bD, "applyDOMChange");
  function vx(r, e, t, i) {
    var n = Math.min(r.length, e.length),
      s = 0;
    for (; s < n && r.charCodeAt(s) == e.charCodeAt(s); ) s++;
    if (s == n && r.length == e.length) return null;
    var o = r.length,
      u = e.length;
    for (; o > 0 && u > 0 && r.charCodeAt(o - 1) == e.charCodeAt(u - 1); ) o--, u--;
    if (i == "end") {
      var l = Math.max(0, s - Math.min(o, u));
      t -= o + l - s;
    }
    if (o < s && r.length < e.length) {
      var l1 = t <= s && t >= o ? s - t : 0;
      (s -= l1), (u = s + (u - o)), (o = s);
    } else if (u < s) {
      var l2 = t <= s && t >= u ? s - t : 0;
      (s -= l2), (o = s + (o - u)), (u = s);
    }
    return { from: s, toA: o, toB: u };
  }
  h(vx, "findDiff");
  function xx(r) {
    var e = [];
    if (r.root.activeElement != r.contentDOM) return e;
    var _r_observer_selectionRange = r.observer.selectionRange,
      t = _r_observer_selectionRange.anchorNode,
      i = _r_observer_selectionRange.anchorOffset,
      n = _r_observer_selectionRange.focusNode,
      s = _r_observer_selectionRange.focusOffset;
    return t && (e.push(new Ks(t, i)), (n != t || s != i) && e.push(new Ks(n, s))), e;
  }
  h(xx, "selectionPoints");
  function Ax(r, e) {
    if (r.length == 0) return null;
    var t = r[0].pos,
      i = r.length == 2 ? r[1].pos : t;
    return t > -1 && i > -1 ? X.single(t + e, i + e) : null;
  }
  h(Ax, "selectionFromPoints");
  var kx = { childList: !0, characterData: !0, subtree: !0, attributes: !0, characterDataOldValue: !0 },
    zl = W.ie && W.ie_version <= 11,
    Ba =
      ((_class59 = class _class {
        onScrollChanged(e) {
          this.view.inputState.runScrollHandlers(this.view, e), this.intersecting && this.view.measure();
        }
        onScroll(e) {
          this.intersecting && this.flush(!1), this.onScrollChanged(e);
        }
        onResize() {
          this.resizeTimeout < 0 &&
            (this.resizeTimeout = setTimeout(() => {
              (this.resizeTimeout = -1), this.view.requestMeasure();
            }, 50));
        }
        onPrint() {
          (this.view.viewState.printing = !0),
            this.view.measure(),
            setTimeout(() => {
              (this.view.viewState.printing = !1), this.view.requestMeasure();
            }, 500);
        }
        updateGaps(e) {
          if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, i) => t != e[i]))) {
            this.gapIntersection.disconnect();
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var t = _step.value;
                this.gapIntersection.observe(t);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            this.gaps = e;
          }
        }
        onSelectionChange(e) {
          var t = this.selectionChanged;
          if (!this.readSelectionRange() || this.delayedAndroidKey) return;
          var _this = this,
            i = _this.view,
            n = this.selectionRange;
          if (i.state.facet(mo) ? i.root.activeElement != this.dom : !$s(i.dom, n)) return;
          var s = n.anchorNode && i.docView.nearest(n.anchorNode);
          if (s && s.ignoreEvent(e)) {
            t || (this.selectionChanged = !1);
            return;
          }
          ((W.ie && W.ie_version <= 11) || (W.android && W.chrome)) && !i.state.selection.main.empty && n.focusNode && Ys(n.focusNode, n.focusOffset, n.anchorNode, n.anchorOffset) ? this.flushSoon() : this.flush(!1);
        }
        readSelectionRange() {
          var _this = this,
            e = _this.view,
            t = (W.safari && e.root.nodeType == 11 && kv(this.dom.ownerDocument) == this.dom && Sx(this.view)) || js(e.root);
          if (!t || this.selectionRange.eq(t)) return !1;
          var i = $s(this.dom, t);
          return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && Uv(this.dom, t) ? ((this.view.inputState.lastFocusTime = 0), e.docView.updateSelection(), !1) : (this.selectionRange.setRange(t), i && (this.selectionChanged = !0), !0);
        }
        setSelectionRange(e, t) {
          this.selectionRange.set(e.node, e.offset, t.node, t.offset), (this.selectionChanged = !1);
        }
        clearSelectionRange() {
          this.selectionRange.set(null, 0, null, 0);
        }
        listenForScroll() {
          this.parentCheck = -1;
          var e = 0,
            t = null;
          for (var i = this.dom; i; )
            if (i.nodeType == 1) !t && e < this.scrollTargets.length && this.scrollTargets[e] == i ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(i), (i = i.assignedSlot || i.parentNode);
            else if (i.nodeType == 11) i = i.host;
            else break;
          if ((e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t)) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step.value;
                i1.removeEventListener("scroll", this.onScroll);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = (this.scrollTargets = t)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var i2 = _step1.value;
                i2.addEventListener("scroll", this.onScroll);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
        ignore(e) {
          if (!this.active) return e();
          try {
            return this.stop(), e();
          } finally {
            this.start(), this.clear();
          }
        }
        start() {
          this.active || (this.observer.observe(this.dom, kx), zl && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), (this.active = !0));
        }
        stop() {
          this.active && ((this.active = !1), this.observer.disconnect(), zl && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
        }
        clear() {
          this.processRecords(), (this.queue.length = 0), (this.selectionChanged = !1);
        }
        delayAndroidKey(e, t) {
          var i;
          if (!this.delayedAndroidKey) {
            var n = h(() => {
              var s = this.delayedAndroidKey;
              s && (this.clearDelayedAndroidKey(), (this.view.inputState.lastKeyCode = s.keyCode), (this.view.inputState.lastKeyTime = Date.now()), !this.flush() && s.force && mr(this.dom, s.key, s.keyCode));
            }, "flush");
            this.flushingAndroidKey = this.view.win.requestAnimationFrame(n);
          }
          (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = { key: e, keyCode: t, force: this.lastChange < Date.now() - 50 || !!(!((i = this.delayedAndroidKey) === null || i === void 0) && i.force) });
        }
        clearDelayedAndroidKey() {
          this.win.cancelAnimationFrame(this.flushingAndroidKey), (this.delayedAndroidKey = null), (this.flushingAndroidKey = -1);
        }
        flushSoon() {
          this.delayedFlush < 0 &&
            (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
              (this.delayedFlush = -1), this.flush();
            }));
        }
        forceFlush() {
          this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), (this.delayedFlush = -1)), this.flush();
        }
        pendingRecords() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.observer.takeRecords()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              this.queue.push(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.queue;
        }
        processRecords() {
          var e = this.pendingRecords();
          e.length && (this.queue = []);
          var t = -1,
            i = -1,
            n = !1;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              var o = this.readMutation(s);
              var ref;
              o && (o.typeOver && (n = !0), t == -1 ? ((ref = o), (t = ref.from), (i = ref.to), ref) : ((t = Math.min(o.from, t)), (i = Math.max(o.to, i))));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return { from: t, to: i, typeOver: n };
        }
        readChange() {
          var _this_processRecords = this.processRecords(),
            e = _this_processRecords.from,
            t = _this_processRecords.to,
            i = _this_processRecords.typeOver,
            n = this.selectionChanged && $s(this.dom, this.selectionRange);
          return e < 0 && !n ? null : (e > -1 && (this.lastChange = Date.now()), (this.view.inputState.lastFocusTime = 0), (this.selectionChanged = !1), new Ca(this.view, e, t, i));
        }
        flush() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
          if (this.delayedFlush >= 0 || this.delayedAndroidKey) return !1;
          e && this.readSelectionRange();
          var t = this.readChange();
          if (!t) return !1;
          var i = this.view.state,
            n = bD(this.view, t);
          return this.view.state == i && this.view.update([]), n;
        }
        readMutation(e) {
          var t = this.view.docView.nearest(e.target);
          if (!t || t.ignoreMutation(e)) return null;
          if ((t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList")) {
            var i = Eg(t, e.previousSibling || e.target.previousSibling, -1),
              n = Eg(t, e.nextSibling || e.target.nextSibling, 1);
            return { from: i ? t.posAfter(i) : t.posAtStart, to: n ? t.posBefore(n) : t.posAtEnd, typeOver: !1 };
          } else return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
        }
        setWindow(e) {
          e != this.win && (this.removeWindowListeners(this.win), (this.win = e), this.addWindowListeners(this.win));
        }
        addWindowListeners(e) {
          e.addEventListener("resize", this.onResize), e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
        }
        removeWindowListeners(e) {
          e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
        }
        destroy() {
          var e, t, i, n;
          this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (i = this.resizeScroll) === null || i === void 0 || i.disconnect(), (n = this.resizeContent) === null || n === void 0 || n.disconnect();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              s.removeEventListener("scroll", this.onScroll);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey);
        }
        constructor(e) {
          (this.view = e),
            (this.active = !1),
            (this.selectionRange = new Jl()),
            (this.selectionChanged = !1),
            (this.delayedFlush = -1),
            (this.resizeTimeout = -1),
            (this.queue = []),
            (this.delayedAndroidKey = null),
            (this.flushingAndroidKey = -1),
            (this.lastChange = 0),
            (this.scrollTargets = []),
            (this.intersection = null),
            (this.resizeScroll = null),
            (this.resizeContent = null),
            (this.intersecting = !1),
            (this.gapIntersection = null),
            (this.gaps = []),
            (this.parentCheck = -1),
            (this.dom = e.contentDOM),
            (this.observer = new MutationObserver((t) => {
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var i = _step.value;
                  this.queue.push(i);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
              ((W.ie && W.ie_version <= 11) || (W.ios && e.composing)) && t.some((i) => (i.type == "childList" && i.removedNodes.length) || (i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length)) ? this.flushSoon() : this.flush();
            })),
            zl &&
              (this.onCharData = (t) => {
                this.queue.push({ target: t.target, type: "characterData", oldValue: t.prevValue }), this.flushSoon();
              }),
            (this.onSelectionChange = this.onSelectionChange.bind(this)),
            (this.onResize = this.onResize.bind(this)),
            (this.onPrint = this.onPrint.bind(this)),
            (this.onScroll = this.onScroll.bind(this)),
            typeof ResizeObserver == "function" &&
              ((this.resizeScroll = new ResizeObserver(() => {
                var t;
                ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
              })),
              this.resizeScroll.observe(e.scrollDOM),
              (this.resizeContent = new ResizeObserver(() => this.view.requestMeasure())),
              this.resizeContent.observe(e.contentDOM)),
            this.addWindowListeners((this.win = e.win)),
            this.start(),
            typeof IntersectionObserver == "function" &&
              ((this.intersection = new IntersectionObserver(
                (t) => {
                  this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && ((this.intersecting = !this.intersecting), this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
                },
                { threshold: [0, 0.001] },
              )),
              this.intersection.observe(this.dom),
              (this.gapIntersection = new IntersectionObserver((t) => {
                t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
              }, {}))),
            this.listenForScroll(),
            this.readSelectionRange();
        }
      }),
      (() => {
        h(_class59, "DOMObserver");
      })(),
      _class59);
  function Eg(r, e, t) {
    for (; e; ) {
      var i = Ee.get(e);
      if (i && i.parent == r) return i;
      var n = e.parentNode;
      e = n != r.dom ? n : t > 0 ? e.nextSibling : e.previousSibling;
    }
    return null;
  }
  h(Eg, "findChild");
  function Sx(r) {
    var e = null;
    function t(l) {
      l.preventDefault(), l.stopImmediatePropagation(), (e = l.getTargetRanges()[0]);
    }
    if ((h(t, "read"), r.contentDOM.addEventListener("beforeinput", t, !0), r.dom.ownerDocument.execCommand("indent"), r.contentDOM.removeEventListener("beforeinput", t, !0), !e)) return null;
    var i = e.startContainer,
      n = e.startOffset,
      s = e.endContainer,
      o = e.endOffset,
      u = r.docView.domAtPos(r.state.selection.main.anchor);
    var ref;
    return Ys(u.node, u.offset, s, o) && ((ref = [s, o, i, n]), (i = ref[0]), (n = ref[1]), (s = ref[2]), (o = ref[3]), ref), { anchorNode: i, anchorOffset: n, focusNode: s, focusOffset: o };
  }
  h(Sx, "safariSelectionRangeHack");
  var re =
    ((_r42 = class r {
      get state() {
        return this.viewState.state;
      }
      get viewport() {
        return this.viewState.viewport;
      }
      get visibleRanges() {
        return this.viewState.visibleRanges;
      }
      get inView() {
        return this.viewState.inView;
      }
      get composing() {
        return this.inputState.composing > 0;
      }
      get compositionStarted() {
        return this.inputState.composing >= 0;
      }
      get root() {
        return this._root;
      }
      get win() {
        return this.dom.ownerDocument.defaultView || window;
      }
      dispatch() {
        for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
          e[_key] = arguments[_key];
        }
        var t = e.length == 1 && e[0] instanceof Re ? e[0] : this.state.update(...e);
        this._dispatch(t, this);
      }
      update(e) {
        if (this.updateState != 0) throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
        var t = !1,
          i = !1,
          n,
          s = this.state;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var d = _step.value;
            if (d.startState != s) throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
            s = d.state;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        if (this.destroyed) {
          this.viewState.state = s;
          return;
        }
        var o = this.hasFocus,
          u = 0,
          l = null;
        e.some((d) => d.annotation(dD)) ? ((this.inputState.notifiedFocused = o), (u = 1)) : o != this.inputState.notifiedFocused && ((this.inputState.notifiedFocused = o), (l = pD(s, o)), l || (u = 1));
        var a = this.observer.delayedAndroidKey,
          c = null;
        if ((a ? (this.observer.clearDelayedAndroidKey(), (c = this.observer.readChange()), ((c && !this.state.doc.eq(s.doc)) || !this.state.selection.eq(s.selection)) && (c = null)) : this.observer.clear(), s.facet(Ce.phrases) != this.state.facet(Ce.phrases))) return this.setState(s);
        (n = io.create(this, s, e)), (n.flags |= u);
        var f = this.viewState.scrollTarget;
        try {
          this.updateState = 2;
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var d1 = _step1.value;
              if ((f && (f = f.map(d1.changes)), d1.scrollIntoView)) {
                var _d_state_selection = d1.state.selection,
                  p = _d_state_selection.main;
                f = new to(p.empty ? p : X.cursor(p.head, p.head > p.anchor ? -1 : 1));
              }
              var _iteratorNormalCompletion2 = true,
                _didIteratorError2 = false,
                _iteratorError2 = undefined;
              try {
                for (var _iterator2 = d1.effects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  var p1 = _step2.value;
                  p1.is(ng) && (f = p1.value);
                }
              } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                    _iterator2.return();
                  }
                } finally {
                  if (_didIteratorError2) {
                    throw _iteratorError2;
                  }
                }
              }
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          this.viewState.update(n, f),
            (this.bidiCache = uo.update(this.bidiCache, n.changes)),
            n.empty || (this.updatePlugins(n), this.inputState.update(n)),
            (t = this.docView.update(n)),
            this.state.facet(Zr) != this.styleModules && this.mountStyles(),
            (i = this.updateAttrs()),
            this.showAnnouncements(e),
            this.docView.updateSelection(
              t,
              e.some((d) => d.isUserEvent("select.pointer")),
            );
        } finally {
          this.updateState = 0;
        }
        var _iteratorNormalCompletion3 = true,
          _didIteratorError3 = false,
          _iteratorError3 = undefined;
        if ((n.startState.facet(Ms) != n.state.facet(Ms) && (this.viewState.mustMeasureContent = !0), (t || i || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), !n.empty))
          try {
            for (var _iterator3 = this.state.facet(ia)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var d2 = _step3.value;
              d2(n);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        (l || c) &&
          Promise.resolve().then(() => {
            l && this.state == l.startState && this.dispatch(l), c && !bD(this, c) && a.force && mr(this.contentDOM, a.key, a.keyCode);
          });
      }
      setState(e) {
        if (this.updateState != 0) throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
        if (this.destroyed) {
          this.viewState.state = e;
          return;
        }
        this.updateState = 2;
        var t = this.hasFocus;
        try {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              i.destroy(this);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (this.viewState = new oo(e)), (this.plugins = e.facet(Kr).map((i) => new nn(i))), this.pluginMap.clear();
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var i1 = _step1.value;
              i1.update(this);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          (this.docView = new ro(this)), this.inputState.ensureHandlers(this, this.plugins), this.mountStyles(), this.updateAttrs(), (this.bidiCache = []);
        } finally {
          this.updateState = 0;
        }
        t && this.focus(), this.requestMeasure();
      }
      updatePlugins(e) {
        var t = e.startState.facet(Kr),
          i = e.state.facet(Kr);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (t != i) {
          var n = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step.value;
              var o = t.indexOf(s);
              if (o < 0) n.push(new nn(s));
              else {
                var u = this.plugins[o];
                (u.mustUpdate = e), n.push(u);
              }
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
              var s1 = _step1.value;
              s1.mustUpdate != e && s1.destroy(this);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          (this.plugins = n), this.pluginMap.clear(), this.inputState.ensureHandlers(this, this.plugins);
        } else
          try {
            for (var _iterator2 = this.plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
              var n1 = _step2.value;
              n1.mustUpdate = e;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        for (var n2 = 0; n2 < this.plugins.length; n2++) this.plugins[n2].update(this);
      }
      measure() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
        if (this.destroyed) return;
        this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), (this.measureScheduled = 0), e && this.observer.forceFlush();
        var t = null,
          i = this.scrollDOM,
          n = i.scrollTop,
          _this_viewState = this.viewState,
          s = _this_viewState.scrollAnchorPos,
          o = _this_viewState.scrollAnchorHeight;
        n != this.viewState.scrollTop && (o = -1), (this.viewState.scrollAnchorHeight = -1);
        try {
          var _this = this,
            _loop = function (u) {
              if (o < 0)
                if (Tg(i)) (s = -1), (o = _this.viewState.heightMap.height);
                else {
                  var p = _this.viewState.scrollAnchorAt(n);
                  (s = p.from), (o = p.top);
                }
              _this.updateState = 1;
              var l = _this.viewState.measure(_this);
              if (!l && !_this.measureRequests.length && _this.viewState.scrollTarget == null) return "break";
              if (u > 5) {
                console.warn(_this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
                return "break";
              }
              var a = [];
              var ref;
              l & 4 || ((ref = [a, _this.measureRequests]), (_this.measureRequests = ref[0]), (a = ref[1]), ref);
              var c = a.map((p) => {
                  try {
                    return p.read(_this);
                  } catch (m) {
                    return ft(_this.state, m), Cg;
                  }
                }),
                f = io.create(_this, _this.state, []),
                d = !1;
              (f.flags |= l), t ? (t.flags |= l) : (t = f), (_this.updateState = 2), f.empty || (_this.updatePlugins(f), _this.inputState.update(f), _this.updateAttrs(), (d = _this.docView.update(f)));
              for (var p1 = 0; p1 < a.length; p1++)
                if (c[p1] != Cg)
                  try {
                    var _$m = a[p1];
                    _$m.write && _$m.write(c[p1], _this);
                  } catch (m) {
                    ft(_this.state, m);
                  }
              if ((d && _this.docView.updateSelection(!0), !f.viewportChanged && _this.measureRequests.length == 0)) {
                if (_this.viewState.editorHeight)
                  if (_this.viewState.scrollTarget) {
                    _this.docView.scrollIntoView(_this.viewState.scrollTarget), (_this.viewState.scrollTarget = null);
                    return "continue";
                  } else {
                    var _$m1 = (s < 0 ? _this.viewState.heightMap.height : _this.viewState.lineBlockAt(s).top) - o;
                    if (_$m1 > 1 || _$m1 < -1) {
                      (n = i.scrollTop = n + _$m1), (o = -1);
                      return "continue";
                    }
                  }
                return "break";
              }
            };
          for (var u = 0; ; u++) {
            var _ret = _loop(u);
            if (_ret === "break") break;
          }
        } finally {
          (this.updateState = 0), (this.measureScheduled = -1);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (t && !t.empty)
          try {
            for (var _iterator = this.state.facet(ia)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u1 = _step.value;
              u1(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
      get themeClasses() {
        return ya + " " + (this.state.facet(ba) ? DD : gD) + " " + this.state.facet(Ms);
      }
      updateAttrs() {
        var e = Bg(this, Kg, { class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses }),
          t = { spellcheck: "false", autocorrect: "off", autocapitalize: "off", translate: "no", contenteditable: this.state.facet(mo) ? "true" : "false", class: "cm-content", style: "".concat(W.tabSize, ": ").concat(this.state.tabSize), role: "textbox", "aria-multiline": "true" };
        this.state.readOnly && (t["aria-readonly"] = "true"), Bg(this, La, t);
        var i = this.observer.ignore(() => {
          var n = ea(this.contentDOM, this.contentAttrs, t),
            s = ea(this.dom, this.editorAttrs, e);
          return n || s;
        });
        return (this.editorAttrs = e), (this.contentAttrs = t), i;
      }
      showAnnouncements(e) {
        var t = !0;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var i = _step.value;
            try {
              for (var _iterator1 = i.effects[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var n = _step1.value;
                if (n.is(r.announce)) {
                  t && (this.announceDOM.textContent = ""), (t = !1);
                  var s = this.announceDOM.appendChild(document.createElement("div"));
                  s.textContent = n.value;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
      }
      mountStyles() {
        (this.styleModules = this.state.facet(Zr)), ht.mount(this.root, this.styleModules.concat(Bx).reverse());
      }
      readMeasured() {
        if (this.updateState == 2) throw new Error("Reading the editor layout isn't allowed during an update");
        this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
      }
      requestMeasure(e) {
        if ((this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e)) {
          if (this.measureRequests.indexOf(e) > -1) return;
          if (e.key != null) {
            for (var t = 0; t < this.measureRequests.length; t++)
              if (this.measureRequests[t].key === e.key) {
                this.measureRequests[t] = e;
                return;
              }
          }
          this.measureRequests.push(e);
        }
      }
      plugin(e) {
        var t = this.pluginMap.get(e);
        return (t === void 0 || (t && t.spec != e)) && this.pluginMap.set(e, (t = this.plugins.find((i) => i.spec == e) || null)), t && t.update(this).value;
      }
      get documentTop() {
        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
      }
      get documentPadding() {
        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
      }
      elementAtHeight(e) {
        return this.readMeasured(), this.viewState.elementAtHeight(e);
      }
      lineBlockAtHeight(e) {
        return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
      }
      get viewportLineBlocks() {
        return this.viewState.viewportLines;
      }
      lineBlockAt(e) {
        return this.viewState.lineBlockAt(e);
      }
      get contentHeight() {
        return this.viewState.contentHeight;
      }
      moveByChar(e, t, i) {
        return Wl(this, e, ag(this, e, t, i));
      }
      moveByGroup(e, t) {
        return Wl(
          this,
          e,
          ag(this, e, t, (i) => rx(this, e.head, i)),
        );
      }
      moveToLineBoundary(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
        return ix(this, e, t, i);
      }
      moveVertically(e, t, i) {
        return Wl(this, e, nx(this, e, t, i));
      }
      domAtPos(e) {
        return this.docView.domAtPos(e);
      }
      posAtDOM(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        return this.docView.posFromDOM(e, t);
      }
      posAtCoords(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
        return this.readMeasured(), oD(this, e, t);
      }
      coordsAtPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
        this.readMeasured();
        var i = this.docView.coordsAt(e, t);
        if (!i || i.left == i.right) return i;
        var n = this.state.doc.lineAt(e),
          s = this.bidiSpans(n),
          o = s[ti.find(s, e - n.from, -1, t)];
        return Qa(i, (o.dir == Se.LTR) == t > 0);
      }
      coordsForChar(e) {
        return this.readMeasured(), this.docView.coordsForChar(e);
      }
      get defaultCharacterWidth() {
        return this.viewState.heightOracle.charWidth;
      }
      get defaultLineHeight() {
        return this.viewState.heightOracle.lineHeight;
      }
      get textDirection() {
        return this.viewState.defaultTextDirection;
      }
      textDirectionAt(e) {
        return !this.state.facet(Gg) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
      }
      get lineWrapping() {
        return this.viewState.heightOracle.lineWrapping;
      }
      bidiSpans(e) {
        if (e.length > wx) return iD(e.length);
        var t = this.textDirectionAt(e.from);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.bidiCache[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            if (n.from == e.from && n.dir == t) return n.order;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var i = Wv(e.text, t);
        return this.bidiCache.push(new uo(e.from, e.to, t, i)), i;
      }
      get hasFocus() {
        var e;
        return (this.dom.ownerDocument.hasFocus() || (W.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4)) && this.root.activeElement == this.contentDOM;
      }
      focus() {
        this.observer.ignore(() => {
          Lg(this.contentDOM), this.docView.updateSelection();
        });
      }
      setRoot(e) {
        this._root != e && ((this._root = e), this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
      }
      destroy() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            e.destroy(this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.plugins = []), this.inputState.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), (this.destroyed = !0);
      }
      static scrollIntoView(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        return ng.of(new to(typeof e == "number" ? X.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
      }
      static domEventHandlers(e) {
        return Ye.define(() => ({}), { eventHandlers: e });
      }
      static theme(e, t) {
        var i = ht.newName(),
          n = [Ms.of(i), Zr.of(Ea(".".concat(i), e))];
        return t && t.dark && n.push(ba.of(!0)), n;
      }
      static baseTheme(e) {
        return lr.lowest(Zr.of(Ea("." + ya, e, FD)));
      }
      static findFromDOM(e) {
        var _n;
        var t;
        var i = e.querySelector(".cm-content"),
          n = (i && Ee.get(i)) || Ee.get(e);
        return ((t = (_n = n) === null || _n === void 0 ? void 0 : _n.rootView) === null || t === void 0 ? void 0 : t.view) || null;
      }
      constructor(ref) {
        var e = ref === void 0 ? {} : ref;
        (this.plugins = []),
          (this.pluginMap = new Map()),
          (this.editorAttrs = {}),
          (this.contentAttrs = {}),
          (this.bidiCache = []),
          (this.destroyed = !1),
          (this.updateState = 2),
          (this.measureScheduled = -1),
          (this.measureRequests = []),
          (this.contentDOM = document.createElement("div")),
          (this.scrollDOM = document.createElement("div")),
          (this.scrollDOM.tabIndex = -1),
          (this.scrollDOM.className = "cm-scroller"),
          this.scrollDOM.appendChild(this.contentDOM),
          (this.announceDOM = document.createElement("div")),
          (this.announceDOM.style.cssText = "position: fixed; top: -10000px"),
          this.announceDOM.setAttribute("aria-live", "polite"),
          (this.dom = document.createElement("div")),
          this.dom.appendChild(this.announceDOM),
          this.dom.appendChild(this.scrollDOM),
          (this._dispatch = e.dispatch || ((t) => this.update([t]))),
          (this.dispatch = this.dispatch.bind(this)),
          (this._root = e.root || _v(e.parent) || document),
          (this.viewState = new oo(e.state || Ce.create(e))),
          (this.plugins = this.state.facet(Kr).map((t) => new nn(t)));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            t.update(this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.observer = new Ba(this)), (this.inputState = new la(this)), this.inputState.ensureHandlers(this, this.plugins), (this.docView = new ro(this)), this.mountStyles(), this.updateAttrs(), (this.updateState = 0), this.requestMeasure(), e.parent && e.parent.appendChild(this.dom);
      }
    }),
    (() => {
      h(_r42, "EditorView");
    })(),
    _r42);
  re.styleModule = Zr;
  re.inputHandler = Yg;
  re.focusChangeEffect = Jg;
  re.perLineTextDirection = Gg;
  re.exceptionSink = jg;
  re.updateListener = ia;
  re.editable = mo;
  re.mouseSelectionStyle = Hg;
  re.dragMovesSelection = zg;
  re.clickAddsSelectionRange = Wg;
  re.decorations = fn;
  re.atomicRanges = Oa;
  re.scrollMargins = Zg;
  re.darkTheme = ba;
  re.contentAttributes = La;
  re.editorAttributes = Kg;
  re.lineWrapping = re.contentAttributes.of({ class: "cm-lineWrapping" });
  re.announce = de.define();
  var wx = 4096,
    Cg = {},
    uo =
      ((_r43 = class r {
        static update(e, t) {
          if (t.empty) return e;
          var i = [],
            n = e.length ? e[e.length - 1].dir : Se.LTR;
          for (var s = Math.max(0, e.length - 10); s < e.length; s++) {
            var o = e[s];
            o.dir == n && !t.touchesRange(o.from, o.to) && i.push(new r(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.order));
          }
          return i;
        }
        constructor(e, t, i, n) {
          (this.from = e), (this.to = t), (this.dir = i), (this.order = n);
        }
      }),
      (() => {
        h(_r43, "CachedOrder");
      })(),
      _r43);
  function Bg(r, e, t) {
    for (var i = r.state.facet(e), n = i.length - 1; n >= 0; n--) {
      var s = i[n],
        o = typeof s == "function" ? s(r) : s;
      o && Zl(o, t);
    }
    return t;
  }
  h(Bg, "attrsFromFacet");
  var Qx = W.mac ? "mac" : W.windows ? "win" : W.linux ? "linux" : "key";
  function _x(r, e) {
    var t = r.split(/-(?!$)/),
      i = t[t.length - 1];
    i == "Space" && (i = " ");
    var n, s, o, u;
    for (var l = 0; l < t.length - 1; ++l) {
      var a = t[l];
      if (/^(cmd|meta|m)$/i.test(a)) u = !0;
      else if (/^a(lt)?$/i.test(a)) n = !0;
      else if (/^(c|ctrl|control)$/i.test(a)) s = !0;
      else if (/^s(hift)?$/i.test(a)) o = !0;
      else if (/^mod$/i.test(a)) e == "mac" ? (u = !0) : (s = !0);
      else throw new Error("Unrecognized modifier name: " + a);
    }
    return n && (i = "Alt-" + i), s && (i = "Ctrl-" + i), u && (i = "Meta-" + i), o && (i = "Shift-" + i), i;
  }
  h(_x, "normalizeKeyName");
  function Ps(r, e, t) {
    return e.altKey && (r = "Alt-" + r), e.ctrlKey && (r = "Ctrl-" + r), e.metaKey && (r = "Meta-" + r), t !== !1 && e.shiftKey && (r = "Shift-" + r), r;
  }
  h(Ps, "modifiers");
  var Ux = lr.default(
      re.domEventHandlers({
        keydown(r, e) {
          return Rx(Lx(e.state), r, e, "editor");
        },
      }),
    ),
    Ta = j.define({ enables: Ux }),
    vg = new WeakMap();
  function Lx(r) {
    var e = r.facet(Ta),
      t = vg.get(e);
    return t || vg.set(e, (t = Tx(e.reduce((i, n) => i.concat(n), [])))), t;
  }
  h(Lx, "getKeymap");
  var ei = null,
    Ox = 4e3;
  function Tx(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Qx;
    var t = Object.create(null),
      i = Object.create(null),
      n = h((o, u) => {
        var l = i[o];
        if (l == null) i[o] = u;
        else if (l != u) throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
      }, "checkPrefix"),
      s = h((o, u, l, a, c) => {
        var _loop = function (D) {
          var b = m.slice(0, D).join(" ");
          n(b, !0),
            p[b] ||
              (p[b] = {
                preventDefault: !0,
                stopPropagation: !1,
                run: [
                  (A) => {
                    var v = (ei = { view: A, prefix: b, scope: o });
                    return (
                      setTimeout(() => {
                        ei == v && (ei = null);
                      }, Ox),
                      !0
                    );
                  },
                ],
              });
        };
        var f, d;
        var p = t[o] || (t[o] = Object.create(null)),
          m = u.split(/ (?!$)/).map((D) => _x(D, e));
        for (var D = 1; D < m.length; D++) _loop(D);
        var F = m.join(" ");
        n(F, !1);
        var g = p[F] || (p[F] = { preventDefault: !1, stopPropagation: !1, run: ((d = (f = p._any) === null || f === void 0 ? void 0 : f.run) === null || d === void 0 ? void 0 : d.slice()) || [] });
        l && g.run.push(l), a && (g.preventDefault = !0), c && (g.stopPropagation = !0);
      }, "add");
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var o = _step.value;
        var u = o.scope ? o.scope.split(" ") : ["editor"];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        if (o.any)
          try {
            for (var _iterator1 = u[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var a = _step1.value;
              var c = t[a] || (t[a] = Object.create(null));
              c._any || (c._any = { preventDefault: !1, stopPropagation: !1, run: [] });
              for (var f in c) c[f].run.push(o.any);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        var l = o[e] || o.key;
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        if (l)
          try {
            for (var _iterator2 = u[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var a1 = _step2.value;
              s(a1, l, o.run, o.preventDefault, o.stopPropagation), o.shift && s(a1, "Shift-" + l, o.shift, o.preventDefault, o.stopPropagation);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(Tx, "buildKeymap");
  function Rx(r, e, t, i) {
    var n = Jm(e),
      s = jr(n, 0),
      o = As(s) == n.length && n != " ",
      u = "",
      l = !1,
      a = !1,
      c = !1;
    ei && ei.view == t && ei.scope == i && ((u = ei.prefix + " "), lD.indexOf(e.keyCode) < 0 && ((a = !0), (ei = null)));
    var f = new Set(),
      d = h((g) => {
        if (g) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = g.run[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var D = _step.value;
              if (!f.has(D) && (f.add(D), D(t, e))) return g.stopPropagation && (c = !0), !0;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          g.preventDefault && (g.stopPropagation && (c = !0), (a = !0));
        }
        return !1;
      }, "runFor"),
      p = r[i],
      m,
      F;
    return (
      p && (d(p[u + Ps(n, e, !o)]) ? (l = !0) : o && (e.altKey || e.metaKey || e.ctrlKey) && !(W.windows && e.ctrlKey && e.altKey) && (m = Ht[e.keyCode]) && m != n ? (d(p[u + Ps(m, e, !0)]) || (e.shiftKey && (F = ar[e.keyCode]) != n && F != m && d(p[u + Ps(F, e, !1)]))) && (l = !0) : o && e.shiftKey && d(p[u + Ps(n, e, !0)]) && (l = !0), !l && d(p._any) && (l = !0)),
      a && (l = !0),
      l && c && e.stopPropagation(),
      l
    );
  }
  h(Rx, "runHandlers");
  var dn =
    ((_r44 = class r {
      draw() {
        var e = document.createElement("div");
        return (e.className = this.className), this.adjust(e), e;
      }
      update(e, t) {
        return t.className != this.className ? !1 : (this.adjust(e), !0);
      }
      adjust(e) {
        (e.style.left = this.left + "px"), (e.style.top = this.top + "px"), this.width != null && (e.style.width = this.width + "px"), (e.style.height = this.height + "px");
      }
      eq(e) {
        return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
      }
      static forRange(e, t, i) {
        if (i.empty) {
          var n = e.coordsAtPos(i.head, i.assoc || 1);
          if (!n) return [];
          var s = yD(e);
          return [new r(t, n.left - s.left, n.top - s.top, null, n.bottom - n.top)];
        } else return Nx(e, t, i);
      }
      constructor(e, t, i, n, s) {
        (this.className = e), (this.left = t), (this.top = i), (this.width = n), (this.height = s);
      }
    }),
    (() => {
      h(_r44, "RectangleMarker");
    })(),
    _r44);
  function yD(r) {
    var e = r.scrollDOM.getBoundingClientRect();
    return { left: (r.textDirection == Se.LTR ? e.left : e.right - r.scrollDOM.clientWidth) - r.scrollDOM.scrollLeft, top: e.top - r.scrollDOM.scrollTop };
  }
  h(yD, "getBase");
  function xg(r, e, t) {
    var i = X.cursor(e);
    return { from: Math.max(t.from, r.moveToLineBoundary(i, !1, !0).from), to: Math.min(t.to, r.moveToLineBoundary(i, !0, !0).from), type: ke.Text };
  }
  h(xg, "wrappedLine");
  function Nx(r, e, t) {
    if (t.to <= r.viewport.from || t.from >= r.viewport.to) return [];
    var i = Math.max(t.from, r.viewport.from),
      n = Math.min(t.to, r.viewport.to),
      s = r.textDirection == Se.LTR,
      o = r.contentDOM,
      u = o.getBoundingClientRect(),
      l = yD(r),
      a = o.querySelector(".cm-line"),
      c = a && window.getComputedStyle(a),
      f = u.left + (c ? parseInt(c.paddingLeft) + Math.min(0, parseInt(c.textIndent)) : 0),
      d = u.right - (c ? parseInt(c.paddingRight) : 0),
      p = ua(r, i),
      m = ua(r, n),
      F = p.type == ke.Text ? p : null,
      g = m.type == ke.Text ? m : null;
    if ((F && (r.lineWrapping || p.widgetLineBreaks) && (F = xg(r, i, F)), g && (r.lineWrapping || m.widgetLineBreaks) && (g = xg(r, n, g)), F && g && F.from == g.from)) return b(A(t.from, t.to, F));
    {
      var C = F ? A(t.from, null, F) : v(p, !1),
        w = g ? A(null, t.to, g) : v(m, !0),
        P = [];
      return (F || p).to < (g || m).from - (F && g ? 1 : 0) || (p.widgetLineBreaks > 1 && C.bottom + r.defaultLineHeight / 2 < w.top) ? P.push(D(f, C.bottom, d, w.top)) : C.bottom < w.top && r.elementAtHeight((C.bottom + w.top) / 2).type == ke.Text && (C.bottom = w.top = (C.bottom + w.top) / 2), b(C).concat(P).concat(b(w));
    }
    function D(C, w, P, K) {
      return new dn(e, C - l.left, w - l.top - 0.01, P - C, K - w + 0.01);
    }
    h(D, "piece");
    function b(param) {
      var C = param.top,
        w = param.bottom,
        P = param.horizontal;
      var K = [];
      for (var q = 0; q < P.length; q += 2) K.push(D(P[q], C, P[q + 1], w));
      return K;
    }
    h(b, "pieces");
    function A(C, w, P) {
      var K = 1e9,
        q = -1e9,
        H = [];
      function I(V, U, Z, me, De) {
        var he = r.coordsAtPos(V, V == P.to ? -2 : 2),
          ae = r.coordsAtPos(Z, Z == P.from ? 2 : -2);
        !he || !ae || ((K = Math.min(he.top, ae.top, K)), (q = Math.max(he.bottom, ae.bottom, q)), De == Se.LTR ? H.push(s && U ? f : he.left, s && me ? d : ae.right) : H.push(!s && me ? f : ae.left, !s && U ? d : he.right));
      }
      h(I, "addSpan");
      var ne = C !== null && C !== void 0 ? C : P.from,
        le = w !== null && w !== void 0 ? w : P.to;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var V = _step.value;
          if (V.to > ne && V.from < le)
            for (var U = Math.max(V.from, ne), Z = Math.min(V.to, le); ; ) {
              var me = r.state.doc.lineAt(U);
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = r.bidiSpans(me)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var De = _step1.value;
                  var he = De.from + me.from,
                    ae = De.to + me.from;
                  if (he >= Z) break;
                  ae > U && I(Math.max(he, U), C == null && he <= ne, Math.min(ae, Z), w == null && ae >= le, De.dir);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
              if (((U = me.to + 1), U >= Z)) break;
            }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return H.length == 0 && I(ne, C == null, le, w == null, r.textDirection), { top: K, bottom: q, horizontal: H };
    }
    h(A, "drawForLine");
    function v(C, w) {
      var P = u.top + (w ? C.top : C.bottom);
      return { top: P, bottom: P, horizontal: [] };
    }
    h(v, "drawForWidget");
  }
  h(Nx, "rectanglesForRange");
  function Mx(r, e) {
    return r.constructor == e.constructor && r.eq(e);
  }
  h(Mx, "sameMarker");
  var va =
      ((_class60 = class _class {
        update(e) {
          e.startState.facet(Ws) != e.state.facet(Ws) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && e.view.requestMeasure(this.measureReq);
        }
        setOrder(e) {
          var t = 0,
            i = e.facet(Ws);
          for (; t < i.length && i[t] != this.layer; ) t++;
          this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
        }
        measure() {
          return this.layer.markers(this.view);
        }
        draw(e) {
          if (e.length != this.drawn.length || e.some((t, i) => !Mx(t, this.drawn[i]))) {
            var t = this.dom.firstChild,
              i = 0;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                n.update && t && n.constructor && this.drawn[i].constructor && n.update(t, this.drawn[i]) ? ((t = t.nextSibling), i++) : this.dom.insertBefore(n.draw(), t);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            for (; t; ) {
              var n1 = t.nextSibling;
              t.remove(), (t = n1);
            }
            this.drawn = e;
          }
        }
        destroy() {
          this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
        }
        constructor(e, t) {
          (this.view = e),
            (this.layer = t),
            (this.drawn = []),
            (this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }),
            (this.dom = e.scrollDOM.appendChild(document.createElement("div"))),
            this.dom.classList.add("cm-layer"),
            t.above && this.dom.classList.add("cm-layer-above"),
            t.class && this.dom.classList.add(t.class),
            this.dom.setAttribute("aria-hidden", "true"),
            this.setOrder(e.state),
            e.requestMeasure(this.measureReq),
            t.mount && t.mount(this.dom, e);
        }
      }),
      (() => {
        h(_class60, "LayerView");
      })(),
      _class60),
    Ws = j.define();
  function ED(r) {
    return [Ye.define((e) => new va(e, r)), Ws.of(r)];
  }
  h(ED, "layer");
  var CD = !W.ios,
    pn = j.define({
      combine(r) {
        return zt(r, { cursorBlinkRate: 1200, drawRangeCursor: !0 }, { cursorBlinkRate: (e, t) => Math.min(e, t), drawRangeCursor: (e, t) => e || t });
      },
    });
  function BD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [pn.of(r), Px, Ix, $x, Xg.of(!0)];
  }
  h(BD, "drawSelection");
  function vD(r) {
    return r.startState.facet(pn) != r.state.facet(pn);
  }
  h(vD, "configChanged");
  var Px = ED({
    above: !0,
    markers(r) {
      var e = r.state,
        t = e.facet(pn),
        i = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n == e.selection.main;
          if (n.empty ? !s || CD : t.drawRangeCursor) {
            var o = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary",
              u = n.empty ? n : X.cursor(n.head, n.head > n.anchor ? -1 : 1);
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = dn.forRange(r, o, u)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var l = _step1.value;
                i.push(l);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i;
    },
    update(r, e) {
      r.transactions.some((i) => i.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
      var t = vD(r);
      return t && Ag(r.state, e), r.docChanged || r.selectionSet || t;
    },
    mount(r, e) {
      Ag(e.state, r);
    },
    class: "cm-cursorLayer",
  });
  function Ag(r, e) {
    e.style.animationDuration = r.facet(pn).cursorBlinkRate + "ms";
  }
  h(Ag, "setBlinkRate");
  var Ix = ED({
      above: !1,
      markers(r) {
        return r.state.selection.ranges.map((e) => (e.empty ? [] : dn.forRange(r, "cm-selectionBackground", e))).reduce((e, t) => e.concat(t));
      },
      update(r, e) {
        return r.docChanged || r.selectionSet || r.viewportChanged || vD(r);
      },
      class: "cm-selectionLayer",
    }),
    xD = { ".cm-line": { "& ::selection": { backgroundColor: "transparent !important" }, "&::selection": { backgroundColor: "transparent !important" } } };
  CD && (xD[".cm-line"].caretColor = "transparent !important");
  var $x = lr.highest(re.theme(xD)),
    AD = de.define({
      map(r, e) {
        return r == null ? null : e.mapPos(r);
      },
    }),
    tn = Pe.define({
      create() {
        return null;
      },
      update(r, e) {
        return r != null && (r = e.changes.mapPos(r)), e.effects.reduce((t, i) => (i.is(AD) ? i.value : t), r);
      },
    }),
    qx = Ye.fromClass(
      class {
        update(r) {
          var e;
          var t = r.state.field(tn);
          t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), (this.cursor = null)) : (this.cursor || ((this.cursor = this.view.scrollDOM.appendChild(document.createElement("div"))), (this.cursor.className = "cm-dropCursor")), (r.startState.field(tn) != t || r.docChanged || r.geometryChanged) && this.view.requestMeasure(this.measureReq));
        }
        readPos() {
          var r = this.view.state.field(tn),
            e = r != null && this.view.coordsAtPos(r);
          if (!e) return null;
          var t = this.view.scrollDOM.getBoundingClientRect();
          return { left: e.left - t.left + this.view.scrollDOM.scrollLeft, top: e.top - t.top + this.view.scrollDOM.scrollTop, height: e.bottom - e.top };
        }
        drawCursor(r) {
          this.cursor && (r ? ((this.cursor.style.left = r.left + "px"), (this.cursor.style.top = r.top + "px"), (this.cursor.style.height = r.height + "px")) : (this.cursor.style.left = "-100000px"));
        }
        destroy() {
          this.cursor && this.cursor.remove();
        }
        setDropPos(r) {
          this.view.state.field(tn) != r && this.view.dispatch({ effects: AD.of(r) });
        }
        constructor(r) {
          (this.view = r), (this.cursor = null), (this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) });
        }
      },
      {
        eventHandlers: {
          dragover(r) {
            this.setDropPos(this.view.posAtCoords({ x: r.clientX, y: r.clientY }));
          },
          dragleave(r) {
            (r.target == this.view.contentDOM || !this.view.contentDOM.contains(r.relatedTarget)) && this.setDropPos(null);
          },
          dragend() {
            this.setDropPos(null);
          },
          drop() {
            this.setDropPos(null);
          },
        },
      },
    );
  function kD() {
    return [tn, qx];
  }
  h(kD, "dropCursor");
  var F7 = /x/.unicode != null ? "gu" : "g";
  var Is = "-10000px",
    lo =
      ((_class61 = class _class {
        update(e) {
          var t;
          var i = e.state.facet(this.facet),
            n = i.filter((o) => o);
          if (i === this.input) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var o = _step.value;
                o.update && o.update(e);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            return !1;
          }
          var s = [];
          for (var o1 = 0; o1 < n.length; o1++) {
            var u = n[o1],
              l = -1;
            if (u) {
              for (var a = 0; a < this.tooltips.length; a++) {
                var c = this.tooltips[a];
                c && c.create == u.create && (l = a);
              }
              if (l < 0) s[o1] = this.createTooltipView(u);
              else {
                var a1 = (s[o1] = this.tooltipViews[l]);
                a1.update && a1.update(e);
              }
            }
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = this.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var o2 = _step1.value;
              s.indexOf(o2) < 0 && (o2.dom.remove(), (t = o2.destroy) === null || t === void 0 || t.call(o2));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          return (this.input = i), (this.tooltips = n), (this.tooltipViews = s), !0;
        }
        constructor(e, t, i) {
          (this.facet = t), (this.createTooltipView = i), (this.input = e.state.facet(t)), (this.tooltips = this.input.filter((n) => n)), (this.tooltipViews = this.tooltips.map(i));
        }
      }),
      (() => {
        h(_class61, "TooltipViewManager");
      })(),
      _class61);
  function Vx(r) {
    var e = r.win;
    return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
  }
  h(Vx, "windowSpace");
  var Hl = j.define({
      combine: (r) => {
        var e, t, i;
        return { position: W.ios ? "absolute" : ((e = r.find((n) => n.position)) === null || e === void 0 ? void 0 : e.position) || "fixed", parent: ((t = r.find((n) => n.parent)) === null || t === void 0 ? void 0 : t.parent) || null, tooltipSpace: ((i = r.find((n) => n.tooltipSpace)) === null || i === void 0 ? void 0 : i.tooltipSpace) || Vx };
      },
    }),
    kg = new WeakMap(),
    Wx = Ye.fromClass(
      class {
        createContainer() {
          this.parent ? ((this.container = document.createElement("div")), (this.container.style.position = "relative"), (this.container.className = this.view.themeClasses), this.parent.appendChild(this.container)) : (this.container = this.view.dom);
        }
        observeIntersection() {
          if (this.intersectionObserver) {
            this.intersectionObserver.disconnect();
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                this.intersectionObserver.observe(r.dom);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        }
        measureSoon() {
          this.measureTimeout < 0 &&
            (this.measureTimeout = setTimeout(() => {
              (this.measureTimeout = -1), this.maybeMeasure();
            }, 50));
        }
        update(r) {
          r.transactions.length && (this.lastTransaction = Date.now());
          var e = this.manager.update(r);
          e && this.observeIntersection();
          var t = e || r.geometryChanged,
            i = r.state.facet(Hl);
          if (i.position != this.position) {
            this.position = i.position;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                n.dom.style.position = this.position;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            t = !0;
          }
          if (i.parent != this.parent) {
            this.parent && this.container.remove(), (this.parent = i.parent), this.createContainer();
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = this.manager.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var n1 = _step1.value;
                this.container.appendChild(n1.dom);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            t = !0;
          } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
          t && this.maybeMeasure();
        }
        createTooltip(r) {
          var e = r.create(this.view);
          if ((e.dom.classList.add("cm-tooltip"), r.arrow && !e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow"))) {
            var t = document.createElement("div");
            (t.className = "cm-tooltip-arrow"), e.dom.appendChild(t);
          }
          return (e.dom.style.position = this.position), (e.dom.style.top = Is), this.container.appendChild(e.dom), e.mount && e.mount(this.view), e;
        }
        destroy() {
          var r, e;
          this.view.win.removeEventListener("resize", this.measureSoon);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.dom.remove(), (r = t.destroy) === null || r === void 0 || r.call(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (e = this.intersectionObserver) === null || e === void 0 || e.disconnect(), clearTimeout(this.measureTimeout);
        }
        readMeasure() {
          var r = this.view.dom.getBoundingClientRect();
          return {
            editor: r,
            parent: this.parent ? this.container.getBoundingClientRect() : r,
            pos: this.manager.tooltips.map((e, t) => {
              var i = this.manager.tooltipViews[t];
              return i.getCoords ? i.getCoords(e.pos) : this.view.coordsAtPos(e.pos);
            }),
            size: this.manager.tooltipViews.map((param) => {
              var e = param.dom;
              return e.getBoundingClientRect();
            }),
            space: this.view.state.facet(Hl).tooltipSpace(this.view),
          };
        }
        writeMeasure(r) {
          var e;
          var t = r.editor,
            i = r.space,
            n = [];
          for (var s = 0; s < this.manager.tooltips.length; s++) {
            var o = this.manager.tooltips[s],
              u = this.manager.tooltipViews[s],
              l = u.dom,
              a = r.pos[s],
              c = r.size[s];
            if (!a || a.bottom <= Math.max(t.top, i.top) || a.top >= Math.min(t.bottom, i.bottom) || a.right < Math.max(t.left, i.left) - 0.1 || a.left > Math.min(t.right, i.right) + 0.1) {
              l.style.top = Is;
              continue;
            }
            var f = o.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null,
              d = f ? 7 : 0,
              p = c.right - c.left,
              m = (e = kg.get(u)) !== null && e !== void 0 ? e : c.bottom - c.top,
              F = u.offset || Hx,
              g = this.view.textDirection == Se.LTR,
              D = c.width > i.right - i.left ? (g ? i.left : i.right - c.width) : g ? Math.min(a.left - (f ? 14 : 0) + F.x, i.right - p) : Math.max(i.left, a.left - p + (f ? 14 : 0) - F.x),
              b = !!o.above;
            !o.strictSide && (b ? a.top - (c.bottom - c.top) - F.y < i.top : a.bottom + (c.bottom - c.top) + F.y > i.bottom) && b == i.bottom - a.bottom > a.top - i.top && (b = !b);
            var A = (b ? a.top - i.top : i.bottom - a.bottom) - d;
            if (A < m && u.resize !== !1) {
              if (A < this.view.defaultLineHeight) {
                l.style.top = Is;
                continue;
              }
              kg.set(u, m), (l.style.height = (m = A) + "px");
            } else l.style.height && (l.style.height = "");
            var v = b ? a.top - m - d - F.y : a.bottom + d + F.y,
              C = D + p;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (u.overlap !== !0)
              try {
                for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var w = _step.value;
                  w.left < C && w.right > D && w.top < v + m && w.bottom > v && (v = b ? w.top - m - 2 - d : w.bottom + d + 2);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            this.position == "absolute" ? ((l.style.top = v - r.parent.top + "px"), (l.style.left = D - r.parent.left + "px")) : ((l.style.top = v + "px"), (l.style.left = D + "px")),
              f && (f.style.left = "".concat(a.left + (g ? F.x : -F.x) - (D + 14 - 7), "px")),
              u.overlap !== !0 && n.push({ left: D, top: v, right: C, bottom: v + m }),
              l.classList.toggle("cm-tooltip-above", b),
              l.classList.toggle("cm-tooltip-below", !b),
              u.positioned && u.positioned(r.space);
          }
        }
        maybeMeasure() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && ((this.inView = this.view.inView), !this.inView)))
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                r.dom.style.top = Is;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        constructor(r) {
          (this.view = r), (this.inView = !0), (this.lastTransaction = 0), (this.measureTimeout = -1);
          var e = r.state.facet(Hl);
          (this.position = e.position),
            (this.parent = e.parent),
            (this.classes = r.themeClasses),
            this.createContainer(),
            (this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }),
            (this.manager = new lo(r, Ra, (t) => this.createTooltip(t))),
            (this.intersectionObserver =
              typeof IntersectionObserver == "function"
                ? new IntersectionObserver(
                    (t) => {
                      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
                    },
                    { threshold: [1] },
                  )
                : null),
            this.observeIntersection(),
            r.win.addEventListener("resize", (this.measureSoon = this.measureSoon.bind(this))),
            this.maybeMeasure();
        }
      },
      {
        eventHandlers: {
          scroll() {
            this.maybeMeasure();
          },
        },
      },
    ),
    zx = re.baseTheme({
      ".cm-tooltip": { zIndex: 100, boxSizing: "border-box" },
      "&light .cm-tooltip": { border: "1px solid #bbb", backgroundColor: "#f5f5f5" },
      "&light .cm-tooltip-section:not(:first-child)": { borderTop: "1px solid #bbb" },
      "&dark .cm-tooltip": { backgroundColor: "#333338", color: "white" },
      ".cm-tooltip-arrow": {
        height: "7px",
        width: "".concat(7 * 2, "px"),
        position: "absolute",
        zIndex: -1,
        overflow: "hidden",
        "&:before, &:after": { content: "''", position: "absolute", width: 0, height: 0, borderLeft: "7px solid transparent", borderRight: "7px solid transparent" },
        ".cm-tooltip-above &": { bottom: "-7px", "&:before": { borderTop: "7px solid #bbb" }, "&:after": { borderTop: "7px solid #f5f5f5", bottom: "1px" } },
        ".cm-tooltip-below &": { top: "-7px", "&:before": { borderBottom: "7px solid #bbb" }, "&:after": { borderBottom: "7px solid #f5f5f5", top: "1px" } },
      },
      "&dark .cm-tooltip .cm-tooltip-arrow": { "&:before": { borderTopColor: "#333338", borderBottomColor: "#333338" }, "&:after": { borderTopColor: "transparent", borderBottomColor: "transparent" } },
    }),
    Hx = { x: 0, y: 0 },
    Ra = j.define({ enables: [Wx, zx] }),
    ao = j.define(),
    xa =
      ((_r45 = class r {
        static create(e) {
          return new r(e);
        }
        createHostedView(e) {
          var t = e.create(this.view);
          return t.dom.classList.add("cm-tooltip-section"), this.dom.appendChild(t.dom), this.mounted && t.mount && t.mount(this.view), t;
        }
        mount(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.mount && t.mount(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.mounted = !0;
        }
        positioned(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.positioned && t.positioned(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        update(e) {
          this.manager.update(e);
        }
        destroy() {
          var e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              (e = t.destroy) === null || e === void 0 || e.call(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        constructor(e) {
          (this.view = e), (this.mounted = !1), (this.dom = document.createElement("div")), this.dom.classList.add("cm-tooltip-hover"), (this.manager = new lo(e, ao, (t) => this.createHostedView(t)));
        }
      }),
      (() => {
        h(_r45, "HoverTooltipHost");
      })(),
      _r45),
    jx = Ra.compute([ao], (r) => {
      var e = r.facet(ao).filter((t) => t);
      return e.length === 0 ? null : { pos: Math.min(...e.map((t) => t.pos)), end: Math.max(...e.filter((t) => t.end != null).map((t) => t.end)), create: xa.create, above: e[0].above, arrow: e.some((t) => t.arrow) };
    }),
    Aa =
      ((_class62 = class _class {
        update() {
          this.pending && ((this.pending = null), clearTimeout(this.restartTimeout), (this.restartTimeout = setTimeout(() => this.startHover(), 20)));
        }
        get active() {
          return this.view.state.field(this.field);
        }
        checkHover() {
          if (((this.hoverTimeout = -1), this.active)) return;
          var e = Date.now() - this.lastMove.time;
          e < this.hoverTime ? (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e)) : this.startHover();
        }
        startHover() {
          var _o;
          clearTimeout(this.restartTimeout);
          var _this = this,
            e = _this.lastMove,
            t = this.view.contentDOM.contains(e.target) ? this.view.posAtCoords(e) : null;
          if (t == null) return;
          var i = this.view.coordsAtPos(t);
          if (i == null || e.y < i.top || e.y > i.bottom || e.x < i.left - this.view.defaultCharacterWidth || e.x > i.right + this.view.defaultCharacterWidth) return;
          var n = this.view.bidiSpans(this.view.state.doc.lineAt(t)).find((u) => u.from <= t && u.to >= t),
            s = n && n.dir == Se.RTL ? -1 : 1,
            o = this.source(this.view, t, e.x < i.left ? -s : s);
          if ((_o = o) === null || _o === void 0 ? void 0 : _o.then) {
            var u = (this.pending = { pos: t });
            o.then(
              (l) => {
                this.pending == u && ((this.pending = null), l && this.view.dispatch({ effects: this.setHover.of(l) }));
              },
              (l) => ft(this.view.state, l, "hover tooltip"),
            );
          } else o && this.view.dispatch({ effects: this.setHover.of(o) });
        }
        mousemove(e) {
          var t;
          (this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }), this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
          var i = this.active;
          if ((i && !Sg(this.lastMove.target)) || this.pending) {
            var _i;
            var _ref = i || this.pending,
              n = _ref.pos,
              s = (t = (_i = i) === null || _i === void 0 ? void 0 : _i.end) !== null && t !== void 0 ? t : n;
            (n == s ? this.view.posAtCoords(this.lastMove) != n : !Yx(this.view, n, s, e.clientX, e.clientY, 6)) && (this.view.dispatch({ effects: this.setHover.of(null) }), (this.pending = null));
          }
        }
        mouseleave(e) {
          clearTimeout(this.hoverTimeout), (this.hoverTimeout = -1), this.active && !Sg(e.relatedTarget) && this.view.dispatch({ effects: this.setHover.of(null) });
        }
        destroy() {
          clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
        }
        constructor(e, t, i, n, s) {
          (this.view = e),
            (this.source = t),
            (this.field = i),
            (this.setHover = n),
            (this.hoverTime = s),
            (this.hoverTimeout = -1),
            (this.restartTimeout = -1),
            (this.pending = null),
            (this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }),
            (this.checkHover = this.checkHover.bind(this)),
            e.dom.addEventListener("mouseleave", (this.mouseleave = this.mouseleave.bind(this))),
            e.dom.addEventListener("mousemove", (this.mousemove = this.mousemove.bind(this)));
        }
      }),
      (() => {
        h(_class62, "HoverPlugin");
      })(),
      _class62);
  function Sg(r) {
    for (var e = r; e; e = e.parentNode) if (e.nodeType == 1 && e.classList.contains("cm-tooltip")) return !0;
    return !1;
  }
  h(Sg, "isInTooltip");
  function Yx(r, e, t, i, n, s) {
    var o = document.createRange(),
      u = r.domAtPos(e),
      l = r.domAtPos(t);
    o.setEnd(l.node, l.offset), o.setStart(u.node, u.offset);
    var a = o.getClientRects();
    o.detach();
    for (var c = 0; c < a.length; c++) {
      var f = a[c];
      if (Math.max(f.top - n, n - f.bottom, f.left - i, i - f.right) <= s) return !0;
    }
    return !1;
  }
  h(Yx, "isOverRange");
  function SD(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = de.define(),
      i = Pe.define({
        create() {
          return null;
        },
        update(n, s) {
          if (n && ((e.hideOnChange && (s.docChanged || s.selection)) || (e.hideOn && e.hideOn(s, n)))) return null;
          if (n && s.docChanged) {
            var o = s.changes.mapPos(n.pos, -1, We.TrackDel);
            if (o == null) return null;
            var u = Object.assign(Object.create(null), n);
            (u.pos = o), n.end != null && (u.end = s.changes.mapPos(n.end)), (n = u);
          }
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = s.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var o1 = _step.value;
              o1.is(t) && (n = o1.value), o1.is(Jx) && (n = null);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n;
        },
        provide: (n) => ao.from(n),
      });
    return [i, Ye.define((n) => new Aa(n, r, i, t, e.hoverTime || 300)), jx];
  }
  h(SD, "hoverTooltip");
  var Jx = de.define();
  var wg = j.define({
    combine(r) {
      var e, t;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          (e = e || i.topContainer), (t = t || i.bottomContainer);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return { topContainer: e, bottomContainer: t };
    },
  });
  var Gx = Ye.fromClass(
      class {
        update(r) {
          var e = r.state.facet(wg);
          this.top.container != e.topContainer && (this.top.sync([]), (this.top = new dr(r.view, !0, e.topContainer))), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), (this.bottom = new dr(r.view, !1, e.bottomContainer))), this.top.syncClasses(), this.bottom.syncClasses();
          var t = r.state.facet(ho);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (t != this.input) {
            var i = t.filter((l) => l),
              n = [],
              s = [],
              o = [],
              u = [];
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
                var l = _step.value;
                var a = this.specs.indexOf(l),
                  c = void 0;
                a < 0 ? ((c = l(r.view)), u.push(c)) : ((c = this.panels[a]), c.update && c.update(r)), n.push(c), (c.top ? s : o).push(c);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            (this.specs = i), (this.panels = n), this.top.sync(s), this.bottom.sync(o);
            var _iteratorNormalCompletion2 = true,
              _didIteratorError2 = false,
              _iteratorError2 = undefined;
            try {
              for (var _iterator1 = u[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
                var l1 = _step1.value;
                l1.dom.classList.add("cm-panel"), l1.mount && l1.mount();
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          } else
            try {
              for (var _iterator2 = this.panels[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step2.value;
                i1.update && i1.update(r);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator2.return != null) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        destroy() {
          this.top.sync([]), this.bottom.sync([]);
        }
        constructor(r) {
          (this.input = r.state.facet(ho)), (this.specs = this.input.filter((t) => t)), (this.panels = this.specs.map((t) => t(r)));
          var e = r.state.facet(wg);
          (this.top = new dr(r, !0, e.topContainer)), (this.bottom = new dr(r, !1, e.bottomContainer)), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.dom.classList.add("cm-panel"), t.mount && t.mount();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      },
      {
        provide: (r) =>
          re.scrollMargins.of((e) => {
            var t = e.plugin(r);
            return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
          }),
      },
    ),
    dr =
      ((_class63 = class _class {
        sync(e) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.destroy && e.indexOf(t) < 0 && t.destroy();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (this.panels = e), this.syncDOM();
        }
        syncDOM() {
          if (this.panels.length == 0) {
            this.dom && (this.dom.remove(), (this.dom = void 0));
            return;
          }
          if (!this.dom) {
            (this.dom = document.createElement("div")), (this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom"), (this.dom.style[this.top ? "top" : "bottom"] = "0");
            var t = this.container || this.view.dom;
            t.insertBefore(this.dom, this.top ? t.firstChild : null);
          }
          var e = this.dom.firstChild;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t1 = _step.value;
              if (t1.dom.parentNode == this.dom) {
                for (; e != t1.dom; ) e = Qg(e);
                e = e.nextSibling;
              } else this.dom.insertBefore(t1.dom, e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (; e; ) e = Qg(e);
        }
        scrollMargin() {
          return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
        }
        syncClasses() {
          if (!(!this.container || this.classes == this.view.themeClasses)) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.classes.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var e = _step.value;
                e && this.container.classList.remove(e);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = (this.classes = this.view.themeClasses).split(" ")[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var e1 = _step1.value;
                e1 && this.container.classList.add(e1);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
        constructor(e, t, i) {
          (this.view = e), (this.top = t), (this.container = i), (this.dom = void 0), (this.classes = ""), (this.panels = []), this.syncClasses();
        }
      }),
      (() => {
        h(_class63, "PanelGroup");
      })(),
      _class63);
  function Qg(r) {
    var e = r.nextSibling;
    return r.remove(), e;
  }
  h(Qg, "rm");
  var ho = j.define({ enables: Gx }),
    dt =
      ((_class64 = class _class extends Wt {
        compare(e) {
          return this == e || (this.constructor == e.constructor && this.eq(e));
        }
        eq(e) {
          return !1;
        }
        destroy(e) {}
      }),
      (() => {
        h(_class64, "GutterMarker");
      })(),
      _class64);
  dt.prototype.elementClass = "";
  dt.prototype.toDOM = void 0;
  dt.prototype.mapMode = We.TrackBefore;
  dt.prototype.startSide = dt.prototype.endSide = -1;
  dt.prototype.point = !0;
  var zs = j.define();
  var Hs = j.define();
  var ka = j.define({ combine: (r) => r.some((e) => e) });
  function Xx(r) {
    var e = [Kx];
    return r && r.fixed === !1 && e.push(ka.of(!0)), e;
  }
  h(Xx, "gutters");
  var Kx = Ye.fromClass(
    class {
      update(r) {
        if (this.updateGutters(r)) {
          var e = this.prevViewport,
            t = r.view.viewport,
            i = Math.min(e.to, t.to) - Math.max(e.from, t.from);
          this.syncGutters(i < (t.to - t.from) * 0.8);
        }
        r.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight + "px"), this.view.state.facet(ka) != !this.fixed && ((this.fixed = !this.fixed), (this.dom.style.position = this.fixed ? "sticky" : "")), (this.prevViewport = r.view.viewport);
      }
      syncGutters(r) {
        var e = this.dom.nextSibling;
        r && this.dom.remove();
        var t = Be.iter(this.view.state.facet(zs), this.view.viewport.from),
          i = [],
          n = this.gutters.map((s) => new wa(s, this.view.viewport, -this.view.documentPadding.top));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.view.viewportLineBlocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            if ((i.length && (i = []), Array.isArray(s.type))) {
              var o = !0;
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined,
                _iteratorNormalCompletion2 = true,
                _didIteratorError2 = false,
                _iteratorError2 = undefined;
              try {
                for (var _iterator1 = s.type[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
                  var u = _step1.value;
                  if (u.type == ke.Text && o) {
                    Sa(t, i, u.from);
                    var _iteratorNormalCompletion3 = true,
                      _didIteratorError3 = false,
                      _iteratorError3 = undefined;
                    try {
                      for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion3 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion3 = true) {
                        var l = _step2.value;
                        l.line(this.view, u, i);
                      }
                    } catch (err) {
                      _didIteratorError3 = true;
                      _iteratorError3 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion3 && _iterator2.return != null) {
                          _iterator2.return();
                        }
                      } finally {
                        if (_didIteratorError3) {
                          throw _iteratorError3;
                        }
                      }
                    }
                    o = !1;
                  } else if (u.widget)
                    try {
                      for (var _iterator3 = n[Symbol.iterator](), _step3; !(_iteratorNormalCompletion1 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion1 = true) {
                        var l1 = _step3.value;
                        l1.widget(this.view, u);
                      }
                    } catch (err) {
                      _didIteratorError1 = true;
                      _iteratorError1 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion1 && _iterator3.return != null) {
                          _iterator3.return();
                        }
                      } finally {
                        if (_didIteratorError1) {
                          throw _iteratorError1;
                        }
                      }
                    }
                }
              } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError2) {
                    throw _iteratorError2;
                  }
                }
              }
            } else if (s.type == ke.Text) {
              Sa(t, i, s.from);
              var _iteratorNormalCompletion4 = true,
                _didIteratorError4 = false,
                _iteratorError4 = undefined;
              try {
                for (var _iterator4 = n[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                  var o1 = _step4.value;
                  o1.line(this.view, s, i);
                }
              } catch (err) {
                _didIteratorError4 = true;
                _iteratorError4 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                    _iterator4.return();
                  }
                } finally {
                  if (_didIteratorError4) {
                    throw _iteratorError4;
                  }
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var _iteratorNormalCompletion5 = true,
          _didIteratorError5 = false,
          _iteratorError5 = undefined;
        try {
          for (var _iterator5 = n[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
            var s1 = _step5.value;
            s1.finish();
          }
        } catch (err) {
          _didIteratorError5 = true;
          _iteratorError5 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
              _iterator5.return();
            }
          } finally {
            if (_didIteratorError5) {
              throw _iteratorError5;
            }
          }
        }
        r && this.view.scrollDOM.insertBefore(this.dom, e);
      }
      updateGutters(r) {
        var e = r.startState.facet(Hs),
          t = r.state.facet(Hs),
          i = r.docChanged || r.heightChanged || r.viewportChanged || !Be.eq(r.startState.facet(zs), r.state.facet(zs), r.view.viewport.from, r.view.viewport.to);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (e == t)
          try {
            for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.update(r) && (i = !0);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else {
          i = !0;
          var n1 = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step1.value;
              var o = e.indexOf(s);
              o < 0 ? n1.push(new co(this.view, s)) : (this.gutters[o].update(r), n1.push(this.gutters[o]));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator2 = this.gutters[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var s1 = _step2.value;
              s1.dom.remove(), n1.indexOf(s1) < 0 && s1.destroy();
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          var _iteratorNormalCompletion3 = true,
            _didIteratorError3 = false,
            _iteratorError3 = undefined;
          try {
            for (var _iterator3 = n1[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var s2 = _step3.value;
              this.dom.appendChild(s2.dom);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
          this.gutters = n1;
        }
        return i;
      }
      destroy() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var r = _step.value;
            r.destroy();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.dom.remove();
      }
      constructor(r) {
        (this.view = r), (this.prevViewport = r.viewport), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutters"), this.dom.setAttribute("aria-hidden", "true"), (this.dom.style.minHeight = this.view.contentHeight + "px"), (this.gutters = r.state.facet(Hs).map((e) => new co(r, e)));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            this.dom.appendChild(e.dom);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.fixed = !r.state.facet(ka)), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), r.scrollDOM.insertBefore(this.dom, r.contentDOM);
      }
    },
    {
      provide: (r) =>
        re.scrollMargins.of((e) => {
          var t = e.plugin(r);
          return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == Se.LTR ? { left: t.dom.offsetWidth } : { right: t.dom.offsetWidth };
        }),
    },
  );
  function _g(r) {
    return Array.isArray(r) ? r : [r];
  }
  h(_g, "asArray");
  function Sa(r, e, t) {
    for (; r.value && r.from <= t; ) r.from == t && e.push(r.value), r.next();
  }
  h(Sa, "advanceCursor");
  var wa =
      ((_class65 = class _class {
        addElement(e, t, i) {
          var _this = this,
            n = _this.gutter,
            s = t.top - this.height;
          if (this.i == n.elements.length) {
            var o = new fo(e, t.height, s, i);
            n.elements.push(o), n.dom.appendChild(o.dom);
          } else n.elements[this.i].update(e, t.height, s, i);
          (this.height = t.bottom), this.i++;
        }
        line(e, t, i) {
          var n = [];
          Sa(this.cursor, n, t.from), i.length && (n = n.concat(i));
          var s = this.gutter.config.lineMarker(e, t, n);
          s && n.unshift(s);
          var o = this.gutter;
          (n.length == 0 && !o.config.renderEmptyElements) || this.addElement(e, t, n);
        }
        widget(e, t) {
          var i = this.gutter.config.widgetMarker(e, t.widget, t);
          i && this.addElement(e, t, [i]);
        }
        finish() {
          var e = this.gutter;
          for (; e.elements.length > this.i; ) {
            var t = e.elements.pop();
            e.dom.removeChild(t.dom), t.destroy();
          }
        }
        constructor(e, t, i) {
          (this.gutter = e), (this.height = i), (this.i = 0), (this.cursor = Be.iter(e.markers, t.from));
        }
      }),
      (() => {
        h(_class65, "UpdateContext");
      })(),
      _class65),
    co =
      ((_class66 = class _class {
        update(e) {
          var t = this.markers;
          if (((this.markers = _g(this.config.markers(e.view))), this.spacer && this.config.updateSpacer)) {
            var n = this.config.updateSpacer(this.spacer.markers[0], e);
            n != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [n]);
          }
          var i = e.view.viewport;
          return !Be.eq(this.markers, t, i.from, i.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
        }
        destroy() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              e.destroy();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        constructor(e, t) {
          var _this = this,
            _loop = function (i) {
              _this.dom.addEventListener(i, (n) => {
                var s = n.target,
                  o;
                if (s != _this.dom && _this.dom.contains(s)) {
                  for (; s.parentNode != _this.dom; ) s = s.parentNode;
                  var l = s.getBoundingClientRect();
                  o = (l.top + l.bottom) / 2;
                } else o = n.clientY;
                var u = e.lineBlockAtHeight(o - e.documentTop);
                t.domEventHandlers[i](e, u, n) && n.preventDefault();
              });
            };
          (this.view = e), (this.config = t), (this.elements = []), (this.spacer = null), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : ""));
          for (var i in t.domEventHandlers) _loop(i);
          (this.markers = _g(t.markers(e))), t.initialSpacer && ((this.spacer = new fo(e, 0, 0, [t.initialSpacer(e)])), this.dom.appendChild(this.spacer.dom), (this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none"));
        }
      }),
      (() => {
        h(_class66, "SingleGutterView");
      })(),
      _class66),
    fo =
      ((_class67 = class _class {
        update(e, t, i, n) {
          this.height != t && (this.dom.style.height = (this.height = t) + "px"), this.above != i && (this.dom.style.marginTop = (this.above = i) ? i + "px" : ""), Zx(this.markers, n) || this.setMarkers(e, n);
        }
        setMarkers(e, t) {
          var i = "cm-gutterElement",
            n = this.dom.firstChild;
          for (var s = 0, o = 0; ; ) {
            var u = o,
              l = s < t.length ? t[s++] : null,
              a = !1;
            if (l) {
              var c = l.elementClass;
              c && (i += " " + c);
              for (var f = o; f < this.markers.length; f++)
                if (this.markers[f].compare(l)) {
                  (u = f), (a = !0);
                  break;
                }
            } else u = this.markers.length;
            for (; o < u; ) {
              var c1 = this.markers[o++];
              if (c1.toDOM) {
                c1.destroy(n);
                var f1 = n.nextSibling;
                n.remove(), (n = f1);
              }
            }
            if (!l) break;
            l.toDOM && (a ? (n = n.nextSibling) : this.dom.insertBefore(l.toDOM(e), n)), a && o++;
          }
          (this.dom.className = i), (this.markers = t);
        }
        destroy() {
          this.setMarkers(null, []);
        }
        constructor(e, t, i, n) {
          (this.height = -1), (this.above = 0), (this.markers = []), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutterElement"), this.update(e, t, i, n);
        }
      }),
      (() => {
        h(_class67, "GutterElement");
      })(),
      _class67);
  function Zx(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (!r[t].compare(e[t])) return !1;
    return !0;
  }
  h(Zx, "sameMarkers");
  var eA = j.define(),
    pr = j.define({
      combine(r) {
        return zt(
          r,
          { formatNumber: String, domEventHandlers: {} },
          {
            domEventHandlers(e, t) {
              var _loop = function (n) {
                var s = i[n],
                  o = t[n];
                i[n] = s ? (u, l, a) => s(u, l, a) || o(u, l, a) : o;
              };
              var i = Object.assign({}, e);
              for (var n in t) _loop(n);
              return i;
            },
          },
        );
      },
    }),
    on =
      ((_class68 = class _class extends dt {
        eq(e) {
          return this.number == e.number;
        }
        toDOM() {
          return document.createTextNode(this.number);
        }
        constructor(e) {
          super(), (this.number = e);
        }
      }),
      (() => {
        h(_class68, "NumberMarker");
      })(),
      _class68);
  function jl(r, e) {
    return r.state.facet(pr).formatNumber(e, r.state);
  }
  h(jl, "formatNumber");
  var tA = Hs.compute([pr], (r) => ({
    class: "cm-lineNumbers",
    renderEmptyElements: !1,
    markers(e) {
      return e.state.facet(eA);
    },
    lineMarker(e, t, i) {
      return i.some((n) => n.toDOM) ? null : new on(jl(e, e.state.doc.lineAt(t.from).number));
    },
    widgetMarker: () => null,
    lineMarkerChange: (e) => e.startState.facet(pr) != e.state.facet(pr),
    initialSpacer(e) {
      return new on(jl(e, Ug(e.state.doc.lines)));
    },
    updateSpacer(e, t) {
      var i = jl(t.view, Ug(t.view.state.doc.lines));
      return i == e.number ? e : new on(i);
    },
    domEventHandlers: r.facet(pr).domEventHandlers,
  }));
  function wD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [pr.of(r), Xx(), tA];
  }
  h(wD, "lineNumbers");
  function Ug(r) {
    var e = 9;
    for (; e < r; ) e = e * 10 + 9;
    return e;
  }
  h(Ug, "maxLineNumber");
  var iA = new (class extends dt {
      constructor() {
        super(...arguments), (this.elementClass = "cm-activeLineGutter");
      }
    })(),
    rA = zs.compute(["selection"], (r) => {
      var e = [],
        t = -1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = r.doc.lineAt(i.head).from;
          n > t && ((t = n), e.push(iA.range(n)));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return Be.of(e);
    });
  function QD() {
    return rA;
  }
  h(QD, "highlightActiveLineGutter");
  var nA = 0,
    mn =
      ((_class69 = class _class {
        constructor(e, t) {
          (this.from = e), (this.to = t);
        }
      }),
      (() => {
        h(_class69, "Range");
      })(),
      _class69),
    ue =
      ((_class70 = class _class {
        add(e) {
          if (this.perNode) throw new RangeError("Can't add per-node props to node types");
          return (
            typeof e != "function" && (e = Ie.match(e)),
            (t) => {
              var i = e(t);
              return i === void 0 ? null : [this, i];
            }
          );
        }
        constructor(ref) {
          var e = ref === void 0 ? {} : ref;
          (this.id = nA++),
            (this.perNode = !!e.perNode),
            (this.deserialize =
              e.deserialize ||
              (() => {
                throw new Error("This node type doesn't define a deserialize function");
              }));
        }
      }),
      (() => {
        h(_class70, "NodeProp");
      })(),
      _class70);
  ue.closedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.openedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.group = new ue({ deserialize: (r) => r.split(" ") });
  ue.contextHash = new ue({ perNode: !0 });
  ue.lookAhead = new ue({ perNode: !0 });
  ue.mounted = new ue({ perNode: !0 });
  var sA = Object.create(null),
    Ie =
      ((_r46 = class r {
        static define(e) {
          var t = e.props && e.props.length ? Object.create(null) : sA,
            i = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0),
            n = new r(e.name || "", t, e.id, i);
          if (e.props) {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = e.props[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var s = _step.value;
                if ((Array.isArray(s) || (s = s(n)), s)) {
                  if (s[0].perNode) throw new RangeError("Can't store a per-node prop on a node type");
                  t[s[0].id] = s[1];
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
          return n;
        }
        prop(e) {
          return this.props[e.id];
        }
        get isTop() {
          return (this.flags & 1) > 0;
        }
        get isSkipped() {
          return (this.flags & 2) > 0;
        }
        get isError() {
          return (this.flags & 4) > 0;
        }
        get isAnonymous() {
          return (this.flags & 8) > 0;
        }
        is(e) {
          if (typeof e == "string") {
            if (this.name == e) return !0;
            var t = this.prop(ue.group);
            return t ? t.indexOf(e) > -1 : !1;
          }
          return this.id == e;
        }
        static match(e) {
          var t = Object.create(null);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          for (var i in e)
            try {
              for (var _iterator = i.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                t[n] = e[i];
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          return (i) => {
            for (var n = i.prop(ue.group), s = -1; s < (n ? n.length : 0); s++) {
              var o = t[s < 0 ? i.name : n[s]];
              if (o) return o;
            }
          };
        }
        constructor(e, t, i, ref) {
          var n = ref === void 0 ? 0 : ref;
          (this.name = e), (this.props = t), (this.id = i), (this.flags = n);
        }
      }),
      (() => {
        h(_r46, "NodeType");
      })(),
      _r46);
  Ie.none = new Ie("", Object.create(null), 0, 8);
  var gn =
      ((_r47 = class r {
        extend() {
          for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
            e[_key] = arguments[_key];
          }
          var t = [];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.types[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              var n = null;
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var s = _step1.value;
                  var o = s(i);
                  o && (n || (n = Object.assign({}, i.props)), (n[o[0].id] = o[1]));
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
              t.push(n ? new Ie(i.name, n, i.id, i.flags) : i);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return new r(t);
        }
        constructor(e) {
          this.types = e;
          for (var t = 0; t < e.length; t++) if (e[t].id != t) throw new RangeError("Node type ids should correspond to array positions when creating a node set");
        }
      }),
      (() => {
        h(_r47, "NodeSet");
      })(),
      _r47),
    go = new WeakMap(),
    _D = new WeakMap(),
    Le;
  (function (r) {
    (r[(r.ExcludeBuffers = 1)] = "ExcludeBuffers"), (r[(r.IncludeAnonymous = 2)] = "IncludeAnonymous"), (r[(r.IgnoreMounts = 4)] = "IgnoreMounts"), (r[(r.IgnoreOverlays = 8)] = "IgnoreOverlays");
  })(Le || (Le = {}));
  var we =
    ((_r48 = class r {
      toString() {
        var e = this.prop(ue.mounted);
        if (e && !e.overlay) return e.tree.toString();
        var t = "";
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            var n = i.toString();
            n && (t && (t += ","), (t += n));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
      }
      cursor() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        return new Dr(this.topNode, e);
      }
      cursorAt(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
          i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        var n = go.get(this) || this.topNode,
          s = new Dr(n);
        return s.moveTo(e, t), go.set(this, s._tree), s;
      }
      get topNode() {
        return new xi(this, 0, 0, null);
      }
      resolve(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var i = gr(go.get(this) || this.topNode, e, t, !1);
        return go.set(this, i), i;
      }
      resolveInner(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var i = gr(_D.get(this) || this.topNode, e, t, !0);
        return _D.set(this, i), i;
      }
      iterate(e) {
        var t = e.enter,
          i = e.leave,
          tmp = e.from,
          n = tmp === void 0 ? 0 : tmp,
          tmp1 = e.to,
          s = tmp1 === void 0 ? this.length : tmp1,
          o = e.mode || 0,
          u = (o & Le.IncludeAnonymous) > 0;
        for (var l = this.cursor(o | Le.IncludeAnonymous); ; ) {
          var a = !1;
          if (l.from <= s && l.to >= n && ((!u && l.type.isAnonymous) || t(l) !== !1)) {
            if (l.firstChild()) continue;
            a = !0;
          }
          for (; a && i && (u || !l.type.isAnonymous) && i(l), !l.nextSibling(); ) {
            if (!l.parent()) return;
            a = !0;
          }
        }
      }
      prop(e) {
        return e.perNode ? (this.props ? this.props[e.id] : void 0) : this.type.prop(e);
      }
      get propValues() {
        var e = [];
        if (this.props) for (var t in this.props) e.push([+t, this.props[t]]);
        return e;
      }
      balance() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return this.children.length <= 8 ? this : $a(Ie.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, i, n) => new r(this.type, t, i, n, this.propValues), e.makeTree || ((t, i, n) => new r(Ie.none, t, i, n)));
      }
      static build(e) {
        return oA(e);
      }
      constructor(e, t, i, n, s) {
        if (((this.type = e), (this.children = t), (this.positions = i), (this.length = n), (this.props = null), s && s.length)) {
          this.props = Object.create(null);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _sliced_to_array(_step.value, 2),
                o = _step_value[0],
                u = _step_value[1];
              this.props[typeof o == "number" ? o : o.id] = u;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      }
    }),
    (() => {
      h(_r48, "Tree");
    })(),
    _r48);
  we.empty = new we(Ie.none, [], [], 0);
  var Na =
      ((_r49 = class r {
        get id() {
          return this.buffer[this.index - 4];
        }
        get start() {
          return this.buffer[this.index - 3];
        }
        get end() {
          return this.buffer[this.index - 2];
        }
        get size() {
          return this.buffer[this.index - 1];
        }
        get pos() {
          return this.index;
        }
        next() {
          this.index -= 4;
        }
        fork() {
          return new r(this.buffer, this.index);
        }
        constructor(e, t) {
          (this.buffer = e), (this.index = t);
        }
      }),
      (() => {
        h(_r49, "FlatBufferCursor");
      })(),
      _r49),
    vi =
      ((_r50 = class r {
        get type() {
          return Ie.none;
        }
        toString() {
          var e = [];
          for (var t = 0; t < this.buffer.length; ) e.push(this.childString(t)), (t = this.buffer[t + 3]);
          return e.join(",");
        }
        childString(e) {
          var t = this.buffer[e],
            i = this.buffer[e + 3],
            n = this.set.types[t],
            s = n.name;
          if ((/\W/.test(s) && !n.isError && (s = JSON.stringify(s)), (e += 4), i == e)) return s;
          var o = [];
          for (; e < i; ) o.push(this.childString(e)), (e = this.buffer[e + 3]);
          return s + "(" + o.join(",") + ")";
        }
        findChild(e, t, i, n, s) {
          var _this = this,
            o = _this.buffer,
            u = -1;
          for (var l = e; l != t && !(LD(s, n, o[l + 1], o[l + 2]) && ((u = l), i > 0)); l = o[l + 3]);
          return u;
        }
        slice(e, t, i) {
          var n = this.buffer,
            s = new Uint16Array(t - e),
            o = 0;
          for (var u = e, l = 0; u < t; ) {
            (s[l++] = n[u++]), (s[l++] = n[u++] - i);
            var a = (s[l++] = n[u++] - i);
            (s[l++] = n[u++] - e), (o = Math.max(o, a));
          }
          return new r(s, o, this.set);
        }
        constructor(e, t, i) {
          (this.buffer = e), (this.length = t), (this.set = i);
        }
      }),
      (() => {
        h(_r50, "TreeBuffer");
      })(),
      _r50);
  function LD(r, e, t, i) {
    switch (r) {
      case -2:
        return t < e;
      case -1:
        return i >= e && t < e;
      case 0:
        return t < e && i > e;
      case 1:
        return t <= e && i > e;
      case 2:
        return i > e;
      case 4:
        return !0;
    }
  }
  h(LD, "checkSide");
  function OD(r, e) {
    var t = r.childBefore(e);
    for (; t; ) {
      var i = t.lastChild;
      if (!i || i.to != t.to) break;
      i.type.isError && i.from == i.to ? ((r = t), (t = i.prevSibling)) : (t = i);
    }
    return r;
  }
  h(OD, "enterUnfinishedNodesBefore");
  function gr(r, e, t, i) {
    for (var n; r.from == r.to || (t < 1 ? r.from >= e : r.from > e) || (t > -1 ? r.to <= e : r.to < e); ) {
      var o = !i && r instanceof xi && r.index < 0 ? null : r.parent;
      if (!o) return r;
      r = o;
    }
    var s = i ? 0 : Le.IgnoreOverlays;
    if (i) for (var o1 = r, u = o1.parent; u; o1 = u, u = o1.parent) o1 instanceof xi && o1.index < 0 && ((n = u.enter(e, t, s)) === null || n === void 0 ? void 0 : n.from) != o1.from && (r = u);
    for (;;) {
      var o2 = r.enter(e, t, s);
      if (!o2) return r;
      r = o2;
    }
  }
  h(gr, "resolveNode");
  var xi =
    ((_r51 = class r {
      get type() {
        return this._tree.type;
      }
      get name() {
        return this._tree.type.name;
      }
      get to() {
        return this.from + this._tree.length;
      }
      nextChild(e, t, i, n) {
        var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
        for (var o = this; ; ) {
          for (var _o__tree = o._tree, u = _o__tree.children, l = _o__tree.positions, a = t > 0 ? u.length : -1; e != a; e += t) {
            var c = u[e],
              f = l[e] + o.from;
            if (LD(n, i, f, f + c.length)) {
              if (c instanceof vi) {
                if (s & Le.ExcludeBuffers) continue;
                var d = c.findChild(0, c.buffer.length, t, i - f, n);
                if (d > -1) return new Dn(new Ma(o, c, e, f), null, d);
              } else if (s & Le.IncludeAnonymous || !c.type.isAnonymous || Ia(c)) {
                var d1 = void 0;
                if (!(s & Le.IgnoreMounts) && c.props && (d1 = c.prop(ue.mounted)) && !d1.overlay) return new r(d1.tree, f, e, o);
                var p = new r(c, f, e, o);
                return s & Le.IncludeAnonymous || !p.type.isAnonymous ? p : p.nextChild(t < 0 ? c.children.length - 1 : 0, t, i, n);
              }
            }
          }
          if (s & Le.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? (e = o.index + t) : (e = t < 0 ? -1 : o._parent._tree.children.length), (o = o._parent), !o)) return null;
        }
      }
      get firstChild() {
        return this.nextChild(0, 1, 0, 4);
      }
      get lastChild() {
        return this.nextChild(this._tree.children.length - 1, -1, 0, 4);
      }
      childAfter(e) {
        return this.nextChild(0, 1, e, 2);
      }
      childBefore(e) {
        return this.nextChild(this._tree.children.length - 1, -1, e, -2);
      }
      enter(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        var n;
        if (!(i & Le.IgnoreOverlays) && (n = this._tree.prop(ue.mounted)) && n.overlay) {
          var s = e - this.from;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = n.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _step.value,
                o = _step_value.from,
                u = _step_value.to;
              if ((t > 0 ? o <= s : o < s) && (t < 0 ? u >= s : u > s)) return new r(n.tree, n.overlay[0].from + this.from, -1, this);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        return this.nextChild(0, 1, e, t, i);
      }
      nextSignificantParent() {
        var e = this;
        for (; e.type.isAnonymous && e._parent; ) e = e._parent;
        return e;
      }
      get parent() {
        return this._parent ? this._parent.nextSignificantParent() : null;
      }
      get nextSibling() {
        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4) : null;
      }
      get prevSibling() {
        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4) : null;
      }
      cursor() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
        return new Dr(this, e);
      }
      get tree() {
        return this._tree;
      }
      toTree() {
        return this._tree;
      }
      resolve(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        return gr(this, e, t, !1);
      }
      resolveInner(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        return gr(this, e, t, !0);
      }
      enterUnfinishedNodesBefore(e) {
        return OD(this, e);
      }
      getChild(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
          i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
        var n = Fo(this, e, t, i);
        return n.length ? n[0] : null;
      }
      getChildren(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
          i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
        return Fo(this, e, t, i);
      }
      toString() {
        return this._tree.toString();
      }
      get node() {
        return this;
      }
      matchContext(e) {
        return bo(this, e);
      }
      constructor(e, t, i, n) {
        (this._tree = e), (this.from = t), (this.index = i), (this._parent = n);
      }
    }),
    (() => {
      h(_r51, "TreeNode");
    })(),
    _r51);
  function Fo(r, e, t, i) {
    var n = r.cursor(),
      s = [];
    if (!n.firstChild()) return s;
    if (t != null) {
      for (; !n.type.is(t); ) if (!n.nextSibling()) return s;
    }
    for (;;) {
      if (i != null && n.type.is(i)) return s;
      if ((n.type.is(e) && s.push(n.node), !n.nextSibling())) return i == null ? s : [];
    }
  }
  h(Fo, "getChildren");
  function bo(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e.length - 1;
    for (var i = r.parent; t >= 0; i = i.parent) {
      if (!i) return !1;
      if (!i.type.isAnonymous) {
        if (e[t] && e[t] != i.name) return !1;
        t--;
      }
    }
    return !0;
  }
  h(bo, "matchNodeContext");
  var Ma =
      ((_class71 = class _class {
        constructor(e, t, i, n) {
          (this.parent = e), (this.buffer = t), (this.index = i), (this.start = n);
        }
      }),
      (() => {
        h(_class71, "BufferContext");
      })(),
      _class71),
    Dn =
      ((_r52 = class r {
        get name() {
          return this.type.name;
        }
        get from() {
          return this.context.start + this.context.buffer.buffer[this.index + 1];
        }
        get to() {
          return this.context.start + this.context.buffer.buffer[this.index + 2];
        }
        child(e, t, i) {
          var _this_context = this.context,
            n = _this_context.buffer,
            s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.context.start, i);
          return s < 0 ? null : new r(this.context, this, s);
        }
        get firstChild() {
          return this.child(1, 0, 4);
        }
        get lastChild() {
          return this.child(-1, 0, 4);
        }
        childAfter(e) {
          return this.child(1, e, 2);
        }
        childBefore(e) {
          return this.child(-1, e, -2);
        }
        enter(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          if (i & Le.ExcludeBuffers) return null;
          var _this_context = this.context,
            n = _this_context.buffer,
            s = n.findChild(this.index + 4, n.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
          return s < 0 ? null : new r(this.context, this, s);
        }
        get parent() {
          return this._parent || this.context.parent.nextSignificantParent();
        }
        externalSibling(e) {
          return this._parent ? null : this.context.parent.nextChild(this.context.index + e, e, 0, 4);
        }
        get nextSibling() {
          var _this_context = this.context,
            e = _this_context.buffer,
            t = e.buffer[this.index + 3];
          return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new r(this.context, this._parent, t) : this.externalSibling(1);
        }
        get prevSibling() {
          var _this_context = this.context,
            e = _this_context.buffer,
            t = this._parent ? this._parent.index + 4 : 0;
          return this.index == t ? this.externalSibling(-1) : new r(this.context, this._parent, e.findChild(t, this.index, -1, 0, 4));
        }
        cursor() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          return new Dr(this, e);
        }
        get tree() {
          return null;
        }
        toTree() {
          var e = [],
            t = [],
            _this_context = this.context,
            i = _this_context.buffer,
            n = this.index + 4,
            s = i.buffer[this.index + 3];
          if (s > n) {
            var o = i.buffer[this.index + 1];
            e.push(i.slice(n, s, o)), t.push(0);
          }
          return new we(this.type, e, t, this.to - this.from);
        }
        resolve(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return gr(this, e, t, !1);
        }
        resolveInner(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return gr(this, e, t, !0);
        }
        enterUnfinishedNodesBefore(e) {
          return OD(this, e);
        }
        toString() {
          return this.context.buffer.childString(this.index);
        }
        getChild(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          var n = Fo(this, e, t, i);
          return n.length ? n[0] : null;
        }
        getChildren(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          return Fo(this, e, t, i);
        }
        get node() {
          return this;
        }
        matchContext(e) {
          return bo(this, e);
        }
        constructor(e, t, i) {
          (this.context = e), (this._parent = t), (this.index = i), (this.type = e.buffer.set.types[e.buffer.buffer[i]]);
        }
      }),
      (() => {
        h(_r52, "BufferNode");
      })(),
      _r52),
    Dr =
      ((_class72 = class _class {
        get name() {
          return this.type.name;
        }
        yieldNode(e) {
          return e ? ((this._tree = e), (this.type = e.type), (this.from = e.from), (this.to = e.to), !0) : !1;
        }
        yieldBuf(e, t) {
          this.index = e;
          var _this_buffer = this.buffer,
            i = _this_buffer.start,
            n = _this_buffer.buffer;
          return (this.type = t || n.set.types[n.buffer[e]]), (this.from = i + n.buffer[e + 1]), (this.to = i + n.buffer[e + 2]), !0;
        }
        yield(e) {
          return e ? (e instanceof xi ? ((this.buffer = null), this.yieldNode(e)) : ((this.buffer = e.context), this.yieldBuf(e.index, e.type))) : !1;
        }
        toString() {
          return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
        }
        enterChild(e, t, i) {
          if (!this.buffer) return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, i, this.mode));
          var _this_buffer = this.buffer,
            n = _this_buffer.buffer,
            s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.buffer.start, i);
          return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));
        }
        firstChild() {
          return this.enterChild(1, 0, 4);
        }
        lastChild() {
          return this.enterChild(-1, 0, 4);
        }
        childAfter(e) {
          return this.enterChild(1, e, 2);
        }
        childBefore(e) {
          return this.enterChild(-1, e, -2);
        }
        enter(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.mode;
          return this.buffer ? (i & Le.ExcludeBuffers ? !1 : this.enterChild(1, e, t)) : this.yield(this._tree.enter(e, t, i));
        }
        parent() {
          if (!this.buffer) return this.yieldNode(this.mode & Le.IncludeAnonymous ? this._tree._parent : this._tree.parent);
          if (this.stack.length) return this.yieldBuf(this.stack.pop());
          var e = this.mode & Le.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
          return (this.buffer = null), this.yieldNode(e);
        }
        sibling(e) {
          if (!this.buffer) return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
          var _this_buffer = this.buffer,
            t = _this_buffer.buffer,
            i = this.stack.length - 1;
          if (e < 0) {
            var n = i < 0 ? 0 : this.stack[i] + 4;
            if (this.index != n) return this.yieldBuf(t.findChild(n, this.index, -1, 0, 4));
          } else {
            var n1 = t.buffer[this.index + 3];
            if (n1 < (i < 0 ? t.buffer.length : t.buffer[this.stack[i] + 3])) return this.yieldBuf(n1);
          }
          return i < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
        }
        nextSibling() {
          return this.sibling(1);
        }
        prevSibling() {
          return this.sibling(-1);
        }
        atLastNode(e) {
          var t,
            i,
            _this = this,
            n = _this.buffer;
          var ref;
          if (n) {
            if (e > 0) {
              if (this.index < n.buffer.buffer.length) return !1;
            } else for (var s = 0; s < this.index; s++) if (n.buffer.buffer[s + 3] < this.index) return !1;
            var ref1;
            (ref1 = n), (t = ref1.index), (i = ref1.parent), ref1;
          } else (ref = this._tree), (t = ref.index), (i = ref._parent), ref;
          var ref2;
          for (; i; ref2 = i, t = ref2.index, i = ref2._parent, ref2)
            if (t > -1)
              for (var s1 = t + e, o = e < 0 ? -1 : i._tree.children.length; s1 != o; s1 += e) {
                var u = i._tree.children[s1];
                if (this.mode & Le.IncludeAnonymous || u instanceof vi || !u.type.isAnonymous || Ia(u)) return !1;
              }
          return !0;
        }
        move(e, t) {
          if (t && this.enterChild(e, 0, 4)) return !0;
          for (;;) {
            if (this.sibling(e)) return !0;
            if (this.atLastNode(e) || !this.parent()) return !1;
          }
        }
        next() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
          return this.move(1, e);
        }
        prev() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
          return this.move(-1, e);
        }
        moveTo(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); );
          for (; this.enterChild(1, e, t); );
          return this;
        }
        get node() {
          if (!this.buffer) return this._tree;
          var e = this.bufferNode,
            t = null,
            i = 0;
          if (e && e.context == this.buffer)
            e: for (var n = this.index, s = this.stack.length; s >= 0; ) {
              for (var o = e; o; o = o._parent)
                if (o.index == n) {
                  if (n == this.index) return o;
                  (t = o), (i = s + 1);
                  break e;
                }
              n = this.stack[--s];
            }
          for (var n1 = i; n1 < this.stack.length; n1++) t = new Dn(this.buffer, t, this.stack[n1]);
          return (this.bufferNode = new Dn(this.buffer, t, this.index));
        }
        get tree() {
          return this.buffer ? null : this._tree._tree;
        }
        iterate(e, t) {
          for (var i = 0; ; ) {
            var n = !1;
            if (this.type.isAnonymous || e(this) !== !1) {
              if (this.firstChild()) {
                i++;
                continue;
              }
              this.type.isAnonymous || (n = !0);
            }
            for (; n && t && t(this), (n = this.type.isAnonymous), !this.nextSibling(); ) {
              if (!i) return;
              this.parent(), i--, (n = !0);
            }
          }
        }
        matchContext(e) {
          if (!this.buffer) return bo(this.node, e);
          var _this_buffer = this.buffer,
            t = _this_buffer.buffer,
            _t_set = t.set,
            i = _t_set.types;
          for (var n = e.length - 1, s = this.stack.length - 1; n >= 0; s--) {
            if (s < 0) return bo(this.node, e, n);
            var o = i[t.buffer[this.stack[s]]];
            if (!o.isAnonymous) {
              if (e[n] && e[n] != o.name) return !1;
              n--;
            }
          }
          return !0;
        }
        constructor(e, ref) {
          var t = ref === void 0 ? 0 : ref;
          if (((this.mode = t), (this.buffer = null), (this.stack = []), (this.index = 0), (this.bufferNode = null), e instanceof xi)) this.yieldNode(e);
          else {
            (this._tree = e.context.parent), (this.buffer = e.context);
            for (var i = e._parent; i; i = i._parent) this.stack.unshift(i.index);
            (this.bufferNode = e), this.yieldBuf(e.index);
          }
        }
      }),
      (() => {
        h(_class72, "TreeCursor");
      })(),
      _class72);
  function Ia(r) {
    return r.children.some((e) => e instanceof vi || !e.type.isAnonymous || Ia(e));
  }
  h(Ia, "hasChild");
  function oA(r) {
    var e;
    var t = r.buffer,
      i = r.nodeSet,
      tmp = r.maxBufferLength,
      n = tmp === void 0 ? 1024 : tmp,
      tmp1 = r.reused,
      s = tmp1 === void 0 ? [] : tmp1,
      tmp2 = r.minRepeatType,
      o = tmp2 === void 0 ? i.types.length : tmp2,
      u = Array.isArray(t) ? new Na(t, t.length) : t,
      l = i.types,
      a = 0,
      c = 0;
    function f(v, C, w, P, K) {
      var q = u.id,
        H = u.start,
        I = u.end,
        ne = u.size,
        le = c;
      for (; ne < 0; )
        if ((u.next(), ne == -1)) {
          var De = s[q];
          w.push(De), P.push(H - v);
          return;
        } else if (ne == -3) {
          a = q;
          return;
        } else if (ne == -4) {
          c = q;
          return;
        } else throw new RangeError("Unrecognized record size: ".concat(ne));
      var V = l[q],
        U,
        Z,
        me = H - v;
      if (I - H <= n && (Z = F(u.pos - C, K))) {
        var De1 = new Uint16Array(Z.size - Z.skip),
          he = u.pos - Z.size,
          ae = De1.length;
        for (; u.pos > he; ) ae = g(Z.start, De1, ae);
        (U = new vi(De1, I - Z.start, i)), (me = Z.start - v);
      } else {
        var De2 = u.pos - ne;
        u.next();
        var he1 = [],
          ae1 = [],
          Qe = q >= o ? q : -1,
          Oe = 0,
          gt = I;
        for (; u.pos > De2; ) Qe >= 0 && u.id == Qe && u.size >= 0 ? (u.end <= gt - n && (p(he1, ae1, H, Oe, u.end, gt, Qe, le), (Oe = he1.length), (gt = u.end)), u.next()) : f(H, De2, he1, ae1, Qe);
        if ((Qe >= 0 && Oe > 0 && Oe < he1.length && p(he1, ae1, H, Oe, H, gt, Qe, le), he1.reverse(), ae1.reverse(), Qe > -1 && Oe > 0)) {
          var Rt = d(V);
          U = $a(V, he1, ae1, 0, he1.length, 0, I - H, Rt, Rt);
        } else U = m(V, he1, ae1, I - H, le - I);
      }
      w.push(U), P.push(me);
    }
    h(f, "takeNode");
    function d(v) {
      return (C, w, P) => {
        var K = 0,
          q = C.length - 1,
          H,
          I;
        if (q >= 0 && (H = C[q]) instanceof we) {
          if (!q && H.type == v && H.length == P) return H;
          (I = H.prop(ue.lookAhead)) && (K = w[q] + H.length + I);
        }
        return m(v, C, w, P, K);
      };
    }
    h(d, "makeBalanced");
    function p(v, C, w, P, K, q, H, I) {
      var ne = [],
        le = [];
      for (; v.length > P; ) ne.push(v.pop()), le.push(C.pop() + w - K);
      v.push(m(i.types[H], ne, le, q - K, I - q)), C.push(K - w);
    }
    h(p, "makeRepeatLeaf");
    function m(v, C, w, P) {
      var K = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0,
        q = arguments.length > 5 ? arguments[5] : void 0;
      if (a) {
        var H = [ue.contextHash, a];
        q = q ? [H].concat(q) : [H];
      }
      if (K > 25) {
        var H1 = [ue.lookAhead, K];
        q = q ? [H1].concat(q) : [H1];
      }
      return new we(v, C, w, P, q);
    }
    h(m, "makeTree");
    function F(v, C) {
      var w = u.fork(),
        P = 0,
        K = 0,
        q = 0,
        H = w.end - n,
        I = { size: 0, start: 0, skip: 0 };
      e: for (var ne = w.pos - v; w.pos > ne; ) {
        var le = w.size;
        if (w.id == C && le >= 0) {
          (I.size = P), (I.start = K), (I.skip = q), (q += 4), (P += 4), w.next();
          continue;
        }
        var V = w.pos - le;
        if (le < 0 || V < ne || w.start < H) break;
        var U = w.id >= o ? 4 : 0,
          Z = w.start;
        for (w.next(); w.pos > V; ) {
          if (w.size < 0)
            if (w.size == -3) U += 4;
            else break e;
          else w.id >= o && (U += 4);
          w.next();
        }
        (K = Z), (P += le), (q += U);
      }
      return (C < 0 || P == v) && ((I.size = P), (I.start = K), (I.skip = q)), I.size > 4 ? I : void 0;
    }
    h(F, "findBufferSize");
    function g(v, C, w) {
      var P = u.id,
        K = u.start,
        q = u.end,
        H = u.size;
      if ((u.next(), H >= 0 && P < o)) {
        var I = w;
        if (H > 4) {
          var ne = u.pos - (H - 4);
          for (; u.pos > ne; ) w = g(v, C, w);
        }
        (C[--w] = I), (C[--w] = q - v), (C[--w] = K - v), (C[--w] = P);
      } else H == -3 ? (a = P) : H == -4 && (c = P);
      return w;
    }
    h(g, "copyToBuffer");
    var D = [],
      b = [];
    for (; u.pos > 0; ) f(r.start || 0, r.bufferStart || 0, D, b, -1);
    var A = (e = r.length) !== null && e !== void 0 ? e : D.length ? b[0] + D[0].length : 0;
    return new we(l[r.topID], D.reverse(), b.reverse(), A);
  }
  h(oA, "buildTree");
  var UD = new WeakMap();
  function Do(r, e) {
    if (!r.isAnonymous || e instanceof vi || e.type != r) return 1;
    var t = UD.get(e);
    if (t == null) {
      t = 1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.type != r || !(i instanceof we)) {
            t = 1;
            break;
          }
          t += Do(r, i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      UD.set(e, t);
    }
    return t;
  }
  h(Do, "nodeSize");
  function $a(r, e, t, i, n, s, o, u, l) {
    var a = 0;
    for (var m = i; m < n; m++) a += Do(r, e[m]);
    var c = Math.ceil((a * 1.5) / 8),
      f = [],
      d = [];
    function p(m, F, g, D, b) {
      for (var A = g; A < D; ) {
        var v = A,
          C = F[A],
          w = Do(r, m[A]);
        for (A++; A < D; A++) {
          var P = Do(r, m[A]);
          if (w + P >= c) break;
          w += P;
        }
        if (A == v + 1) {
          if (w > c) {
            var P1 = m[v];
            p(P1.children, P1.positions, 0, P1.children.length, F[v] + b);
            continue;
          }
          f.push(m[v]);
        } else {
          var P2 = F[A - 1] + m[A - 1].length - C;
          f.push($a(r, m, F, v, A, C, P2, null, l));
        }
        d.push(C + b - s);
      }
    }
    return h(p, "divide"), p(e, t, i, n, 0), (u || l)(f, d, o);
  }
  h($a, "balanceRange");
  var Ai =
      ((_r53 = class r {
        get openStart() {
          return (this.open & 1) > 0;
        }
        get openEnd() {
          return (this.open & 2) > 0;
        }
        static addTree(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
            i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
          var n = [new r(0, e.length, e, 0, !1, i)];
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              s.to > e.length && n.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n;
        }
        static applyChanges(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 128;
          if (!t.length) return e;
          var n = [],
            s = 1,
            o = e.length ? e[0] : null;
          for (var u = 0, l = 0, a = 0; ; u++) {
            var c = u < t.length ? t[u] : null,
              f = c ? c.fromA : 1e9;
            if (f - l >= i)
              for (; o && o.from < f; ) {
                var d = o;
                if (l >= d.from || f <= d.to || a) {
                  var p = Math.max(d.from, l) - a,
                    m = Math.min(d.to, f) - a;
                  d = p >= m ? null : new r(p, m, d.tree, d.offset + a, u > 0, !!c);
                }
                if ((d && n.push(d), o.to > f)) break;
                o = s < e.length ? e[s++] : null;
              }
            if (!c) break;
            (l = c.toA), (a = c.toA - c.toB);
          }
          return n;
        }
        constructor(e, t, i, n, ref, ref1) {
          var s = ref === void 0 ? !1 : ref,
            o = ref1 === void 0 ? !1 : ref1;
          (this.from = e), (this.to = t), (this.tree = i), (this.offset = n), (this.open = (s ? 1 : 0) | (o ? 2 : 0));
        }
      }),
      (() => {
        h(_r53, "TreeFragment");
      })(),
      _r53),
    Fr =
      ((_class73 = class _class {
        startParse(e, t, i) {
          return typeof e == "string" && (e = new Pa(e)), (i = i ? (i.length ? i.map((n) => new mn(n.from, n.to)) : [new mn(0, 0)]) : [new mn(0, e.length)]), this.createParse(e, t || [], i);
        }
        parse(e, t, i) {
          var n = this.startParse(e, t, i);
          for (;;) {
            var s = n.advance();
            if (s) return s;
          }
        }
      }),
      (() => {
        h(_class73, "Parser");
      })(),
      _class73),
    Pa =
      ((_class74 = class _class {
        get length() {
          return this.string.length;
        }
        chunk(e) {
          return this.string.slice(e);
        }
        get lineChunks() {
          return !1;
        }
        read(e, t) {
          return this.string.slice(e, t);
        }
        constructor(e) {
          this.string = e;
        }
      }),
      (() => {
        h(_class74, "StringInput");
      })(),
      _class74);
  var A7 = new ue({ perNode: !0 });
  var uA = 0,
    Tt =
      ((_r54 = class r {
        static define(e) {
          var _e;
          if ((_e = e) === null || _e === void 0 ? void 0 : _e.base) throw new Error("Can not derive from a modified tag");
          var t = new r([], null, []);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if ((t.set.push(t), e))
            try {
              for (var _iterator = e.set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var i = _step.value;
                t.set.push(i);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          return t;
        }
        static defineModifier() {
          var e = new Bo();
          return (t) =>
            t.modified.indexOf(e) > -1
              ? t
              : Bo.get(
                  t.base || t,
                  t.modified.concat(e).sort((i, n) => i.id - n.id),
                );
        }
        constructor(e, t, i) {
          (this.set = e), (this.base = t), (this.modified = i), (this.id = uA++);
        }
      }),
      (() => {
        h(_r54, "Tag");
      })(),
      _r54),
    lA = 0,
    Bo =
      ((_r55 = class r {
        static get(e, t) {
          if (!t.length) return e;
          var i = t[0].instances.find((u) => u.base == e && aA(t, u.modified));
          if (i) return i;
          var n = [],
            s = new Tt(n, e, t);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u = _step.value;
              u.instances.push(s);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var o = hA(t);
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined,
            _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator1 = e.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
              var u1 = _step1.value;
              if (!u1.modified.length)
                try {
                  for (var _iterator2 = o[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
                    var l = _step2.value;
                    n.push(r.get(u1, l));
                  }
                } catch (err) {
                  _didIteratorError1 = true;
                  _iteratorError1 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
                      _iterator2.return();
                    }
                  } finally {
                    if (_didIteratorError1) {
                      throw _iteratorError1;
                    }
                  }
                }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return s;
        }
        constructor() {
          (this.instances = []), (this.id = lA++);
        }
      }),
      (() => {
        h(_r55, "Modifier");
      })(),
      _r55);
  function aA(r, e) {
    return r.length == e.length && r.every((t, i) => t == e[i]);
  }
  h(aA, "sameArray");
  function hA(r) {
    var e = [[]];
    for (var t = 0; t < r.length; t++) for (var i = 0, n = e.length; i < n; i++) e.push(e[i].concat(r[t]));
    return e.sort((t, i) => i.length - t.length);
  }
  h(hA, "powerSet");
  function vo(r) {
    var e = Object.create(null);
    for (var t in r) {
      var i = r[t];
      Array.isArray(i) || (i = [i]);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          if (n) {
            var s = [],
              o = 2,
              u = n;
            for (var f = 0; ; ) {
              if (u == "..." && f > 0 && f + 3 == n.length) {
                o = 1;
                break;
              }
              var d = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(u);
              if (!d) throw new RangeError("Invalid path: " + n);
              if ((s.push(d[0] == "*" ? "" : d[0][0] == '"' ? JSON.parse(d[0]) : d[0]), (f += d[0].length), f == n.length)) break;
              var p = n[f++];
              if (f == n.length && p == "!") {
                o = 0;
                break;
              }
              if (p != "/") throw new RangeError("Invalid path: " + n);
              u = n.slice(f);
            }
            var l = s.length - 1,
              a = s[l];
            if (!a) throw new RangeError("Invalid path: " + n);
            var c = new br(i, o, l > 0 ? s.slice(0, l) : null);
            e[a] = c.sort(e[a]);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return ND.add(e);
  }
  h(vo, "styleTags");
  var ND = new ue(),
    br =
      ((_class75 = class _class {
        get opaque() {
          return this.mode == 0;
        }
        get inherit() {
          return this.mode == 1;
        }
        sort(e) {
          return !e || e.depth < this.depth ? ((this.next = e), this) : ((e.next = this.sort(e.next)), e);
        }
        get depth() {
          return this.context ? this.context.length : 0;
        }
        constructor(e, t, i, n) {
          (this.tags = e), (this.mode = t), (this.context = i), (this.next = n);
        }
      }),
      (() => {
        h(_class75, "Rule");
      })(),
      _class75);
  br.empty = new br([], 2, null);
  function za(r, e) {
    var t = Object.create(null);
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var s = _step.value;
        if (!Array.isArray(s.tag)) t[s.tag.id] = s.class;
        else
          try {
            for (var _iterator1 = s.tag[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var o = _step1.value;
              t[o.id] = s.class;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    var _ref = e || {},
      i = _ref.scope,
      tmp = _ref.all,
      n = tmp === void 0 ? null : tmp;
    return {
      style: (s) => {
        var o = n;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var u = _step.value;
            try {
              for (var _iterator1 = u.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var l = _step1.value;
                var a = t[l.id];
                if (a) {
                  o = o ? o + " " + a : a;
                  break;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return o;
      },
      scope: i,
    };
  }
  h(za, "tagHighlighter");
  function cA(r, e) {
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i.style(e);
        n && (t = t ? t + " " + n : n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(cA, "highlightTags");
  function MD(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0,
      n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : r.length;
    var s = new Va(i, Array.isArray(e) ? e : [e], t);
    s.highlightRange(r.cursor(), i, n, "", s.highlighters), s.flush(n);
  }
  h(MD, "highlightTree");
  var Va =
    ((_class76 = class _class {
      startSpan(e, t) {
        t != this.class && (this.flush(e), e > this.at && (this.at = e), (this.class = t));
      }
      flush(e) {
        e > this.at && this.class && this.span(this.at, e, this.class);
      }
      highlightRange(e, t, i, n, s) {
        var o = e.type,
          u = e.from,
          l = e.to;
        if (u >= i || l <= t) return;
        o.isTop && (s = this.highlighters.filter((p) => !p.scope || p.scope(o)));
        var a = n,
          c = fA(e) || br.empty,
          f = cA(s, c.tags);
        if ((f && (a && (a += " "), (a += f), c.mode == 1 && (n += (n ? " " : "") + f)), this.startSpan(Math.max(t, u), a), c.opaque)) return;
        var d = e.tree && e.tree.prop(ue.mounted);
        if (d && d.overlay) {
          var p = e.node.enter(d.overlay[0].from + u, 1),
            m = this.highlighters.filter((g) => !g.scope || g.scope(d.tree.type)),
            F = e.firstChild();
          for (var g = 0, D = u; ; g++) {
            var b = g < d.overlay.length ? d.overlay[g] : null,
              A = b ? b.from + u : l,
              v = Math.max(t, D),
              C = Math.min(i, A);
            if (v < C && F) for (; e.from < C && (this.highlightRange(e, v, C, n, s), this.startSpan(Math.min(C, e.to), a), !(e.to >= A || !e.nextSibling())); );
            if (!b || A > i) break;
            (D = b.to + u), D > t && (this.highlightRange(p.cursor(), Math.max(t, b.from + u), Math.min(i, D), "", m), this.startSpan(Math.min(i, D), a));
          }
          F && e.parent();
        } else if (e.firstChild()) {
          d && (n = "");
          do
            if (!(e.to <= t)) {
              if (e.from >= i) break;
              this.highlightRange(e, t, i, n, s), this.startSpan(Math.min(i, e.to), a);
            }
          while (e.nextSibling());
          e.parent();
        }
      }
      constructor(e, t, i) {
        (this.at = e), (this.highlighters = t), (this.span = i), (this.class = "");
      }
    }),
    (() => {
      h(_class76, "HighlightBuilder");
    })(),
    _class76);
  function fA(r) {
    var e = r.type.prop(ND);
    for (; e && e.context && !r.matchContext(e.context); ) e = e.next;
    return e || null;
  }
  h(fA, "getStyleTags");
  var N = Tt.define,
    yo = N(),
    ui = N(),
    TD = N(ui),
    RD = N(ui),
    li = N(),
    Eo = N(li),
    qa = N(li),
    Ot = N(),
    ki = N(Ot),
    Ut = N(),
    Lt = N(),
    Wa = N(),
    Fn = N(Wa),
    Co = N(),
    _ = {
      comment: yo,
      lineComment: N(yo),
      blockComment: N(yo),
      docComment: N(yo),
      name: ui,
      variableName: N(ui),
      typeName: TD,
      tagName: N(TD),
      propertyName: RD,
      attributeName: N(RD),
      className: N(ui),
      labelName: N(ui),
      namespace: N(ui),
      macroName: N(ui),
      literal: li,
      string: Eo,
      docString: N(Eo),
      character: N(Eo),
      attributeValue: N(Eo),
      number: qa,
      integer: N(qa),
      float: N(qa),
      bool: N(li),
      regexp: N(li),
      escape: N(li),
      color: N(li),
      url: N(li),
      keyword: Ut,
      self: N(Ut),
      null: N(Ut),
      atom: N(Ut),
      unit: N(Ut),
      modifier: N(Ut),
      operatorKeyword: N(Ut),
      controlKeyword: N(Ut),
      definitionKeyword: N(Ut),
      moduleKeyword: N(Ut),
      operator: Lt,
      derefOperator: N(Lt),
      arithmeticOperator: N(Lt),
      logicOperator: N(Lt),
      bitwiseOperator: N(Lt),
      compareOperator: N(Lt),
      updateOperator: N(Lt),
      definitionOperator: N(Lt),
      typeOperator: N(Lt),
      controlOperator: N(Lt),
      punctuation: Wa,
      separator: N(Wa),
      bracket: Fn,
      angleBracket: N(Fn),
      squareBracket: N(Fn),
      paren: N(Fn),
      brace: N(Fn),
      content: Ot,
      heading: ki,
      heading1: N(ki),
      heading2: N(ki),
      heading3: N(ki),
      heading4: N(ki),
      heading5: N(ki),
      heading6: N(ki),
      contentSeparator: N(Ot),
      list: N(Ot),
      quote: N(Ot),
      emphasis: N(Ot),
      strong: N(Ot),
      link: N(Ot),
      monospace: N(Ot),
      strikethrough: N(Ot),
      inserted: N(),
      deleted: N(),
      changed: N(),
      invalid: N(),
      meta: Co,
      documentMeta: N(Co),
      annotation: N(Co),
      processingInstruction: N(Co),
      definition: Tt.defineModifier(),
      constant: Tt.defineModifier(),
      function: Tt.defineModifier(),
      standard: Tt.defineModifier(),
      local: Tt.defineModifier(),
      special: Tt.defineModifier(),
    },
    Q7 = za([
      { tag: _.link, class: "tok-link" },
      { tag: _.heading, class: "tok-heading" },
      { tag: _.emphasis, class: "tok-emphasis" },
      { tag: _.strong, class: "tok-strong" },
      { tag: _.keyword, class: "tok-keyword" },
      { tag: _.atom, class: "tok-atom" },
      { tag: _.bool, class: "tok-bool" },
      { tag: _.url, class: "tok-url" },
      { tag: _.labelName, class: "tok-labelName" },
      { tag: _.inserted, class: "tok-inserted" },
      { tag: _.deleted, class: "tok-deleted" },
      { tag: _.literal, class: "tok-literal" },
      { tag: _.string, class: "tok-string" },
      { tag: _.number, class: "tok-number" },
      { tag: [_.regexp, _.escape, _.special(_.string)], class: "tok-string2" },
      { tag: _.variableName, class: "tok-variableName" },
      { tag: _.local(_.variableName), class: "tok-variableName tok-local" },
      { tag: _.definition(_.variableName), class: "tok-variableName tok-definition" },
      { tag: _.special(_.variableName), class: "tok-variableName2" },
      { tag: _.definition(_.propertyName), class: "tok-propertyName tok-definition" },
      { tag: _.typeName, class: "tok-typeName" },
      { tag: _.namespace, class: "tok-namespace" },
      { tag: _.className, class: "tok-className" },
      { tag: _.macroName, class: "tok-macroName" },
      { tag: _.propertyName, class: "tok-propertyName" },
      { tag: _.operator, class: "tok-operator" },
      { tag: _.comment, class: "tok-comment" },
      { tag: _.meta, class: "tok-meta" },
      { tag: _.invalid, class: "tok-invalid" },
      { tag: _.punctuation, class: "tok-punctuation" },
    ]);
  var Ha,
    yr = new ue();
  function pA(r) {
    return j.define({ combine: r ? (e) => e.concat(r) : void 0 });
  }
  h(pA, "defineLanguageFacet");
  var mA = new ue(),
    it =
      ((_class77 = class _class {
        isActiveAt(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
          return PD(e, t, i).type.prop(yr) == this.data;
        }
        findRegions(e) {
          var _t;
          var t = e.facet(Er);
          if (((_t = t) === null || _t === void 0 ? void 0 : _t.data) == this.data) return [{ from: 0, to: e.doc.length }];
          if (!t || !t.allowsNesting) return [];
          var i = [],
            n = h((s, o) => {
              if (s.prop(yr) == this.data) {
                i.push({ from: o, to: o + s.length });
                return;
              }
              var u = s.prop(ue.mounted);
              if (u) {
                if (u.tree.prop(yr) == this.data) {
                  var _iteratorNormalCompletion = true,
                    _didIteratorError = false,
                    _iteratorError = undefined;
                  if (u.overlay)
                    try {
                      for (var _iterator = u.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var l = _step.value;
                        i.push({ from: l.from + o, to: l.to + o });
                      }
                    } catch (err) {
                      _didIteratorError = true;
                      _iteratorError = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                          _iterator.return();
                        }
                      } finally {
                        if (_didIteratorError) {
                          throw _iteratorError;
                        }
                      }
                    }
                  else i.push({ from: o, to: o + s.length });
                  return;
                } else if (u.overlay) {
                  var l1 = i.length;
                  if ((n(u.tree, u.overlay[0].from + o), i.length > l1)) return;
                }
              }
              for (var l2 = 0; l2 < s.children.length; l2++) {
                var a = s.children[l2];
                a instanceof we && n(a, s.positions[l2] + o);
              }
            }, "explore");
          return n(Si(e), 0), i;
        }
        get allowsNesting() {
          return !0;
        }
        constructor(e, t, ref, ref1) {
          var i = ref === void 0 ? [] : ref,
            n = ref1 === void 0 ? "" : ref1;
          (this.data = e),
            (this.name = n),
            Ce.prototype.hasOwnProperty("tree") ||
              Object.defineProperty(Ce.prototype, "tree", {
                get() {
                  return Si(this);
                },
              }),
            (this.parser = t),
            (this.extension = [
              Er.of(this),
              Ce.languageData.of((s, o, u) => {
                var l = PD(s, o, u),
                  a = l.type.prop(yr);
                if (!a) return [];
                var c = s.facet(a),
                  f = l.type.prop(mA);
                if (f) {
                  var d = l.resolve(o - l.from, u);
                  var _iteratorNormalCompletion = true,
                    _didIteratorError = false,
                    _iteratorError = undefined;
                  try {
                    for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                      var p = _step.value;
                      if (p.test(d, s)) {
                        var m = s.facet(p.facet);
                        return p.type == "replace" ? m : m.concat(c);
                      }
                    }
                  } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                      }
                    } finally {
                      if (_didIteratorError) {
                        throw _iteratorError;
                      }
                    }
                  }
                }
                return c;
              }),
            ].concat(i));
        }
      }),
      (() => {
        h(_class77, "Language");
      })(),
      _class77);
  it.setState = de.define();
  function PD(r, e, t) {
    var i = r.facet(Er),
      n = Si(r).topNode;
    if (!i || i.allowsNesting) for (var s = n; s; s = s.enter(e, t, Le.ExcludeBuffers)) s.type.isTop && (n = s);
    return n;
  }
  h(PD, "topNodeAt");
  var xo =
    ((_r56 = class r extends it {
      static define(e) {
        var t = pA(e.languageData);
        return new r(t, e.parser.configure({ props: [yr.add((i) => (i.isTop ? t : void 0))] }), e.name);
      }
      configure(e, t) {
        return new r(this.data, this.parser.configure(e), t || this.name);
      }
      get allowsNesting() {
        return this.parser.hasWrappers();
      }
      constructor(e, t, i) {
        super(e, t, [], i), (this.parser = t);
      }
    }),
    (() => {
      h(_r56, "LRLanguage");
    })(),
    _r56);
  function Si(r) {
    var e = r.field(it.state, !1);
    return e ? e.tree : we.empty;
  }
  h(Si, "syntaxTree");
  var Ga =
      ((_class78 = class _class {
        get length() {
          return this.doc.length;
        }
        syncTo(e) {
          return (this.string = this.cursor.next(e - this.cursorPos).value), (this.cursorPos = e + this.string.length), this.cursorPos - this.string.length;
        }
        chunk(e) {
          return this.syncTo(e), this.string;
        }
        get lineChunks() {
          return !0;
        }
        read(e, t) {
          var i = this.cursorPos - this.string.length;
          return e < i || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - i, t - i);
        }
        constructor(e) {
          (this.doc = e), (this.cursorPos = 0), (this.string = ""), (this.cursor = e.iter());
        }
      }),
      (() => {
        h(_class78, "DocInput");
      })(),
      _class78),
    bn = null,
    Xa =
      ((_r57 = class r {
        static create(e, t, i) {
          return new r(e, t, [], we.empty, 0, i, [], null);
        }
        startParse() {
          return this.parser.startParse(new Ga(this.state.doc), this.fragments);
        }
        work(e, t) {
          return (
            t != null && t >= this.state.doc.length && (t = void 0),
            this.tree != we.empty && this.isDone(t !== null && t !== void 0 ? t : this.state.doc.length)
              ? (this.takeTree(), !0)
              : this.withContext(() => {
                  var i;
                  if (typeof e == "number") {
                    var n = Date.now() + e;
                    e = h(() => Date.now() > n, "until");
                  }
                  for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
                    var n1 = this.parse.advance();
                    if (n1)
                      if (((this.fragments = this.withoutTempSkipped(Ai.addTree(n1, this.fragments, this.parse.stoppedAt != null))), (this.treeLen = (i = this.parse.stoppedAt) !== null && i !== void 0 ? i : this.state.doc.length), (this.tree = n1), (this.parse = null), this.treeLen < (t !== null && t !== void 0 ? t : this.state.doc.length))) this.parse = this.startParse();
                      else return !0;
                    if (e()) return !1;
                  }
                })
          );
        }
        takeTree() {
          var e, t;
          this.parse &&
            (e = this.parse.parsedPos) >= this.treeLen &&
            ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e),
            this.withContext(() => {
              for (; !(t = this.parse.advance()); );
            }),
            (this.treeLen = e),
            (this.tree = t),
            (this.fragments = this.withoutTempSkipped(Ai.addTree(this.tree, this.fragments, !0))),
            (this.parse = null));
        }
        withContext(e) {
          var t = bn;
          bn = this;
          try {
            return e();
          } finally {
            bn = t;
          }
        }
        withoutTempSkipped(e) {
          for (var t; (t = this.tempSkipped.pop()); ) e = ID(e, t.from, t.to);
          return e;
        }
        changes(e, t) {
          var _this = this,
            i = _this.fragments,
            n = _this.tree,
            s = _this.treeLen,
            o = _this.viewport,
            u = _this.skipped;
          if ((this.takeTree(), !e.empty)) {
            var l = [];
            if ((e.iterChangedRanges((a, c, f, d) => l.push({ fromA: a, toA: c, fromB: f, toB: d })), (i = Ai.applyChanges(i, l)), (n = we.empty), (s = 0), (o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }), this.skipped.length)) {
              u = [];
              var _iteratorNormalCompletion = true,
                _didIteratorError = false,
                _iteratorError = undefined;
              try {
                for (var _iterator = this.skipped[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var a = _step.value;
                  var c = e.mapPos(a.from, 1),
                    f = e.mapPos(a.to, -1);
                  c < f && u.push({ from: c, to: f });
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            }
          }
          return new r(this.parser, t, i, n, s, o, u, this.scheduleOn);
        }
        updateViewport(e) {
          if (this.viewport.from == e.from && this.viewport.to == e.to) return !1;
          this.viewport = e;
          var t = this.skipped.length;
          for (var i = 0; i < this.skipped.length; i++) {
            var _this_skipped_i = this.skipped[i],
              n = _this_skipped_i.from,
              s = _this_skipped_i.to;
            n < e.to && s > e.from && ((this.fragments = ID(this.fragments, n, s)), this.skipped.splice(i--, 1));
          }
          return this.skipped.length >= t ? !1 : (this.reset(), !0);
        }
        reset() {
          this.parse && (this.takeTree(), (this.parse = null));
        }
        skipUntilInView(e, t) {
          this.skipped.push({ from: e, to: t });
        }
        static getSkippingParser(e) {
          return new (class extends Fr {
            createParse(t, i, n) {
              var s = n[0].from,
                o = n[n.length - 1].to;
              return {
                parsedPos: s,
                advance() {
                  var l = bn;
                  if (l) {
                    var _iteratorNormalCompletion = true,
                      _didIteratorError = false,
                      _iteratorError = undefined;
                    try {
                      for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var a = _step.value;
                        l.tempSkipped.push(a);
                      }
                    } catch (err) {
                      _didIteratorError = true;
                      _iteratorError = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion && _iterator.return != null) {
                          _iterator.return();
                        }
                      } finally {
                        if (_didIteratorError) {
                          throw _iteratorError;
                        }
                      }
                    }
                    e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
                  }
                  return (this.parsedPos = o), new we(Ie.none, [], [], o - s);
                },
                stoppedAt: null,
                stopAt() {},
              };
            }
          })();
        }
        isDone(e) {
          e = Math.min(e, this.state.doc.length);
          var t = this.fragments;
          return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
        }
        static get() {
          return bn;
        }
        constructor(e, t, ref, n, s, o, u, l) {
          var i = ref === void 0 ? [] : ref;
          (this.parser = e), (this.state = t), (this.fragments = i), (this.tree = n), (this.treeLen = s), (this.viewport = o), (this.skipped = u), (this.scheduleOn = l), (this.parse = null), (this.tempSkipped = []);
        }
      }),
      (() => {
        h(_r57, "ParseContext");
      })(),
      _r57);
  function ID(r, e, t) {
    return Ai.applyChanges(r, [{ fromA: e, toA: t, fromB: e, toB: t }]);
  }
  h(ID, "cutFragments");
  var En =
    ((_r58 = class r {
      apply(e) {
        if (!e.docChanged && this.tree == this.context.tree) return this;
        var t = this.context.changes(e.changes, e.state),
          i = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
        return t.work(20, i) || t.takeTree(), new r(t);
      }
      static init(e) {
        var t = Math.min(3e3, e.doc.length),
          i = Xa.create(e.facet(Er).parser, e, { from: 0, to: t });
        return i.work(20, t) || i.takeTree(), new r(i);
      }
      constructor(e) {
        (this.context = e), (this.tree = e.tree);
      }
    }),
    (() => {
      h(_r58, "LanguageState");
    })(),
    _r58);
  it.state = Pe.define({
    create: En.init,
    update(r, e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          if (t.is(it.setState)) return t.value;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return e.startState.facet(Er) != e.state.facet(Er) ? En.init(e.state) : r.apply(e);
    },
  });
  var VD = h((r) => {
    var e = setTimeout(() => r(), 500);
    return () => clearTimeout(e);
  }, "requestIdle");
  typeof requestIdleCallback < "u" &&
    (VD = h((r) => {
      var e = -1,
        t = setTimeout(() => {
          e = requestIdleCallback(r, { timeout: 400 });
        }, 100);
      return () => (e < 0 ? clearTimeout(t) : cancelIdleCallback(e));
    }, "requestIdle"));
  var ja = typeof navigator < "u" && !((Ha = navigator.scheduling) === null || Ha === void 0) && Ha.isInputPending ? () => navigator.scheduling.isInputPending() : null,
    gA = Ye.fromClass(
      ((_class79 = class _class {
        update(e) {
          var t = this.view.state.field(it.state).context;
          (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), e.docChanged && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
        }
        scheduleWork() {
          if (this.working) return;
          var _this_view = this.view,
            e = _this_view.state,
            t = e.field(it.state);
          (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = VD(this.work));
        }
        work(e) {
          this.working = null;
          var t = Date.now();
          if ((this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && ((this.chunkEnd = t + 3e4), (this.chunkBudget = 3e3)), this.chunkBudget <= 0)) return;
          var _this_view = this.view,
            i = _this_view.state,
            _this_view_viewport = _this_view.viewport,
            n = _this_view_viewport.to,
            s = i.field(it.state);
          if (s.tree == s.context.tree && s.context.isDone(n + 1e5)) return;
          var o = Date.now() + Math.min(this.chunkBudget, 100, e && !ja ? Math.max(25, e.timeRemaining() - 5) : 1e9),
            u = s.context.treeLen < n && i.doc.length > n + 1e3,
            l = s.context.work(() => (ja && ja()) || Date.now() > o, n + (u ? 0 : 1e5));
          (this.chunkBudget -= Date.now() - t), (l || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: it.setState.of(new En(s.context)) })), this.chunkBudget > 0 && !(l && !u) && this.scheduleWork(), this.checkAsyncSchedule(s.context);
        }
        checkAsyncSchedule(e) {
          e.scheduleOn &&
            (this.workScheduled++,
            e.scheduleOn
              .then(() => this.scheduleWork())
              .catch((t) => ft(this.view.state, t))
              .then(() => this.workScheduled--),
            (e.scheduleOn = null));
        }
        destroy() {
          this.working && this.working();
        }
        isWorking() {
          return !!(this.working || this.workScheduled > 0);
        }
        constructor(e) {
          (this.view = e), (this.working = null), (this.workScheduled = 0), (this.chunkEnd = -1), (this.chunkBudget = -1), (this.work = this.work.bind(this)), this.scheduleWork();
        }
      }),
      (() => {
        h(_class79, "ParseWorker");
      })(),
      _class79),
      {
        eventHandlers: {
          focus() {
            this.scheduleWork();
          },
        },
      },
    ),
    Er = j.define({
      combine(r) {
        return r.length ? r[0] : null;
      },
      enables: (r) => [
        it.state,
        gA,
        re.contentAttributes.compute([r], (e) => {
          var t = e.facet(r);
          return t && t.name ? { "data-language": t.name } : {};
        }),
      ],
    }),
    Ao =
      ((_class80 = class _class {
        constructor(e, ref) {
          var t = ref === void 0 ? [] : ref;
          (this.language = e), (this.support = t), (this.extension = [e, t]);
        }
      }),
      (() => {
        h(_class80, "LanguageSupport");
      })(),
      _class80);
  var ko = j.define({
    combine: (r) => {
      if (!r.length) return "  ";
      var e = r[0];
      if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0])) throw new Error("Invalid indent unit: " + JSON.stringify(r[0]));
      return e;
    },
  });
  function WD(r) {
    var e = r.facet(ko);
    return e.charCodeAt(0) == 9 ? r.tabSize * e.length : e.length;
  }
  h(WD, "getIndentUnit");
  function zD(r, e) {
    var t = "",
      i = r.tabSize,
      n = r.facet(ko)[0];
    if (n == "	") {
      for (; e >= i; ) (t += "	"), (e -= i);
      n = " ";
    }
    for (var s = 0; s < e; s++) t += n;
    return t;
  }
  h(zD, "indentString");
  var Cr =
      ((_r59 = class r {
        static define(e, t) {
          return new r(e, t || {});
        }
        constructor(e, t) {
          this.specs = e;
          var i;
          function n(u) {
            var l = ht.newName();
            return ((i || (i = Object.create(null)))["." + l] = u), l;
          }
          h(n, "def");
          var s = typeof t.all == "string" ? t.all : t.all ? n(t.all) : void 0,
            o = t.scope;
          (this.scope = o instanceof it ? (u) => u.prop(yr) == o.data : o ? (u) => u == o : void 0),
            (this.style = za(
              e.map((u) => ({ tag: u.tag, class: u.class || n(Object.assign({}, u, { tag: null })) })),
              { all: s },
            ).style),
            (this.module = i ? new ht(i) : null),
            (this.themeType = t.themeType);
        }
      }),
      (() => {
        h(_r59, "HighlightStyle");
      })(),
      _r59),
    Ka = j.define(),
    HD = j.define({
      combine(r) {
        return r.length ? [r[0]] : null;
      },
    });
  function Ya(r) {
    var e = r.facet(Ka);
    return e.length ? e : r.facet(HD);
  }
  h(Ya, "getHighlighters");
  function jD(r, e) {
    var _e;
    var t = [DA],
      i;
    return r instanceof Cr && (r.module && t.push(re.styleModule.of(r.module)), (i = r.themeType)), ((_e = e) === null || _e === void 0 ? void 0 : _e.fallback) ? t.push(HD.of(r)) : i ? t.push(Ka.computeN([re.darkTheme], (n) => (n.facet(re.darkTheme) == (i == "dark") ? [r] : []))) : t.push(Ka.of(r)), t;
  }
  h(jD, "syntaxHighlighting");
  var Za =
      ((_class81 = class _class {
        update(e) {
          var t = Si(e.state),
            i = Ya(e.state),
            n = i != Ya(e.startState);
          t.length < e.view.viewport.to && !n && t.type == this.tree.type ? (this.decorations = this.decorations.map(e.changes)) : (t != this.tree || e.viewportChanged || n) && ((this.tree = t), (this.decorations = this.buildDeco(e.view, i)));
        }
        buildDeco(e, t) {
          if (!t || !this.tree.length) return ge.none;
          var i = new Ci();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step_value = _step.value,
                n = _step_value.from,
                s = _step_value.to;
              MD(
                this.tree,
                t,
                (o, u, l) => {
                  i.add(o, u, this.markCache[l] || (this.markCache[l] = ge.mark({ class: l })));
                },
                n,
                s,
              );
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i.finish();
        }
        constructor(e) {
          (this.markCache = Object.create(null)), (this.tree = Si(e.state)), (this.decorations = this.buildDeco(e, Ya(e.state)));
        }
      }),
      (() => {
        h(_class81, "TreeHighlighter");
      })(),
      _class81),
    DA = lr.high(Ye.fromClass(Za, { decorations: (r) => r.decorations })),
    P7 = Cr.define([
      { tag: _.meta, color: "#404740" },
      { tag: _.link, textDecoration: "underline" },
      { tag: _.heading, textDecoration: "underline", fontWeight: "bold" },
      { tag: _.emphasis, fontStyle: "italic" },
      { tag: _.strong, fontWeight: "bold" },
      { tag: _.strikethrough, textDecoration: "line-through" },
      { tag: _.keyword, color: "#708" },
      { tag: [_.atom, _.bool, _.url, _.contentSeparator, _.labelName], color: "#219" },
      { tag: [_.literal, _.inserted], color: "#164" },
      { tag: [_.string, _.deleted], color: "#a11" },
      { tag: [_.regexp, _.escape, _.special(_.string)], color: "#e40" },
      { tag: _.definition(_.variableName), color: "#00f" },
      { tag: _.local(_.variableName), color: "#30a" },
      { tag: [_.typeName, _.namespace], color: "#085" },
      { tag: _.className, color: "#167" },
      { tag: [_.special(_.variableName), _.macroName], color: "#256" },
      { tag: _.definition(_.propertyName), color: "#00c" },
      { tag: _.comment, color: "#940" },
      { tag: _.invalid, color: "#f00" },
    ]),
    FA = re.baseTheme({ "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" }, "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" } }),
    YD = 1e4,
    JD = "()[]{}",
    GD = j.define({
      combine(r) {
        return zt(r, { afterCursor: !0, brackets: JD, maxScanDistance: YD, renderMatch: EA });
      },
    }),
    bA = ge.mark({ class: "cm-matchingBracket" }),
    yA = ge.mark({ class: "cm-nonmatchingBracket" });
  function EA(r) {
    var e = [],
      t = r.matched ? bA : yA;
    return e.push(t.range(r.start.from, r.start.to)), r.end && e.push(t.range(r.end.from, r.end.to)), e;
  }
  h(EA, "defaultRenderMatch");
  var CA = Pe.define({
      create() {
        return ge.none;
      },
      update(r, e) {
        if (!e.docChanged && !e.selection) return r;
        var t = [],
          i = e.state.facet(GD);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.state.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            if (!n.empty) continue;
            var s = yn(e.state, n.head, -1, i) || (n.head > 0 && yn(e.state, n.head - 1, 1, i)) || (i.afterCursor && (yn(e.state, n.head, 1, i) || (n.head < e.state.doc.length && yn(e.state, n.head + 1, -1, i))));
            s && (t = t.concat(i.renderMatch(s, e.state)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return ge.set(t, !0);
      },
      provide: (r) => re.decorations.from(r),
    }),
    BA = [CA, FA];
  function XD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [GD.of(r), BA];
  }
  h(XD, "bracketMatching");
  var vA = new ue();
  function eh(r, e, t) {
    var i = r.prop(e < 0 ? ue.openedBy : ue.closedBy);
    if (i) return i;
    if (r.name.length == 1) {
      var n = t.indexOf(r.name);
      if (n > -1 && n % 2 == (e < 0 ? 1 : 0)) return [t[n + e]];
    }
    return null;
  }
  h(eh, "matchingNodes");
  function th(r) {
    var e = r.type.prop(vA);
    return e ? e(r.node) : r;
  }
  h(th, "findHandle");
  function yn(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var n = i.maxScanDistance || YD,
      s = i.brackets || JD,
      o = Si(r),
      u = o.resolveInner(e, t);
    for (var l = u; l; l = l.parent) {
      var a = eh(l.type, t, s);
      if (a && l.from < l.to) {
        var c = th(l);
        if (c && (t > 0 ? e >= c.from && e < c.to : e > c.from && e <= c.to)) return xA(r, e, t, l, c, a, s);
      }
    }
    return AA(r, e, t, o, u.type, n, s);
  }
  h(yn, "matchBrackets");
  function xA(r, e, t, i, n, s, o) {
    var _u;
    var u = i.parent,
      l = { from: n.from, to: n.to },
      a = 0,
      c = (_u = u) === null || _u === void 0 ? void 0 : _u.cursor();
    if (c && (t < 0 ? c.childBefore(i.from) : c.childAfter(i.to)))
      do
        if (t < 0 ? c.to <= i.from : c.from >= i.to) {
          if (a == 0 && s.indexOf(c.type.name) > -1 && c.from < c.to) {
            var f = th(c);
            return { start: l, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };
          } else if (eh(c.type, t, o)) a++;
          else if (eh(c.type, -t, o)) {
            if (a == 0) {
              var f1 = th(c);
              return { start: l, end: f1 && f1.from < f1.to ? { from: f1.from, to: f1.to } : void 0, matched: !1 };
            }
            a--;
          }
        }
      while (t < 0 ? c.prevSibling() : c.nextSibling());
    return { start: l, matched: !1 };
  }
  h(xA, "matchMarkedBrackets");
  function AA(r, e, t, i, n, s, o) {
    var u = t < 0 ? r.sliceDoc(e - 1, e) : r.sliceDoc(e, e + 1),
      l = o.indexOf(u);
    if (l < 0 || (l % 2 == 0) != t > 0) return null;
    var a = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e },
      c = r.doc.iterRange(e, t > 0 ? r.doc.length : 0),
      f = 0;
    for (var d = 0; !c.next().done && d <= s; ) {
      var p = c.value;
      t < 0 && (d += p.length);
      var m = e + d * t;
      for (var F = t > 0 ? 0 : p.length - 1, g = t > 0 ? p.length : -1; F != g; F += t) {
        var D = o.indexOf(p[F]);
        if (!(D < 0 || i.resolveInner(m + F, 1).type != n))
          if ((D % 2 == 0) == t > 0) f++;
          else {
            if (f == 1) return { start: a, end: { from: m + F, to: m + F + 1 }, matched: D >> 1 == l >> 1 };
            f--;
          }
      }
      t > 0 && (d += p.length);
    }
    return c.done ? { start: a, matched: !1 } : null;
  }
  h(AA, "matchPlainBrackets");
  var kA = Object.create(null),
    $D = [Ie.none];
  var qD = [],
    SA = Object.create(null);
  for (
    var _i1 = 0,
      _iter1 = [
        ["variable", "variableName"],
        ["variable-2", "variableName.special"],
        ["string-2", "string.special"],
        ["def", "variableName.definition"],
        ["tag", "tagName"],
        ["attribute", "attributeName"],
        ["type", "typeName"],
        ["builtin", "variableName.standard"],
        ["qualifier", "modifier"],
        ["error", "invalid"],
        ["header", "heading"],
        ["property", "propertyName"],
      ];
    _i1 < _iter1.length;
    _i1++
  ) {
    var _iter__i = _sliced_to_array(_iter1[_i1], 2),
      r2 = _iter__i[0],
      e1 = _iter__i[1];
    SA[r2] = wA(kA, e1);
  }
  function Ja(r, e) {
    qD.indexOf(r) > -1 || (qD.push(r), console.warn(e));
  }
  h(Ja, "warnForPart");
  function wA(r, e) {
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.split(".")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var o = r[s] || _[s];
        o ? (typeof o == "function" ? (t ? (t = o(t)) : Ja(s, "Modifier ".concat(s, " used at start of tag"))) : t ? Ja(s, "Tag ".concat(s, " used as modifier")) : (t = o)) : Ja(s, "Unknown highlighting tag ".concat(s));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!t) return 0;
    var i = e.replace(/ /g, "_"),
      n = Ie.define({ id: $D.length, name: i, props: [vo({ [i]: t })] });
    return $D.push(n), n.id;
  }
  h(wA, "createTokenType");
  var rh = at.define(),
    QA = at.define(),
    _A = j.define(),
    KD = j.define({
      combine(r) {
        return zt(r, { minDepth: 100, newGroupDelay: 500, joinToEvent: (e, t) => t }, { minDepth: Math.max, newGroupDelay: Math.min, joinToEvent: (e, t) => (i, n) => e(i, n) || t(i, n) });
      },
    });
  function UA(r) {
    var e = 0;
    return r.iterChangedRanges((t, i) => (e = i)), e;
  }
  h(UA, "changeEnd");
  var ZD = Pe.define({
    create() {
      return wi.empty;
    },
    update(r, e) {
      var t = e.state.facet(KD),
        i = e.annotation(rh);
      if (i) {
        var l = e.docChanged ? X.single(UA(e.changes)) : void 0,
          a = Ct.fromTransaction(e, l),
          c = i.side,
          f = c == 0 ? r.undone : r.done;
        return a ? (f = So(f, f.length, t.minDepth, a)) : (f = rF(f, e.startState.selection)), new wi(c == 0 ? i.rest : f, c == 0 ? f : i.rest);
      }
      var n = e.annotation(QA);
      if (((n == "full" || n == "before") && (r = r.isolate()), e.annotation(Re.addToHistory) === !1)) return e.changes.empty ? r : r.addMapping(e.changes.desc);
      var s = Ct.fromTransaction(e),
        o = e.annotation(Re.time),
        u = e.annotation(Re.userEvent);
      return s ? (r = r.addChanges(s, o, u, t, e)) : e.selection && (r = r.addSelection(e.startState.selection, o, u, t.newGroupDelay)), (n == "full" || n == "after") && (r = r.isolate()), r;
    },
    toJSON(r) {
      return { done: r.done.map((e) => e.toJSON()), undone: r.undone.map((e) => e.toJSON()) };
    },
    fromJSON(r) {
      return new wi(r.done.map(Ct.fromJSON), r.undone.map(Ct.fromJSON));
    },
  });
  function eF() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [
      ZD,
      KD.of(r),
      re.domEventHandlers({
        beforeinput(e, t) {
          var i = e.inputType == "historyUndo" ? tF : e.inputType == "historyRedo" ? nh : null;
          return i ? (e.preventDefault(), i(t)) : !1;
        },
      }),
    ];
  }
  h(eF, "history");
  function wo(r, e) {
    return function (param) {
      var t = param.state,
        i = param.dispatch;
      if (!e && t.readOnly) return !1;
      var n = t.field(ZD, !1);
      if (!n) return !1;
      var s = n.pop(r, t, e);
      return s ? (i(s), !0) : !1;
    };
  }
  h(wo, "cmd");
  var tF = wo(0, !1),
    nh = wo(1, !1),
    LA = wo(0, !0),
    OA = wo(1, !0);
  var Ct =
    ((_r60 = class r {
      setSelAfter(e) {
        return new r(this.changes, this.effects, this.mapped, this.startSelection, e);
      }
      toJSON() {
        var e, t, i;
        return { changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(), mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(), startSelection: (i = this.startSelection) === null || i === void 0 ? void 0 : i.toJSON(), selectionsAfter: this.selectionsAfter.map((n) => n.toJSON()) };
      }
      static fromJSON(e) {
        return new r(e.changes && ze.fromJSON(e.changes), [], e.mapped && Vt.fromJSON(e.mapped), e.startSelection && X.fromJSON(e.startSelection), e.selectionsAfter.map(X.fromJSON));
      }
      static fromTransaction(e, t) {
        var i = pt;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.startState.facet(_A)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            var s = n(e);
            s.length && (i = i.concat(s));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return !i.length && e.changes.empty ? null : new r(e.changes.invert(e.startState.doc), i, void 0, t || e.startState.selection, pt);
      }
      static selection(e) {
        return new r(void 0, pt, void 0, void 0, e);
      }
      constructor(e, t, i, n, s) {
        (this.changes = e), (this.effects = t), (this.mapped = i), (this.startSelection = n), (this.selectionsAfter = s);
      }
    }),
    (() => {
      h(_r60, "HistEvent");
    })(),
    _r60);
  function So(r, e, t, i) {
    var n = e + 1 > t + 20 ? e - t - 1 : 0,
      s = r.slice(n, e);
    return s.push(i), s;
  }
  h(So, "updateBranch");
  function TA(r, e) {
    var t = [],
      i = !1;
    return (
      r.iterChangedRanges((n, s) => t.push(n, s)),
      e.iterChangedRanges((n, s, o, u) => {
        for (var l = 0; l < t.length; ) {
          var a = t[l++],
            c = t[l++];
          u >= a && o <= c && (i = !0);
        }
      }),
      i
    );
  }
  h(TA, "isAdjacent");
  function RA(r, e) {
    return r.ranges.length == e.ranges.length && r.ranges.filter((t, i) => t.empty != e.ranges[i].empty).length === 0;
  }
  h(RA, "eqSelectionShape");
  function iF(r, e) {
    return r.length ? (e.length ? r.concat(e) : r) : e;
  }
  h(iF, "conc");
  var pt = [],
    NA = 200;
  function rF(r, e) {
    if (r.length) {
      var t = r[r.length - 1],
        i = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - NA));
      return i.length && i[i.length - 1].eq(e) ? r : (i.push(e), So(r, r.length - 1, 1e9, t.setSelAfter(i)));
    } else return [Ct.selection([e])];
  }
  h(rF, "addSelection");
  function MA(r) {
    var e = r[r.length - 1],
      t = r.slice();
    return (t[r.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1))), t;
  }
  h(MA, "popSelection");
  function ih(r, e) {
    if (!r.length) return r;
    var t = r.length,
      i = pt;
    for (; t; ) {
      var n = PA(r[t - 1], e, i);
      if ((n.changes && !n.changes.empty) || n.effects.length) {
        var s = r.slice(0, t);
        return (s[t - 1] = n), s;
      } else (e = n.mapped), t--, (i = n.selectionsAfter);
    }
    return i.length ? [Ct.selection(i)] : pt;
  }
  h(ih, "addMappingToBranch");
  function PA(r, e, t) {
    var i = iF(r.selectionsAfter.length ? r.selectionsAfter.map((u) => u.map(e)) : pt, t);
    if (!r.changes) return Ct.selection(i);
    var n = r.changes.map(e),
      s = e.mapDesc(r.changes, !0),
      o = r.mapped ? r.mapped.composeDesc(s) : s;
    return new Ct(n, de.mapEffects(r.effects, e), o, r.startSelection.map(s), i);
  }
  h(PA, "mapEvent");
  var IA = /^(input\.type|delete)($|\.)/,
    wi =
      ((_r61 = class r {
        isolate() {
          return this.prevTime ? new r(this.done, this.undone) : this;
        }
        addChanges(e, t, i, n, s) {
          var o = this.done,
            u = o[o.length - 1];
          return (
            u && u.changes && !u.changes.empty && e.changes && (!i || IA.test(i)) && ((!u.selectionsAfter.length && t - this.prevTime < n.newGroupDelay && n.joinToEvent(s, TA(u.changes, e.changes))) || i == "input.type.compose")
              ? (o = So(o, o.length - 1, n.minDepth, new Ct(e.changes.compose(u.changes), iF(e.effects, u.effects), u.mapped, u.startSelection, pt)))
              : (o = So(o, o.length, n.minDepth, e)),
            new r(o, pt, t, i)
          );
        }
        addSelection(e, t, i, n) {
          var s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : pt;
          return s.length > 0 && t - this.prevTime < n && i == this.prevUserEvent && i && /^select($|\.)/.test(i) && RA(s[s.length - 1], e) ? this : new r(rF(this.done, e), this.undone, t, i);
        }
        addMapping(e) {
          return new r(ih(this.done, e), ih(this.undone, e), this.prevTime, this.prevUserEvent);
        }
        pop(e, t, i) {
          var n = e == 0 ? this.done : this.undone;
          if (n.length == 0) return null;
          var s = n[n.length - 1];
          if (i && s.selectionsAfter.length) return t.update({ selection: s.selectionsAfter[s.selectionsAfter.length - 1], annotations: rh.of({ side: e, rest: MA(n) }), userEvent: e == 0 ? "select.undo" : "select.redo", scrollIntoView: !0 });
          if (s.changes) {
            var o = n.length == 1 ? pt : n.slice(0, n.length - 1);
            return s.mapped && (o = ih(o, s.mapped)), t.update({ changes: s.changes, selection: s.startSelection, effects: s.effects, annotations: rh.of({ side: e, rest: o }), filter: !1, userEvent: e == 0 ? "undo" : "redo", scrollIntoView: !0 });
          } else return null;
        }
        constructor(e, t, ref, ref1) {
          var i = ref === void 0 ? 0 : ref,
            n = ref1 === void 0 ? void 0 : ref1;
          (this.done = e), (this.undone = t), (this.prevTime = i), (this.prevUserEvent = n);
        }
      }),
      (() => {
        h(_r61, "HistoryState");
      })(),
      _r61);
  wi.empty = new wi(pt, pt);
  var nF = [
    { key: "Mod-z", run: tF, preventDefault: !0 },
    { key: "Mod-y", mac: "Mod-Shift-z", run: nh, preventDefault: !0 },
    { linux: "Ctrl-Shift-z", run: nh, preventDefault: !0 },
    { key: "Mod-u", run: LA, preventDefault: !0 },
    { key: "Alt-u", mac: "Mod-Shift-u", run: OA, preventDefault: !0 },
  ];
  function sF(r, e) {
    var t = -1;
    return r.changeByRange((i) => {
      var n = [];
      for (var o = i.from; o <= i.to; ) {
        var u = r.doc.lineAt(o);
        u.number > t && (i.empty || i.to > u.from) && (e(u, n, i), (t = u.number)), (o = u.to + 1);
      }
      var s = r.changes(n);
      return { changes: n, range: X.range(s.mapPos(i.anchor, 1), s.mapPos(i.head, 1)) };
    });
  }
  h(sF, "changeBySelectedLine");
  var $A = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              sF(r, (t, i) => {
                i.push({ from: t.from, insert: r.facet(ko) });
              }),
              { userEvent: "input.indent" },
            ),
          ),
          !0);
    }, "indentMore"),
    qA = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              sF(r, (t, i) => {
                var n = /^\s*/.exec(t.text)[0];
                if (!n) return;
                var s = _s(n, r.tabSize),
                  o = 0,
                  u = zD(r, Math.max(0, s - WD(r)));
                for (; o < n.length && o < u.length && n.charCodeAt(o) == u.charCodeAt(o); ) o++;
                i.push({ from: t.from + o, to: t.from + n.length, insert: u.slice(o) });
              }),
              { userEvent: "delete.dedent" },
            ),
          ),
          !0);
    }, "indentLess");
  var oF = { key: "Tab", run: $A, shift: qA };
  function mt() {
    var r = arguments[0];
    typeof r == "string" && (r = document.createElement(r));
    var e = 1,
      t = arguments[1];
    if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
      for (var i in t)
        if (Object.prototype.hasOwnProperty.call(t, i)) {
          var n = t[i];
          typeof n == "string" ? r.setAttribute(i, n) : n != null && (r[i] = n);
        }
      e++;
    }
    for (; e < arguments.length; e++) uF(r, arguments[e]);
    return r;
  }
  h(mt, "crelt");
  function uF(r, e) {
    if (typeof e == "string") r.appendChild(document.createTextNode(e));
    else if (e != null)
      if (e.nodeType != null) r.appendChild(e);
      else if (Array.isArray(e)) for (var t = 0; t < e.length; t++) uF(r, e[t]);
      else throw new RangeError("Unsupported child node: " + e);
  }
  h(uF, "add");
  var sh =
      ((_class82 = class _class {
        constructor(e, t, i) {
          (this.from = e), (this.to = t), (this.diagnostic = i);
        }
      }),
      (() => {
        h(_class82, "SelectedDiagnostic");
      })(),
      _class82),
    Qi =
      ((_r62 = class r {
        static init(e, t, i) {
          var n = e,
            s = i.facet(_i2).markerFilter;
          s && (n = s(n));
          var o = ge.set(
            n.map((u) => (u.from == u.to || (u.from == u.to - 1 && i.doc.lineAt(u.from).to == u.from) ? ge.widget({ widget: new oh(u), diagnostic: u }).range(u.from) : ge.mark({ attributes: { class: "cm-lintRange cm-lintRange-" + u.severity + (u.markClass ? " " + u.markClass : "") }, diagnostic: u }).range(u.from, u.to))),
            !0,
          );
          return new r(o, t, Br(o));
        }
        constructor(e, t, i) {
          (this.diagnostics = e), (this.panel = t), (this.selected = i);
        }
      }),
      (() => {
        h(_r62, "LintState");
      })(),
      _r62);
  function Br(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
      t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    var i = null;
    return (
      r.between(t, 1e9, (n, s, param) => {
        var o = param.spec;
        if (!(e && o.diagnostic != e)) return (i = new sh(n, s, o.diagnostic)), !1;
      }),
      i
    );
  }
  h(Br, "findDiagnostic");
  function VA(r, e) {
    var t = r.startState.doc.lineAt(e.pos);
    return !!(r.effects.some((i) => i.is(lh)) || r.changes.touchesRange(t.from, t.to));
  }
  h(VA, "hideTooltip");
  function WA(r, e) {
    return r.field(Bt, !1) ? e : e.concat(de.appendConfig.of(pF));
  }
  h(WA, "maybeEnableLint");
  function zA(r, e) {
    return { effects: WA(r, [lh.of(e)]) };
  }
  h(zA, "setDiagnostics");
  var lh = de.define(),
    aF = de.define(),
    hF = de.define(),
    Bt = Pe.define({
      create() {
        return new Qi(ge.none, null, null);
      },
      update(r, e) {
        if (e.docChanged) {
          var t = r.diagnostics.map(e.changes),
            i = null;
          if (r.selected) {
            var n = e.changes.mapPos(r.selected.from, 1);
            i = Br(t, r.selected.diagnostic, n) || Br(t, null, n);
          }
          r = new Qi(t, r.panel, i);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t1 = _step.value;
            t1.is(lh) ? (r = Qi.init(t1.value, r.panel, e.state)) : t1.is(aF) ? (r = new Qi(r.diagnostics, t1.value ? uh.open : null, r.selected)) : t1.is(hF) && (r = new Qi(r.diagnostics, r.panel, t1.value));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return r;
      },
      provide: (r) => [ho.from(r, (e) => e.panel), re.decorations.from(r, (e) => e.diagnostics)],
    });
  var HA = ge.mark({ class: "cm-lintRange cm-lintRange-active" });
  function jA(r, e, t) {
    var _r_state_field = r.state.field(Bt),
      i = _r_state_field.diagnostics,
      n = [],
      s = 2e8,
      o = 0;
    i.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (l, a, param) => {
      var c = param.spec;
      e >= l && e <= a && (l == a || ((e > l || t > 0) && (e < a || t < 0))) && (n.push(c.diagnostic), (s = Math.min(l, s)), (o = Math.max(a, o)));
    });
    var u = r.state.facet(_i2).tooltipFilter;
    return (
      u && (n = u(n)),
      n.length
        ? {
            pos: s,
            end: o,
            above: r.state.doc.lineAt(s).to < o,
            create() {
              return { dom: YA(r, n) };
            },
          }
        : null
    );
  }
  h(jA, "lintTooltip");
  function YA(r, e) {
    return mt(
      "ul",
      { class: "cm-tooltip-lint" },
      e.map((t) => dF(r, t, !1)),
    );
  }
  h(YA, "diagnosticsTooltip");
  var lF = h((r) => {
    var e = r.state.field(Bt, !1);
    return !e || !e.panel ? !1 : (r.dispatch({ effects: aF.of(!1) }), !0);
  }, "closeLintPanel");
  var JA = Ye.fromClass(
      class {
        run() {
          var r = Date.now();
          if (r < this.lintTime - 10) setTimeout(this.run, this.lintTime - r);
          else {
            this.set = !1;
            var _this_view = this.view,
              e = _this_view.state,
              _e_facet = e.facet(_i2),
              t = _e_facet.sources;
            Promise.all(t.map((i) => Promise.resolve(i(this.view)))).then(
              (i) => {
                var n = i.reduce((s, o) => s.concat(o));
                this.view.state.doc == e.doc && this.view.dispatch(zA(this.view.state, n));
              },
              (i) => {
                ft(this.view.state, i);
              },
            );
          }
        }
        update(r) {
          var e = r.state.facet(_i2);
          (r.docChanged || e != r.startState.facet(_i2) || (e.needsRefresh && e.needsRefresh(r))) && ((this.lintTime = Date.now() + e.delay), this.set || ((this.set = !0), (this.timeout = setTimeout(this.run, e.delay))));
        }
        force() {
          this.set && ((this.lintTime = Date.now()), this.run());
        }
        destroy() {
          clearTimeout(this.timeout);
        }
        constructor(r) {
          (this.view = r), (this.timeout = -1), (this.set = !0);
          var _r_state_facet = r.state.facet(_i2),
            e = _r_state_facet.delay;
          (this.lintTime = Date.now() + e), (this.run = this.run.bind(this)), (this.timeout = setTimeout(this.run, e));
        }
      },
    ),
    _i2 = j.define({
      combine(r) {
        return Object.assign(
          { sources: r.map((e) => e.source) },
          zt(
            r.map((e) => e.config),
            { delay: 750, markerFilter: null, tooltipFilter: null, needsRefresh: null },
            { needsRefresh: (e, t) => (e ? (t ? (i) => e(i) || t(i) : e) : t) },
          ),
        );
      },
    });
  function cF(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return [_i2.of({ source: r, config: e }), JA, pF];
  }
  h(cF, "linter");
  function fF(r) {
    var e = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (r)
      try {
        var _loop = function () {
          var _loop = function (i) {
            var n = t[i];
            if (/[a-zA-Z]/.test(n) && !e.some((s) => s.toLowerCase() == n.toLowerCase())) {
              e.push(n);
              return "continue|e";
            }
          };
          var _step_value = _step.value,
            t = _step_value.name;
          for (var i = 0; i < t.length; i++) {
            var _ret = _loop(i);
            switch (_ret) {
              case "continue|e":
                return "continue|e";
            }
          }
          e.push("");
        };
        e: for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ret = _loop();
          switch (_ret) {
            case "continue|e":
              continue e;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    return e;
  }
  h(fF, "assignKeys");
  function dF(r, e, t) {
    var i;
    var n = t ? fF(e.actions) : [];
    return mt(
      "li",
      { class: "cm-diagnostic cm-diagnostic-" + e.severity },
      mt("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage() : e.message),
      (i = e.actions) === null || i === void 0
        ? void 0
        : i.map((s, o) => {
            var u = !1,
              l = h((d) => {
                if ((d.preventDefault(), u)) return;
                u = !0;
                var p = Br(r.state.field(Bt).diagnostics, e);
                p && s.apply(r, p.from, p.to);
              }, "click"),
              a = s.name,
              c = n[o] ? a.indexOf(n[o]) : -1,
              f = c < 0 ? a : [a.slice(0, c), mt("u", a.slice(c, c + 1)), a.slice(c + 1)];
            return mt("button", { type: "button", class: "cm-diagnosticAction", onclick: l, onmousedown: l, "aria-label": " Action: ".concat(a).concat(c < 0 ? "" : ' (access key "'.concat(n[o], ')"'), ".") }, f);
          }),
      e.source && mt("div", { class: "cm-diagnosticSource" }, e.source),
    );
  }
  h(dF, "renderDiagnostic");
  var oh =
      ((_class83 = class _class extends si {
        eq(e) {
          return e.diagnostic == this.diagnostic;
        }
        toDOM() {
          return mt("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
        }
        constructor(e) {
          super(), (this.diagnostic = e);
        }
      }),
      (() => {
        h(_class83, "DiagnosticWidget");
      })(),
      _class83),
    _o =
      ((_class84 = class _class {
        constructor(e, t) {
          (this.diagnostic = t), (this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16)), (this.dom = dF(e, t, !0)), (this.dom.id = this.id), this.dom.setAttribute("role", "option");
        }
      }),
      (() => {
        h(_class84, "PanelItem");
      })(),
      _class84),
    uh =
      ((_r63 = class r {
        get selectedIndex() {
          var e = this.view.state.field(Bt).selected;
          if (!e) return -1;
          for (var t = 0; t < this.items.length; t++) if (this.items[t].diagnostic == e.diagnostic) return t;
          return -1;
        }
        update() {
          var _this_view_state_field = this.view.state.field(Bt),
            e = _this_view_state_field.diagnostics,
            t = _this_view_state_field.selected,
            i = 0,
            n = !1,
            s = null;
          for (
            e.between(0, this.view.state.doc.length, (o, u, param) => {
              var l = param.spec;
              var a = -1,
                c;
              for (var f = i; f < this.items.length; f++)
                if (this.items[f].diagnostic == l.diagnostic) {
                  a = f;
                  break;
                }
              a < 0 ? ((c = new _o(this.view, l.diagnostic)), this.items.splice(i, 0, c), (n = !0)) : ((c = this.items[a]), a > i && (this.items.splice(i, a - i), (n = !0))), t && c.diagnostic == t.diagnostic ? c.dom.hasAttribute("aria-selected") || (c.dom.setAttribute("aria-selected", "true"), (s = c)) : c.dom.hasAttribute("aria-selected") && c.dom.removeAttribute("aria-selected"), i++;
            });
            i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0);

          )
            (n = !0), this.items.pop();
          this.items.length == 0 && (this.items.push(new _o(this.view, { from: -1, to: -1, severity: "info", message: this.view.state.phrase("No diagnostics") })), (n = !0)),
            s
              ? (this.list.setAttribute("aria-activedescendant", s.id),
                this.view.requestMeasure({
                  key: this,
                  read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
                  write: (param) => {
                    var o = param.sel,
                      u = param.panel;
                    o.top < u.top ? (this.list.scrollTop -= u.top - o.top) : o.bottom > u.bottom && (this.list.scrollTop += o.bottom - u.bottom);
                  },
                }))
              : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"),
            n && this.sync();
        }
        sync() {
          var e = this.list.firstChild;
          function t() {
            var i = e;
            (e = i.nextSibling), i.remove();
          }
          h(t, "rm");
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              if (i.dom.parentNode == this.list) {
                for (; e != i.dom; ) t();
                e = i.dom.nextSibling;
              } else this.list.insertBefore(i.dom, e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          for (; e; ) t();
        }
        moveSelection(e) {
          if (this.selectedIndex < 0) return;
          var t = this.view.state.field(Bt),
            i = Br(t.diagnostics, this.items[e].diagnostic);
          i && this.view.dispatch({ selection: { anchor: i.from, head: i.to }, scrollIntoView: !0, effects: hF.of(i) });
        }
        static open(e) {
          return new r(e);
        }
        constructor(e) {
          (this.view = e), (this.items = []);
          var t = h((n) => {
              if (n.keyCode == 27) lF(this.view), this.view.focus();
              else if (n.keyCode == 38 || n.keyCode == 33) this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
              else if (n.keyCode == 40 || n.keyCode == 34) this.moveSelection((this.selectedIndex + 1) % this.items.length);
              else if (n.keyCode == 36) this.moveSelection(0);
              else if (n.keyCode == 35) this.moveSelection(this.items.length - 1);
              else if (n.keyCode == 13) this.view.focus();
              else if (n.keyCode >= 65 && n.keyCode <= 90 && this.selectedIndex >= 0) {
                var _this_items_this_selectedIndex = this.items[this.selectedIndex],
                  s = _this_items_this_selectedIndex.diagnostic,
                  o = fF(s.actions);
                for (var u = 0; u < o.length; u++)
                  if (o[u].toUpperCase().charCodeAt(0) == n.keyCode) {
                    var l = Br(this.view.state.field(Bt).diagnostics, s);
                    l && s.actions[u].apply(e, l.from, l.to);
                  }
              } else return;
              n.preventDefault();
            }, "onkeydown"),
            i = h((n) => {
              for (var s = 0; s < this.items.length; s++) this.items[s].dom.contains(n.target) && this.moveSelection(s);
            }, "onclick");
          (this.list = mt("ul", { tabIndex: 0, role: "listbox", "aria-label": this.view.state.phrase("Diagnostics"), onkeydown: t, onclick: i })), (this.dom = mt("div", { class: "cm-panel-lint" }, this.list, mt("button", { type: "button", name: "close", "aria-label": this.view.state.phrase("close"), onclick: () => lF(this.view) }, "\xd7"))), this.update();
        }
      }),
      (() => {
        h(_r63, "LintPanel");
      })(),
      _r63);
  function GA(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'viewBox="0 0 40 40"';
    return 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" '.concat(e, ">").concat(encodeURIComponent(r), "</svg>')");
  }
  h(GA, "svg");
  function Qo(r) {
    return GA('<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="'.concat(r, '" fill="none" stroke-width=".7"/>'), 'width="6" height="3"');
  }
  h(Qo, "underline");
  var XA = re.baseTheme({
    ".cm-diagnostic": { padding: "3px 6px 3px 8px", marginLeft: "-1px", display: "block", whiteSpace: "pre-wrap" },
    ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
    ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
    ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
    ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
    ".cm-diagnosticAction": { font: "inherit", border: "none", padding: "2px 4px", backgroundColor: "#444", color: "white", borderRadius: "3px", marginLeft: "8px", cursor: "pointer" },
    ".cm-diagnosticSource": { fontSize: "70%", opacity: 0.7 },
    ".cm-lintRange": { backgroundPosition: "left bottom", backgroundRepeat: "repeat-x", paddingBottom: "0.7px" },
    ".cm-lintRange-error": { backgroundImage: Qo("#d11") },
    ".cm-lintRange-warning": { backgroundImage: Qo("orange") },
    ".cm-lintRange-info": { backgroundImage: Qo("#999") },
    ".cm-lintRange-hint": { backgroundImage: Qo("#66d") },
    ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
    ".cm-tooltip-lint": { padding: 0, margin: 0 },
    ".cm-lintPoint": { position: "relative", "&:after": { content: '""', position: "absolute", bottom: 0, left: "-2px", borderLeft: "3px solid transparent", borderRight: "3px solid transparent", borderBottom: "4px solid #d11" } },
    ".cm-lintPoint-warning": { "&:after": { borderBottomColor: "orange" } },
    ".cm-lintPoint-info": { "&:after": { borderBottomColor: "#999" } },
    ".cm-lintPoint-hint": { "&:after": { borderBottomColor: "#66d" } },
    ".cm-panel.cm-panel-lint": {
      position: "relative",
      "& ul": { maxHeight: "100px", overflowY: "auto", "& [aria-selected]": { backgroundColor: "#ddd", "& u": { textDecoration: "underline" } }, "&:focus [aria-selected]": { background_fallback: "#bdf", backgroundColor: "Highlight", color_fallback: "white", color: "HighlightText" }, "& u": { textDecoration: "none" }, padding: 0, margin: 0 },
      "& [name=close]": { position: "absolute", top: "0", right: "2px", background: "inherit", border: "none", font: "inherit", padding: 0, margin: 0 },
    },
  });
  var pF = [
    Bt,
    re.decorations.compute([Bt], (r) => {
      var _r_field = r.field(Bt),
        e = _r_field.selected,
        t = _r_field.panel;
      return !e || !t || e.from == e.to ? ge.none : ge.set([HA.range(e.from, e.to)]);
    }),
    SD(jA, { hideOn: VA }),
    XA,
  ];
  function KA(r) {
    var e, t, i;
    return {
      c() {
        (e = L("button")),
          (e.innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" class="svelte-1ha11jr"><path d="M704 896H64V320h640v192h64V192c0-35-29-64-64-64H512C512 57 455 0 384 0S256 57 256 128H64c-35 0-64 29-64 64v704c0 35 29 64 64 64h640c35 0 64-29 64-64V768h-64v128zM192 192h64s64-29 64-64 29-64 64-64 64 29 64 64 32 64 64 64h64s64 29 64 64H128c0-39 28-64 64-64zm-64 512h128v-64H128v64zm448-128V448L320 640l256 192V704h320V576H576zM128 832h192v-64H128v64zm320-448H128v64h320v-64zM256 512H128v64h128v-64z"></path></svg>'),
          B(e, "class", "btn svelte-1ha11jr"),
          B(e, "id", "copy"),
          B(e, "title", "Copy bibtex"),
          Ki(e, "copied", r[0]);
      },
      m(n, s) {
        E(n, e, s), t || ((i = Fe(e, "click", r[1])), (t = !0));
      },
      p(n, param) {
        var _param = _sliced_to_array(param, 1),
          s = _param[0];
        s & 1 && Ki(e, "copied", n[0]);
      },
      i: xe,
      o: xe,
      d(n) {
        n && y(e), (t = !1), i();
      },
    };
  }
  h(KA, "create_fragment");
  function ZA(r, e, t) {
    var i,
      n = !1,
      s = e.bibtex,
      o = h(
        _async_to_generator(function () {
          var e;
          return _ts_generator(this, function (_state) {
            switch (_state.label) {
              case 0:
                _state.trys.push([0, 2, , 3]);
                return [4, navigator.clipboard.writeText(s)];
              case 1:
                _state.sent(), t(0, (n = !0)), clearInterval(i), (i = setTimeout(() => t(0, (n = !1)), 3e3));
                return [3, 3];
              case 2:
                e = _state.sent();
                alert("Failed to copy");
                return [3, 3];
              case 3:
                return [2];
            }
          });
        }),
        "handleCopy",
      );
    return (
      (r.$$set = (u) => {
        "bibtex" in u && t(2, (s = u.bibtex));
      }),
      [n, o, s]
    );
  }
  h(ZA, "instance");
  var ah =
      ((_class85 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, ZA, KA, se, { bibtex: 2 });
        }
      }),
      (() => {
        h(_class85, "CopyButton");
      })(),
      _class85),
    mF = ah;
  var ch =
      ((_r64 = class r {
        toString() {
          return "["
            .concat(this.stack.filter((e, t) => t % 3 == 0).concat(this.state), "]@")
            .concat(this.pos)
            .concat(this.score ? "!" + this.score : "");
        }
        static start(e, t) {
          var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
          var n = e.parser.context;
          return new r(e, [], t, i, i, 0, [], 0, n ? new Uo(n, n.start) : null, 0, null);
        }
        get context() {
          return this.curContext ? this.curContext.context : null;
        }
        pushState(e, t) {
          this.stack.push(this.state, t, this.bufferBase + this.buffer.length), (this.state = e);
        }
        reduce(e) {
          var t;
          var i = e >> 19,
            n = e & 65535,
            _this_p = this.p,
            s = _this_p.parser,
            o = s.dynamicPrecedence(n);
          if ((o && (this.score += o), i == 0)) {
            this.pushState(s.getGoto(this.state, n, !0), this.reducePos), n < s.minRepeatTerm && this.storeNode(n, this.reducePos, this.reducePos, 4, !0), this.reduceContext(n, this.reducePos);
            return;
          }
          var u = this.stack.length - (i - 1) * 3 - (e & 262144 ? 6 : 0),
            l = u ? this.stack[u - 2] : this.p.ranges[0].from,
            a = this.reducePos - l;
          a >= 2e3 && !(!((t = this.p.parser.nodeSet.types[n]) === null || t === void 0) && t.isAnonymous) && (l == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, (this.p.lastBigReductionSize = a)) : this.p.lastBigReductionSize < a && ((this.p.bigReductionCount = 1), (this.p.lastBigReductionStart = l), (this.p.lastBigReductionSize = a)));
          var c = u ? this.stack[u - 1] : 0,
            f = this.bufferBase + this.buffer.length - c;
          if (n < s.minRepeatTerm || e & 131072) {
            var d = s.stateFlag(this.state, 1) ? this.pos : this.reducePos;
            this.storeNode(n, l, d, f + 4, !0);
          }
          if (e & 262144) this.state = this.stack[u];
          else {
            var d1 = this.stack[u - 3];
            this.state = s.getGoto(d1, n, !0);
          }
          for (; this.stack.length > u; ) this.stack.pop();
          this.reduceContext(n, l);
        }
        storeNode(e, t, i) {
          var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 4,
            s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
          if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
            var o = this,
              u = this.buffer.length;
            if ((u == 0 && o.parent && ((u = o.bufferBase - o.parent.bufferBase), (o = o.parent)), u > 0 && o.buffer[u - 4] == 0 && o.buffer[u - 1] > -1)) {
              if (t == i) return;
              if (o.buffer[u - 2] >= t) {
                o.buffer[u - 2] = i;
                return;
              }
            }
          }
          if (!s || this.pos == i) this.buffer.push(e, t, i, n);
          else {
            var o1 = this.buffer.length;
            if (o1 > 0 && this.buffer[o1 - 4] != 0) for (; o1 > 0 && this.buffer[o1 - 2] > i; ) (this.buffer[o1] = this.buffer[o1 - 4]), (this.buffer[o1 + 1] = this.buffer[o1 - 3]), (this.buffer[o1 + 2] = this.buffer[o1 - 2]), (this.buffer[o1 + 3] = this.buffer[o1 - 1]), (o1 -= 4), n > 4 && (n -= 4);
            (this.buffer[o1] = e), (this.buffer[o1 + 1] = t), (this.buffer[o1 + 2] = i), (this.buffer[o1 + 3] = n);
          }
        }
        shift(e, t, i) {
          var n = this.pos;
          if (e & 131072) this.pushState(e & 65535, this.pos);
          else if (e & 262144) (this.pos = i), this.shiftContext(t, n), t <= this.p.parser.maxNode && this.buffer.push(t, n, i, 4);
          else {
            var s = e,
              _this_p = this.p,
              o = _this_p.parser;
            (i > this.pos || t <= o.maxNode) && ((this.pos = i), o.stateFlag(s, 1) || (this.reducePos = i)), this.pushState(s, n), this.shiftContext(t, n), t <= o.maxNode && this.buffer.push(t, n, i, 4);
          }
        }
        apply(e, t, i) {
          e & 65536 ? this.reduce(e) : this.shift(e, t, i);
        }
        useNode(e, t) {
          var i = this.p.reused.length - 1;
          (i < 0 || this.p.reused[i] != e) && (this.p.reused.push(e), i++);
          var n = this.pos;
          (this.reducePos = this.pos = n + e.length), this.pushState(t, n), this.buffer.push(i, n, this.reducePos, -1), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
        }
        split() {
          var e = this,
            t = e.buffer.length;
          for (; t > 0 && e.buffer[t - 2] > e.reducePos; ) t -= 4;
          var i = e.buffer.slice(t),
            n = e.bufferBase + t;
          for (; e && n == e.bufferBase; ) e = e.parent;
          return new r(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, i, n, this.curContext, this.lookAhead, e);
        }
        recoverByDelete(e, t) {
          var i = e <= this.p.parser.maxNode;
          i && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, i ? 8 : 4), (this.pos = this.reducePos = t), (this.score -= 190);
        }
        canShift(e) {
          for (var t = new fh(this); ; ) {
            var i = this.p.parser.stateSlot(t.state, 4) || this.p.parser.hasAction(t.state, e);
            if (i == 0) return !1;
            if (!(i & 65536)) return !0;
            t.reduce(i);
          }
        }
        recoverByInsert(e) {
          if (this.stack.length >= 300) return [];
          var t = this.p.parser.nextStates(this.state);
          if (t.length > 8 || this.stack.length >= 120) {
            var _loop = function (s1) {
              var o = t[s1 + 1];
              n.some((u, l) => l & 1 && u == o) || n.push(t[s1], o);
            };
            var n = [];
            for (var s = 0, o; s < t.length; s += 2) (o = t[s + 1]) != this.state && this.p.parser.hasAction(o, e) && n.push(t[s], o);
            if (this.stack.length < 120) for (var s1 = 0; n.length < 8 && s1 < t.length; s1 += 2) _loop(s1);
            t = n;
          }
          var i = [];
          for (var n1 = 0; n1 < t.length && i.length < 4; n1 += 2) {
            var s2 = t[n1 + 1];
            if (s2 == this.state) continue;
            var o1 = this.split();
            o1.pushState(s2, this.pos), o1.storeNode(0, o1.pos, o1.pos, 4, !0), o1.shiftContext(t[n1], this.pos), (o1.score -= 200), i.push(o1);
          }
          return i;
        }
        forceReduce() {
          var _this_p = this.p,
            e = _this_p.parser,
            t = e.stateSlot(this.state, 5);
          if (!(t & 65536)) return !1;
          if (!e.validAction(this.state, t)) {
            var i = t >> 19,
              n = t & 65535,
              s = this.stack.length - i * 3;
            if (s < 0 || e.getGoto(this.stack[s], n, !1) < 0) {
              var o = this.findForcedReduction();
              if (o == null) return !1;
              t = o;
            }
            this.storeNode(0, this.pos, this.pos, 4, !0), (this.score -= 100);
          }
          return (this.reducePos = this.pos), this.reduce(t), !0;
        }
        findForcedReduction() {
          var _this_p = this.p,
            e = _this_p.parser,
            t = [],
            i = h((n, s) => {
              if (!t.includes(n))
                return (
                  t.push(n),
                  e.allActions(n, (o) => {
                    if (!(o & 393216))
                      if (o & 65536) {
                        var u = (o >> 19) - s;
                        if (u > 1) {
                          var l = o & 65535,
                            a = this.stack.length - u * 3;
                          if (a >= 0 && e.getGoto(this.stack[a], l, !1) >= 0) return (u << 19) | 65536 | l;
                        }
                      } else {
                        var u1 = i(o, s + 1);
                        if (u1 != null) return u1;
                      }
                  })
                );
            }, "explore");
          return i(this.state, 0);
        }
        forceAll() {
          for (; !this.p.parser.stateFlag(this.state, 2); )
            if (!this.forceReduce()) {
              this.storeNode(0, this.pos, this.pos, 4, !0);
              break;
            }
          return this;
        }
        get deadEnd() {
          if (this.stack.length != 3) return !1;
          var _this_p = this.p,
            e = _this_p.parser;
          return e.data[e.stateSlot(this.state, 1)] == 65535 && !e.stateSlot(this.state, 4);
        }
        restart() {
          (this.state = this.stack[0]), (this.stack.length = 0);
        }
        sameState(e) {
          if (this.state != e.state || this.stack.length != e.stack.length) return !1;
          for (var t = 0; t < this.stack.length; t += 3) if (this.stack[t] != e.stack[t]) return !1;
          return !0;
        }
        get parser() {
          return this.p.parser;
        }
        dialectEnabled(e) {
          return this.p.parser.dialect.flags[e];
        }
        shiftContext(e, t) {
          this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
        }
        reduceContext(e, t) {
          this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
        }
        emitContext() {
          var e = this.buffer.length - 1;
          (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
        }
        emitLookAhead() {
          var e = this.buffer.length - 1;
          (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
        }
        updateContext(e) {
          if (e != this.curContext.context) {
            var t = new Uo(this.curContext.tracker, e);
            t.hash != this.curContext.hash && this.emitContext(), (this.curContext = t);
          }
        }
        setLookAhead(e) {
          e > this.lookAhead && (this.emitLookAhead(), (this.lookAhead = e));
        }
        close() {
          this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
        }
        constructor(e, t, i, n, s, o, u, l, a, ref, f) {
          var c = ref === void 0 ? 0 : ref;
          (this.p = e), (this.stack = t), (this.state = i), (this.reducePos = n), (this.pos = s), (this.score = o), (this.buffer = u), (this.bufferBase = l), (this.curContext = a), (this.lookAhead = c), (this.parent = f);
        }
      }),
      (() => {
        h(_r64, "Stack");
      })(),
      _r64),
    Uo =
      ((_class86 = class _class {
        constructor(e, t) {
          (this.tracker = e), (this.context = t), (this.hash = e.strict ? e.hash(t) : 0);
        }
      }),
      (() => {
        h(_class86, "StackContext");
      })(),
      _class86),
    fh =
      ((_class87 = class _class {
        reduce(e) {
          var t = e & 65535,
            i = e >> 19;
          i == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), (this.base += 3)) : (this.base -= (i - 1) * 3);
          var n = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
          this.state = n;
        }
        constructor(e) {
          (this.start = e), (this.state = e.state), (this.stack = e.stack), (this.base = this.stack.length);
        }
      }),
      (() => {
        h(_class87, "SimulatedStack");
      })(),
      _class87),
    dh =
      ((_r65 = class r {
        static create(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.bufferBase + e.buffer.length;
          return new r(e, t, t - e.bufferBase);
        }
        maybeNext() {
          var e = this.stack.parent;
          e != null && ((this.index = this.stack.bufferBase - e.bufferBase), (this.stack = e), (this.buffer = e.buffer));
        }
        get id() {
          return this.buffer[this.index - 4];
        }
        get start() {
          return this.buffer[this.index - 3];
        }
        get end() {
          return this.buffer[this.index - 2];
        }
        get size() {
          return this.buffer[this.index - 1];
        }
        next() {
          (this.index -= 4), (this.pos -= 4), this.index == 0 && this.maybeNext();
        }
        fork() {
          return new r(this.stack, this.pos, this.index);
        }
        constructor(e, t, i) {
          (this.stack = e), (this.pos = t), (this.index = i), (this.buffer = e.buffer), this.index == 0 && this.maybeNext();
        }
      }),
      (() => {
        h(_r65, "StackBufferCursor");
      })(),
      _r65);
  function Cn(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Uint16Array;
    if (typeof r != "string") return r;
    var t = null;
    for (var i = 0, n = 0; i < r.length; ) {
      var s = 0;
      for (;;) {
        var o = r.charCodeAt(i++),
          u = !1;
        if (o == 126) {
          s = 65535;
          break;
        }
        o >= 92 && o--, o >= 34 && o--;
        var l = o - 32;
        if ((l >= 46 && ((l -= 46), (u = !0)), (s += l), u)) break;
        s *= 46;
      }
      t ? (t[n++] = s) : (t = new e(s));
    }
    return t;
  }
  h(Cn, "decodeArray");
  var vr =
      ((_class88 = class _class {
        constructor() {
          (this.start = -1), (this.value = -1), (this.end = -1), (this.extended = -1), (this.lookAhead = 0), (this.mask = 0), (this.context = 0);
        }
      }),
      (() => {
        h(_class88, "CachedToken");
      })(),
      _class88),
    gF = new vr(),
    ph =
      ((_class89 = class _class {
        resolveOffset(e, t) {
          var i = this.range,
            n = this.rangeIndex,
            s = this.pos + e;
          for (; s < i.from; ) {
            if (!n) return null;
            var o = this.ranges[--n];
            (s -= i.from - o.to), (i = o);
          }
          for (; t < 0 ? s > i.to : s >= i.to; ) {
            if (n == this.ranges.length - 1) return null;
            var o1 = this.ranges[++n];
            (s += o1.from - i.to), (i = o1);
          }
          return s;
        }
        clipPos(e) {
          if (e >= this.range.from && e < this.range.to) return e;
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              if (t.to > e) return Math.max(e, t.from);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return this.end;
        }
        peek(e) {
          var t = this.chunkOff + e,
            i,
            n;
          if (t >= 0 && t < this.chunk.length) (i = this.pos + e), (n = this.chunk.charCodeAt(t));
          else {
            var s = this.resolveOffset(e, 1);
            if (s == null) return -1;
            if (((i = s), i >= this.chunk2Pos && i < this.chunk2Pos + this.chunk2.length)) n = this.chunk2.charCodeAt(i - this.chunk2Pos);
            else {
              var o = this.rangeIndex,
                u = this.range;
              for (; u.to <= i; ) u = this.ranges[++o];
              (this.chunk2 = this.input.chunk((this.chunk2Pos = i))), i + this.chunk2.length > u.to && (this.chunk2 = this.chunk2.slice(0, u.to - i)), (n = this.chunk2.charCodeAt(0));
            }
          }
          return i >= this.token.lookAhead && (this.token.lookAhead = i + 1), n;
        }
        acceptToken(e) {
          var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var i = t ? this.resolveOffset(t, -1) : this.pos;
          if (i == null || i < this.token.start) throw new RangeError("Token end out of bounds");
          (this.token.value = e), (this.token.end = i);
        }
        getChunk() {
          if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
            var _this = this,
              e = _this.chunk,
              t = _this.chunkPos;
            (this.chunk = this.chunk2), (this.chunkPos = this.chunk2Pos), (this.chunk2 = e), (this.chunk2Pos = t), (this.chunkOff = this.pos - this.chunkPos);
          } else {
            (this.chunk2 = this.chunk), (this.chunk2Pos = this.chunkPos);
            var e1 = this.input.chunk(this.pos),
              t1 = this.pos + e1.length;
            (this.chunk = t1 > this.range.to ? e1.slice(0, this.range.to - this.pos) : e1), (this.chunkPos = this.pos), (this.chunkOff = 0);
          }
        }
        readNext() {
          return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? (this.next = -1) : (this.next = this.chunk.charCodeAt(this.chunkOff));
        }
        advance() {
          var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
          for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
            if (this.rangeIndex == this.ranges.length - 1) return this.setDone();
            (e -= this.range.to - this.pos), (this.range = this.ranges[++this.rangeIndex]), (this.pos = this.range.from);
          }
          return (this.pos += e), this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
        }
        setDone() {
          return (this.pos = this.chunkPos = this.end), (this.range = this.ranges[(this.rangeIndex = this.ranges.length - 1)]), (this.chunk = ""), (this.next = -1);
        }
        reset(e, t) {
          if ((t ? ((this.token = t), (t.start = e), (t.lookAhead = e + 1), (t.value = t.extended = -1)) : (this.token = gF), this.pos != e)) {
            if (((this.pos = e), e == this.end)) return this.setDone(), this;
            for (; e < this.range.from; ) this.range = this.ranges[--this.rangeIndex];
            for (; e >= this.range.to; ) this.range = this.ranges[++this.rangeIndex];
            e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? (this.chunkOff = e - this.chunkPos) : ((this.chunk = ""), (this.chunkOff = 0)), this.readNext();
          }
          return this;
        }
        read(e, t) {
          if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length) return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
          if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length) return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
          if (e >= this.range.from && t <= this.range.to) return this.input.read(e, t);
          var i = "";
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              if (n.from >= t) break;
              n.to > e && (i += this.input.read(Math.max(n.from, e), Math.min(n.to, t)));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return i;
        }
        constructor(e, t) {
          (this.input = e), (this.ranges = t), (this.chunk = ""), (this.chunkOff = 0), (this.chunk2 = ""), (this.chunk2Pos = 0), (this.next = -1), (this.token = gF), (this.rangeIndex = 0), (this.pos = this.chunkPos = t[0].from), (this.range = t[0]), (this.end = t[t.length - 1].to), this.readNext();
        }
      }),
      (() => {
        h(_class89, "InputStream");
      })(),
      _class89),
    ai =
      ((_class90 = class _class {
        token(e, t) {
          var _t_p = t.p,
            i = _t_p.parser;
          EF(this.data, e, t, this.id, i.data, i.tokenPrecTable);
        }
        constructor(e, t) {
          (this.data = e), (this.id = t);
        }
      }),
      (() => {
        h(_class90, "TokenGroup");
      })(),
      _class90);
  ai.prototype.contextual = ai.prototype.fallback = ai.prototype.extend = !1;
  var mh =
    ((_class91 = class _class {
      token(e, t) {
        var i = e.pos,
          n = 0;
        for (;;) {
          var s = e.next < 0,
            o = e.resolveOffset(1, 1);
          if ((EF(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)) break;
          if (this.elseToken == null) return;
          if ((s || n++, o == null)) break;
          e.reset(o, e.token);
        }
        n && (e.reset(i, e.token), e.acceptToken(this.elseToken, n));
      }
      constructor(e, t, i) {
        (this.precTable = t), (this.elseToken = i), (this.data = typeof e == "string" ? Cn(e) : e);
      }
    }),
    (() => {
      h(_class91, "LocalTokenGroup");
    })(),
    _class91);
  mh.prototype.contextual = ai.prototype.fallback = ai.prototype.extend = !1;
  function EF(r, e, t, i, n, s) {
    var o = 0,
      u = 1 << i,
      _t_p_parser = t.p.parser,
      l = _t_p_parser.dialect;
    e: for (; u & r[o]; ) {
      var a = r[o + 1];
      for (var p = o + 3; p < a; p += 2)
        if ((r[p + 1] & u) > 0) {
          var m = r[p];
          if (l.allows(m) && (e.token.value == -1 || e.token.value == m || tk(m, e.token.value, n, s))) {
            e.acceptToken(m);
            break;
          }
        }
      var c = e.next,
        f = 0,
        d = r[o + 2];
      if (e.next < 0 && d > f && r[a + d * 3 - 3] == 65535 && r[a + d * 3 - 3] == 65535) {
        o = r[a + d * 3 - 1];
        continue e;
      }
      for (; f < d; ) {
        var p1 = (f + d) >> 1,
          m1 = a + p1 + (p1 << 1),
          F = r[m1],
          g = r[m1 + 1] || 65536;
        if (c < F) d = p1;
        else if (c >= g) f = p1 + 1;
        else {
          (o = r[m1 + 2]), e.advance();
          continue e;
        }
      }
      break;
    }
  }
  h(EF, "readToken");
  function DF(r, e, t) {
    for (var i = e, n; (n = r[i]) != 65535; i++) if (n == t) return i - e;
    return -1;
  }
  h(DF, "findOffset");
  function tk(r, e, t, i) {
    var n = DF(t, i, e);
    return n < 0 || DF(t, i, r) < n;
  }
  h(tk, "overrides");
  var rt = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG),
    hh = null;
  function FF(r, e, t) {
    var i = r.cursor(Le.IncludeAnonymous);
    for (i.moveTo(e); ; )
      if (!(t < 0 ? i.childBefore(e) : i.childAfter(e)))
        for (;;) {
          if ((t < 0 ? i.to < e : i.from > e) && !i.type.isError) return t < 0 ? Math.max(0, Math.min(i.to - 1, e - 25)) : Math.min(r.length, Math.max(i.from + 1, e + 25));
          if (t < 0 ? i.prevSibling() : i.nextSibling()) break;
          if (!i.parent()) return t < 0 ? 0 : r.length;
        }
  }
  h(FF, "cutAt");
  var gh =
      ((_class92 = class _class {
        nextFragment() {
          var e = (this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++]);
          if (e) {
            for (this.safeFrom = e.openStart ? FF(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? FF(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; ) this.trees.pop(), this.start.pop(), this.index.pop();
            this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), (this.nextStart = this.safeFrom);
          } else this.nextStart = 1e9;
        }
        nodeAt(e) {
          if (e < this.nextStart) return null;
          for (; this.fragment && this.safeTo <= e; ) this.nextFragment();
          if (!this.fragment) return null;
          for (;;) {
            var t = this.trees.length - 1;
            if (t < 0) return this.nextFragment(), null;
            var i = this.trees[t],
              n = this.index[t];
            if (n == i.children.length) {
              this.trees.pop(), this.start.pop(), this.index.pop();
              continue;
            }
            var s = i.children[n],
              o = this.start[t] + i.positions[n];
            if (o > e) return (this.nextStart = o), null;
            if (s instanceof we) {
              if (o == e) {
                if (o < this.safeFrom) return null;
                var u = o + s.length;
                if (u <= this.safeTo) {
                  var l = s.prop(ue.lookAhead);
                  if (!l || u + l < this.fragment.to) return s;
                }
              }
              this.index[t]++, o + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(o), this.index.push(0));
            } else this.index[t]++, (this.nextStart = o + s.length);
          }
        }
        constructor(e, t) {
          (this.fragments = e), (this.nodeSet = t), (this.i = 0), (this.fragment = null), (this.safeFrom = -1), (this.safeTo = -1), (this.trees = []), (this.start = []), (this.index = []), this.nextFragment();
        }
      }),
      (() => {
        h(_class92, "FragmentCursor");
      })(),
      _class92),
    Dh =
      ((_class93 = class _class {
        getActions(e) {
          var t = 0,
            i = null,
            _e_p = e.p,
            n = _e_p.parser,
            s = n.tokenizers,
            o = n.stateSlot(e.state, 3),
            u = e.curContext ? e.curContext.hash : 0,
            l = 0;
          for (var a = 0; a < s.length; a++) {
            if (!((1 << a) & o)) continue;
            var c = s[a],
              f = this.tokens[a];
            if (!(i && !c.fallback) && ((c.contextual || f.start != e.pos || f.mask != o || f.context != u) && (this.updateCachedToken(f, c, e), (f.mask = o), (f.context = u)), f.lookAhead > f.end + 25 && (l = Math.max(f.lookAhead, l)), f.value != 0)) {
              var d = t;
              if ((f.extended > -1 && (t = this.addActions(e, f.extended, f.end, t)), (t = this.addActions(e, f.value, f.end, t)), !c.extend && ((i = f), t > d))) break;
            }
          }
          for (; this.actions.length > t; ) this.actions.pop();
          return l && e.setLookAhead(l), !i && e.pos == this.stream.end && ((i = new vr()), (i.value = e.p.parser.eofTerm), (i.start = i.end = e.pos), (t = this.addActions(e, i.value, i.end, t))), (this.mainToken = i), this.actions;
        }
        getMainToken(e) {
          if (this.mainToken) return this.mainToken;
          var t = new vr(),
            i = e.pos,
            n = e.p;
          return (t.start = i), (t.end = Math.min(i + 1, n.stream.end)), (t.value = i == n.stream.end ? n.parser.eofTerm : 0), t;
        }
        updateCachedToken(e, t, i) {
          var n = this.stream.clipPos(i.pos);
          if ((t.token(this.stream.reset(n, e), i), e.value > -1)) {
            var _i_p = i.p,
              s = _i_p.parser;
            for (var o = 0; o < s.specialized.length; o++)
              if (s.specialized[o] == e.value) {
                var u = s.specializers[o](this.stream.read(e.start, e.end), i);
                if (u >= 0 && i.p.parser.dialect.allows(u >> 1)) {
                  u & 1 ? (e.extended = u >> 1) : (e.value = u >> 1);
                  break;
                }
              }
          } else (e.value = 0), (e.end = this.stream.clipPos(n + 1));
        }
        putAction(e, t, i, n) {
          for (var s = 0; s < n; s += 3) if (this.actions[s] == e) return n;
          return (this.actions[n++] = e), (this.actions[n++] = t), (this.actions[n++] = i), n;
        }
        addActions(e, t, i, n) {
          var s = e.state,
            _e_p = e.p,
            o = _e_p.parser,
            u = o.data;
          for (var l = 0; l < 2; l++)
            for (var a = o.stateSlot(s, l ? 2 : 1); ; a += 3) {
              if (u[a] == 65535)
                if (u[a + 1] == 1) a = Yt(u, a + 2);
                else {
                  n == 0 && u[a + 1] == 2 && (n = this.putAction(Yt(u, a + 2), t, i, n));
                  break;
                }
              u[a] == t && (n = this.putAction(Yt(u, a + 1), t, i, n));
            }
          return n;
        }
        constructor(e, t) {
          (this.stream = t), (this.tokens = []), (this.mainToken = null), (this.actions = []), (this.tokens = e.tokenizers.map((i) => new vr()));
        }
      }),
      (() => {
        h(_class93, "TokenCache");
      })(),
      _class93),
    Fh =
      ((_class94 = class _class {
        get parsedPos() {
          return this.minStackPos;
        }
        advance() {
          var e = this.stacks,
            t = this.minStackPos,
            i = (this.stacks = []),
            n,
            s;
          if (this.bigReductionCount > 300 && e.length == 1) {
            var _e = _sliced_to_array(e, 1),
              o = _e[0];
            for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; );
            this.bigReductionCount = this.lastBigReductionSize = 0;
          }
          for (var o1 = 0; o1 < e.length; o1++) {
            var u = e[o1];
            for (;;) {
              if (((this.tokens.mainToken = null), u.pos > t)) i.push(u);
              else {
                if (this.advanceStack(u, i, e)) continue;
                {
                  n || ((n = []), (s = [])), n.push(u);
                  var l = this.tokens.getMainToken(u);
                  s.push(l.value, l.end);
                }
              }
              break;
            }
          }
          if (!i.length) {
            var o2 = n && ik(n);
            if (o2) return rt && console.log("Finish with " + this.stackID(o2)), this.stackToTree(o2);
            if (this.parser.strict) throw (rt && n && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t));
            this.recovering || (this.recovering = 5);
          }
          if (this.recovering && n) {
            var o3 = this.stoppedAt != null && n[0].pos > this.stoppedAt ? n[0] : this.runRecovery(n, s, i);
            if (o3) return rt && console.log("Force-finish " + this.stackID(o3)), this.stackToTree(o3.forceAll());
          }
          if (this.recovering) {
            var o4 = this.recovering == 1 ? 1 : this.recovering * 3;
            if (i.length > o4) for (i.sort((u, l) => l.score - u.score); i.length > o4; ) i.pop();
            i.some((u) => u.reducePos > t) && this.recovering--;
          } else if (i.length > 1) {
            e: for (var o5 = 0; o5 < i.length - 1; o5++) {
              var u1 = i[o5];
              for (var l1 = o5 + 1; l1 < i.length; l1++) {
                var a = i[l1];
                if (u1.sameState(a) || (u1.buffer.length > 500 && a.buffer.length > 500))
                  if ((u1.score - a.score || u1.buffer.length - a.buffer.length) > 0) i.splice(l1--, 1);
                  else {
                    i.splice(o5--, 1);
                    continue e;
                  }
              }
            }
            i.length > 12 && i.splice(12, i.length - 12);
          }
          this.minStackPos = i[0].pos;
          for (var o6 = 1; o6 < i.length; o6++) i[o6].pos < this.minStackPos && (this.minStackPos = i[o6].pos);
          return null;
        }
        stopAt(e) {
          if (this.stoppedAt != null && this.stoppedAt < e) throw new RangeError("Can't move stoppedAt forward");
          this.stoppedAt = e;
        }
        advanceStack(e, t, i) {
          var n = e.pos,
            _this = this,
            s = _this.parser,
            o = rt ? this.stackID(e) + " -> " : "";
          if (this.stoppedAt != null && n > this.stoppedAt) return e.forceReduce() ? e : null;
          if (this.fragments) {
            var a = e.curContext && e.curContext.tracker.strict,
              c = a ? e.curContext.hash : 0;
            for (var f = this.fragments.nodeAt(n); f; ) {
              var d = this.parser.nodeSet.types[f.type.id] == f.type ? s.getGoto(e.state, f.type.id) : -1;
              if (d > -1 && f.length && (!a || (f.prop(ue.contextHash) || 0) == c)) return e.useNode(f, d), rt && console.log(o + this.stackID(e) + " (via reuse of ".concat(s.getName(f.type.id), ")")), !0;
              if (!(f instanceof we) || f.children.length == 0 || f.positions[0] > 0) break;
              var p = f.children[0];
              if (p instanceof we && f.positions[0] == 0) f = p;
              else break;
            }
          }
          var u = s.stateSlot(e.state, 4);
          if (u > 0) return e.reduce(u), rt && console.log(o + this.stackID(e) + " (via always-reduce ".concat(s.getName(u & 65535), ")")), !0;
          if (e.stack.length >= 15e3) for (; e.stack.length > 9e3 && e.forceReduce(); );
          var l = this.tokens.getActions(e);
          for (var a1 = 0; a1 < l.length; ) {
            var c1 = l[a1++],
              f1 = l[a1++],
              d1 = l[a1++],
              p1 = a1 == l.length || !i,
              m = p1 ? e : e.split();
            if (
              (m.apply(c1, f1, d1),
              rt &&
                console.log(
                  o +
                    this.stackID(m) +
                    " (via "
                      .concat(c1 & 65536 ? "reduce of ".concat(s.getName(c1 & 65535)) : "shift", " for ")
                      .concat(s.getName(f1), " @ ")
                      .concat(n)
                      .concat(m == e ? "" : ", split", ")"),
                ),
              p1)
            )
              return !0;
            m.pos > n ? t.push(m) : i.push(m);
          }
          return !1;
        }
        advanceFully(e, t) {
          var i = e.pos;
          for (;;) {
            if (!this.advanceStack(e, null, null)) return !1;
            if (e.pos > i) return bF(e, t), !0;
          }
        }
        runRecovery(e, t, i) {
          var n = null,
            s = !1;
          for (var o = 0; o < e.length; o++) {
            var u = e[o],
              l = t[o << 1],
              a = t[(o << 1) + 1],
              c = rt ? this.stackID(u) + " -> " : "";
            if (u.deadEnd && (s || ((s = !0), u.restart(), rt && console.log(c + this.stackID(u) + " (restarted)"), this.advanceFully(u, i)))) continue;
            var f = u.split(),
              d = c;
            for (var p = 0; f.forceReduce() && p < 10 && (rt && console.log(d + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, i)); p++) rt && (d = this.stackID(f) + " -> ");
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = u.recoverByInsert(l)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var p1 = _step.value;
                rt && console.log(c + this.stackID(p1) + " (via recover-insert)"), this.advanceFully(p1, i);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            this.stream.end > u.pos ? (a == u.pos && (a++, (l = 0)), u.recoverByDelete(l, a), rt && console.log(c + this.stackID(u) + " (via recover-delete ".concat(this.parser.getName(l), ")")), bF(u, i)) : (!n || n.score < u.score) && (n = u);
          }
          return n;
        }
        stackToTree(e) {
          return e.close(), we.build({ buffer: dh.create(e), nodeSet: this.parser.nodeSet, topID: this.topTerm, maxBufferLength: this.parser.bufferLength, reused: this.reused, start: this.ranges[0].from, length: e.pos - this.ranges[0].from, minRepeatType: this.parser.minRepeatTerm });
        }
        stackID(e) {
          var t = (hh || (hh = new WeakMap())).get(e);
          return t || hh.set(e, (t = String.fromCodePoint(this.nextStackID++))), t + e;
        }
        constructor(e, t, i, n) {
          (this.parser = e), (this.input = t), (this.ranges = n), (this.recovering = 0), (this.nextStackID = 9812), (this.minStackPos = 0), (this.reused = []), (this.stoppedAt = null), (this.lastBigReductionStart = -1), (this.lastBigReductionSize = 0), (this.bigReductionCount = 0), (this.stream = new ph(t, n)), (this.tokens = new Dh(e, this.stream)), (this.topTerm = e.top[1]);
          var _n_ = n[0],
            s = _n_.from;
          (this.stacks = [ch.start(this, e.top[0], s)]), (this.fragments = i.length && this.stream.end - s > e.bufferLength * 4 ? new gh(i, e.nodeSet) : null);
        }
      }),
      (() => {
        h(_class94, "Parse");
      })(),
      _class94);
  function bF(r, e) {
    for (var t = 0; t < e.length; t++) {
      var i = e[t];
      if (i.pos == r.pos && i.sameState(r)) {
        e[t].score < r.score && (e[t] = r);
        return;
      }
    }
    e.push(r);
  }
  h(bF, "pushStackDedup");
  var bh =
    ((_class95 = class _class {
      allows(e) {
        return !this.disabled || this.disabled[e] == 0;
      }
      constructor(e, t, i) {
        (this.source = e), (this.flags = t), (this.disabled = i);
      }
    }),
    (() => {
      h(_class95, "Dialect");
    })(),
    _class95);
  var Lo =
    ((_r66 = class r extends Fr {
      createParse(e, t, i) {
        var n = new Fh(this, e, t, i);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.wrappers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            n = s(n, e, t, i);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return n;
      }
      getGoto(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
        var n = this.goto;
        if (t >= n[0]) return -1;
        for (var s = n[t + 1]; ; ) {
          var o = n[s++],
            u = o & 1,
            l = n[s++];
          if (u && i) return l;
          for (var a = s + (o >> 1); s < a; s++) if (n[s] == e) return l;
          if (u) return -1;
        }
      }
      hasAction(e, t) {
        var i = this.data;
        for (var n = 0; n < 2; n++)
          for (var s = this.stateSlot(e, n ? 2 : 1), o = void 0; ; s += 3) {
            if ((o = i[s]) == 65535)
              if (i[s + 1] == 1) o = i[(s = Yt(i, s + 2))];
              else {
                if (i[s + 1] == 2) return Yt(i, s + 2);
                break;
              }
            if (o == t || o == 0) return Yt(i, s + 1);
          }
        return 0;
      }
      stateSlot(e, t) {
        return this.states[e * 6 + t];
      }
      stateFlag(e, t) {
        return (this.stateSlot(e, 0) & t) > 0;
      }
      validAction(e, t) {
        return !!this.allActions(e, (i) => (i == t ? !0 : null));
      }
      allActions(e, t) {
        var i = this.stateSlot(e, 4),
          n = i ? t(i) : void 0;
        for (var s = this.stateSlot(e, 1); n == null; s += 3) {
          if (this.data[s] == 65535)
            if (this.data[s + 1] == 1) s = Yt(this.data, s + 2);
            else break;
          n = t(Yt(this.data, s + 1));
        }
        return n;
      }
      nextStates(e) {
        var _this = this,
          _loop = function (i1) {
            if (_this.data[i1] == 65535)
              if (_this.data[i1 + 1] == 1) i1 = Yt(_this.data, i1 + 2);
              else return (i = i1), "break";
            if (!(_this.data[i1 + 2] & 1)) {
              var n = _this.data[i1 + 1];
              t.some((s, o) => o & 1 && s == n) || t.push(_this.data[i1], n);
            }
            (i = i1), void 0;
          };
        var t = [];
        for (var i = this.stateSlot(e, 1); ; i += 3) {
          var _ret = _loop(i);
          if (_ret === "break") break;
        }
        return t;
      }
      configure(e) {
        var t = Object.assign(Object.create(r.prototype), this);
        if ((e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top)) {
          var i = this.topRules[e.top];
          if (!i) throw new RangeError("Invalid top rule name ".concat(e.top));
          t.top = i;
        }
        return (
          e.tokenizers &&
            (t.tokenizers = this.tokenizers.map((i) => {
              var n = e.tokenizers.find((s) => s.from == i);
              return n ? n.to : i;
            })),
          e.specializers &&
            ((t.specializers = this.specializers.slice()),
            (t.specializerSpecs = this.specializerSpecs.map((i, n) => {
              var s = e.specializers.find((u) => u.from == i.external);
              if (!s) return i;
              var o = Object.assign(Object.assign({}, i), { external: s.to });
              return (t.specializers[n] = yF(o)), o;
            }))),
          e.contextTracker && (t.context = e.contextTracker),
          e.dialect && (t.dialect = this.parseDialect(e.dialect)),
          e.strict != null && (t.strict = e.strict),
          e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)),
          e.bufferLength != null && (t.bufferLength = e.bufferLength),
          t
        );
      }
      hasWrappers() {
        return this.wrappers.length > 0;
      }
      getName(e) {
        return this.termNames ? this.termNames[e] : String((e <= this.maxNode && this.nodeSet.types[e].name) || e);
      }
      get eofTerm() {
        return this.maxNode + 1;
      }
      get topNode() {
        return this.nodeSet.types[this.top[1]];
      }
      dynamicPrecedence(e) {
        var t = this.dynamicPrecedences;
        return t == null ? 0 : t[e] || 0;
      }
      parseDialect(e) {
        var t = Object.keys(this.dialects),
          i = t.map(() => !1);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (e)
          try {
            for (var _iterator = e.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              var o = t.indexOf(s);
              o >= 0 && (i[o] = !0);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        var n = null;
        for (var s1 = 0; s1 < t.length; s1++) if (!i[s1]) for (var o1 = this.dialects[t[s1]], u = void 0; (u = this.data[o1++]) != 65535; ) (n || (n = new Uint8Array(this.maxTerm + 1)))[u] = 1;
        return new bh(e, i, n);
      }
      static deserialize(e) {
        return new r(e);
      }
      constructor(e) {
        if ((super(), (this.wrappers = []), e.version != 14)) throw new RangeError("Parser version (".concat(e.version, ") doesn't match runtime version (14)"));
        var t = e.nodeNames.split(" ");
        this.minRepeatTerm = t.length;
        for (var u = 0; u < e.repeatNodeCount; u++) t.push("");
        var i = Object.keys(e.topRules).map((u) => e.topRules[u][1]),
          n = [];
        for (var u1 = 0; u1 < t.length; u1++) n.push([]);
        function s(u, l, a) {
          n[u].push([l, l.deserialize(String(a))]);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if ((h(s, "setProp"), e.nodeProps))
          try {
            for (var _iterator = e.nodeProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var u2 = _step.value;
              var l = u2[0];
              typeof l == "string" && (l = ue[l]);
              for (var a = 1; a < u2.length; ) {
                var c = u2[a++];
                if (c >= 0) s(c, l, u2[a++]);
                else {
                  var f = u2[a + -c];
                  for (var d = -c; d > 0; d--) s(u2[a++], l, f);
                  a++;
                }
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        (this.nodeSet = new gn(t.map((u, l) => Ie.define({ name: l >= this.minRepeatTerm ? void 0 : u, id: l, props: n[l], top: i.indexOf(l) > -1, error: l == 0, skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1 })))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), (this.strict = !1), (this.bufferLength = 1024);
        var o = Cn(e.tokenData);
        (this.context = e.context), (this.specializerSpecs = e.specialized || []), (this.specialized = new Uint16Array(this.specializerSpecs.length));
        for (var u3 = 0; u3 < this.specializerSpecs.length; u3++) this.specialized[u3] = this.specializerSpecs[u3].term;
        (this.specializers = this.specializerSpecs.map(yF)),
          (this.states = Cn(e.states, Uint32Array)),
          (this.data = Cn(e.stateData)),
          (this.goto = Cn(e.goto)),
          (this.maxTerm = e.maxTerm),
          (this.tokenizers = e.tokenizers.map((u) => (typeof u == "number" ? new ai(o, u) : u))),
          (this.topRules = e.topRules),
          (this.dialects = e.dialects || {}),
          (this.dynamicPrecedences = e.dynamicPrecedences || null),
          (this.tokenPrecTable = e.tokenPrec),
          (this.termNames = e.termNames || null),
          (this.maxNode = this.nodeSet.types.length - 1),
          (this.dialect = this.parseDialect()),
          (this.top = this.topRules[Object.keys(this.topRules)[0]]);
      }
    }),
    (() => {
      h(_r66, "LRParser");
    })(),
    _r66);
  function Yt(r, e) {
    return r[e] | (r[e + 1] << 16);
  }
  h(Yt, "pair");
  function ik(r) {
    var e = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        var i = t.p.stoppedAt;
        (t.pos == t.p.stream.end || (i != null && t.pos > i)) && t.p.parser.stateFlag(t.state, 2) && (!e || e.score < t.score) && (e = t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(ik, "findFinished");
  function yF(r) {
    if (r.external) {
      var e = r.extend ? 1 : 0;
      return (t, i) => (r.external(t, i) << 1) | e;
    }
    return r.get;
  }
  h(yF, "getSpecializer");
  var CF = Lo.deserialize({
    version: 14,
    states:
      "'[QVQPOOOhQPO'#CsOmQPO'#CwOrQPO'#CzOOQO'#Cp'#CpOOQO'#Ci'#CiQVQPOOOwQPO'#CpO|QQO,59_O![QQO,59cO!aQSO,59fOOQO-E6g-E6gO!fQWO'#C_OOQO,59[,59[OOQO'#Cu'#CuO!qQPO'#CtO!|QPO1G.yO#RQPO'#CxO#WQPO1G.}O#]QPO1G/QO#bQWO'#CjO#mQPO,58yOOQO,58y,58yO#mQPO,58yO|QQO'#CkO#uQPO,59`OOQO7+$e7+$eO|QQO,59dOOQO7+$i7+$iO![QQO7+$lOOQO,59U,59UOOQO-E6h-E6hOOQO1G.e1G.eO$QQPO1G.eOOQO,59V,59VOOQO-E6i-E6iOOQO1G/O1G/OO$YQPO<<HWOOQO7+$P7+$PO$bQQOAN=rO$jQPOAN=rOOQOAN=rAN=rOOQO,59W,59WOOQOG23^G23^O$rQQOG23^OOQO-E6j-E6jOOQOLD(xLD(xP![QQO'#Cl",
    stateData: "$z~OcOS~OQVOTPOXQOYRO[SO~OeWO~OeXO~OeYO~Oe[O~OU^OV^OW^Oe[O~OWaO~OZcO~OSgOe[OffO~OjhOfhXohX~OfjO~OmkO~OflO~OomO~OSnOe^Xf^X~Oe[OfpO~OjhOfhaoha~Oe[OfvO~OfyOowO~OWaOf{O~Of{Oo|O~OWaOf!OO~O",
    goto: "#^oPPPpPPPPPPPPP!O!U!`!fPPP!lPP!p!t!zP!p#RP!pQ]VU^WhkXd[egqQUORZUQe[SoeqRqgQi_RsiQxuR}xTTOUTSOUQ`WRtkS_WkRrhQbXQumVzw|!P",
    nodeNames: "⚠ Program CommentCommand Braced BraceContent PreambleCommand Quoted Number Identifier StringCommand Command Key Comment",
    maxTerm: 31,
    skippedNodes: [0],
    repeatNodeCount: 4,
    tokenData:
      "!<f~R|OX#{X^$g^p#{pq$gqr#{rs&]st+[t|#{|}+r}!Q#{!Q![,Y![!_#{!_!`,v!`!b#{!b!c-^!c!}Kx!}#R#{#R#SKx#S#T#{#T#bKx#b#cNO#c#oKx#o#p!<[#p#q#{#q#r!<a#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{W$QTSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{W$dP;=`<%l#{~$niSWc~OX#{X^$g^p#{pq$gq#o#{#p#q#{#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{Y&bZSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y'[TUQSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y'pZSWOr&]rs(cs#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y(jZUQSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Q)`VOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q)zOUQQ)}VOr)]rs*ds#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q*iVUQOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q+RP;=`<%l)]Y+XP;=`<%l&]X+cTjPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X+yToPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y,aVVQSWO!Q#{!Q![,Y![#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X,}TmPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{~-cfSWO!c#{!c!e.w!e!f0{!f!r.w!r!s9|!s!u.w!u!vDW!v!}.w!}#R#{#R#S.w#S#T#{#T#V.w#V#W0{#W#d.w#d#e9|#e#g.w#g#hDW#h#o.w#p#q#{#r;'S#{;'S;=`$a<%lO#{~.|^SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~0P^Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~1QbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!q/x!q!r2Y!r!}/x!}#R#{#R#S/x#S#T#{#T#c/x#c#d2Y#d#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~2abY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p3i!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b3i#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~3pbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p4x!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b4x#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~5PbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h6X!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y6X#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~6`bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!q7h!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#c7h#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~7obY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!w8w!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#i8w#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~9Q^Q~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~:RbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!u;Z!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#g;Z#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~;bbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h<j!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y<j#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~<q`Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d=s!d!}/x!}#R#{#R#S/x#S#T#{#T#U=s#U#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~=zbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p?S!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b?S#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~?ZbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d/x!d!e@c!e!}/x!}#R#{#R#S/x#S#T#{#T#U/x#U#V@c#V#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~@jbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!n/x!n!oAr!o!}/x!}#R#{#R#S/x#S#T#{#T#`/x#`#aAr#a#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~AybY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!hCR!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#YCR#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~C[^T~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~D]bSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!wEe!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#iEe#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~ElbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!uFt!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#gFt#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~F{bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!k/x!k!lHT!l!}/x!}#R#{#R#S/x#S#T#{#T#]/x#]#^HT#^#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~H[bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!qId!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#cId#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~IkbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!i/x!i!jJs!j!}/x!}#R#{#R#S/x#S#T#{#T#Z/x#Z#[Js#[#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~J|^X~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{^K}^SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{^MS^WQZSSWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_NT`SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#cLy#c#d! V#d#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_! ``WQZSSWOp#{pq!!bq}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{X!!gVSWO#]#{#]#^!!|#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#RVSWO#W#{#W#X!#h#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#mVSWO#X#{#X#Y!$S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$XVSWO#T#{#T#U!$n#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$sVSWOp#{pq!%Yq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%_VSWO#k#{#k#l!%t#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%yVSWO#[#{#[#]!&`#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!&eVSWO#m#{#m#n!&z#n#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'PVSWOp#{pq!'fq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'kVSWO#h#{#h#i!(Q#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(VVSWO#[#{#[#]!(l#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(qVSWO#]#{#]#^!)W#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)]VSWO#g#{#g#h!)r#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)wVSWOp#{pq!*^q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*cVSWO#g#{#g#h!*x#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*}VSWO#h#{#h#i!+d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!+iVSWO#f#{#f#g!,O#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,TVSWO#]#{#]#^!,j#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,oVSWO#b#{#b#c!-U#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-ZVSWO#Z#{#Z#[!-p#[#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-uVSWOp#{pq!.[q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.aVSWO#]#{#]#^!.v#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.{VSWO#g#{#g#h!/b#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!/gVSWOp#{pq!/|q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0RVSWO#b#{#b#c!0h#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0mVSWO#X#{#X#Y!1S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1XVSWO#X#{#X#Y!1n#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1sVSWO#W#{#W#X!2Y#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2_VSWO#X#{#X#Y!2t#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2yVSWO#W#{#W#X!3`#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!3eVSWOp#{pq!3zq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4PVSWO#U#{#U#V!4f#V#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4kVSWO#i#{#i#j!5Q#j#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5VVSWO#h#{#h#i!5l#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5qVSWOp#{pq!6Wq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6]VSWO#k#{#k#l!6r#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6wVSWO#[#{#[#]!7^#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7cVSWO#T#{#T#U!7x#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7}VSWO#h#{#h#i!8d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!8iVSWO#X#{#X#Y!9O#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9TVSWO#j#{#j#k!9j#k#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9oVSWO#X#{#X#Y!:U#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:ZVSWO#f#{#f#g!:p#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:uXSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!;iX[PSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!<XP;=`<%l!;b~!<aOe~~!<fOf~",
    tokenizers: [0, 1, 2, 3],
    topRules: { Program: [0, 1] },
    tokenPrec: 4,
  });
  var rk = xo.define({ parser: CF.configure({ props: [vo({ Identifier: _.variableName, Comment: _.comment, Key: _.name, Number: _.number, BraceContent: _.string, Quoted: _.string, Command: _.className, CommentCommand: _.className, PreambleCommand: _.className, StringCommand: _.className, Field: _.variableName })] }) }),
    nk = Cr.define([
      { tag: _.comment, color: "var(--light5)" },
      { tag: _.name, color: "var(--orange)" },
      { tag: _.number, color: "var(--light-blue)" },
      { tag: _.string, color: "var(--green)" },
      { tag: _.className, color: "var(--pink)" },
      { tag: _.variableName, color: "white" },
    ]);
  function BF() {
    return new Ao(rk);
  }
  h(BF, "bibtexLanguage");
  function vF() {
    return jD(nk);
  }
  h(vF, "bibtexSyntaxHighlighting");
  function sk(r) {
    var e, t, i;
    return (
      (t = new mF({ props: { bibtex: r[0] } })),
      {
        c() {
          (e = L("main")), R(t.$$.fragment), B(e, "id", "editor"), B(e, "class", "svelte-x4zh2g");
        },
        m(n, s) {
          E(n, e, s), T(t, e, null), r[5](e), (i = !0);
        },
        p(n, param) {
          var _param = _sliced_to_array(param, 1),
            s = _param[0];
          var o = {};
          s & 1 && (o.bibtex = n[0]), t.$set(o);
        },
        i(n) {
          i || (S(t.$$.fragment, n), (i = !0));
        },
        o(n) {
          Q(t.$$.fragment, n), (i = !1);
        },
        d(n) {
          n && y(e), O(t), r[5](null);
        },
      }
    );
  }
  h(sk, "create_fragment");
  function ok(r, e, t) {
    var i = e.bibtex,
      n = e.error,
      s,
      o,
      u;
    ll(() => {
      var a = re.updateListener.of((c) => {
        o && c.docChanged && t(0, (i = o.state.doc.toString()));
      });
      t(4, (u = new ur())), t(3, (o = new re({ parent: s, state: Ce.create({ doc: i, extensions: [wD(), QD(), kD(), Ce.allowMultipleSelections.of(!0), XD(), BD(), BF(), vF(), Ta.of([...nF, oF]), eF(), a, u.of([])] }) }))), o.focus(), (window.cmEditor = o);
    });
    function l(a) {
      Y[a ? "unshift" : "push"](() => {
        (s = a), t(1, s);
      });
    }
    return (
      h(l, "main_binding"),
      (r.$$set = (a) => {
        "bibtex" in a && t(0, (i = a.bibtex)), "error" in a && t(2, (n = a.error));
      }),
      (r.$$.update = () => {
        var _o;
        r.$$.dirty & 28 &&
          ((_o = o) === null || _o === void 0
            ? void 0
            : _o.dispatch({
                effects: u.reconfigure(
                  cF(() => {
                    if (n && o) {
                      var a = o.state.doc.line(n.line),
                        c = a.from,
                        f = a.to;
                      return [{ from: c, to: f, severity: "error", message: "Syntax Error" }];
                    } else return [];
                  }),
                ),
              })),
          r.$$.dirty & 9 && o && i !== o.state.doc.toString() && o.dispatch({ changes: { from: 0, to: o.state.doc.length, insert: i } });
      }),
      [i, s, n, o, u, l]
    );
  }
  h(ok, "instance");
  var yh =
      ((_class96 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, ok, sk, se, { bibtex: 0, error: 2 });
        }
      }),
      (() => {
        h(_class96, "Editor");
      })(),
      _class96),
    xF = yh;
  function uk(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[3].default,
      u = Jt(o, r, r[2], null);
    return {
      c() {
        (e = L("details")), (t = L("summary")), (i = z(r[0])), (n = M()), u && u.c(), B(t, "class", "svelte-ee92zc"), (e.open = r[1]), B(e, "class", "svelte-ee92zc");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(t, i), $(e, n), u && u.m(e, null), (s = !0);
      },
      p(l, param) {
        var _param = _sliced_to_array(param, 1),
          a = _param[0];
        (!s || a & 1) && Ve(i, l[0]), u && u.p && (!s || a & 4) && Xt(u, o, l, l[2], s ? Gt(o, l[2], a, null) : Kt(l[2]), null), (!s || a & 2) && (e.open = l[1]);
      },
      i(l) {
        s || (S(u, l), (s = !0));
      },
      o(l) {
        Q(u, l), (s = !1);
      },
      d(l) {
        l && y(e), u && u.d(l);
      },
    };
  }
  h(uk, "create_fragment");
  function lk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = e.title,
      tmp1 = e.open,
      o = tmp1 === void 0 ? !1 : tmp1;
    return (
      (r.$$set = (u) => {
        "title" in u && t(0, (s = u.title)), "open" in u && t(1, (o = u.open)), "$$scope" in u && t(2, (n = u.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h(lk, "instance");
  var Eh =
      ((_class97 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, lk, uk, se, { title: 0, open: 1 });
        }
      }),
      (() => {
        h(_class97, "Collapsible");
      })(),
      _class97),
    Je = Eh;
  function ak(r) {
    var e, t, i;
    return {
      c() {
        (e = L("input")), B(e, "type", "checkbox"), B(e, "name", r[1]), B(e, "class", "svelte-doypik");
      },
      m(n, s) {
        E(n, e, s), (e.checked = r[0]), t || ((i = [Fe(e, "change", r[3]), Fe(e, "change", r[4])]), (t = !0));
      },
      p(n, param) {
        var _param = _sliced_to_array(param, 1),
          s = _param[0];
        s & 2 && B(e, "name", n[1]), s & 1 && (e.checked = n[0]);
      },
      i: xe,
      o: xe,
      d(n) {
        n && y(e), (t = !1), kt(i);
      },
    };
  }
  h(ak, "create_fragment");
  function hk(r, e, t) {
    var i = e.name,
      tmp = e.checked,
      n = tmp === void 0 ? void 0 : tmp,
      s = mi();
    function o() {
      (n = this.checked), t(0, n);
    }
    h(o, "input_change_handler");
    var u = h(() => s("change"), "change_handler");
    return (
      (r.$$set = (l) => {
        "name" in l && t(1, (i = l.name)), "checked" in l && t(0, (n = l.checked));
      }),
      [n, i, s, o, u]
    );
  }
  h(hk, "instance");
  var Ch =
      ((_class98 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, hk, ak, se, { name: 1, checked: 0 });
        }
      }),
      (() => {
        h(_class98, "Checkbox");
      })(),
      _class98),
    Ui = Ch;
  function ck(r) {
    var e,
      t,
      i = r[3].default,
      n = Jt(i, r, r[2], null);
    return {
      c() {
        (e = L("label")), n && n.c(), B(e, "title", r[0]), B(e, "class", "svelte-a2tm3u"), Ki(e, "inset", r[1]);
      },
      m(s, o) {
        E(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _sliced_to_array(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 4) && Xt(n, i, s, s[2], t ? Gt(i, s[2], o, null) : Kt(s[2]), null), (!t || o & 1) && B(e, "title", s[0]), (!t || o & 2) && Ki(e, "inset", s[1]);
      },
      i(s) {
        t || (S(n, s), (t = !0));
      },
      o(s) {
        Q(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(ck, "create_fragment");
  function fk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      tmp1 = e.title,
      s = tmp1 === void 0 ? void 0 : tmp1,
      tmp2 = e.inset,
      o = tmp2 === void 0 ? void 0 : tmp2;
    return (
      (r.$$set = (u) => {
        "title" in u && t(0, (s = u.title)), "inset" in u && t(1, (o = u.inset)), "$$scope" in u && t(2, (n = u.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h(fk, "instance");
  var Bh =
      ((_class99 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, fk, ck, se, { title: 0, inset: 1 });
        }
      }),
      (() => {
        h(_class99, "Label");
      })(),
      _class99),
    Ge = Bh;
  function dk(r) {
    var e,
      t,
      i = r[1].default,
      n = Jt(i, r, r[0], null);
    return {
      c() {
        (e = L("div")), n && n.c(), B(e, "class", "suboptions svelte-1gkj6ol");
      },
      m(s, o) {
        E(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _sliced_to_array(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 1) && Xt(n, i, s, s[0], t ? Gt(i, s[0], o, null) : Kt(s[0]), null);
      },
      i(s) {
        t || (S(n, s), (t = !0));
      },
      o(s) {
        Q(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(dk, "create_fragment");
  function pk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope;
    return (
      (r.$$set = (s) => {
        "$$scope" in s && t(0, (n = s.$$scope));
      }),
      [n, i]
    );
  }
  h(pk, "instance");
  var vh =
      ((_class100 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, pk, dk, se, {});
        }
      }),
      (() => {
        h(_class100, "SubOptions");
      })(),
      _class100),
    Oo = vh;
  function mk(r) {
    var e,
      t,
      i,
      n = r[3].title + "",
      s,
      o;
    function u(a) {
      r[6](a);
    }
    h(u, "checkbox_checked_binding");
    var l = { name: r[1] };
    return (
      r[0] !== void 0 && (l.checked = r[0]),
      (e = new Ui({ props: l })),
      Y.push(() => G(e, "checked", u)),
      e.$on("change", r[7]),
      {
        c() {
          R(e.$$.fragment), (i = M()), (s = z(n));
        },
        m(a, c) {
          T(e, a, c), E(a, i, c), E(a, s, c), (o = !0);
        },
        p(a, c) {
          var f = {};
          c & 2 && (f.name = a[1]), !t && c & 1 && ((t = !0), (f.checked = a[0]), J(() => (t = !1))), e.$set(f);
        },
        i(a) {
          o || (S(e.$$.fragment, a), (o = !0));
        },
        o(a) {
          Q(e.$$.fragment, a), (o = !1);
        },
        d(a) {
          O(e, a), a && y(i), a && y(s);
        },
      }
    );
  }
  h(mk, "create_default_slot_1");
  function AF(r) {
    var e,
      t,
      i = r[0] && kF(r);
    return {
      c() {
        i && i.c(), (e = It());
      },
      m(n, s) {
        i && i.m(n, s), E(n, e, s), (t = !0);
      },
      p(n, s) {
        n[0]
          ? i
            ? (i.p(n, s), s & 1 && S(i, 1))
            : ((i = kF(n)), i.c(), S(i, 1), i.m(e.parentNode, e))
          : i &&
            ($t(),
            Q(i, 1, 1, () => {
              i = null;
            }),
            qt());
      },
      i(n) {
        t || (S(i), (t = !0));
      },
      o(n) {
        Q(i), (t = !1);
      },
      d(n) {
        i && i.d(n), n && y(e);
      },
    };
  }
  h(AF, "create_if_block");
  function kF(r) {
    var e, t;
    return (
      (e = new Oo({ props: { $$slots: { default: [gk] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 256 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(kF, "create_if_block_1");
  function gk(r) {
    var e,
      t = r[5].default,
      i = Jt(t, r, r[8], null);
    return {
      c() {
        i && i.c();
      },
      m(n, s) {
        i && i.m(n, s), (e = !0);
      },
      p(n, s) {
        i && i.p && (!e || s & 256) && Xt(i, t, n, n[8], e ? Gt(t, n[8], s, null) : Kt(n[8]), null);
      },
      i(n) {
        e || (S(i, n), (e = !0));
      },
      o(n) {
        Q(i, n), (e = !1);
      },
      d(n) {
        i && i.d(n);
      },
    };
  }
  h(gk, "create_default_slot");
  function Dk(r) {
    var _r__description;
    var e, t, i, n;
    e = new Ge({ props: { title: (_r__description = r[3].description) === null || _r__description === void 0 ? void 0 : _r__description.join("\n"), inset: !0, $$slots: { default: [mk] }, $$scope: { ctx: r } } });
    var s = r[4].default && AF(r);
    return {
      c() {
        R(e.$$.fragment), (t = M()), s && s.c(), (i = It());
      },
      m(o, u) {
        T(e, o, u), E(o, t, u), s && s.m(o, u), E(o, i, u), (n = !0);
      },
      p(o, param) {
        var _param = _sliced_to_array(param, 1),
          u = _param[0];
        var l = {};
        u & 259 && (l.$$scope = { dirty: u, ctx: o }),
          e.$set(l),
          o[4].default
            ? s
              ? (s.p(o, u), u & 16 && S(s, 1))
              : ((s = AF(o)), s.c(), S(s, 1), s.m(i.parentNode, i))
            : s &&
              ($t(),
              Q(s, 1, 1, () => {
                s = null;
              }),
              qt());
      },
      i(o) {
        n || (S(e.$$.fragment, o), S(s), (n = !0));
      },
      o(o) {
        Q(e.$$.fragment, o), Q(s), (n = !1);
      },
      d(o) {
        O(e, o), o && y(t), s && s.d(o), o && y(i);
      },
    };
  }
  h(Dk, "create_fragment");
  function Fk(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = z0(i),
      o = e.option,
      tmp1 = e.checked,
      u = tmp1 === void 0 ? void 0 : tmp1,
      l = mi(),
      a = bm[o];
    function c(d) {
      (u = d), t(0, u);
    }
    h(c, "checkbox_checked_binding");
    var f = h(() => l("change", u), "change_handler");
    return (
      (r.$$set = (d) => {
        "option" in d && t(1, (o = d.option)), "checked" in d && t(0, (u = d.checked)), "$$scope" in d && t(8, (n = d.$$scope));
      }),
      [u, o, l, a, s, i, c, f, n]
    );
  }
  h(Fk, "instance");
  var xh =
      ((_class101 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, Fk, Dk, se, { option: 1, checked: 0 });
        }
      }),
      (() => {
        h(_class101, "Option");
      })(),
      _class101),
    pe = xh;
  function bk(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = z("Fields to omit:\n		")), (t = L("textarea")), (i = M()), (n = L("p")), (n.innerHTML = "Space delimited, e.g: <code>id type publisher author</code>"), B(t, "name", "omitList"), B(t, "class", "omit svelte-1t0249j"), B(t, "placeholder", "e.g. abstract keywords"), B(t, "spellcheck", "false");
      },
      m(u, l) {
        E(u, e, l), E(u, t, l), be(t, r[1]), E(u, i, l), E(u, n, l), s || ((o = Fe(t, "input", r[9])), (s = !0));
      },
      p(u, l) {
        l & 2 && be(t, u[1]);
      },
      d(u) {
        u && y(e), u && y(t), u && y(i), u && y(n), (s = !1), o();
      },
    };
  }
  h(bk, "create_default_slot_2");
  function yk(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = L("label")), (t = z("Template:\n			")), (i = L("textarea")), (n = M()), (s = L("p")), (s.innerHTML = '<a href="./manual/key-generation.html" target="_blank">Template documentation</a>'), B(i, "name", "generateKeysTemplate");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(e, i), be(i, r[7]), E(l, n, a), E(l, s, a), o || ((u = Fe(i, "input", r[14])), (o = !0));
      },
      p(l, a) {
        a & 128 && be(i, l[7]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(yk, "create_default_slot_1");
  function Ek(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, F, g, D, b;
    function A(U) {
      r[10](U);
    }
    h(A, "option0_checked_binding");
    var v = { option: "omit", $$slots: { default: [bk] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (v.checked = r[0]), (e = new pe({ props: v })), Y.push(() => G(e, "checked", A));
    function C(U) {
      r[11](U);
    }
    h(C, "option1_checked_binding");
    var w = { option: "stripComments" };
    r[2] !== void 0 && (w.checked = r[2]), (n = new pe({ props: w })), Y.push(() => G(n, "checked", C));
    function P(U) {
      r[12](U);
    }
    h(P, "option2_checked_binding");
    var K = { option: "tidyComments" };
    r[3] !== void 0 && (K.checked = r[3]), (u = new pe({ props: K })), Y.push(() => G(u, "checked", P));
    function q(U) {
      r[13](U);
    }
    h(q, "option3_checked_binding");
    var H = { option: "lowercase" };
    r[4] !== void 0 && (H.checked = r[4]), (c = new pe({ props: H })), Y.push(() => G(c, "checked", q));
    function I(U) {
      r[15](U);
    }
    h(I, "option4_checked_binding");
    var ne = { option: "generateKeys", $$slots: { default: [yk] }, $$scope: { ctx: r } };
    r[6] !== void 0 && (ne.checked = r[6]), (p = new pe({ props: ne })), Y.push(() => G(p, "checked", I));
    function le(U) {
      r[16](U);
    }
    h(le, "option5_checked_binding");
    var V = { option: "trailingCommas" };
    return (
      r[5] !== void 0 && (V.checked = r[5]),
      (g = new pe({ props: V })),
      Y.push(() => G(g, "checked", le)),
      {
        c() {
          R(e.$$.fragment), (i = M()), R(n.$$.fragment), (o = M()), R(u.$$.fragment), (a = M()), R(c.$$.fragment), (d = M()), R(p.$$.fragment), (F = M()), R(g.$$.fragment);
        },
        m(U, Z) {
          T(e, U, Z), E(U, i, Z), T(n, U, Z), E(U, o, Z), T(u, U, Z), E(U, a, Z), T(c, U, Z), E(U, d, Z), T(p, U, Z), E(U, F, Z), T(g, U, Z), (b = !0);
        },
        p(U, Z) {
          var me = {};
          Z & 16777218 && (me.$$scope = { dirty: Z, ctx: U }), !t && Z & 1 && ((t = !0), (me.checked = U[0]), J(() => (t = !1))), e.$set(me);
          var De = {};
          !s && Z & 4 && ((s = !0), (De.checked = U[2]), J(() => (s = !1))), n.$set(De);
          var he = {};
          !l && Z & 8 && ((l = !0), (he.checked = U[3]), J(() => (l = !1))), u.$set(he);
          var ae = {};
          !f && Z & 16 && ((f = !0), (ae.checked = U[4]), J(() => (f = !1))), c.$set(ae);
          var Qe = {};
          Z & 16777344 && (Qe.$$scope = { dirty: Z, ctx: U }), !m && Z & 64 && ((m = !0), (Qe.checked = U[6]), J(() => (m = !1))), p.$set(Qe);
          var Oe = {};
          !D && Z & 32 && ((D = !0), (Oe.checked = U[5]), J(() => (D = !1))), g.$set(Oe);
        },
        i(U) {
          b || (S(e.$$.fragment, U), S(n.$$.fragment, U), S(u.$$.fragment, U), S(c.$$.fragment, U), S(p.$$.fragment, U), S(g.$$.fragment, U), (b = !0));
        },
        o(U) {
          Q(e.$$.fragment, U), Q(n.$$.fragment, U), Q(u.$$.fragment, U), Q(c.$$.fragment, U), Q(p.$$.fragment, U), Q(g.$$.fragment, U), (b = !1);
        },
        d(U) {
          O(e, U), U && y(i), O(n, U), U && y(o), O(u, U), U && y(a), O(c, U), U && y(d), O(p, U), U && y(F), O(g, U);
        },
      }
    );
  }
  h(Ek, "create_default_slot");
  function Ck(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "Clean up", open: !0, $$slots: { default: [Ek] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 16777471 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(Ck, "create_fragment");
  function Bk(r, e, t) {
    var i, n, s, o, u, l, a;
    var c = e.options,
      f = c.omit !== void 0 && c.omit.length > 0,
      d = (n = (i = c.omit) === null || i === void 0 ? void 0 : i.join(" ")) !== null && n !== void 0 ? n : "",
      p = (s = c.stripComments) !== null && s !== void 0 ? s : !1,
      m = (o = c.tidyComments) !== null && o !== void 0 ? o : !1,
      F = (u = c.lowercase) !== null && u !== void 0 ? u : !1,
      g = (l = c.trailingCommas) !== null && l !== void 0 ? l : !1,
      D = c.generateKeys !== void 0 && c.generateKeys.length > 0,
      b = (a = c.generateKeys) !== null && a !== void 0 ? a : "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]";
    function A() {
      (d = this.value), t(1, d);
    }
    h(A, "textarea_input_handler");
    function v(I) {
      (f = I), t(0, f);
    }
    h(v, "option0_checked_binding");
    function C(I) {
      (p = I), t(2, p);
    }
    h(C, "option1_checked_binding");
    function w(I) {
      (m = I), t(3, m);
    }
    h(w, "option2_checked_binding");
    function P(I) {
      (F = I), t(4, F);
    }
    h(P, "option3_checked_binding");
    function K() {
      (b = this.value), t(7, b);
    }
    h(K, "textarea_input_handler_1");
    function q(I) {
      (D = I), t(6, D);
    }
    h(q, "option4_checked_binding");
    function H(I) {
      (g = I), t(5, g);
    }
    return (
      h(H, "option5_checked_binding"),
      (r.$$set = (I) => {
        "options" in I && t(8, (c = I.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 255 && (t(8, (c.omit = f && d.length > 0 ? d.split(/[\n\t ,]+/) : void 0), c), t(8, (c.stripComments = p), c), t(8, (c.tidyComments = m), c), t(8, (c.lowercase = F), c), t(8, (c.trailingCommas = g), c), t(8, (c.generateKeys = D ? b : void 0), c));
      }),
      [f, d, p, m, F, g, D, b, c, A, v, C, w, P, K, q, H]
    );
  }
  h(Bk, "instance");
  var Ah =
      ((_class102 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, Bk, Ck, se, { options: 8 });
        }
      }),
      (() => {
        h(_class102, "CleanupOptions");
      })(),
      _class102),
    SF = Ah;
  function wF(r) {
    return Wr.map((e) => {
      var _e_toCLI, _e;
      return (_e_toCLI = (_e = e).toCLI) === null || _e_toCLI === void 0 ? void 0 : _e_toCLI.call(_e, r[e.key], r);
    }).filter((e) => typeof e == "string");
  }
  h(wF, "optionsToCLIArgs");
  function QF(r, e, t) {
    var i = r.slice();
    return (i[2] = e[t][0]), (i[3] = e[t][1]), i;
  }
  h(QF, "get_each_context");
  function _F(r) {
    var e,
      t,
      i = r[3] + "",
      n,
      s;
    return {
      c() {
        (e = z("=")), (t = L("span")), (n = z(i)), (s = M()), B(t, "class", "opt-val svelte-1xnx1c1");
      },
      m(o, u) {
        E(o, e, u), E(o, t, u), $(t, n), E(o, s, u);
      },
      p(o, u) {
        u & 1 && i !== (i = o[3] + "") && Ve(n, i);
      },
      d(o) {
        o && y(e), o && y(t), o && y(s);
      },
    };
  }
  h(_F, "create_if_block");
  function UF(r) {
    var e,
      t = r[2] + "",
      i,
      n = " ",
      s,
      o = r[3] && r[3].length > 0 && _F(r);
    return {
      c() {
        (e = L("span")), (i = z(t)), o && o.c(), (s = z(n)), B(e, "class", "opt-name svelte-1xnx1c1");
      },
      m(u, l) {
        E(u, e, l), $(e, i), o && o.m(u, l), E(u, s, l);
      },
      p(u, l) {
        l & 1 && t !== (t = u[2] + "") && Ve(i, t), u[3] && u[3].length > 0 ? (o ? o.p(u, l) : ((o = _F(u)), o.c(), o.m(s.parentNode, s))) : o && (o.d(1), (o = null));
      },
      d(u) {
        u && y(e), o && o.d(u), u && y(s);
      },
    };
  }
  h(UF, "create_each_block");
  function vk(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[0],
      u = [];
    for (var l = 0; l < o.length; l += 1) u[l] = UF(QF(r, o, l));
    return {
      c() {
        (e = L("p")), (e.textContent = "To run this configuration on the command line:"), (t = M()), (i = L("code")), (n = z("bibtex-tidy "));
        for (var l = 0; l < u.length; l += 1) u[l].c();
        (s = z(" YOUR_FILE.bib")), B(i, "id", "cli"), B(i, "class", "svelte-1xnx1c1");
      },
      m(l, a) {
        E(l, e, a), E(l, t, a), E(l, i, a), $(i, n);
        for (var c = 0; c < u.length; c += 1) u[c] && u[c].m(i, null);
        $(i, s);
      },
      p(l, a) {
        if (a & 1) {
          o = l[0];
          var c;
          for (c = 0; c < o.length; c += 1) {
            var f = QF(l, o, c);
            u[c] ? u[c].p(f, a) : ((u[c] = UF(f)), u[c].c(), u[c].m(i, s));
          }
          for (; c < u.length; c += 1) u[c].d(1);
          u.length = o.length;
        }
      },
      d(l) {
        l && y(e), l && y(t), l && y(i), Ir(u, l);
      },
    };
  }
  h(vk, "create_default_slot");
  function xk(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "CLI", $$slots: { default: [vk] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 65 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(xk, "create_fragment");
  function Ak(r, e, t) {
    var i = e.options,
      n;
    return (
      (r.$$set = (s) => {
        "options" in s && t(1, (i = s.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 2 &&
          t(
            0,
            (n = wF(i).map((s) => {
              var o = s.indexOf("=");
              return o === -1 ? [s] : [s.slice(0, o), s.slice(o + 1)];
            })),
          );
      }),
      [n, i]
    );
  }
  h(Ak, "instance");
  var kh =
      ((_class103 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, Ak, xk, se, { options: 1 });
        }
      }),
      (() => {
        h(_class103, "Cli");
      })(),
      _class103),
    LF = kh;
  function kk(r) {
    var e,
      t = !1,
      i,
      n,
      s;
    return (
      (i = Y0(r[4][0])),
      {
        c() {
          (e = L("input")), B(e, "type", "radio"), B(e, "name", r[1]), (e.__value = r[2]), (e.value = e.__value), B(e, "class", "svelte-qhlda7"), i.p(e);
        },
        m(o, u) {
          E(o, e, u), (e.checked = e.__value === r[0]), n || ((s = Fe(e, "change", r[3])), (n = !0));
        },
        p(o, param) {
          var _param = _sliced_to_array(param, 1),
            u = _param[0];
          u & 2 && B(e, "name", o[1]), u & 4 && ((e.__value = o[2]), (e.value = e.__value), (t = !0)), (t || u & 1) && (e.checked = e.__value === o[0]);
        },
        i: xe,
        o: xe,
        d(o) {
          o && y(e), i.r(), (n = !1), s();
        },
      }
    );
  }
  h(kk, "create_fragment");
  function Sk(r, e, t) {
    var i = e.name,
      n = e.group,
      tmp = e.value,
      s = tmp === void 0 ? void 0 : tmp,
      o = [[]];
    function u() {
      (n = this.__value), t(0, n);
    }
    return (
      h(u, "input_change_handler"),
      (r.$$set = (l) => {
        "name" in l && t(1, (i = l.name)), "group" in l && t(0, (n = l.group)), "value" in l && t(2, (s = l.value));
      }),
      [n, i, s, u, o]
    );
  }
  h(Sk, "instance");
  var Sh =
      ((_class104 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, Sk, kk, se, { name: 1, group: 0, value: 2 });
        }
      }),
      (() => {
        h(_class104, "Radio");
      })(),
      _class104),
    hi = Sh;
  function wk(r) {
    var e, t, i, n;
    function s(u) {
      r[8](u);
    }
    h(s, "checkbox_checked_binding");
    var o = { name: "uniqKEY" };
    return (
      r[1] !== void 0 && (o.checked = r[1]),
      (e = new Ui({ props: o })),
      Y.push(() => G(e, "checked", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n			Matching Keys"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 2 && ((t = !0), (a.checked = u[1]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(wk, "create_default_slot_10");
  function Qk(r) {
    var e, t, i, n;
    function s(u) {
      r[9](u);
    }
    h(s, "checkbox_checked_binding_1");
    var o = { name: "uniqDOI" };
    return (
      r[2] !== void 0 && (o.checked = r[2]),
      (e = new Ui({ props: o })),
      Y.push(() => G(e, "checked", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n			Matching DOIs"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 4 && ((t = !0), (a.checked = u[2]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(Qk, "create_default_slot_9");
  function _k(r) {
    var e, t, i, n;
    function s(u) {
      r[10](u);
    }
    h(s, "checkbox_checked_binding_2");
    var o = { name: "uniqCIT" };
    return (
      r[3] !== void 0 && (o.checked = r[3]),
      (e = new Ui({ props: o })),
      Y.push(() => G(e, "checked", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n			Similar author and title"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 8 && ((t = !0), (a.checked = u[3]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(_k, "create_default_slot_8");
  function Uk(r) {
    var e, t, i, n;
    function s(u) {
      r[11](u);
    }
    h(s, "checkbox_checked_binding_3");
    var o = { name: "uniqABS" };
    return (
      r[4] !== void 0 && (o.checked = r[4]),
      (e = new Ui({ props: o })),
      Y.push(() => G(e, "checked", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n			Similar abstracts"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 16 && ((t = !0), (a.checked = u[4]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(Uk, "create_default_slot_7");
  function Lk(r) {
    var e, t, i, n, s, o, u, l, a, c;
    return (
      (i = new Ge({ props: { $$slots: { default: [wk] }, $$scope: { ctx: r } } })),
      (s = new Ge({ props: { $$slots: { default: [Qk] }, $$scope: { ctx: r } } })),
      (u = new Ge({ props: { $$slots: { default: [_k] }, $$scope: { ctx: r } } })),
      (a = new Ge({ props: { $$slots: { default: [Uk] }, $$scope: { ctx: r } } })),
      {
        c() {
          (e = L("p")), (e.textContent = "What to check:"), (t = M()), R(i.$$.fragment), (n = M()), R(s.$$.fragment), (o = M()), R(u.$$.fragment), (l = M()), R(a.$$.fragment);
        },
        m(f, d) {
          E(f, e, d), E(f, t, d), T(i, f, d), E(f, n, d), T(s, f, d), E(f, o, d), T(u, f, d), E(f, l, d), T(a, f, d), (c = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217730 && (p.$$scope = { dirty: d, ctx: f }), i.$set(p);
          var m = {};
          d & 134217732 && (m.$$scope = { dirty: d, ctx: f }), s.$set(m);
          var F = {};
          d & 134217736 && (F.$$scope = { dirty: d, ctx: f }), u.$set(F);
          var g = {};
          d & 134217744 && (g.$$scope = { dirty: d, ctx: f }), a.$set(g);
        },
        i(f) {
          c || (S(i.$$.fragment, f), S(s.$$.fragment, f), S(u.$$.fragment, f), S(a.$$.fragment, f), (c = !0));
        },
        o(f) {
          Q(i.$$.fragment, f), Q(s.$$.fragment, f), Q(u.$$.fragment, f), Q(a.$$.fragment, f), (c = !1);
        },
        d(f) {
          f && y(e), f && y(t), O(i, f), f && y(n), O(s, f), f && y(o), O(u, f), f && y(l), O(a, f);
        },
      }
    );
  }
  h(Lk, "create_default_slot_6");
  function Ok(r) {
    var e, t, i, n, s;
    function o(l) {
      r[13](l);
    }
    h(o, "radio_group_binding");
    var u = { name: "mergeStrategy", value: "combine" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new hi({ props: u })),
      Y.push(() => G(e, "group", o)),
      {
        c() {
          R(e.$$.fragment), (i = M()), (n = L("span")), (n.innerHTML = "<strong>Combine</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates if they do not\n					already exist</small>");
        },
        m(l, a) {
          T(e, l, a), E(l, i, a), E(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (S(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          Q(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          O(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(Ok, "create_default_slot_5");
  function Tk(r) {
    var e, t, i, n, s;
    function o(l) {
      r[14](l);
    }
    h(o, "radio_group_binding_1");
    var u = { name: "mergeStrategy", value: "overwrite" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new hi({ props: u })),
      Y.push(() => G(e, "group", o)),
      {
        c() {
          R(e.$$.fragment), (i = M()), (n = L("span")), (n.innerHTML = "<strong>Overwrite</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates, overwriting\n					existing fields if they exist</small>");
        },
        m(l, a) {
          T(e, l, a), E(l, i, a), E(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (S(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          Q(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          O(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(Tk, "create_default_slot_4");
  function Rk(r) {
    var e, t, i, n, s;
    function o(l) {
      r[15](l);
    }
    h(o, "radio_group_binding_2");
    var u = { name: "mergeStrategy", value: "first" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new hi({ props: u })),
      Y.push(() => G(e, "group", o)),
      {
        c() {
          R(e.$$.fragment), (i = M()), (n = L("span")), (n.innerHTML = "<strong>First</strong><br/> \n				<small>Only keep the original entry</small>");
        },
        m(l, a) {
          T(e, l, a), E(l, i, a), E(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (S(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          Q(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          O(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(Rk, "create_default_slot_3");
  function Nk(r) {
    var e, t, i, n, s;
    function o(l) {
      r[16](l);
    }
    h(o, "radio_group_binding_3");
    var u = { name: "mergeStrategy", value: "last" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new hi({ props: u })),
      Y.push(() => G(e, "group", o)),
      {
        c() {
          R(e.$$.fragment), (i = M()), (n = L("span")), (n.innerHTML = "<strong>Last</strong><br/> \n				<small>Only keep the last found duplicate</small>");
        },
        m(l, a) {
          T(e, l, a), E(l, i, a), E(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (S(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          Q(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          O(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(Nk, "create_default_slot_2");
  function Mk(r) {
    var e, t, i, n, s, o, u, l;
    return (
      (e = new Ge({ props: { $$slots: { default: [Ok] }, $$scope: { ctx: r } } })),
      (i = new Ge({ props: { $$slots: { default: [Tk] }, $$scope: { ctx: r } } })),
      (s = new Ge({ props: { $$slots: { default: [Rk] }, $$scope: { ctx: r } } })),
      (u = new Ge({ props: { $$slots: { default: [Nk] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment), (t = M()), R(i.$$.fragment), (n = M()), R(s.$$.fragment), (o = M()), R(u.$$.fragment);
        },
        m(a, c) {
          T(e, a, c), E(a, t, c), T(i, a, c), E(a, n, c), T(s, a, c), E(a, o, c), T(u, a, c), (l = !0);
        },
        p(a, c) {
          var f = {};
          c & 134217792 && (f.$$scope = { dirty: c, ctx: a }), e.$set(f);
          var d = {};
          c & 134217792 && (d.$$scope = { dirty: c, ctx: a }), i.$set(d);
          var p = {};
          c & 134217792 && (p.$$scope = { dirty: c, ctx: a }), s.$set(p);
          var m = {};
          c & 134217792 && (m.$$scope = { dirty: c, ctx: a }), u.$set(m);
        },
        i(a) {
          l || (S(e.$$.fragment, a), S(i.$$.fragment, a), S(s.$$.fragment, a), S(u.$$.fragment, a), (l = !0));
        },
        o(a) {
          Q(e.$$.fragment, a), Q(i.$$.fragment, a), Q(s.$$.fragment, a), Q(u.$$.fragment, a), (l = !1);
        },
        d(a) {
          O(e, a), a && y(t), O(i, a), a && y(n), O(s, a), a && y(o), O(u, a);
        },
      }
    );
  }
  h(Mk, "create_default_slot_1");
  function Pk(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[12](f);
    }
    h(u, "option0_checked_binding");
    var l = { option: "duplicates", $$slots: { default: [Lk] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (l.checked = r[0]), (e = new pe({ props: l })), Y.push(() => G(e, "checked", u));
    function a(f) {
      r[17](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "merge", $$slots: { default: [Mk] }, $$scope: { ctx: r } };
    return (
      r[5] !== void 0 && (c.checked = r[5]),
      (n = new pe({ props: c })),
      Y.push(() => G(n, "checked", a)),
      {
        c() {
          R(e.$$.fragment), (i = M()), R(n.$$.fragment);
        },
        m(f, d) {
          T(e, f, d), E(f, i, d), T(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217758 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 1 && ((t = !0), (p.checked = f[0]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 134217792 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 32 && ((s = !0), (m.checked = f[5]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          Q(e.$$.fragment, f), Q(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          O(e, f), f && y(i), O(n, f);
        },
      }
    );
  }
  h(Pk, "create_default_slot");
  function Ik(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "Duplicates", open: !0, $$slots: { default: [Pk] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 134217855 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(Ik, "create_fragment");
  function $k(r, e, t) {
    var i, n, s, o, u, l, a, c, f;
    var d = e.options,
      p = d.duplicates !== void 0,
      m = (n = (i = d.duplicates) === null || i === void 0 ? void 0 : i.includes("key")) !== null && n !== void 0 ? n : !0,
      F = (o = (s = d.duplicates) === null || s === void 0 ? void 0 : s.includes("doi")) !== null && o !== void 0 ? o : !1,
      g = (l = (u = d.duplicates) === null || u === void 0 ? void 0 : u.includes("citation")) !== null && l !== void 0 ? l : !1,
      D = (c = (a = d.duplicates) === null || a === void 0 ? void 0 : a.includes("abstract")) !== null && c !== void 0 ? c : !1,
      b = d.merge !== void 0,
      A = (f = d.merge) !== null && f !== void 0 ? f : "combine";
    function v(V) {
      (m = V), t(1, m);
    }
    h(v, "checkbox_checked_binding");
    function C(V) {
      (F = V), t(2, F);
    }
    h(C, "checkbox_checked_binding_1");
    function w(V) {
      (g = V), t(3, g);
    }
    h(w, "checkbox_checked_binding_2");
    function P(V) {
      (D = V), t(4, D);
    }
    h(P, "checkbox_checked_binding_3");
    function K(V) {
      (p = V), t(0, p);
    }
    h(K, "option0_checked_binding");
    function q(V) {
      (A = V), t(6, A);
    }
    h(q, "radio_group_binding");
    function H(V) {
      (A = V), t(6, A);
    }
    h(H, "radio_group_binding_1");
    function I(V) {
      (A = V), t(6, A);
    }
    h(I, "radio_group_binding_2");
    function ne(V) {
      (A = V), t(6, A);
    }
    h(ne, "radio_group_binding_3");
    function le(V) {
      (b = V), t(5, b);
    }
    return (
      h(le, "option1_checked_binding"),
      (r.$$set = (V) => {
        "options" in V && t(7, (d = V.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 255 && (p ? (t(7, (d.duplicates = []), d), m && d.duplicates.push("key"), F && d.duplicates.push("doi"), g && d.duplicates.push("citation"), D && d.duplicates.push("abstract")) : t(7, (d.duplicates = void 0), d), t(7, (d.merge = b ? A : void 0), d));
      }),
      [p, m, F, g, D, b, A, d, v, C, w, P, K, q, H, I, ne, le]
    );
  }
  h($k, "instance");
  var wh =
      ((_class105 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, $k, Ik, se, { options: 7 });
        }
      }),
      (() => {
        h(_class105, "DuplicateOptions");
      })(),
      _class105),
    OF = wh;
  function qk(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = L("strong")), (e.textContent = "There's a problem with the bibtex"), (t = L("br")), (i = z("\n			Unknown error: ")), (n = z(r[0])), (s = L("br")), (o = z("\n			This is probably a bug."));
      },
      m(u, l) {
        E(u, e, l), E(u, t, l), E(u, i, l), E(u, n, l), E(u, s, l), E(u, o, l);
      },
      p(u, l) {
        l & 1 && Ve(n, u[0]);
      },
      d(u) {
        u && y(e), u && y(t), u && y(i), u && y(n), u && y(s), u && y(o);
      },
    };
  }
  h(qk, "create_else_block_1");
  function Vk(r) {
    var e,
      t,
      i,
      n = r[0].name + "",
      s,
      o,
      u = r[0].line + "",
      l,
      a,
      c = r[0].column + "",
      f,
      d,
      p,
      m;
    function F(b, A) {
      return b[0].hint ? zk : Wk;
    }
    h(F, "select_block_type_1");
    var g = F(r, -1),
      D = g(r);
    return {
      c() {
        (e = L("strong")), (e.textContent = "There's a problem with the bibtex"), (t = L("br")), (i = M()), (s = z(n)), (o = z(" on line ")), (l = z(u)), (a = z(" column ")), (f = z(c)), (d = L("br")), (p = M()), D.c(), (m = It());
      },
      m(b, A) {
        E(b, e, A), E(b, t, A), E(b, i, A), E(b, s, A), E(b, o, A), E(b, l, A), E(b, a, A), E(b, f, A), E(b, d, A), E(b, p, A), D.m(b, A), E(b, m, A);
      },
      p(b, A) {
        A & 1 && n !== (n = b[0].name + "") && Ve(s, n), A & 1 && u !== (u = b[0].line + "") && Ve(l, u), A & 1 && c !== (c = b[0].column + "") && Ve(f, c), g === (g = F(b, A)) && D ? D.p(b, A) : (D.d(1), (D = g(b)), D && (D.c(), D.m(m.parentNode, m)));
      },
      d(b) {
        b && y(e), b && y(t), b && y(i), b && y(s), b && y(o), b && y(l), b && y(a), b && y(f), b && y(d), b && y(p), D.d(b), b && y(m);
      },
    };
  }
  h(Vk, "create_if_block");
  function Wk(r) {
    var e,
      t = JSON.stringify(r[0].char) + "",
      i,
      n,
      s = r[0].node.type + "",
      o,
      u;
    return {
      c() {
        (e = z("Unexpected ")), (i = z(t)), (n = z(" in ")), (o = z(s)), (u = z("."));
      },
      m(l, a) {
        E(l, e, a), E(l, i, a), E(l, n, a), E(l, o, a), E(l, u, a);
      },
      p(l, a) {
        a & 1 && t !== (t = JSON.stringify(l[0].char) + "") && Ve(i, t), a & 1 && s !== (s = l[0].node.type + "") && Ve(o, s);
      },
      d(l) {
        l && y(e), l && y(i), l && y(n), l && y(o), l && y(u);
      },
    };
  }
  h(Wk, "create_else_block");
  function zk(r) {
    var e = r[0].hint + "",
      t;
    return {
      c() {
        t = z(e);
      },
      m(i, n) {
        E(i, t, n);
      },
      p(i, n) {
        n & 1 && e !== (e = i[0].hint + "") && Ve(t, e);
      },
      d(i) {
        i && y(t);
      },
    };
  }
  h(zk, "create_if_block_1");
  function Hk(r) {
    var e, t, i, n, s, o, u;
    function l(f, d) {
      return f[0] instanceof ut ? Vk : qk;
    }
    h(l, "select_block_type");
    var a = l(r, -1),
      c = a(r);
    return {
      c() {
        (e = L("div")),
          (t = St("svg")),
          (i = St("circle")),
          (n = St("line")),
          (s = St("line")),
          (o = M()),
          (u = L("div")),
          c.c(),
          B(i, "cx", "12"),
          B(i, "cy", "12"),
          B(i, "r", "10"),
          B(i, "class", "svelte-176xcb"),
          B(n, "x1", "12"),
          B(n, "y1", "8"),
          B(n, "x2", "12"),
          B(n, "y2", "12"),
          B(n, "class", "svelte-176xcb"),
          B(s, "x1", "12"),
          B(s, "y1", "16"),
          B(s, "x2", "12.01"),
          B(s, "y2", "16"),
          B(s, "class", "svelte-176xcb"),
          B(t, "xmlns", "http://www.w3.org/2000/svg"),
          B(t, "width", "24"),
          B(t, "height", "24"),
          B(t, "viewBox", "0 0 24 24"),
          B(t, "fill", "none"),
          B(t, "stroke", "currentColor"),
          B(t, "stroke-width", "2"),
          B(t, "stroke-linecap", "round"),
          B(t, "stroke-linejoin", "round"),
          B(t, "class", "svelte-176xcb"),
          B(u, "class", "text"),
          B(e, "class", "container svelte-176xcb");
      },
      m(f, d) {
        E(f, e, d), $(e, t), $(t, i), $(t, n), $(t, s), $(e, o), $(e, u), c.m(u, null);
      },
      p(f, param) {
        var _param = _sliced_to_array(param, 1),
          d = _param[0];
        a === (a = l(f, d)) && c ? c.p(f, d) : (c.d(1), (c = a(f)), c && (c.c(), c.m(u, null)));
      },
      i: xe,
      o: xe,
      d(f) {
        f && y(e), c.d();
      },
    };
  }
  h(Hk, "create_fragment");
  function jk(r, e, t) {
    var i = e.error;
    return (
      (r.$$set = (n) => {
        "error" in n && t(0, (i = n.error));
      }),
      [i]
    );
  }
  h(jk, "instance");
  var Qh =
      ((_class106 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, jk, Hk, se, { error: 0 });
        }
      }),
      (() => {
        h(_class106, "FeedbackError");
      })(),
      _class106),
    TF = Qh;
  function RF(r, e, t) {
    var i = r.slice();
    return (i[4] = e[t]), i;
  }
  h(RF, "get_each_context");
  function NF(r, e, t) {
    var i = r.slice();
    return (i[7] = e[t]), i;
  }
  h(NF, "get_each_context_1");
  function Yk(r) {
    var e,
      t = r[2],
      i = [];
    for (var n = 0; n < t.length; n += 1) i[n] = MF(NF(r, t, n));
    return {
      c() {
        e = L("ul");
        for (var n = 0; n < i.length; n += 1) i[n].c();
      },
      m(n, s) {
        E(n, e, s);
        for (var o = 0; o < i.length; o += 1) i[o] && i[o].m(e, null);
      },
      p(n, s) {
        if (s & 4) {
          t = n[2];
          var o;
          for (o = 0; o < t.length; o += 1) {
            var u = NF(n, t, o);
            i[o] ? i[o].p(u, s) : ((i[o] = MF(u)), i[o].c(), i[o].m(e, null));
          }
          for (; o < i.length; o += 1) i[o].d(1);
          i.length = t.length;
        }
      },
      d(n) {
        n && y(e), Ir(i, n);
      },
    };
  }
  h(Yk, "create_if_block_2");
  function MF(r) {
    var e,
      t,
      i = r[7].message + "",
      n;
    return {
      c() {
        (e = L("li")), (t = z("$")), (n = z(i));
      },
      m(s, o) {
        E(s, e, o), $(e, t), $(e, n);
      },
      p: xe,
      d(s) {
        s && y(e);
      },
    };
  }
  h(MF, "create_each_block_1");
  function PF(r) {
    var e;
    function t(s, o) {
      return s[3].length === 0 ? Gk : Jk;
    }
    h(t, "select_block_type");
    var n = t(r, -1)(r);
    return {
      c() {
        n.c(), (e = It());
      },
      m(s, o) {
        n.m(s, o), E(s, e, o);
      },
      p(s, o) {
        n.p(s, o);
      },
      d(s) {
        n.d(s), s && y(e);
      },
    };
  }
  h(PF, "create_if_block");
  function Jk(r) {
    var e,
      t,
      i,
      n = r[3],
      s = [];
    for (var o = 0; o < n.length; o += 1) s[o] = IF(RF(r, n, o));
    return {
      c() {
        (e = L("strong")), (e.textContent = "".concat(r[3].length, " merged:")), (t = M()), (i = L("ul"));
        for (var o = 0; o < s.length; o += 1) s[o].c();
        B(e, "class", "svelte-yy7yvg");
      },
      m(o, u) {
        E(o, e, u), E(o, t, u), E(o, i, u);
        for (var l = 0; l < s.length; l += 1) s[l] && s[l].m(i, null);
      },
      p(o, u) {
        if (u & 8) {
          n = o[3];
          var l;
          for (l = 0; l < n.length; l += 1) {
            var a = RF(o, n, l);
            s[l] ? s[l].p(a, u) : ((s[l] = IF(a)), s[l].c(), s[l].m(i, null));
          }
          for (; l < s.length; l += 1) s[l].d(1);
          s.length = n.length;
        }
      },
      d(o) {
        o && y(e), o && y(t), o && y(i), Ir(s, o);
      },
    };
  }
  h(Jk, "create_else_block");
  function Gk(r) {
    var e;
    return {
      c() {
        e = z("No duplicates");
      },
      m(t, i) {
        E(t, e, i);
      },
      p: xe,
      d(t) {
        t && y(e);
      },
    };
  }
  h(Gk, "create_if_block_1");
  function IF(r) {
    var e,
      t = r[4].message + "",
      i;
    return {
      c() {
        (e = L("li")), (i = z(t));
      },
      m(n, s) {
        E(n, e, s), $(e, i);
      },
      p: xe,
      d(n) {
        n && y(e);
      },
    };
  }
  h(IF, "create_each_block");
  function Xk(r) {
    var e,
      t,
      i,
      n,
      s,
      o,
      u,
      l,
      a,
      c,
      f = r[1].count + "",
      d,
      p,
      m,
      F = r[2].length > 0 && Yk(r),
      g = r[0].merge && PF(r);
    return {
      c() {
        (e = L("div")),
          (t = St("svg")),
          (i = St("circle")),
          (n = St("line")),
          (s = St("line")),
          (o = M()),
          (u = L("div")),
          (l = L("strong")),
          (l.textContent = "Successful!"),
          (a = L("br")),
          (c = z("\n		Tidied ")),
          (d = z(f)),
          (p = z(" entries.\n\n		")),
          F && F.c(),
          (m = M()),
          g && g.c(),
          B(i, "cx", "12"),
          B(i, "cy", "12"),
          B(i, "r", "10"),
          B(i, "class", "svelte-yy7yvg"),
          B(n, "x1", "12"),
          B(n, "y1", "16"),
          B(n, "x2", "12"),
          B(n, "y2", "12"),
          B(n, "class", "svelte-yy7yvg"),
          B(s, "x1", "12"),
          B(s, "y1", "8"),
          B(s, "x2", "12.01"),
          B(s, "y2", "8"),
          B(s, "class", "svelte-yy7yvg"),
          B(t, "xmlns", "http://www.w3.org/2000/svg"),
          B(t, "width", "24"),
          B(t, "height", "24"),
          B(t, "viewBox", "0 0 24 24"),
          B(t, "fill", "none"),
          B(t, "stroke", "currentColor"),
          B(t, "stroke-width", "2"),
          B(t, "stroke-linecap", "round"),
          B(t, "stroke-linejoin", "round"),
          B(t, "class", "feather feather-info svelte-yy7yvg"),
          B(l, "class", "svelte-yy7yvg"),
          B(u, "class", "text"),
          B(e, "class", "container svelte-yy7yvg");
      },
      m(D, b) {
        E(D, e, b), $(e, t), $(t, i), $(t, n), $(t, s), $(e, o), $(e, u), $(u, l), $(u, a), $(u, c), $(u, d), $(u, p), F && F.m(u, null), $(u, m), g && g.m(u, null);
      },
      p(D, param) {
        var _param = _sliced_to_array(param, 1),
          b = _param[0];
        b & 2 && f !== (f = D[1].count + "") && Ve(d, f), D[2].length > 0 && F.p(D, b), D[0].merge ? (g ? g.p(D, b) : ((g = PF(D)), g.c(), g.m(u, null))) : g && (g.d(1), (g = null));
      },
      i: xe,
      o: xe,
      d(D) {
        D && y(e), F && F.d(), g && g.d();
      },
    };
  }
  h(Xk, "create_fragment");
  function Kk(r, e, t) {
    var i = e.options,
      n = e.result,
      s = n.warnings.filter((u) => u.code !== "DUPLICATE_ENTRY"),
      o = n.warnings.filter((u) => u.code === "DUPLICATE_ENTRY");
    return (
      (r.$$set = (u) => {
        "options" in u && t(0, (i = u.options)), "result" in u && t(1, (n = u.result));
      }),
      [i, n, s, o]
    );
  }
  h(Kk, "instance");
  var _h =
      ((_class107 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, Kk, Xk, se, { options: 0, result: 1 });
        }
      }),
      (() => {
        h(_class107, "FeedbackSuccess");
      })(),
      _class107),
    $F = _h;
  function Zk(r) {
    var e, t;
    return (
      (e = new TF({ props: { error: r[1].error } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 2 && (s.error = i[1].error), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(Zk, "create_else_block");
  function eS(r) {
    var e, t;
    return (
      (e = new $F({ props: { options: r[0], result: r[1].result } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.result = i[1].result), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(eS, "create_if_block");
  function tS(r) {
    var e,
      t,
      i,
      n,
      s = [eS, Zk],
      o = [];
    function u(l, a) {
      return l[1].status === "success" ? 0 : 1;
    }
    return (
      h(u, "select_block_type"),
      (t = u(r, -1)),
      (i = o[t] = s[t](r)),
      {
        c() {
          (e = L("div")), i.c(), B(e, "role", "alert"), B(e, "class", "svelte-1pqmac");
        },
        m(l, a) {
          E(l, e, a), o[t].m(e, null), (n = !0);
        },
        p(l, param) {
          var _param = _sliced_to_array(param, 1),
            a = _param[0];
          var c = t;
          (t = u(l, a)),
            t === c
              ? o[t].p(l, a)
              : ($t(),
                Q(o[c], 1, 1, () => {
                  o[c] = null;
                }),
                qt(),
                (i = o[t]),
                i ? i.p(l, a) : ((i = o[t] = s[t](l)), i.c()),
                S(i, 1),
                i.m(e, null));
        },
        i(l) {
          n || (S(i), (n = !0));
        },
        o(l) {
          Q(i), (n = !1);
        },
        d(l) {
          l && y(e), o[t].d();
        },
      }
    );
  }
  h(tS, "create_fragment");
  function iS(r, e, t) {
    var i = e.options,
      n = e.status;
    return (
      (r.$$set = (s) => {
        "options" in s && t(0, (i = s.options)), "status" in s && t(1, (n = s.status));
      }),
      [i, n]
    );
  }
  h(iS, "instance");
  var Uh =
      ((_class108 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, iS, tS, se, { options: 0, status: 1 });
        }
      }),
      (() => {
        h(_class108, "Feedback");
      })(),
      _class108),
    qF = Uh;
  function rS(r) {
    var e, t, i, n;
    function s(u) {
      r[3](u);
    }
    h(s, "radio_group_binding");
    var o = { name: "indent", value: "tabs" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new hi({ props: o })),
      Y.push(() => G(e, "group", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n		Indent with tabs"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 1 && ((t = !0), (a.group = u[0]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(rS, "create_default_slot_3");
  function nS(r) {
    var e, t, i, n;
    function s(u) {
      r[4](u);
    }
    h(s, "radio_group_binding_1");
    var o = { name: "indent", value: "spaces" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new hi({ props: o })),
      Y.push(() => G(e, "group", s)),
      {
        c() {
          R(e.$$.fragment), (i = z("\n		Indent with spaces"));
        },
        m(u, l) {
          T(e, u, l), E(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 1 && ((t = !0), (a.group = u[0]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (S(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          Q(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          O(e, u), u && y(i);
        },
      }
    );
  }
  h(nS, "create_default_slot_2");
  function VF(r) {
    var e, t;
    return (
      (e = new Oo({ props: { $$slots: { default: [sS] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 66 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(VF, "create_if_block");
  function sS(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = L("label")), (t = z("Spaces: ")), (i = L("input")), B(i, "name", "spaces"), B(i, "type", "number");
      },
      m(o, u) {
        E(o, e, u), $(e, t), $(e, i), be(i, r[1]), n || ((s = Fe(i, "input", r[5])), (n = !0));
      },
      p(o, u) {
        u & 2 && yt(i.value) !== o[1] && be(i, o[1]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(sS, "create_default_slot_1");
  function oS(r) {
    var e, t, i, n, s, o;
    (e = new Ge({ props: { title: "Indent fields with tabs", $$slots: { default: [rS] }, $$scope: { ctx: r } } })), (i = new Ge({ props: { title: "Indent fields with spaces", $$slots: { default: [nS] }, $$scope: { ctx: r } } }));
    var u = r[0] === "spaces" && VF(r);
    return {
      c() {
        R(e.$$.fragment), (t = M()), R(i.$$.fragment), (n = M()), u && u.c(), (s = It());
      },
      m(l, a) {
        T(e, l, a), E(l, t, a), T(i, l, a), E(l, n, a), u && u.m(l, a), E(l, s, a), (o = !0);
      },
      p(l, a) {
        var c = {};
        a & 65 && (c.$$scope = { dirty: a, ctx: l }), e.$set(c);
        var f = {};
        a & 65 && (f.$$scope = { dirty: a, ctx: l }),
          i.$set(f),
          l[0] === "spaces"
            ? u
              ? (u.p(l, a), a & 1 && S(u, 1))
              : ((u = VF(l)), u.c(), S(u, 1), u.m(s.parentNode, s))
            : u &&
              ($t(),
              Q(u, 1, 1, () => {
                u = null;
              }),
              qt());
      },
      i(l) {
        o || (S(e.$$.fragment, l), S(i.$$.fragment, l), S(u), (o = !0));
      },
      o(l) {
        Q(e.$$.fragment, l), Q(i.$$.fragment, l), Q(u), (o = !1);
      },
      d(l) {
        O(e, l), l && y(t), O(i, l), l && y(n), u && u.d(l), l && y(s);
      },
    };
  }
  h(oS, "create_default_slot");
  function uS(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "Indent", open: !0, $$slots: { default: [oS] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 67 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(uS, "create_fragment");
  function lS(r, e, t) {
    var i = e.options,
      n = i.tab ? "tabs" : "spaces",
      s = i.space;
    function o(a) {
      (n = a), t(0, n);
    }
    h(o, "radio_group_binding");
    function u(a) {
      (n = a), t(0, n);
    }
    h(u, "radio_group_binding_1");
    function l() {
      (s = yt(this.value)), t(1, s);
    }
    return (
      h(l, "input_input_handler"),
      (r.$$set = (a) => {
        "options" in a && t(2, (i = a.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 3 && (t(2, (i.space = s), i), t(2, (i.tab = n === "tabs"), i));
      }),
      [n, s, i, o, u, l]
    );
  }
  h(lS, "instance");
  var Lh =
      ((_class109 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, lS, uS, se, { options: 2 });
        }
      }),
      (() => {
        h(_class109, "IndentOptions");
      })(),
      _class109),
    WF = Lh;
  function aS(r) {
    var e, t, i, n, s, o, u, l, a;
    return {
      c() {
        (e = L("label")),
          (t = z("Fields to sort by:\n			")),
          (i = L("textarea")),
          (n = M()),
          (s = L("p")),
          (s.innerHTML = "Space delimited, e.g: <code>key type publisher author</code>. For\n			descending order, prefix the field name with a dash, e.g.\n			<code>-year author</code>."),
          (o = M()),
          (u = L("p")),
          (u.innerHTML = "In addition to field names, you can use <code>key</code> to sort by\n			citation key,\n			<code>type</code> to sort by entry type (@article, @misc, etc), and\n			<code>special</code> to sort special entries (@string, @preamble, @xdata, and\n			@set) to the top."),
          B(i, "name", "sortList"),
          B(i, "spellcheck", "false");
      },
      m(c, f) {
        E(c, e, f), $(e, t), $(e, i), be(i, r[3]), E(c, n, f), E(c, s, f), E(c, o, f), E(c, u, f), l || ((a = Fe(i, "input", r[5])), (l = !0));
      },
      p(c, f) {
        f & 8 && be(i, c[3]);
      },
      d(c) {
        c && y(e), c && y(n), c && y(s), c && y(o), c && y(u), (l = !1), a();
      },
    };
  }
  h(aS, "create_default_slot_2");
  function hS(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = L("label")), (t = z("Field order:\n			")), (i = L("textarea")), (n = M()), (s = L("p")), (s.innerHTML = "Space delimited, e.g: <code>title author year</code>"), B(i, "name", "sortFieldList"), B(i, "spellcheck", "false");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(e, i), be(i, r[1]), E(l, n, a), E(l, s, a), o || ((u = Fe(i, "input", r[7])), (o = !0));
      },
      p(l, a) {
        a & 2 && be(i, l[1]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(hS, "create_default_slot_1");
  function cS(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[6](f);
    }
    h(u, "option0_checked_binding");
    var l = { option: "sort", $$slots: { default: [aS] }, $$scope: { ctx: r } };
    r[2] !== void 0 && (l.checked = r[2]), (e = new pe({ props: l })), Y.push(() => G(e, "checked", u));
    function a(f) {
      r[8](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "sortFields", $$slots: { default: [hS] }, $$scope: { ctx: r } };
    return (
      r[0] !== void 0 && (c.checked = r[0]),
      (n = new pe({ props: c })),
      Y.push(() => G(n, "checked", a)),
      {
        c() {
          R(e.$$.fragment), (i = M()), R(n.$$.fragment);
        },
        m(f, d) {
          T(e, f, d), E(f, i, d), T(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 2056 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 4 && ((t = !0), (p.checked = f[2]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 2050 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 1 && ((s = !0), (m.checked = f[0]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          Q(e.$$.fragment, f), Q(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          O(e, f), f && y(i), O(n, f);
        },
      }
    );
  }
  h(cS, "create_default_slot");
  function fS(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "Sorting", open: !0, $$slots: { default: [cS] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 2063 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(fS, "create_fragment");
  function dS(r, e, t) {
    var i, n;
    var s = e.options,
      o = s.sortFields !== void 0 && s.sortFields.length > 0,
      u = ((i = s.sortFields) !== null && i !== void 0 ? i : ys).join(" "),
      l = s.sort !== void 0 && s.sort.length > 0,
      a = ((n = s.sort) !== null && n !== void 0 ? n : Bl).join(" ");
    function c() {
      (a = this.value), t(3, a);
    }
    h(c, "textarea_input_handler");
    function f(m) {
      (l = m), t(2, l);
    }
    h(f, "option0_checked_binding");
    function d() {
      (u = this.value), t(1, u);
    }
    h(d, "textarea_input_handler_1");
    function p(m) {
      (o = m), t(0, o);
    }
    return (
      h(p, "option1_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(4, (s = m.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 15 && (t(4, (s.sortFields = o && u.length > 0 ? u.split(/[\n\t ,]+/) : void 0), s), t(4, (s.sort = l && a.length > 0 ? a.split(/[\n\t ,]+/) : void 0), s));
      }),
      [o, u, l, a, s, c, f, d, p]
    );
  }
  h(dS, "instance");
  var Oh =
      ((_class110 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, dS, fS, se, { options: 4 });
        }
      }),
      (() => {
        h(_class110, "SortingOptions");
      })(),
      _class110),
    zF = Oh;
  function pS(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = L("label")), (t = z("Fields to enclose in double braces:\n			")), (i = L("textarea")), (n = M()), (s = L("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), B(i, "name", "enclosingBracesList"), B(i, "spellcheck", "false");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(e, i), be(i, r[12]), E(l, n, a), E(l, s, a), o || ((u = Fe(i, "input", r[17])), (o = !0));
      },
      p(l, a) {
        a[0] & 4096 && be(i, l[12]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(pS, "create_default_slot_3");
  function mS(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = L("label")), (t = z("Remove braces from values of these fields:\n			")), (i = L("textarea")), (n = M()), (s = L("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), B(i, "name", "removeBracesList"), B(i, "spellcheck", "false");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(e, i), be(i, r[14]), E(l, n, a), E(l, s, a), o || ((u = Fe(i, "input", r[19])), (o = !0));
      },
      p(l, a) {
        a[0] & 16384 && be(i, l[14]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(mS, "create_default_slot_2");
  function gS(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = L("label")), (t = z("Maximum number of authors:\n			")), (i = L("input")), (n = M()), (s = L("p")), (s.textContent = 'Author lists longer than this will be truncated to "and others".'), B(i, "name", "maxAuthorsNum"), B(i, "type", "number");
      },
      m(l, a) {
        E(l, e, a), $(e, t), $(e, i), be(i, r[10]), E(l, n, a), E(l, s, a), o || ((u = Fe(i, "input", r[29])), (o = !0));
      },
      p(l, a) {
        a[0] & 1024 && yt(i.value) !== l[10] && be(i, l[10]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(gS, "create_default_slot_1");
  function DS(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, F, g, D, b, A, v, C, w, P, K, q, H, I, ne, le, V, U, Z, me, De, he, ae, Qe, Oe;
    function gt(x) {
      r[16](x);
    }
    h(gt, "option0_checked_binding");
    var Rt = { option: "curly" };
    r[0] !== void 0 && (Rt.checked = r[0]), (i = new pe({ props: Rt })), Y.push(() => G(i, "checked", gt));
    function Li(x) {
      r[18](x);
    }
    h(Li, "option1_checked_binding");
    var Oi = { option: "enclosingBraces", $$slots: { default: [pS] }, $$scope: { ctx: r } };
    r[11] !== void 0 && (Oi.checked = r[11]), (o = new pe({ props: Oi })), Y.push(() => G(o, "checked", Li));
    function Ti(x) {
      r[20](x);
    }
    h(Ti, "option2_checked_binding");
    var ve = { option: "removeBraces", $$slots: { default: [mS] }, $$scope: { ctx: r } };
    r[13] !== void 0 && (ve.checked = r[13]), (a = new pe({ props: ve })), Y.push(() => G(a, "checked", Ti));
    function ee(x) {
      r[21](x);
    }
    h(ee, "option3_checked_binding");
    var Ne = { option: "stripEnclosingBraces" };
    r[1] !== void 0 && (Ne.checked = r[1]), (d = new pe({ props: Ne })), Y.push(() => G(d, "checked", ee));
    function Ri(x) {
      r[22](x);
    }
    h(Ri, "option4_checked_binding");
    var ce = { option: "numeric" };
    r[2] !== void 0 && (ce.checked = r[2]), (F = new pe({ props: ce })), Y.push(() => G(F, "checked", Ri));
    function Bn(x) {
      r[23](x);
    }
    h(Bn, "option5_checked_binding");
    var xr = { option: "months" };
    r[3] !== void 0 && (xr.checked = r[3]), (b = new pe({ props: xr })), Y.push(() => G(b, "checked", Bn));
    function vn(x) {
      r[24](x);
    }
    h(vn, "option6_checked_binding");
    var Ar = { option: "dropAllCaps" };
    r[4] !== void 0 && (Ar.checked = r[4]), (C = new pe({ props: Ar })), Y.push(() => G(C, "checked", vn));
    function xn(x) {
      r[25](x);
    }
    h(xn, "option7_checked_binding");
    var Ph = { option: "escape" };
    r[5] !== void 0 && (Ph.checked = r[5]), (K = new pe({ props: Ph })), Y.push(() => G(K, "checked", xn));
    function KF(x) {
      r[26](x);
    }
    h(KF, "option8_checked_binding");
    var Ih = { option: "encodeUrls" };
    r[6] !== void 0 && (Ih.checked = r[6]), (I = new pe({ props: Ih })), Y.push(() => G(I, "checked", KF));
    function ZF(x) {
      r[27](x);
    }
    h(ZF, "option9_checked_binding");
    var $h = { option: "removeEmptyFields" };
    r[7] !== void 0 && ($h.checked = r[7]), (V = new pe({ props: $h })), Y.push(() => G(V, "checked", ZF));
    function e1(x) {
      r[28](x);
    }
    h(e1, "option10_checked_binding");
    var qh = { option: "removeDuplicateFields" };
    r[8] !== void 0 && (qh.checked = r[8]), (me = new pe({ props: qh })), Y.push(() => G(me, "checked", e1));
    function t1(x) {
      r[30](x);
    }
    h(t1, "option11_checked_binding");
    var Vh = { option: "maxAuthors", $$slots: { default: [gS] }, $$scope: { ctx: r } };
    return (
      r[9] !== void 0 && (Vh.checked = r[9]),
      (ae = new pe({ props: Vh })),
      Y.push(() => G(ae, "checked", t1)),
      {
        c() {
          (e = L("div")),
            (t = M()),
            R(i.$$.fragment),
            (s = M()),
            R(o.$$.fragment),
            (l = M()),
            R(a.$$.fragment),
            (f = M()),
            R(d.$$.fragment),
            (m = M()),
            R(F.$$.fragment),
            (D = M()),
            R(b.$$.fragment),
            (v = M()),
            R(C.$$.fragment),
            (P = M()),
            R(K.$$.fragment),
            (H = M()),
            R(I.$$.fragment),
            (le = M()),
            R(V.$$.fragment),
            (Z = M()),
            R(me.$$.fragment),
            (he = M()),
            R(ae.$$.fragment),
            B(e, "id", "valueOptions");
        },
        m(x, te) {
          E(x, e, te), E(x, t, te), T(i, x, te), E(x, s, te), T(o, x, te), E(x, l, te), T(a, x, te), E(x, f, te), T(d, x, te), E(x, m, te), T(F, x, te), E(x, D, te), T(b, x, te), E(x, v, te), T(C, x, te), E(x, P, te), T(K, x, te), E(x, H, te), T(I, x, te), E(x, le, te), T(V, x, te), E(x, Z, te), T(me, x, te), E(x, he, te), T(ae, x, te), (Oe = !0);
        },
        p(x, te) {
          var Wh = {};
          !n && te[0] & 1 && ((n = !0), (Wh.checked = x[0]), J(() => (n = !1))), i.$set(Wh);
          var To = {};
          (te[0] & 4096) | (te[1] & 16384) && (To.$$scope = { dirty: te, ctx: x }), !u && te[0] & 2048 && ((u = !0), (To.checked = x[11]), J(() => (u = !1))), o.$set(To);
          var Ro = {};
          (te[0] & 16384) | (te[1] & 16384) && (Ro.$$scope = { dirty: te, ctx: x }), !c && te[0] & 8192 && ((c = !0), (Ro.checked = x[13]), J(() => (c = !1))), a.$set(Ro);
          var zh = {};
          !p && te[0] & 2 && ((p = !0), (zh.checked = x[1]), J(() => (p = !1))), d.$set(zh);
          var Hh = {};
          !g && te[0] & 4 && ((g = !0), (Hh.checked = x[2]), J(() => (g = !1))), F.$set(Hh);
          var jh = {};
          !A && te[0] & 8 && ((A = !0), (jh.checked = x[3]), J(() => (A = !1))), b.$set(jh);
          var Yh = {};
          !w && te[0] & 16 && ((w = !0), (Yh.checked = x[4]), J(() => (w = !1))), C.$set(Yh);
          var Jh = {};
          !q && te[0] & 32 && ((q = !0), (Jh.checked = x[5]), J(() => (q = !1))), K.$set(Jh);
          var Gh = {};
          !ne && te[0] & 64 && ((ne = !0), (Gh.checked = x[6]), J(() => (ne = !1))), I.$set(Gh);
          var Xh = {};
          !U && te[0] & 128 && ((U = !0), (Xh.checked = x[7]), J(() => (U = !1))), V.$set(Xh);
          var Kh = {};
          !De && te[0] & 256 && ((De = !0), (Kh.checked = x[8]), J(() => (De = !1))), me.$set(Kh);
          var No = {};
          (te[0] & 1024) | (te[1] & 16384) && (No.$$scope = { dirty: te, ctx: x }), !Qe && te[0] & 512 && ((Qe = !0), (No.checked = x[9]), J(() => (Qe = !1))), ae.$set(No);
        },
        i(x) {
          Oe || (S(i.$$.fragment, x), S(o.$$.fragment, x), S(a.$$.fragment, x), S(d.$$.fragment, x), S(F.$$.fragment, x), S(b.$$.fragment, x), S(C.$$.fragment, x), S(K.$$.fragment, x), S(I.$$.fragment, x), S(V.$$.fragment, x), S(me.$$.fragment, x), S(ae.$$.fragment, x), (Oe = !0));
        },
        o(x) {
          Q(i.$$.fragment, x), Q(o.$$.fragment, x), Q(a.$$.fragment, x), Q(d.$$.fragment, x), Q(F.$$.fragment, x), Q(b.$$.fragment, x), Q(C.$$.fragment, x), Q(K.$$.fragment, x), Q(I.$$.fragment, x), Q(V.$$.fragment, x), Q(me.$$.fragment, x), Q(ae.$$.fragment, x), (Oe = !1);
        },
        d(x) {
          x && y(e), x && y(t), O(i, x), x && y(s), O(o, x), x && y(l), O(a, x), x && y(f), O(d, x), x && y(m), O(F, x), x && y(D), O(b, x), x && y(v), O(C, x), x && y(P), O(K, x), x && y(H), O(I, x), x && y(le), O(V, x), x && y(Z), O(me, x), x && y(he), O(ae, x);
        },
      }
    );
  }
  h(DS, "create_default_slot");
  function FS(r) {
    var e, t;
    return (
      (e = new Je({ props: { open: !0, title: "Values", $$slots: { default: [DS] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          (n[0] & 32767) | (n[1] & 16384) && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(FS, "create_fragment");
  function bS(r, e, t) {
    var i, n, s, o, u, l, a, c, f, d, p, m, F, g;
    var D = e.options,
      b = (i = D.curly) !== null && i !== void 0 ? i : !1,
      A = (n = D.stripEnclosingBraces) !== null && n !== void 0 ? n : !1,
      v = (s = D.numeric) !== null && s !== void 0 ? s : !1,
      C = (o = D.months) !== null && o !== void 0 ? o : !1,
      w = (u = D.dropAllCaps) !== null && u !== void 0 ? u : !1,
      P = (l = D.escape) !== null && l !== void 0 ? l : !1,
      K = (a = D.encodeUrls) !== null && a !== void 0 ? a : !1,
      q = (c = D.removeEmptyFields) !== null && c !== void 0 ? c : !1,
      H = (f = D.removeDuplicateFields) !== null && f !== void 0 ? f : !1,
      I = D.maxAuthors !== void 0,
      ne = (d = D.maxAuthors) !== null && d !== void 0 ? d : 3,
      le = D.enclosingBraces !== void 0 && D.enclosingBraces.length > 0,
      V = (m = (p = D.enclosingBraces) === null || p === void 0 ? void 0 : p.join(" ")) !== null && m !== void 0 ? m : "title",
      U = D.removeBraces !== void 0 && D.removeBraces.length > 0,
      Z = (g = (F = D.enclosingBraces) === null || F === void 0 ? void 0 : F.join(" ")) !== null && g !== void 0 ? g : "title";
    function me(ce) {
      (b = ce), t(0, b);
    }
    h(me, "option0_checked_binding");
    function De() {
      (V = this.value), t(12, V);
    }
    h(De, "textarea_input_handler");
    function he(ce) {
      (le = ce), t(11, le);
    }
    h(he, "option1_checked_binding");
    function ae() {
      (Z = this.value), t(14, Z);
    }
    h(ae, "textarea_input_handler_1");
    function Qe(ce) {
      (U = ce), t(13, U);
    }
    h(Qe, "option2_checked_binding");
    function Oe(ce) {
      (A = ce), t(1, A);
    }
    h(Oe, "option3_checked_binding");
    function gt(ce) {
      (v = ce), t(2, v);
    }
    h(gt, "option4_checked_binding");
    function Rt(ce) {
      (C = ce), t(3, C);
    }
    h(Rt, "option5_checked_binding");
    function Li(ce) {
      (w = ce), t(4, w);
    }
    h(Li, "option6_checked_binding");
    function Oi(ce) {
      (P = ce), t(5, P);
    }
    h(Oi, "option7_checked_binding");
    function Ti(ce) {
      (K = ce), t(6, K);
    }
    h(Ti, "option8_checked_binding");
    function ve(ce) {
      (q = ce), t(7, q);
    }
    h(ve, "option9_checked_binding");
    function ee(ce) {
      (H = ce), t(8, H);
    }
    h(ee, "option10_checked_binding");
    function Ne() {
      (ne = yt(this.value)), t(10, ne);
    }
    h(Ne, "input_input_handler");
    function Ri(ce) {
      (I = ce), t(9, I);
    }
    return (
      h(Ri, "option11_checked_binding"),
      (r.$$set = (ce) => {
        "options" in ce && t(15, (D = ce.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty[0] & 32767 &&
          (t(15, (D.curly = b), D),
          t(15, (D.stripEnclosingBraces = A), D),
          t(15, (D.numeric = v), D),
          t(15, (D.months = C), D),
          t(15, (D.dropAllCaps = w), D),
          t(15, (D.escape = P), D),
          t(15, (D.encodeUrls = K), D),
          t(15, (D.removeEmptyFields = q), D),
          t(15, (D.removeDuplicateFields = H), D),
          t(15, (D.maxAuthors = I ? ne : void 0), D),
          t(15, (D.enclosingBraces = le && V.length > 0 ? V.split(/[\n\t ,]+/) : void 0), D),
          t(15, (D.removeBraces = U && Z.length > 0 ? Z.split(/[\n\t ,]+/) : void 0), D));
      }),
      [b, A, v, C, w, P, K, q, H, I, ne, le, V, U, Z, D, me, De, he, ae, Qe, Oe, gt, Rt, Li, Oi, Ti, ve, ee, Ne, Ri]
    );
  }
  h(bS, "instance");
  var Th =
      ((_class111 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, bS, FS, se, { options: 15 }, null, [-1, -1]);
        }
      }),
      (() => {
        h(_class111, "ValueOptions");
      })(),
      _class111),
    HF = Th;
  function ES(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = L("label")), (t = z("Column:\n			")), (i = L("input")), B(i, "name", "alignnum"), B(i, "type", "number");
      },
      m(o, u) {
        E(o, e, u), $(e, t), $(e, i), be(i, r[2]), n || ((s = Fe(i, "input", r[5])), (n = !0));
      },
      p(o, u) {
        u & 4 && yt(i.value) !== o[2] && be(i, o[2]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(ES, "create_default_slot_2");
  function CS(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = L("label")), (t = z("Column:\n			")), (i = L("input")), B(i, "name", "wrapnum"), B(i, "type", "number");
      },
      m(o, u) {
        E(o, e, u), $(e, t), $(e, i), be(i, r[4]), n || ((s = Fe(i, "input", r[7])), (n = !0));
      },
      p(o, u) {
        u & 16 && yt(i.value) !== o[4] && be(i, o[4]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(CS, "create_default_slot_1");
  function BS(r) {
    var e, t, i, n, s, o, u, l, a;
    function c(g) {
      r[6](g);
    }
    h(c, "option0_checked_binding");
    var f = { option: "align", $$slots: { default: [ES] }, $$scope: { ctx: r } };
    r[1] !== void 0 && (f.checked = r[1]), (e = new pe({ props: f })), Y.push(() => G(e, "checked", c));
    function d(g) {
      r[8](g);
    }
    h(d, "option1_checked_binding");
    var p = { option: "wrap", $$slots: { default: [CS] }, $$scope: { ctx: r } };
    r[3] !== void 0 && (p.checked = r[3]), (n = new pe({ props: p })), Y.push(() => G(n, "checked", d));
    function m(g) {
      r[9](g);
    }
    h(m, "option2_checked_binding");
    var F = { option: "blankLines" };
    return (
      r[0].blankLines !== void 0 && (F.checked = r[0].blankLines),
      (u = new pe({ props: F })),
      Y.push(() => G(u, "checked", m)),
      {
        c() {
          R(e.$$.fragment), (i = M()), R(n.$$.fragment), (o = M()), R(u.$$.fragment);
        },
        m(g, D) {
          T(e, g, D), E(g, i, D), T(n, g, D), E(g, o, D), T(u, g, D), (a = !0);
        },
        p(g, D) {
          var b = {};
          D & 2052 && (b.$$scope = { dirty: D, ctx: g }), !t && D & 2 && ((t = !0), (b.checked = g[1]), J(() => (t = !1))), e.$set(b);
          var A = {};
          D & 2064 && (A.$$scope = { dirty: D, ctx: g }), !s && D & 8 && ((s = !0), (A.checked = g[3]), J(() => (s = !1))), n.$set(A);
          var v = {};
          !l && D & 1 && ((l = !0), (v.checked = g[0].blankLines), J(() => (l = !1))), u.$set(v);
        },
        i(g) {
          a || (S(e.$$.fragment, g), S(n.$$.fragment, g), S(u.$$.fragment, g), (a = !0));
        },
        o(g) {
          Q(e.$$.fragment, g), Q(n.$$.fragment, g), Q(u.$$.fragment, g), (a = !1);
        },
        d(g) {
          O(e, g), g && y(i), O(n, g), g && y(o), O(u, g);
        },
      }
    );
  }
  h(BS, "create_default_slot");
  function vS(r) {
    var e, t;
    return (
      (e = new Je({ props: { title: "Whitespace", open: !0, $$slots: { default: [BS] }, $$scope: { ctx: r } } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _sliced_to_array(param, 1),
            n = _param[0];
          var s = {};
          n & 2079 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(vS, "create_fragment");
  function xS(r, e, t) {
    var i;
    var n = e.options,
      s = n.align > 1,
      o = s ? n.align : 13,
      u = n.wrap !== void 0,
      l = (i = n.wrap) !== null && i !== void 0 ? i : 80;
    function a() {
      (o = yt(this.value)), t(2, o);
    }
    h(a, "input_input_handler");
    function c(m) {
      (s = m), t(1, s);
    }
    h(c, "option0_checked_binding");
    function f() {
      (l = yt(this.value)), t(4, l);
    }
    h(f, "input_input_handler_1");
    function d(m) {
      (u = m), t(3, u);
    }
    h(d, "option1_checked_binding");
    function p(m) {
      r.$$.not_equal(n.blankLines, m) && ((n.blankLines = m), t(0, n), t(1, s), t(2, o), t(3, u), t(4, l));
    }
    return (
      h(p, "option2_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(0, (n = m.options));
      }),
      (r.$$.update = () => {
        r.$$.dirty & 30 && (t(0, (n.align = s ? o : 1), n), t(0, (n.wrap = u ? l : void 0), n));
      }),
      [n, s, o, u, l, a, c, f, d, p]
    );
  }
  h(xS, "instance");
  var Rh =
      ((_class112 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, xS, vS, se, { options: 0 });
        }
      }),
      (() => {
        h(_class112, "WhitespaceOptions");
      })(),
      _class112),
    jF = Rh;
  function YF(r) {
    var e, t;
    return (
      (e = new qF({ props: { options: r[0], status: r[1] } })),
      {
        c() {
          R(e.$$.fragment);
        },
        m(i, n) {
          T(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.status = i[1]), e.$set(s);
        },
        i(i) {
          t || (S(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          Q(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          O(e, i);
        },
      }
    );
  }
  h(YF, "create_if_block");
  function AS(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, F, g, D, b, A, v, C, w, P, K, q, H, I, ne, le, V, U;
    function Z(ee) {
      r[4](ee);
    }
    h(Z, "indentoptions_options_binding");
    var me = {};
    r[0] !== void 0 && (me.options = r[0]), (s = new WF({ props: me })), Y.push(() => G(s, "options", Z));
    function De(ee) {
      r[5](ee);
    }
    h(De, "whitespaceoptions_options_binding");
    var he = {};
    r[0] !== void 0 && (he.options = r[0]), (l = new jF({ props: he })), Y.push(() => G(l, "options", De));
    function ae(ee) {
      r[6](ee);
    }
    h(ae, "valueoptions_options_binding");
    var Qe = {};
    r[0] !== void 0 && (Qe.options = r[0]), (f = new HF({ props: Qe })), Y.push(() => G(f, "options", ae));
    function Oe(ee) {
      r[7](ee);
    }
    h(Oe, "sortingoptions_options_binding");
    var gt = {};
    r[0] !== void 0 && (gt.options = r[0]), (m = new zF({ props: gt })), Y.push(() => G(m, "options", Oe));
    function Rt(ee) {
      r[8](ee);
    }
    h(Rt, "duplicateoptions_options_binding");
    var Li = {};
    r[0] !== void 0 && (Li.options = r[0]), (D = new OF({ props: Li })), Y.push(() => G(D, "options", Rt));
    function Oi(ee) {
      r[9](ee);
    }
    h(Oi, "cleanupoptions_options_binding");
    var Ti = {};
    r[0] !== void 0 && (Ti.options = r[0]), (v = new SF({ props: Ti })), Y.push(() => G(v, "options", Oi)), (P = new LF({ props: { options: r[0] } }));
    var ve = r[1] && YF(r);
    return {
      c() {
        (e = L("aside")),
          (t = L("form")),
          (i = L("header")),
          (i.innerHTML = '<h1 class="svelte-kvjsp8">BibTeX Tidy</h1> \n			<p>This tool tidies bibtex files by fixing inconsistent whitespace,\n				removing duplicates, removing unwanted fields, and sorting entries.</p> \n			<p><a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy">Github</a> \n				<a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy/issues">Report a bug</a></p>'),
          (n = M()),
          R(s.$$.fragment),
          (u = M()),
          R(l.$$.fragment),
          (c = M()),
          R(f.$$.fragment),
          (p = M()),
          R(m.$$.fragment),
          (g = M()),
          R(D.$$.fragment),
          (A = M()),
          R(v.$$.fragment),
          (w = M()),
          R(P.$$.fragment),
          (K = M()),
          (q = L("div")),
          ve && ve.c(),
          (H = M()),
          (I = L("button")),
          (ne = z("Tidy")),
          B(i, "class", "intro svelte-kvjsp8"),
          B(t, "class", "svelte-kvjsp8"),
          B(I, "id", "tidy"),
          (I.disabled = r[2]),
          B(I, "class", "svelte-kvjsp8"),
          B(q, "class", "run svelte-kvjsp8"),
          B(e, "id", "sidebar"),
          B(e, "class", "svelte-kvjsp8");
      },
      m(ee, Ne) {
        E(ee, e, Ne), $(e, t), $(t, i), $(t, n), T(s, t, null), $(t, u), T(l, t, null), $(t, c), T(f, t, null), $(t, p), T(m, t, null), $(t, g), T(D, t, null), $(t, A), T(v, t, null), $(t, w), T(P, t, null), $(e, K), $(e, q), ve && ve.m(q, null), $(q, H), $(q, I), $(I, ne), (le = !0), V || ((U = [Fe(t, "submit", kS), Fe(I, "click", r[10])]), (V = !0));
      },
      p(ee, param) {
        var _param = _sliced_to_array(param, 1),
          Ne = _param[0];
        var Ri = {};
        !o && Ne & 1 && ((o = !0), (Ri.options = ee[0]), J(() => (o = !1))), s.$set(Ri);
        var ce = {};
        !a && Ne & 1 && ((a = !0), (ce.options = ee[0]), J(() => (a = !1))), l.$set(ce);
        var Bn = {};
        !d && Ne & 1 && ((d = !0), (Bn.options = ee[0]), J(() => (d = !1))), f.$set(Bn);
        var xr = {};
        !F && Ne & 1 && ((F = !0), (xr.options = ee[0]), J(() => (F = !1))), m.$set(xr);
        var vn = {};
        !b && Ne & 1 && ((b = !0), (vn.options = ee[0]), J(() => (b = !1))), D.$set(vn);
        var Ar = {};
        !C && Ne & 1 && ((C = !0), (Ar.options = ee[0]), J(() => (C = !1))), v.$set(Ar);
        var xn = {};
        Ne & 1 && (xn.options = ee[0]),
          P.$set(xn),
          ee[1]
            ? ve
              ? (ve.p(ee, Ne), Ne & 2 && S(ve, 1))
              : ((ve = YF(ee)), ve.c(), S(ve, 1), ve.m(q, H))
            : ve &&
              ($t(),
              Q(ve, 1, 1, () => {
                ve = null;
              }),
              qt()),
          (!le || Ne & 4) && (I.disabled = ee[2]);
      },
      i(ee) {
        le || (S(s.$$.fragment, ee), S(l.$$.fragment, ee), S(f.$$.fragment, ee), S(m.$$.fragment, ee), S(D.$$.fragment, ee), S(v.$$.fragment, ee), S(P.$$.fragment, ee), S(ve), (le = !0));
      },
      o(ee) {
        Q(s.$$.fragment, ee), Q(l.$$.fragment, ee), Q(f.$$.fragment, ee), Q(m.$$.fragment, ee), Q(D.$$.fragment, ee), Q(v.$$.fragment, ee), Q(P.$$.fragment, ee), Q(ve), (le = !1);
      },
      d(ee) {
        ee && y(e), O(s), O(l), O(f), O(m), O(D), O(v), O(P), ve && ve.d(), (V = !1), kt(U);
      },
    };
  }
  h(AS, "create_fragment");
  var kS = h(() => !1, "submit_handler");
  function SS(r, e, t) {
    var i = e.status,
      n = e.running,
      s = e.options,
      o = mi();
    function u(m) {
      (s = m), t(0, s);
    }
    h(u, "indentoptions_options_binding");
    function l(m) {
      (s = m), t(0, s);
    }
    h(l, "whitespaceoptions_options_binding");
    function a(m) {
      (s = m), t(0, s);
    }
    h(a, "valueoptions_options_binding");
    function c(m) {
      (s = m), t(0, s);
    }
    h(c, "sortingoptions_options_binding");
    function f(m) {
      (s = m), t(0, s);
    }
    h(f, "duplicateoptions_options_binding");
    function d(m) {
      (s = m), t(0, s);
    }
    h(d, "cleanupoptions_options_binding");
    var p = h(() => o("tidy"), "click_handler");
    return (
      (r.$$set = (m) => {
        "status" in m && t(1, (i = m.status)), "running" in m && t(2, (n = m.running)), "options" in m && t(0, (s = m.options));
      }),
      [s, i, n, o, u, l, a, c, f, d, p]
    );
  }
  h(SS, "instance");
  var Nh =
      ((_class113 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, SS, AS, se, { status: 1, running: 2, options: 0 });
        }
      }),
      (() => {
        h(_class113, "Sidebar");
      })(),
      _class113),
    JF = Nh;
  var GF =
    'Click Tidy to clean up the entries below      \n@Book{sweig42,\n  Author =	 { Stefa{n} Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n@article{steward03,\n  author =	 {Martha Steward},\n  title =	 {Cooking behind bars}, publisher = "Culinary Expert Series",\n  year = {2003}\n}\n@Book{impossible,\n  Author =	 { Stefan Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n';
  function wS(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[6](f);
    }
    h(u, "editor_bibtex_binding");
    var l = { error: r[4] };
    r[2] !== void 0 && (l.bibtex = r[2]), (e = new xF({ props: l })), Y.push(() => G(e, "bibtex", u));
    function a(f) {
      r[7](f);
    }
    h(a, "sidebar_options_binding");
    var c = { status: r[3], running: r[1] };
    return (
      r[0] !== void 0 && (c.options = r[0]),
      (n = new JF({ props: c })),
      Y.push(() => G(n, "options", a)),
      n.$on("tidy", r[5]),
      {
        c() {
          R(e.$$.fragment), (i = M()), R(n.$$.fragment);
        },
        m(f, d) {
          T(e, f, d), E(f, i, d), T(n, f, d), (o = !0);
        },
        p(f, param) {
          var _param = _sliced_to_array(param, 1),
            d = _param[0];
          var p = {};
          d & 16 && (p.error = f[4]), !t && d & 4 && ((t = !0), (p.bibtex = f[2]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 8 && (m.status = f[3]), d & 2 && (m.running = f[1]), !s && d & 1 && ((s = !0), (m.options = f[0]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          Q(e.$$.fragment, f), Q(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          O(e, f), f && y(i), O(n, f);
        },
      }
    );
  }
  h(wS, "create_fragment");
  function QS(r, e, t) {
    var i;
    var n = zr({ tab: !0, align: 13, curly: !0, numeric: !0, escape: !1, duplicates: ["key"], sortFields: !0, removeDuplicateFields: !1 }),
      s = !1,
      o = GF,
      u = (i = f()) !== null && i !== void 0 ? i : n,
      l,
      a;
    function c() {
      t(1, (s = !0)),
        t(3, (l = void 0)),
        t(4, (a = void 0)),
        setTimeout(() => {
          try {
            var _$m = Cm(o, u);
            t(2, (o = _$m.bibtex)), t(3, (l = { status: "success", result: _$m }));
          } catch (m) {
            console.error("bibtex parse problem:", m), t(3, (l = { status: "error", error: m })), m instanceof ut && t(4, (a = m));
          } finally {
            t(1, (s = !1));
          }
        }, 100);
    }
    h(c, "handleTidy");
    function f() {
      var m = window.location.search,
        g = new URLSearchParams(m).get("opt");
      if (g)
        try {
          return zr(JSON.parse(g));
        } catch (e) {
          console.error("Error parsing options in URL");
          return;
        }
    }
    h(f, "getOptionsFromURL"),
      window.addEventListener("popstate", () => {
        var m;
        t(0, (u = (m = f()) !== null && m !== void 0 ? m : n));
      });
    function d(m) {
      (o = m), t(2, o);
    }
    h(d, "editor_bibtex_binding");
    function p(m) {
      (u = m), t(0, u);
    }
    return (
      h(p, "sidebar_options_binding"),
      (r.$$.update = () => {
        if (r.$$.dirty & 1) {
          var m = JSON.stringify(u),
            F = new URLSearchParams([["opt", m]]);
          window.history.pushState(u, "", "index.html?".concat(F.toString()));
        }
      }),
      [u, s, o, l, a, c, d, p]
    );
  }
  h(QS, "instance");
  var Mh =
      ((_class114 = class _class extends ie {
        constructor(e) {
          super(), oe(this, e, QS, wS, se, {});
        }
      }),
      (() => {
        h(_class114, "App");
      })(),
      _class114),
    XF = Mh;
  new XF({ target: document.body });
})();
