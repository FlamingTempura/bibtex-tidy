/**
 * bibtex-tidy v1.10.1
 * https://github.com/FlamingTempura/bibtex-tidy
 *
 * DO NOT EDIT THIS FILE. This file is automatically generated
 * using `npm run build`. Edit files in './src' then rebuild.
 **/
"use strict";
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self1 = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self1, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
function _iterableToArray(iter) {
  if ((typeof Symbol !== "undefined" && iter[Symbol.iterator] != null) || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : (typeof Symbol !== "undefined" && arr[Symbol.iterator]) || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
var __generator =
  (this && this.__generator) ||
  function (thisArg, body) {
    var f,
      y,
      t,
      g,
      _ = {
        label: 0,
        sent: function () {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: [],
      };
    return (
      (g = { next: verb(0), throw: verb(1), return: verb(2) }),
      typeof Symbol === "function" &&
        (g[Symbol.iterator] = function () {
          return this;
        }),
      g
    );
    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }
    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (_)
        try {
          if (((f = 1), y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)) return t;
          if (((y = 0), t)) op = [op[0] & 2, t.value];
          switch (op[0]) {
            case 0:
            case 1:
              t = op;
              break;
            case 4:
              _.label++;
              return { value: op[1], done: false };
            case 5:
              _.label++;
              y = op[1];
              op = [0];
              continue;
            case 7:
              op = _.ops.pop();
              _.trys.pop();
              continue;
            default:
              if (!((t = _.trys), (t = t.length > 0 && t[t.length - 1])) && (op[0] === 6 || op[0] === 2)) {
                _ = 0;
                continue;
              }
              if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                _.label = op[1];
                break;
              }
              if (op[0] === 6 && _.label < t[1]) {
                _.label = t[1];
                t = op;
                break;
              }
              if (t && _.label < t[2]) {
                _.label = t[2];
                _.ops.push(op);
                break;
              }
              if (t[2]) _.ops.pop();
              _.trys.pop();
              continue;
          }
          op = body.call(thisArg, _);
        } catch (e) {
          op = [6, e];
          y = 0;
        } finally {
          f = t = 0;
        }
      if (op[0] & 5) throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  };
(() => {
  var Xh = Object.defineProperty,
    Z1 = Object.defineProperties;
  var eb = Object.getOwnPropertyDescriptors;
  var Gh = Object.getOwnPropertySymbols;
  var tb = Object.prototype.hasOwnProperty,
    ib = Object.prototype.propertyIsEnumerable;
  var Kh = (r, e, t) => (e in r ? Xh(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : (r[e] = t)),
    Qh = (r, e) => {
      for (var t in e || (e = {})) tb.call(e, t) && Kh(r, t, e[t]);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if (Gh)
        try {
          for (var _iterator = Gh(e)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            ib.call(e, t) && Kh(r, t, e[t]);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      return r;
    },
    Jh = (r, e) => Z1(r, eb(e)),
    h = (r, e) => Xh(r, "name", { value: e, configurable: !0 });
  var k = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
  var Et = k((w3, Zh) => {
    var as = h(function (r) {
      return r && r.Math == Math && r;
    }, "check");
    Zh.exports =
      as(typeof globalThis == "object" && globalThis) ||
      as(typeof window == "object" && window) ||
      as(typeof self == "object" && self) ||
      as(typeof global == "object" && global) ||
      (function () {
        return this;
      })() ||
      Function("return this")();
  });
  var Je = k((S3, ec) => {
    ec.exports = function (r) {
      try {
        return !!r();
      } catch (e) {
        return !0;
      }
    };
  });
  var gt = k((B3, tc) => {
    var rb = Je();
    tc.exports = !rb(function () {
      return (
        Object.defineProperty({}, 1, {
          get: function get() {
            return 7;
          },
        })[1] != 7
      );
    });
  });
  var hs = k((_3, ic) => {
    var nb = Je();
    ic.exports = !nb(function () {
      var r = function () {}.bind();
      return typeof r != "function" || r.hasOwnProperty("prototype");
    });
  });
  var Zt = k((O3, rc) => {
    var sb = hs(),
      cs = Function.prototype.call;
    rc.exports = sb
      ? cs.bind(cs)
      : function () {
          return cs.apply(cs, arguments);
        };
  });
  var uc = k((oc) => {
    "use strict";
    var nc = {}.propertyIsEnumerable,
      sc = Object.getOwnPropertyDescriptor,
      ob = sc && !nc.call({ 1: 2 }, 1);
    oc.f = ob
      ? h(function (e) {
          var t = sc(this, e);
          return !!t && t.enumerable;
        }, "propertyIsEnumerable")
      : nc;
  });
  var dr = k(($3, lc) => {
    lc.exports = function (r, e) {
      return { enumerable: !(r & 1), configurable: !(r & 2), writable: !(r & 4), value: e };
    };
  });
  var Ge = k((M3, cc) => {
    var ac = hs(),
      hc = Function.prototype,
      il = hc.call,
      ub = ac && hc.bind.bind(il, il);
    cc.exports = ac
      ? ub
      : function (r) {
          return function () {
            return il.apply(r, arguments);
          };
        };
  });
  var rn = k((P3, dc) => {
    var fc = Ge(),
      lb = fc({}.toString),
      ab = fc("".slice);
    dc.exports = function (r) {
      return ab(lb(r), 8, -1);
    };
  });
  var mc = k((L3, pc) => {
    var hb = Ge(),
      cb = Je(),
      fb = rn(),
      rl = Object,
      db = hb("".split);
    pc.exports = cb(function () {
      return !rl("z").propertyIsEnumerable(0);
    })
      ? function (r) {
          return fb(r) == "String" ? db(r, "") : rl(r);
        }
      : rl;
  });
  var fs = k((q3, gc) => {
    gc.exports = function (r) {
      return r == null;
    };
  });
  var ds = k((I3, Dc) => {
    var pb = fs(),
      mb = TypeError;
    Dc.exports = function (r) {
      if (pb(r)) throw mb("Can't call method on " + r);
      return r;
    };
  });
  var pr = k((N3, bc) => {
    var gb = mc(),
      Db = ds();
    bc.exports = function (r) {
      return gb(Db(r));
    };
  });
  var sl = k((V3, Fc) => {
    var nl = typeof document == "object" && document.all,
      bb = typeof nl > "u" && nl !== void 0;
    Fc.exports = { all: nl, IS_HTMLDDA: bb };
  });
  var Ne = k((z3, Cc) => {
    var yc = sl(),
      Fb = yc.all;
    Cc.exports = yc.IS_HTMLDDA
      ? function (r) {
          return typeof r == "function" || r === Fb;
        }
      : function (r) {
          return typeof r == "function";
        };
  });
  var ei = k((W3, vc) => {
    var Ac = Ne(),
      Ec = sl(),
      yb = Ec.all;
    vc.exports = Ec.IS_HTMLDDA
      ? function (r) {
          return typeof r == "object" ? r !== null : Ac(r) || r === yb;
        }
      : function (r) {
          return typeof r == "object" ? r !== null : Ac(r);
        };
  });
  var nn = k((j3, kc) => {
    var ol = Et(),
      Cb = Ne(),
      Ab = h(function (r) {
        return Cb(r) ? r : void 0;
      }, "aFunction");
    kc.exports = function (r, e) {
      return arguments.length < 2 ? Ab(ol[r]) : ol[r] && ol[r][e];
    };
  });
  var ps = k((U3, wc) => {
    var Eb = Ge();
    wc.exports = Eb({}.isPrototypeOf);
  });
  var Sc = k((Y3, xc) => {
    xc.exports = (typeof navigator < "u" && String(navigator.userAgent)) || "";
  });
  var Mc = k((G3, $c) => {
    var Rc = Et(),
      ul = Sc(),
      Bc = Rc.process,
      _c = Rc.Deno,
      Oc = (Bc && Bc.versions) || (_c && _c.version),
      Tc = Oc && Oc.v8,
      vt,
      ms;
    Tc && ((vt = Tc.split(".")), (ms = vt[0] > 0 && vt[0] < 4 ? 1 : +(vt[0] + vt[1])));
    !ms && ul && ((vt = ul.match(/Edge\/(\d+)/)), (!vt || vt[1] >= 74) && ((vt = ul.match(/Chrome\/(\d+)/)), vt && (ms = +vt[1])));
    $c.exports = ms;
  });
  var ll = k((K3, Lc) => {
    var Pc = Mc(),
      vb = Je();
    Lc.exports =
      !!Object.getOwnPropertySymbols &&
      !vb(function () {
        var r = Symbol();
        return !String(r) || !(Object(r) instanceof Symbol) || (!Symbol.sham && Pc && Pc < 41);
      });
  });
  var al = k((X3, qc) => {
    var kb = ll();
    qc.exports = kb && !Symbol.sham && typeof Symbol.iterator == "symbol";
  });
  var hl = k((Q3, Ic) => {
    var wb = nn(),
      xb = Ne(),
      Sb = ps(),
      Bb = al(),
      _b = Object;
    Ic.exports = Bb
      ? function (r) {
          return typeof r == "symbol";
        }
      : function (r) {
          var e = wb("Symbol");
          return xb(e) && Sb(e.prototype, _b(r));
        };
  });
  var gs = k((J3, Nc) => {
    var Ob = String;
    Nc.exports = function (r) {
      try {
        return Ob(r);
      } catch (e) {
        return "Object";
      }
    };
  });
  var mr = k((Z3, Vc) => {
    var Tb = Ne(),
      Rb = gs(),
      $b = TypeError;
    Vc.exports = function (r) {
      if (Tb(r)) return r;
      throw $b(Rb(r) + " is not a function");
    };
  });
  var Ds = k((e7, zc) => {
    var Mb = mr(),
      Pb = fs();
    zc.exports = function (r, e) {
      var t = r[e];
      return Pb(t) ? void 0 : Mb(t);
    };
  });
  var jc = k((t7, Wc) => {
    var cl = Zt(),
      fl = Ne(),
      dl = ei(),
      Lb = TypeError;
    Wc.exports = function (r, e) {
      var t, i;
      if ((e === "string" && fl((t = r.toString)) && !dl((i = cl(t, r)))) || (fl((t = r.valueOf)) && !dl((i = cl(t, r)))) || (e !== "string" && fl((t = r.toString)) && !dl((i = cl(t, r))))) return i;
      throw Lb("Can't convert object to primitive value");
    };
  });
  var gr = k((i7, Hc) => {
    Hc.exports = !1;
  });
  var bs = k((r7, Yc) => {
    var Uc = Et(),
      qb = Object.defineProperty;
    Yc.exports = function (r, e) {
      try {
        qb(Uc, r, { value: e, configurable: !0, writable: !0 });
      } catch (e1) {
        Uc[r] = e;
      }
      return e;
    };
  });
  var Fs = k((n7, Kc) => {
    var Ib = Et(),
      Nb = bs(),
      Gc = "__core-js_shared__",
      Vb = Ib[Gc] || Nb(Gc, {});
    Kc.exports = Vb;
  });
  var pl = k((s7, Qc) => {
    var zb = gr(),
      Xc = Fs();
    (Qc.exports = function (r, e) {
      return Xc[r] || (Xc[r] = e !== void 0 ? e : {});
    })("versions", []).push({ version: "3.29.1", mode: zb ? "pure" : "global", copyright: "\xa9 2014-2023 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.29.1/LICENSE", source: "https://github.com/zloirock/core-js" });
  });
  var ys = k((o7, Jc) => {
    var Wb = ds(),
      jb = Object;
    Jc.exports = function (r) {
      return jb(Wb(r));
    };
  });
  var kt = k((u7, Zc) => {
    var Hb = Ge(),
      Ub = ys(),
      Yb = Hb({}.hasOwnProperty);
    Zc.exports =
      Object.hasOwn ||
      h(function (e, t) {
        return Yb(Ub(e), t);
      }, "hasOwn");
  });
  var ml = k((a7, ef) => {
    var Gb = Ge(),
      Kb = 0,
      Xb = Math.random(),
      Qb = Gb((1).toString);
    ef.exports = function (r) {
      return "Symbol(" + (r === void 0 ? "" : r) + ")_" + Qb(++Kb + Xb, 36);
    };
  });
  var rt = k((h7, rf) => {
    var Jb = Et(),
      Zb = pl(),
      tf = kt(),
      eF = ml(),
      tF = ll(),
      iF = al(),
      Dr = Jb.Symbol,
      gl = Zb("wks"),
      rF = iF ? Dr.for || Dr : (Dr && Dr.withoutSetter) || eF;
    rf.exports = function (r) {
      return tf(gl, r) || (gl[r] = tF && tf(Dr, r) ? Dr[r] : rF("Symbol." + r)), gl[r];
    };
  });
  var uf = k((c7, of) => {
    var nF = Zt(),
      nf = ei(),
      sf = hl(),
      sF = Ds(),
      oF = jc(),
      uF = rt(),
      lF = TypeError,
      aF = uF("toPrimitive");
    of.exports = function (r, e) {
      if (!nf(r) || sf(r)) return r;
      var t = sF(r, aF),
        i;
      if (t) {
        if ((e === void 0 && (e = "default"), (i = nF(t, r, e)), !nf(i) || sf(i))) return i;
        throw lF("Can't convert object to primitive value");
      }
      return e === void 0 && (e = "number"), oF(r, e);
    };
  });
  var Cs = k((f7, lf) => {
    var hF = uf(),
      cF = hl();
    lf.exports = function (r) {
      var e = hF(r, "string");
      return cF(e) ? e : e + "";
    };
  });
  var bl = k((d7, hf) => {
    var fF = Et(),
      af = ei(),
      Dl = fF.document,
      dF = af(Dl) && af(Dl.createElement);
    hf.exports = function (r) {
      return dF ? Dl.createElement(r) : {};
    };
  });
  var Fl = k((p7, cf) => {
    var pF = gt(),
      mF = Je(),
      gF = bl();
    cf.exports =
      !pF &&
      !mF(function () {
        return (
          Object.defineProperty(gF("div"), "a", {
            get: function get() {
              return 7;
            },
          }).a != 7
        );
      });
  });
  var yl = k((df) => {
    var DF = gt(),
      bF = Zt(),
      FF = uc(),
      yF = dr(),
      CF = pr(),
      AF = Cs(),
      EF = kt(),
      vF = Fl(),
      ff = Object.getOwnPropertyDescriptor;
    df.f = DF
      ? ff
      : h(function (e, t) {
          if (((e = CF(e)), (t = AF(t)), vF))
            try {
              return ff(e, t);
            } catch (e) {}
          if (EF(e, t)) return yF(!bF(FF.f, e, t), e[t]);
        }, "getOwnPropertyDescriptor");
  });
  var Cl = k((D7, pf) => {
    var kF = gt(),
      wF = Je();
    pf.exports =
      kF &&
      wF(function () {
        return Object.defineProperty(function () {}, "prototype", { value: 42, writable: !1 }).prototype != 42;
      });
  });
  var Pt = k((b7, mf) => {
    var xF = ei(),
      SF = String,
      BF = TypeError;
    mf.exports = function (r) {
      if (xF(r)) return r;
      throw BF(SF(r) + " is not an object");
    };
  });
  var Lt = k((Df) => {
    var _F = gt(),
      OF = Fl(),
      TF = Cl(),
      As = Pt(),
      gf = Cs(),
      RF = TypeError,
      Al = Object.defineProperty,
      $F = Object.getOwnPropertyDescriptor,
      El = "enumerable",
      vl = "configurable",
      kl = "writable";
    Df.f = _F
      ? TF
        ? h(function (e, t, i) {
            if ((As(e), (t = gf(t)), As(i), typeof e == "function" && t === "prototype" && "value" in i && kl in i && !i[kl])) {
              var n = $F(e, t);
              n && n[kl] && ((e[t] = i.value), (i = { configurable: vl in i ? i[vl] : n[vl], enumerable: El in i ? i[El] : n[El], writable: !1 }));
            }
            return Al(e, t, i);
          }, "defineProperty")
        : Al
      : h(function (e, t, i) {
          if ((As(e), (t = gf(t)), As(i), OF))
            try {
              return Al(e, t, i);
            } catch (e) {}
          if ("get" in i || "set" in i) throw RF("Accessors not supported");
          return "value" in i && (e[t] = i.value), e;
        }, "defineProperty");
  });
  var Es = k((C7, bf) => {
    var MF = gt(),
      PF = Lt(),
      LF = dr();
    bf.exports = MF
      ? function (r, e, t) {
          return PF.f(r, e, LF(1, t));
        }
      : function (r, e, t) {
          return (r[e] = t), r;
        };
  });
  var vs = k((A7, yf) => {
    var wl = gt(),
      qF = kt(),
      Ff = Function.prototype,
      IF = wl && Object.getOwnPropertyDescriptor,
      xl = qF(Ff, "name"),
      NF = xl && h(function () {}, "something").name === "something",
      VF = xl && (!wl || (wl && IF(Ff, "name").configurable));
    yf.exports = { EXISTS: xl, PROPER: NF, CONFIGURABLE: VF };
  });
  var Bl = k((v7, Cf) => {
    var zF = Ge(),
      WF = Ne(),
      Sl = Fs(),
      jF = zF(Function.toString);
    WF(Sl.inspectSource) ||
      (Sl.inspectSource = function (r) {
        return jF(r);
      });
    Cf.exports = Sl.inspectSource;
  });
  var vf = k((k7, Ef) => {
    var HF = Et(),
      UF = Ne(),
      Af = HF.WeakMap;
    Ef.exports = UF(Af) && /native code/.test(String(Af));
  });
  var ks = k((w7, wf) => {
    var YF = pl(),
      GF = ml(),
      kf = YF("keys");
    wf.exports = function (r) {
      return kf[r] || (kf[r] = GF(r));
    };
  });
  var ws = k((x7, xf) => {
    xf.exports = {};
  });
  var Bs = k((S7, _f) => {
    var KF = vf(),
      Bf = Et(),
      XF = ei(),
      QF = Es(),
      _l = kt(),
      Ol = Fs(),
      JF = ks(),
      ZF = ws(),
      Sf = "Object already initialized",
      Tl = Bf.TypeError,
      e2 = Bf.WeakMap,
      xs,
      sn,
      Ss,
      t2 = h(function (r) {
        return Ss(r) ? sn(r) : xs(r, {});
      }, "enforce"),
      i2 = h(function (r) {
        return function (e) {
          var t;
          if (!XF(e) || (t = sn(e)).type !== r) throw Tl("Incompatible receiver, " + r + " required");
          return t;
        };
      }, "getterFor");
    KF || Ol.state
      ? ((wt = Ol.state || (Ol.state = new e2())),
        (wt.get = wt.get),
        (wt.has = wt.has),
        (wt.set = wt.set),
        (xs = h(function (r, e) {
          if (wt.has(r)) throw Tl(Sf);
          return (e.facade = r), wt.set(r, e), e;
        }, "set")),
        (sn = h(function (r) {
          return wt.get(r) || {};
        }, "get")),
        (Ss = h(function (r) {
          return wt.has(r);
        }, "has")))
      : ((Ii = JF("state")),
        (ZF[Ii] = !0),
        (xs = h(function (r, e) {
          if (_l(r, Ii)) throw Tl(Sf);
          return (e.facade = r), QF(r, Ii, e), e;
        }, "set")),
        (sn = h(function (r) {
          return _l(r, Ii) ? r[Ii] : {};
        }, "get")),
        (Ss = h(function (r) {
          return _l(r, Ii);
        }, "has")));
    var wt, Ii;
    _f.exports = { set: xs, get: sn, has: Ss, enforce: t2, getterFor: i2 };
  });
  var Ml = k((_7, Rf) => {
    var $l = Ge(),
      r2 = Je(),
      n2 = Ne(),
      _s = kt(),
      Rl = gt(),
      s2 = vs().CONFIGURABLE,
      o2 = Bl(),
      Tf = Bs(),
      u2 = Tf.enforce,
      l2 = Tf.get,
      Of = String,
      Os = Object.defineProperty,
      a2 = $l("".slice),
      h2 = $l("".replace),
      c2 = $l([].join),
      f2 =
        Rl &&
        !r2(function () {
          return Os(function () {}, "length", { value: 8 }).length !== 8;
        }),
      d2 = String(String).split("String"),
      p2 = (Rf.exports = function p2(r, e, t) {
        a2(Of(e), 0, 7) === "Symbol(" && (e = "[" + h2(Of(e), /^Symbol\(([^)]*)\)/, "$1") + "]"), t && t.getter && (e = "get " + e), t && t.setter && (e = "set " + e), (!_s(r, "name") || (s2 && r.name !== e)) && (Rl ? Os(r, "name", { value: e, configurable: !0 }) : (r.name = e)), f2 && t && _s(t, "arity") && r.length !== t.arity && Os(r, "length", { value: t.arity });
        try {
          t && _s(t, "constructor") && t.constructor ? Rl && Os(r, "prototype", { writable: !1 }) : r.prototype && (r.prototype = void 0);
        } catch (e) {}
        var i = u2(r);
        return _s(i, "source") || (i.source = c2(d2, typeof e == "string" ? e : "")), r;
      });
    Function.prototype.toString = p2(
      h(function () {
        return (n2(this) && l2(this).source) || o2(this);
      }, "toString"),
      "toString"
    );
  });
  var br = k((T7, $f) => {
    var m2 = Ne(),
      g2 = Lt(),
      D2 = Ml(),
      b2 = bs();
    $f.exports = function (r, e, t, i) {
      i || (i = {});
      var n = i.enumerable,
        s = i.name !== void 0 ? i.name : e;
      if ((m2(t) && D2(t, s, i), i.global)) n ? (r[e] = t) : b2(e, t);
      else {
        try {
          i.unsafe ? r[e] && (n = !0) : delete r[e];
        } catch (e) {}
        n ? (r[e] = t) : g2.f(r, e, { value: t, enumerable: !1, configurable: !i.nonConfigurable, writable: !i.nonWritable });
      }
      return r;
    };
  });
  var Pf = k((R7, Mf) => {
    var F2 = Math.ceil,
      y2 = Math.floor;
    Mf.exports =
      Math.trunc ||
      h(function (e) {
        var t = +e;
        return (t > 0 ? y2 : F2)(t);
      }, "trunc");
  });
  var Pl = k((M7, Lf) => {
    var C2 = Pf();
    Lf.exports = function (r) {
      var e = +r;
      return e !== e || e === 0 ? 0 : C2(e);
    };
  });
  var Ll = k((P7, qf) => {
    var A2 = Pl(),
      E2 = Math.max,
      v2 = Math.min;
    qf.exports = function (r, e) {
      var t = A2(r);
      return t < 0 ? E2(t + e, 0) : v2(t, e);
    };
  });
  var Nf = k((L7, If) => {
    var k2 = Pl(),
      w2 = Math.min;
    If.exports = function (r) {
      return r > 0 ? w2(k2(r), 9007199254740991) : 0;
    };
  });
  var Fr = k((q7, Vf) => {
    var x2 = Nf();
    Vf.exports = function (r) {
      return x2(r.length);
    };
  });
  var jf = k((I7, Wf) => {
    var S2 = pr(),
      B2 = Ll(),
      _2 = Fr(),
      zf = h(function (r) {
        return function (e, t, i) {
          var n = S2(e),
            s = _2(n),
            o = B2(i, s),
            u;
          if (r && t != t) {
            for (; s > o; ) if (((u = n[o++]), u != u)) return !0;
          } else for (; s > o; o++) if ((r || o in n) && n[o] === t) return r || o || 0;
          return !r && -1;
        };
      }, "createMethod");
    Wf.exports = { includes: zf(!0), indexOf: zf(!1) };
  });
  var Il = k((V7, Uf) => {
    var O2 = Ge(),
      ql = kt(),
      T2 = pr(),
      R2 = jf().indexOf,
      $2 = ws(),
      Hf = O2([].push);
    Uf.exports = function (r, e) {
      var t = T2(r),
        i = 0,
        n = [],
        s;
      for (s in t) !ql($2, s) && ql(t, s) && Hf(n, s);
      for (; e.length > i; ) ql(t, (s = e[i++])) && (~R2(n, s) || Hf(n, s));
      return n;
    };
  });
  var Ts = k((z7, Yf) => {
    Yf.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
  });
  var Kf = k((Gf) => {
    var M2 = Il(),
      P2 = Ts(),
      L2 = P2.concat("length", "prototype");
    Gf.f =
      Object.getOwnPropertyNames ||
      h(function (e) {
        return M2(e, L2);
      }, "getOwnPropertyNames");
  });
  var Qf = k((Xf) => {
    Xf.f = Object.getOwnPropertySymbols;
  });
  var Zf = k((U7, Jf) => {
    var q2 = nn(),
      I2 = Ge(),
      N2 = Kf(),
      V2 = Qf(),
      z2 = Pt(),
      W2 = I2([].concat);
    Jf.exports =
      q2("Reflect", "ownKeys") ||
      h(function (e) {
        var t = N2.f(z2(e)),
          i = V2.f;
        return i ? W2(t, i(e)) : t;
      }, "ownKeys");
  });
  var id = k((G7, td) => {
    var ed = kt(),
      j2 = Zf(),
      H2 = yl(),
      U2 = Lt();
    td.exports = function (r, e, t) {
      for (var i = j2(e), n = U2.f, s = H2.f, o = 0; o < i.length; o++) {
        var u = i[o];
        !ed(r, u) && !(t && ed(t, u)) && n(r, u, s(e, u));
      }
    };
  });
  var nd = k((K7, rd) => {
    var Y2 = Je(),
      G2 = Ne(),
      K2 = /#|\.prototype\./,
      on = h(function (r, e) {
        var t = Q2[X2(r)];
        return t == Z2 ? !0 : t == J2 ? !1 : G2(e) ? Y2(e) : !!e;
      }, "isForced"),
      X2 = (on.normalize = function X2(r) {
        return String(r).replace(K2, ".").toLowerCase();
      }),
      Q2 = (on.data = {}),
      J2 = (on.NATIVE = "N"),
      Z2 = (on.POLYFILL = "P");
    rd.exports = on;
  });
  var Ni = k((Q7, sd) => {
    var Nl = Et(),
      ey = yl().f,
      ty = Es(),
      iy = br(),
      ry = bs(),
      ny = id(),
      sy = nd();
    sd.exports = function (r, e) {
      var t = r.target,
        i = r.global,
        n = r.stat,
        s,
        o,
        u,
        l,
        a,
        c;
      if ((i ? (o = Nl) : n ? (o = Nl[t] || ry(t, {})) : (o = (Nl[t] || {}).prototype), o))
        for (u in e) {
          if (((a = e[u]), r.dontCallGetSet ? ((c = ey(o, u)), (l = c && c.value)) : (l = o[u]), (s = sy(i ? u : t + (n ? "." : "#") + u, r.forced)), !s && l !== void 0)) {
            if (typeof a == typeof l) continue;
            ny(a, l);
          }
          (r.sham || (l && l.sham)) && ty(a, "sham", !0), iy(o, u, a, r);
        }
    };
  });
  var Vl = k((J7, od) => {
    var oy = rn();
    od.exports =
      Array.isArray ||
      h(function (e) {
        return oy(e) == "Array";
      }, "isArray");
  });
  var ld = k((ex, ud) => {
    var uy = TypeError,
      ly = 9007199254740991;
    ud.exports = function (r) {
      if (r > ly) throw uy("Maximum allowed index exceeded");
      return r;
    };
  });
  var hd = k((tx, ad) => {
    var ay = rn(),
      hy = Ge();
    ad.exports = function (r) {
      if (ay(r) === "Function") return hy(r);
    };
  });
  var Rs = k((ix, fd) => {
    var cd = hd(),
      cy = mr(),
      fy = hs(),
      dy = cd(cd.bind);
    fd.exports = function (r, e) {
      return (
        cy(r),
        e === void 0
          ? r
          : fy
          ? dy(r, e)
          : function () {
              return r.apply(e, arguments);
            }
      );
    };
  });
  var md = k((rx, pd) => {
    "use strict";
    var py = Vl(),
      my = Fr(),
      gy = ld(),
      Dy = Rs(),
      dd = h(function (r, e, t, i, n, s, o, u) {
        for (var l = n, a = 0, c = o ? Dy(o, u) : !1, f, d; a < i; ) a in t && ((f = c ? c(t[a], a, e) : t[a]), s > 0 && py(f) ? ((d = my(f)), (l = dd(r, e, f, d, l, s - 1) - 1)) : (gy(l + 1), (r[l] = f)), l++), a++;
        return l;
      }, "flattenIntoArray");
    pd.exports = dd;
  });
  var bd = k((sx, Dd) => {
    var by = rt(),
      Fy = by("toStringTag"),
      gd = {};
    gd[Fy] = "z";
    Dd.exports = String(gd) === "[object z]";
  });
  var un = k((ox, Fd) => {
    var yy = bd(),
      Cy = Ne(),
      $s = rn(),
      Ay = rt(),
      Ey = Ay("toStringTag"),
      vy = Object,
      ky =
        $s(
          (function () {
            return arguments;
          })()
        ) == "Arguments",
      wy = h(function (r, e) {
        try {
          return r[e];
        } catch (e) {}
      }, "tryGet");
    Fd.exports = yy
      ? $s
      : function (r) {
          var e, t, i;
          return r === void 0 ? "Undefined" : r === null ? "Null" : typeof (t = wy((e = vy(r)), Ey)) == "string" ? t : ky ? $s(e) : (i = $s(e)) == "Object" && Cy(e.callee) ? "Arguments" : i;
        };
  });
  var kd = k((lx, vd) => {
    var xy = Ge(),
      Sy = Je(),
      yd = Ne(),
      By = un(),
      _y = nn(),
      Oy = Bl(),
      Cd = h(function () {}, "noop"),
      Ty = [],
      Ad = _y("Reflect", "construct"),
      zl = /^\s*(?:class|function)\b/,
      Ry = xy(zl.exec),
      $y = !zl.exec(Cd),
      ln = h(function (e) {
        if (!yd(e)) return !1;
        try {
          return Ad(Cd, Ty, e), !0;
        } catch (e) {
          return !1;
        }
      }, "isConstructor"),
      Ed = h(function (e) {
        if (!yd(e)) return !1;
        switch (By(e)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return !1;
        }
        try {
          return $y || !!Ry(zl, Oy(e));
        } catch (e) {
          return !0;
        }
      }, "isConstructor");
    Ed.sham = !0;
    vd.exports =
      !Ad ||
      Sy(function () {
        var r;
        return (
          ln(ln.call) ||
          !ln(Object) ||
          !ln(function () {
            r = !0;
          }) ||
          r
        );
      })
        ? Ed
        : ln;
  });
  var Bd = k((hx, Sd) => {
    var wd = Vl(),
      My = kd(),
      Py = ei(),
      Ly = rt(),
      qy = Ly("species"),
      xd = Array;
    Sd.exports = function (r) {
      var e;
      return wd(r) && ((e = r.constructor), My(e) && (e === xd || wd(e.prototype)) ? (e = void 0) : Py(e) && ((e = e[qy]), e === null && (e = void 0))), e === void 0 ? xd : e;
    };
  });
  var Od = k((cx, _d) => {
    var Iy = Bd();
    _d.exports = function (r, e) {
      return new (Iy(r))(e === 0 ? 0 : e);
    };
  });
  var yr = k((dx, Td) => {
    Td.exports = {};
  });
  var $d = k((px, Rd) => {
    var Uy = rt(),
      Yy = yr(),
      Gy = Uy("iterator"),
      Ky = Array.prototype;
    Rd.exports = function (r) {
      return r !== void 0 && (Yy.Array === r || Ky[Gy] === r);
    };
  });
  var Ms = k((mx, Pd) => {
    var Xy = un(),
      Md = Ds(),
      Qy = fs(),
      Jy = yr(),
      Zy = rt(),
      eC = Zy("iterator");
    Pd.exports = function (r) {
      if (!Qy(r)) return Md(r, eC) || Md(r, "@@iterator") || Jy[Xy(r)];
    };
  });
  var Wl = k((gx, Ld) => {
    var tC = Zt(),
      iC = mr(),
      rC = Pt(),
      nC = gs(),
      sC = Ms(),
      oC = TypeError;
    Ld.exports = function (r, e) {
      var t = arguments.length < 2 ? sC(r) : e;
      if (iC(t)) return rC(tC(t, r));
      throw oC(nC(r) + " is not iterable");
    };
  });
  var Nd = k((Dx, Id) => {
    var uC = Zt(),
      qd = Pt(),
      lC = Ds();
    Id.exports = function (r, e, t) {
      var i, n;
      qd(r);
      try {
        if (((i = lC(r, "return")), !i)) {
          if (e === "throw") throw t;
          return t;
        }
        i = uC(i, r);
      } catch (s) {
        (n = !0), (i = s);
      }
      if (e === "throw") throw t;
      if (n) throw i;
      return qd(i), t;
    };
  });
  var Hd = k((bx, jd) => {
    var aC = Rs(),
      hC = Zt(),
      cC = Pt(),
      fC = gs(),
      dC = $d(),
      pC = Fr(),
      Vd = ps(),
      mC = Wl(),
      gC = Ms(),
      zd = Nd(),
      DC = TypeError,
      Ps = h(function (r, e) {
        (this.stopped = r), (this.result = e);
      }, "Result"),
      Wd = Ps.prototype;
    jd.exports = function (r, e, t) {
      var i = t && t.that,
        n = !!(t && t.AS_ENTRIES),
        s = !!(t && t.IS_RECORD),
        o = !!(t && t.IS_ITERATOR),
        u = !!(t && t.INTERRUPTED),
        l = aC(e, i),
        a,
        c,
        f,
        d,
        p,
        m,
        D,
        g = h(function (F) {
          return a && zd(a, "normal", F), new Ps(!0, F);
        }, "stop"),
        b = h(function (F) {
          return n ? (cC(F), u ? l(F[0], F[1], g) : l(F[0], F[1])) : u ? l(F, g) : l(F);
        }, "callFn");
      if (s) a = r.iterator;
      else if (o) a = r;
      else {
        if (((c = gC(r)), !c)) throw DC(fC(r) + " is not iterable");
        if (dC(c)) {
          for (f = 0, d = pC(r); d > f; f++) if (((p = b(r[f])), p && Vd(Wd, p))) return p;
          return new Ps(!1);
        }
        a = mC(r, c);
      }
      for (m = s ? r.next : a.next; !(D = hC(m, a)).done; ) {
        try {
          p = b(D.value);
        } catch (F) {
          zd(a, "throw", F);
        }
        if (typeof p == "object" && p && Vd(Wd, p)) return p;
      }
      return new Ps(!1);
    };
  });
  var jl = k((yx, Ud) => {
    "use strict";
    var bC = Cs(),
      FC = Lt(),
      yC = dr();
    Ud.exports = function (r, e, t) {
      var i = bC(e);
      i in r ? FC.f(r, i, yC(0, t)) : (r[i] = t);
    };
  });
  var Hl = k((Ax, Yd) => {
    var vC = un(),
      kC = String;
    Yd.exports = function (r) {
      if (vC(r) === "Symbol") throw TypeError("Cannot convert a Symbol value to a string");
      return kC(r);
    };
  });
  var Ul = k((Ex, Gd) => {
    Gd.exports = "	\n\v\f\r \xa0              　\u2028\u2029\uFEFF";
  });
  var Qd = k((vx, Xd) => {
    var wC = Ge(),
      xC = ds(),
      SC = Hl(),
      Gl = Ul(),
      Kd = wC("".replace),
      BC = RegExp("^[" + Gl + "]+"),
      _C = RegExp("(^|[^" + Gl + "])[" + Gl + "]+$"),
      Yl = h(function (r) {
        return function (e) {
          var t = SC(xC(e));
          return r & 1 && (t = Kd(t, BC, "")), r & 2 && (t = Kd(t, _C, "$1")), t;
        };
      }, "createMethod");
    Xd.exports = { start: Yl(1), end: Yl(2), trim: Yl(3) };
  });
  var tp = k((wx, ep) => {
    var OC = vs().PROPER,
      TC = Je(),
      Jd = Ul(),
      Zd = "​\x85᠎";
    ep.exports = function (r) {
      return TC(function () {
        return !!Jd[r]() || Zd[r]() !== Zd || (OC && Jd[r].name !== r);
      });
    };
  });
  var Kl = k((xx, ip) => {
    "use strict";
    var RC = Qd().end,
      $C = tp();
    ip.exports = $C("trimEnd")
      ? h(function () {
          return RC(this);
        }, "trimEnd")
      : "".trimEnd;
  });
  var np = k(() => {
    var MC = Ni(),
      rp = Kl();
    MC({ target: "String", proto: !0, name: "trimEnd", forced: "".trimRight !== rp }, { trimRight: rp });
  });
  var up = k((Ox, op) => {
    var LC = Il(),
      qC = Ts();
    op.exports =
      Object.keys ||
      h(function (e) {
        return LC(e, qC);
      }, "keys");
  });
  var ap = k((lp) => {
    var IC = gt(),
      NC = Cl(),
      VC = Lt(),
      zC = Pt(),
      WC = pr(),
      jC = up();
    lp.f =
      IC && !NC
        ? Object.defineProperties
        : h(function (e, t) {
            zC(e);
            for (var i = WC(t), n = jC(t), s = n.length, o = 0, u; s > o; ) VC.f(e, (u = n[o++]), i[u]);
            return e;
          }, "defineProperties");
  });
  var cp = k((Mx, hp) => {
    var HC = nn();
    hp.exports = HC("document", "documentElement");
  });
  var an = k((Px, bp) => {
    var UC = Pt(),
      YC = ap(),
      fp = Ts(),
      GC = ws(),
      KC = cp(),
      XC = bl(),
      QC = ks(),
      dp = ">",
      pp = "<",
      Ql = "prototype",
      Jl = "script",
      gp = QC("IE_PROTO"),
      Xl = h(function () {}, "EmptyConstructor"),
      Dp = h(function (r) {
        return pp + Jl + dp + r + pp + "/" + Jl + dp;
      }, "scriptTag"),
      mp = h(function (r) {
        r.write(Dp("")), r.close();
        var e = r.parentWindow.Object;
        return (r = null), e;
      }, "NullProtoObjectViaActiveX"),
      JC = h(function () {
        var r = XC("iframe"),
          e = "java" + Jl + ":",
          t;
        return (r.style.display = "none"), KC.appendChild(r), (r.src = String(e)), (t = r.contentWindow.document), t.open(), t.write(Dp("document.F=Object")), t.close(), t.F;
      }, "NullProtoObjectViaIFrame"),
      Ls,
      qs = h(function () {
        try {
          Ls = new ActiveXObject("htmlfile");
        } catch (e) {}
        qs = typeof document < "u" ? (document.domain && Ls ? mp(Ls) : JC()) : mp(Ls);
        for (var r = fp.length; r--; ) delete qs[Ql][fp[r]];
        return qs();
      }, "NullProtoObject");
    GC[gp] = !0;
    bp.exports =
      Object.create ||
      h(function (e, t) {
        var i;
        return e !== null ? ((Xl[Ql] = UC(e)), (i = new Xl()), (Xl[Ql] = null), (i[gp] = e)) : (i = qs()), t === void 0 ? i : YC.f(i, t);
      }, "create");
  });
  var yp = k((qx, Fp) => {
    var ZC = rt(),
      eA = an(),
      tA = Lt().f,
      Zl = ZC("unscopables"),
      ea = Array.prototype;
    ea[Zl] == null && tA(ea, Zl, { configurable: !0, value: eA(null) });
    Fp.exports = function (r) {
      ea[Zl][r] = !0;
    };
  });
  var Ap = k((Ix, Cp) => {
    var iA = Je();
    Cp.exports = !iA(function () {
      function r() {}
      return h(r, "F"), (r.prototype.constructor = null), Object.getPrototypeOf(new r()) !== r.prototype;
    });
  });
  var ia = k((Vx, vp) => {
    var rA = kt(),
      nA = Ne(),
      sA = ys(),
      oA = ks(),
      uA = Ap(),
      Ep = oA("IE_PROTO"),
      ta = Object,
      lA = ta.prototype;
    vp.exports = uA
      ? ta.getPrototypeOf
      : function (r) {
          var e = sA(r);
          if (rA(e, Ep)) return e[Ep];
          var t = e.constructor;
          return nA(t) && e instanceof t ? t.prototype : e instanceof ta ? lA : null;
        };
  });
  var oa = k((zx, xp) => {
    "use strict";
    var aA = Je(),
      hA = Ne(),
      cA = ei(),
      fA = an(),
      kp = ia(),
      dA = br(),
      pA = rt(),
      mA = gr(),
      sa = pA("iterator"),
      wp = !1,
      ti,
      ra,
      na;
    [].keys && ((na = [].keys()), "next" in na ? ((ra = kp(kp(na))), ra !== Object.prototype && (ti = ra)) : (wp = !0));
    var gA =
      !cA(ti) ||
      aA(function () {
        var r = {};
        return ti[sa].call(r) !== r;
      });
    gA ? (ti = {}) : mA && (ti = fA(ti));
    hA(ti[sa]) ||
      dA(ti, sa, function () {
        return this;
      });
    xp.exports = { IteratorPrototype: ti, BUGGY_SAFARI_ITERATORS: wp };
  });
  var Is = k((Wx, Bp) => {
    var DA = Lt().f,
      bA = kt(),
      FA = rt(),
      Sp = FA("toStringTag");
    Bp.exports = function (r, e, t) {
      r && !t && (r = r.prototype), r && !bA(r, Sp) && DA(r, Sp, { configurable: !0, value: e });
    };
  });
  var ua = k((jx, _p) => {
    "use strict";
    var yA = oa().IteratorPrototype,
      CA = an(),
      AA = dr(),
      EA = Is(),
      vA = yr(),
      kA = h(function () {
        return this;
      }, "returnThis");
    _p.exports = function (r, e, t, i) {
      var n = e + " Iterator";
      return (r.prototype = CA(yA, { next: AA(+!i, t) })), EA(r, n, !1, !0), (vA[n] = kA), r;
    };
  });
  var Tp = k((Ux, Op) => {
    var wA = Ge(),
      xA = mr();
    Op.exports = function (r, e, t) {
      try {
        return wA(xA(Object.getOwnPropertyDescriptor(r, e)[t]));
      } catch (e) {}
    };
  });
  var $p = k((Yx, Rp) => {
    var SA = Ne(),
      BA = String,
      _A = TypeError;
    Rp.exports = function (r) {
      if (typeof r == "object" || SA(r)) return r;
      throw _A("Can't set " + BA(r) + " as a prototype");
    };
  });
  var Pp = k((Gx, Mp) => {
    var OA = Tp(),
      TA = Pt(),
      RA = $p();
    Mp.exports =
      Object.setPrototypeOf ||
      ("__proto__" in {}
        ? (function () {
            var r = !1,
              e = {},
              t;
            try {
              (t = OA(Object.prototype, "__proto__", "set")), t(e, []), (r = e instanceof Array);
            } catch (e) {}
            return h(function (n, s) {
              return TA(n), RA(s), r ? t(n, s) : (n.__proto__ = s), n;
            }, "setPrototypeOf");
          })()
        : void 0);
  });
  var Yp = k((Xx, Up) => {
    "use strict";
    var $A = Ni(),
      MA = Zt(),
      Ns = gr(),
      jp = vs(),
      PA = Ne(),
      LA = ua(),
      Lp = ia(),
      qp = Pp(),
      qA = Is(),
      IA = Es(),
      la = br(),
      NA = rt(),
      Ip = yr(),
      Hp = oa(),
      VA = jp.PROPER,
      zA = jp.CONFIGURABLE,
      Np = Hp.IteratorPrototype,
      Vs = Hp.BUGGY_SAFARI_ITERATORS,
      hn = NA("iterator"),
      Vp = "keys",
      cn = "values",
      zp = "entries",
      Wp = h(function () {
        return this;
      }, "returnThis");
    Up.exports = function (r, e, t, i, n, s, o) {
      LA(t, e, i);
      var u = h(function (b) {
          if (b === n && d) return d;
          if (!Vs && b in c) return c[b];
          switch (b) {
            case Vp:
              return h(function () {
                return new t(this, b);
              }, "keys");
            case cn:
              return h(function () {
                return new t(this, b);
              }, "values");
            case zp:
              return h(function () {
                return new t(this, b);
              }, "entries");
          }
          return function () {
            return new t(this);
          };
        }, "getIterationMethod"),
        l = e + " Iterator",
        a = !1,
        c = r.prototype,
        f = c[hn] || c["@@iterator"] || (n && c[n]),
        d = (!Vs && f) || u(n),
        p = (e == "Array" && c.entries) || f,
        m,
        D,
        g;
      if (
        (p && ((m = Lp(p.call(new r()))), m !== Object.prototype && m.next && (!Ns && Lp(m) !== Np && (qp ? qp(m, Np) : PA(m[hn]) || la(m, hn, Wp)), qA(m, l, !0, !0), Ns && (Ip[l] = Wp))),
        VA &&
          n == cn &&
          f &&
          f.name !== cn &&
          (!Ns && zA
            ? IA(c, "name", cn)
            : ((a = !0),
              (d = h(function () {
                return MA(f, this);
              }, "values")))),
        n)
      )
        if (((D = { values: u(cn), keys: s ? d : u(Vp), entries: u(zp) }), o)) for (g in D) (Vs || a || !(g in c)) && la(c, g, D[g]);
        else $A({ target: e, proto: !0, forced: Vs || a }, D);
      return (!Ns || o) && c[hn] !== d && la(c, hn, d, { name: n }), (Ip[e] = d), D;
    };
  });
  var Kp = k((Jx, Gp) => {
    Gp.exports = function (r, e) {
      return { value: r, done: e };
    };
  });
  var tm = k((Zx, em) => {
    "use strict";
    var WA = pr(),
      aa = yp(),
      Xp = yr(),
      Jp = Bs(),
      jA = Lt().f,
      HA = Yp(),
      zs = Kp(),
      UA = gr(),
      YA = gt(),
      Zp = "Array Iterator",
      GA = Jp.set,
      KA = Jp.getterFor(Zp);
    em.exports = HA(
      Array,
      "Array",
      function (r, e) {
        GA(this, { type: Zp, target: WA(r), index: 0, kind: e });
      },
      function () {
        var r = KA(this),
          e = r.target,
          t = r.kind,
          i = r.index++;
        return !e || i >= e.length ? ((r.target = void 0), zs(void 0, !0)) : t == "keys" ? zs(i, !1) : t == "values" ? zs(e[i], !1) : zs([i, e[i]], !1);
      },
      "values"
    );
    var Qp = (Xp.Arguments = Xp.Array);
    aa("keys");
    aa("values");
    aa("entries");
    if (!UA && YA && Qp.name !== "values")
      try {
        jA(Qp, "name", { value: "values" });
      } catch (e) {}
  });
  var nm = k((eS, rm) => {
    var XA = Je(),
      QA = rt(),
      JA = gt(),
      im = gr(),
      ZA = QA("iterator");
    rm.exports = !XA(function () {
      var r = new URL("b?a=1&b=2&c=3", "http://a"),
        e = r.searchParams,
        t = "";
      return (
        (r.pathname = "c%20d"),
        e.forEach(function (i, n) {
          e.delete("b"), (t += n + i);
        }),
        (im && !r.toJSON) ||
          (!e.size && (im || !JA)) ||
          !e.sort ||
          r.href !== "http://a/c%20d?a=1&c=3" ||
          e.get("c") !== "3" ||
          String(new URLSearchParams("?a=1")) !== "a=1" ||
          !e[ZA] ||
          new URL("https://a@b").username !== "a" ||
          new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" ||
          new URL("http://тест").host !== "xn--e1aybc" ||
          new URL("http://a#б").hash !== "#%D0%B1" ||
          t !== "a1c3" ||
          new URL("http://x", void 0).host !== "x"
      );
    });
  });
  var um = k((tS, om) => {
    var sm = Ml(),
      eE = Lt();
    om.exports = function (r, e, t) {
      return t.get && sm(t.get, e, { getter: !0 }), t.set && sm(t.set, e, { setter: !0 }), eE.f(r, e, t);
    };
  });
  var am = k((iS, lm) => {
    var tE = br();
    lm.exports = function (r, e, t) {
      for (var i in e) tE(r, i, e[i], t);
      return r;
    };
  });
  var cm = k((rS, hm) => {
    var iE = ps(),
      rE = TypeError;
    hm.exports = function (r, e) {
      if (iE(e, r)) return r;
      throw rE("Incorrect invocation");
    };
  });
  var dm = k((nS, fm) => {
    var nE = TypeError;
    fm.exports = function (r, e) {
      if (r < e) throw nE("Not enough arguments");
      return r;
    };
  });
  var gm = k((sS, mm) => {
    var pm = Ll(),
      sE = Fr(),
      oE = jl(),
      uE = Array,
      lE = Math.max;
    mm.exports = function (r, e, t) {
      for (var i = sE(r), n = pm(e, i), s = pm(t === void 0 ? i : t, i), o = uE(lE(s - n, 0)), u = 0; n < s; n++, u++) oE(o, u, r[n]);
      return (o.length = u), o;
    };
  });
  var Fm = k((oS, bm) => {
    var Dm = gm(),
      aE = Math.floor,
      ha = h(function (r, e) {
        var t = r.length,
          i = aE(t / 2);
        return t < 8 ? hE(r, e) : cE(r, ha(Dm(r, 0, i), e), ha(Dm(r, i), e), e);
      }, "mergeSort"),
      hE = h(function (r, e) {
        for (var t = r.length, i = 1, n, s; i < t; ) {
          for (s = i, n = r[i]; s && e(r[s - 1], n) > 0; ) r[s] = r[--s];
          s !== i++ && (r[s] = n);
        }
        return r;
      }, "insertionSort"),
      cE = h(function (r, e, t, i) {
        for (var n = e.length, s = t.length, o = 0, u = 0; o < n || u < s; ) r[o + u] = o < n && u < s ? (i(e[o], t[u]) <= 0 ? e[o++] : t[u++]) : o < n ? e[o++] : t[u++];
        return r;
      }, "merge");
    bm.exports = ha;
  });
  var Nm = k((lS, Im) => {
    "use strict";
    tm();
    var ma = Ni(),
      Er = Et(),
      Ws = Zt(),
      qt = Ge(),
      Ar = gt(),
      Om = nm(),
      Tm = br(),
      fE = um(),
      dE = am(),
      pE = Is(),
      mE = ua(),
      ba = Bs(),
      Rm = cm(),
      ca = Ne(),
      gE = kt(),
      DE = Rs(),
      bE = un(),
      FE = Pt(),
      $m = ei(),
      nt = Hl(),
      yE = an(),
      ym = dr(),
      ga = Wl(),
      CE = Ms(),
      Cr = dm(),
      AE = rt(),
      EE = Fm(),
      vE = AE("iterator"),
      dn = "URLSearchParams",
      Mm = dn + "Iterator",
      Pm = ba.set,
      Dt = ba.getterFor(dn),
      kE = ba.getterFor(Mm),
      wE = Object.getOwnPropertyDescriptor,
      Fa = h(function (r) {
        if (!Ar) return Er[r];
        var e = wE(Er, r);
        return e && e.value;
      }, "safeGetBuiltIn"),
      Cm = Fa("fetch"),
      Hs = Fa("Request"),
      fn = Fa("Headers"),
      fa = Hs && Hs.prototype,
      Am = fn && fn.prototype,
      xE = Er.RegExp,
      SE = Er.TypeError,
      Lm = Er.decodeURIComponent,
      BE = Er.encodeURIComponent,
      _E = qt("".charAt),
      Em = qt([].join),
      Vi = qt([].push),
      Da = qt("".replace),
      OE = qt([].shift),
      vm = qt([].splice),
      km = qt("".split),
      TE = qt("".slice),
      RE = /\+/g,
      wm = Array(4),
      $E = h(function (r) {
        return wm[r - 1] || (wm[r - 1] = xE("((?:%[\\da-f]{2}){" + r + "})", "gi"));
      }, "percentSequence"),
      ME = h(function (r) {
        try {
          return Lm(r);
        } catch (e) {
          return r;
        }
      }, "percentDecode"),
      xm = h(function (r) {
        var e = Da(r, RE, " "),
          t = 4;
        try {
          return Lm(e);
        } catch (e1) {
          for (; t; ) e = Da(e, $E(t--), ME);
          return e;
        }
      }, "deserialize"),
      PE = /[!'()~]|%20/g,
      LE = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" },
      qE = h(function (r) {
        return LE[r];
      }, "replacer"),
      Sm = h(function (r) {
        return Da(BE(r), PE, qE);
      }, "serialize"),
      da = mE(
        h(function (e, t) {
          Pm(this, { type: Mm, iterator: ga(Dt(e).entries), kind: t });
        }, "Iterator"),
        "Iterator",
        h(function () {
          var e = kE(this),
            t = e.kind,
            i = e.iterator.next(),
            n = i.value;
          return i.done || (i.value = t === "keys" ? n.key : t === "values" ? n.value : [n.key, n.value]), i;
        }, "next"),
        !0
      ),
      qm = h(function (r) {
        (this.entries = []), (this.url = null), r !== void 0 && ($m(r) ? this.parseObject(r) : this.parseQuery(typeof r == "string" ? (_E(r, 0) === "?" ? TE(r, 1) : r) : nt(r)));
      }, "URLSearchParamsState");
    qm.prototype = {
      type: dn,
      bindURL: function bindURL(r) {
        (this.url = r), this.update();
      },
      parseObject: function parseObject(r) {
        var e = CE(r),
          t,
          i,
          n,
          s,
          o,
          u,
          l;
        if (e)
          for (t = ga(r, e), i = t.next; !(n = Ws(i, t)).done; ) {
            if (((s = ga(FE(n.value))), (o = s.next), (u = Ws(o, s)).done || (l = Ws(o, s)).done || !Ws(o, s).done)) throw SE("Expected sequence with length 2");
            Vi(this.entries, { key: nt(u.value), value: nt(l.value) });
          }
        else for (var a in r) gE(r, a) && Vi(this.entries, { key: a, value: nt(r[a]) });
      },
      parseQuery: function parseQuery(r) {
        if (r) for (var e = km(r, "&"), t = 0, i, n; t < e.length; ) (i = e[t++]), i.length && ((n = km(i, "=")), Vi(this.entries, { key: xm(OE(n)), value: xm(Em(n, "=")) }));
      },
      serialize: function serialize() {
        for (var r = this.entries, e = [], t = 0, i; t < r.length; ) (i = r[t++]), Vi(e, Sm(i.key) + "=" + Sm(i.value));
        return Em(e, "&");
      },
      update: function update() {
        (this.entries.length = 0), this.parseQuery(this.url.query);
      },
      updateURL: function updateURL() {
        this.url && this.url.update();
      },
    };
    var Us = h(function () {
        Rm(this, vr);
        var e = arguments.length > 0 ? arguments[0] : void 0,
          t = Pm(this, new qm(e));
        Ar || (this.length = t.entries.length);
      }, "URLSearchParams"),
      vr = Us.prototype;
    dE(
      vr,
      {
        append: h(function (e, t) {
          Cr(arguments.length, 2);
          var i = Dt(this);
          Vi(i.entries, { key: nt(e), value: nt(t) }), Ar || this.length++, i.updateURL();
        }, "append"),
        delete: function _delete(r) {
          Cr(arguments.length, 1);
          for (var e = Dt(this), t = e.entries, i = nt(r), n = 0; n < t.length; ) t[n].key === i ? vm(t, n, 1) : n++;
          Ar || (this.length = t.length), e.updateURL();
        },
        get: h(function (e) {
          Cr(arguments.length, 1);
          for (var t = Dt(this).entries, i = nt(e), n = 0; n < t.length; n++) if (t[n].key === i) return t[n].value;
          return null;
        }, "get"),
        getAll: h(function (e) {
          Cr(arguments.length, 1);
          for (var t = Dt(this).entries, i = nt(e), n = [], s = 0; s < t.length; s++) t[s].key === i && Vi(n, t[s].value);
          return n;
        }, "getAll"),
        has: h(function (e) {
          Cr(arguments.length, 1);
          for (var t = Dt(this).entries, i = nt(e), n = 0; n < t.length; ) if (t[n++].key === i) return !0;
          return !1;
        }, "has"),
        set: h(function (e, t) {
          Cr(arguments.length, 1);
          for (var i = Dt(this), n = i.entries, s = !1, o = nt(e), u = nt(t), l = 0, a; l < n.length; l++) (a = n[l]), a.key === o && (s ? vm(n, l--, 1) : ((s = !0), (a.value = u)));
          s || Vi(n, { key: o, value: u }), Ar || (this.length = n.length), i.updateURL();
        }, "set"),
        sort: h(function () {
          var e = Dt(this);
          EE(e.entries, function (t, i) {
            return t.key > i.key ? 1 : -1;
          }),
            e.updateURL();
        }, "sort"),
        forEach: h(function (e) {
          for (var t = Dt(this).entries, i = DE(e, arguments.length > 1 ? arguments[1] : void 0), n = 0, s; n < t.length; ) (s = t[n++]), i(s.value, s.key, this);
        }, "forEach"),
        keys: h(function () {
          return new da(this, "keys");
        }, "keys"),
        values: h(function () {
          return new da(this, "values");
        }, "values"),
        entries: h(function () {
          return new da(this, "entries");
        }, "entries"),
      },
      { enumerable: !0 }
    );
    Tm(vr, vE, vr.entries, { name: "entries" });
    Tm(
      vr,
      "toString",
      h(function () {
        return Dt(this).serialize();
      }, "toString"),
      { enumerable: !0 }
    );
    Ar &&
      fE(vr, "size", {
        get: h(function () {
          return Dt(this).entries.length;
        }, "size"),
        configurable: !0,
        enumerable: !0,
      });
    pE(Us, dn);
    ma({ global: !0, constructor: !0, forced: !Om }, { URLSearchParams: Us });
    !Om &&
      ca(fn) &&
      ((Bm = qt(Am.has)),
      (_m = qt(Am.set)),
      (pa = h(function (r) {
        if ($m(r)) {
          var e = r.body,
            t;
          if (bE(e) === dn) return (t = r.headers ? new fn(r.headers) : new fn()), Bm(t, "content-type") || _m(t, "content-type", "application/x-www-form-urlencoded;charset=UTF-8"), yE(r, { body: ym(0, nt(e)), headers: ym(0, t) });
        }
        return r;
      }, "wrapRequestOptions")),
      ca(Cm) &&
        ma(
          { global: !0, enumerable: !0, dontCallGetSet: !0, forced: !0 },
          {
            fetch: h(function (e) {
              return Cm(e, arguments.length > 1 ? pa(arguments[1]) : {});
            }, "fetch"),
          }
        ),
      ca(Hs) &&
        ((js = h(function (e) {
          return Rm(this, fa), new Hs(e, arguments.length > 1 ? pa(arguments[1]) : {});
        }, "Request")),
        (fa.constructor = js),
        (js.prototype = fa),
        ma({ global: !0, constructor: !0, dontCallGetSet: !0, forced: !0 }, { Request: js })));
    var Bm, _m, pa, js;
    Im.exports = { URLSearchParams: Us, getState: Dt };
  });
  var Ny = Ni(),
    Vy = md(),
    zy = mr(),
    Wy = ys(),
    jy = Fr(),
    Hy = Od();
  Ny(
    { target: "Array", proto: !0 },
    {
      flatMap: h(function (e) {
        var t = Wy(this),
          i = jy(t),
          n;
        return zy(e), (n = Hy(t, 0)), (n.length = Vy(n, t, t, i, 0, 1, e, arguments.length > 1 ? arguments[1] : void 0)), n;
      }, "flatMap"),
    }
  );
  var CC = Ni(),
    AC = Hd(),
    EC = jl();
  CC(
    { target: "Object", stat: !0 },
    {
      fromEntries: h(function (e) {
        var t = {};
        return (
          AC(
            e,
            function (i, n) {
              EC(t, i, n);
            },
            { AS_ENTRIES: !0 }
          ),
          t
        );
      }, "fromEntries"),
    }
  );
  np();
  var PC = Ni(),
    sp = Kl();
  PC({ target: "String", proto: !0, name: "trimEnd", forced: "".trimEnd !== sp }, { trimEnd: sp });
  Nm();
  function Se() {}
  h(Se, "noop");
  function IE(r, e) {
    for (var t in e) r[t] = e[t];
    return r;
  }
  h(IE, "assign");
  function va(r) {
    return r();
  }
  h(va, "run");
  function Vm() {
    return Object.create(null);
  }
  h(Vm, "blank_object");
  function It(r) {
    r.forEach(va);
  }
  h(It, "run_all");
  function Xs(r) {
    return typeof r == "function";
  }
  h(Xs, "is_function");
  function ne(r, e) {
    return r != r ? e == e : r !== e || (r && typeof r == "object") || typeof r == "function";
  }
  h(ne, "safe_not_equal");
  function zm(r) {
    return Object.keys(r).length === 0;
  }
  h(zm, "is_empty");
  function gi(r, e, t, i) {
    if (r) {
      var n = Wm(r, e, t, i);
      return r[0](n);
    }
  }
  h(gi, "create_slot");
  function Wm(r, e, t, i) {
    return r[1] && i ? IE(t.ctx.slice(), r[1](i(e))) : t.ctx;
  }
  h(Wm, "get_slot_context");
  function Di(r, e, t, i) {
    if (r[2] && i) {
      var n = r[2](i(t));
      if (e.dirty === void 0) return n;
      if (typeof n == "object") {
        var s = [],
          o = Math.max(e.dirty.length, n.length);
        for (var u = 0; u < o; u += 1) s[u] = e.dirty[u] | n[u];
        return s;
      }
      return e.dirty | n;
    }
    return e.dirty;
  }
  h(Di, "get_slot_changes");
  function bi(r, e, t, i, n, s) {
    if (n) {
      var o = Wm(e, t, i, s);
      r.p(o, n);
    }
  }
  h(bi, "update_slot_base");
  function Fi(r) {
    if (r.ctx.length > 32) {
      var e = [],
        t = r.ctx.length / 32;
      for (var i = 0; i < t; i++) e[i] = -1;
      return e;
    }
    return -1;
  }
  h(Fi, "get_all_dirty_from_scope");
  function jm(r) {
    var e = {};
    for (var t in r) e[t] = !0;
    return e;
  }
  h(jm, "compute_slots");
  var Hm = !1;
  function NE() {
    Hm = !0;
  }
  h(NE, "start_hydrating");
  function VE() {
    Hm = !1;
  }
  h(VE, "end_hydrating");
  function V(r, e) {
    r.appendChild(e);
  }
  h(V, "append");
  function C(r, e, t) {
    r.insertBefore(e, t || null);
  }
  h(C, "insert");
  function y(r) {
    r.parentNode && r.parentNode.removeChild(r);
  }
  h(y, "detach");
  function Dn(r, e) {
    for (var t = 0; t < r.length; t += 1) r[t] && r[t].d(e);
  }
  h(Dn, "destroy_each");
  function R(r) {
    return document.createElement(r);
  }
  h(R, "element");
  function Nt(r) {
    return document.createElementNS("http://www.w3.org/2000/svg", r);
  }
  h(Nt, "svg_element");
  function G(r) {
    return document.createTextNode(r);
  }
  h(G, "text");
  function q() {
    return G(" ");
  }
  h(q, "space");
  function ii() {
    return G("");
  }
  h(ii, "empty");
  function Ce(r, e, t, i) {
    return r.addEventListener(e, t, i), () => r.removeEventListener(e, t, i);
  }
  h(Ce, "listen");
  function v(r, e, t) {
    t == null ? r.removeAttribute(e) : r.getAttribute(e) !== t && r.setAttribute(e, t);
  }
  h(v, "attr");
  function xt(r) {
    return r === "" ? null : +r;
  }
  h(xt, "to_number");
  function zE(r) {
    return Array.from(r.childNodes);
  }
  h(zE, "children");
  function Ke(r, e) {
    (e = "" + e), r.wholeText !== e && (r.data = e);
  }
  h(Ke, "set_data");
  function Ae(r, e) {
    r.value = e !== null && e !== void 0 ? e : "";
  }
  h(Ae, "set_input_value");
  function kr(r, e, t) {
    r.classList[t ? "add" : "remove"](e);
  }
  h(kr, "toggle_class");
  function WE(r, e) {
    var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
      tmp = _ref.bubbles,
      t = tmp === void 0 ? !1 : tmp,
      tmp1 = _ref.cancelable,
      i = tmp1 === void 0 ? !1 : tmp1;
    var n = document.createEvent("CustomEvent");
    return n.initCustomEvent(r, t, i, e), n;
  }
  h(WE, "custom_event");
  var gn;
  function mn(r) {
    gn = r;
  }
  h(mn, "set_current_component");
  function Um() {
    if (!gn) throw new Error("Function called outside component initialization");
    return gn;
  }
  h(Um, "get_current_component");
  function ka(r) {
    Um().$$.on_mount.push(r);
  }
  h(ka, "onMount");
  function Wi() {
    var r = Um();
    return function (e, t) {
      var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
        tmp = _ref.cancelable,
        i = tmp === void 0 ? !1 : tmp;
      var n = r.$$.callbacks[e];
      if (n) {
        var s = WE(e, t, { cancelable: i });
        return (
          n.slice().forEach((o) => {
            o.call(r, s);
          }),
          !s.defaultPrevented
        );
      }
      return !0;
    };
  }
  h(Wi, "createEventDispatcher");
  var pn = [];
  var X = [],
    Gs = [],
    Ca = [],
    jE = Promise.resolve(),
    Aa = !1;
  function HE() {
    Aa || ((Aa = !0), jE.then(Ym));
  }
  h(HE, "schedule_update");
  function Ea(r) {
    Gs.push(r);
  }
  h(Ea, "add_render_callback");
  function J(r) {
    Ca.push(r);
  }
  h(J, "add_flush_callback");
  var ya = new Set(),
    Ys = 0;
  function Ym() {
    var r = gn;
    do {
      for (; Ys < pn.length; ) {
        var e = pn[Ys];
        Ys++, mn(e), UE(e.$$);
      }
      for (mn(null), pn.length = 0, Ys = 0; X.length; ) X.pop()();
      for (var e1 = 0; e1 < Gs.length; e1 += 1) {
        var t = Gs[e1];
        ya.has(t) || (ya.add(t), t());
      }
      Gs.length = 0;
    } while (pn.length);
    for (; Ca.length; ) Ca.pop()();
    (Aa = !1), ya.clear(), mn(r);
  }
  h(Ym, "flush");
  function UE(r) {
    if (r.fragment !== null) {
      r.update(), It(r.before_update);
      var e = r.dirty;
      (r.dirty = [-1]), r.fragment && r.fragment.p(r.ctx, e), r.after_update.forEach(Ea);
    }
  }
  h(UE, "update");
  var Ks = new Set(),
    zi;
  function ri() {
    zi = { r: 0, c: [], p: zi };
  }
  h(ri, "group_outros");
  function ni() {
    zi.r || It(zi.c), (zi = zi.p);
  }
  h(ni, "check_outros");
  function x(r, e) {
    r && r.i && (Ks.delete(r), r.i(e));
  }
  h(x, "transition_in");
  function S(r, e, t, i) {
    if (r && r.o) {
      if (Ks.has(r)) return;
      Ks.add(r),
        zi.c.push(() => {
          Ks.delete(r), i && (t && r.d(1), i());
        }),
        r.o(e);
    } else i && i();
  }
  h(S, "transition_out");
  var hS = typeof window < "u" ? window : typeof globalThis < "u" ? globalThis : global;
  function Z(r, e, t) {
    var i = r.$$.props[e];
    i !== void 0 && ((r.$$.bound[i] = t), t(r.$$.ctx[i]));
  }
  h(Z, "bind");
  function P(r) {
    r && r.c();
  }
  h(P, "create_component");
  function M(r, e, t, i) {
    var _r_$$ = r.$$,
      n = _r_$$.fragment,
      s = _r_$$.after_update;
    n && n.m(e, t),
      i ||
        Ea(() => {
          var o = r.$$.on_mount.map(va).filter(Xs);
          r.$$.on_destroy ? r.$$.on_destroy.push(...o) : It(o), (r.$$.on_mount = []);
        }),
      s.forEach(Ea);
  }
  h(M, "mount_component");
  function $(r, e) {
    var t = r.$$;
    t.fragment !== null && (It(t.on_destroy), t.fragment && t.fragment.d(e), (t.on_destroy = t.fragment = null), (t.ctx = []));
  }
  h($, "destroy_component");
  function YE(r, e) {
    r.$$.dirty[0] === -1 && (pn.push(r), HE(), r.$$.dirty.fill(0)), (r.$$.dirty[(e / 31) | 0] |= 1 << e % 31);
  }
  h(YE, "make_dirty");
  function se(r, e, t, i, n, s, o) {
    var u = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [-1];
    var l = gn;
    mn(r);
    var a = (r.$$ = { fragment: null, ctx: [], props: s, update: Se, not_equal: n, bound: Vm(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(e.context || (l ? l.$$.context : [])), callbacks: Vm(), dirty: u, skip_bound: !1, root: e.target || l.$$.root });
    o && o(a.root);
    var c = !1;
    if (
      ((a.ctx = t
        ? t(r, e.props || {}, function (f, d) {
            for (var _len = arguments.length, p = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
              p[_key - 2] = arguments[_key];
            }
            var m = p.length ? p[0] : d;
            return a.ctx && n(a.ctx[f], (a.ctx[f] = m)) && (!a.skip_bound && a.bound[f] && a.bound[f](m), c && YE(r, f)), d;
          })
        : []),
      a.update(),
      (c = !0),
      It(a.before_update),
      (a.fragment = i ? i(a.ctx) : !1),
      e.target)
    ) {
      if (e.hydrate) {
        NE();
        var f = zE(e.target);
        a.fragment && a.fragment.l(f), f.forEach(y);
      } else a.fragment && a.fragment.c();
      e.intro && x(r.$$.fragment), M(r, e.target, e.anchor, e.customElement), VE(), Ym();
    }
    mn(l);
  }
  h(se, "init");
  var GE;
  typeof HTMLElement == "function" &&
    (GE = h(
      class extends HTMLElement {
        connectedCallback() {
          var _this_$$ = this.$$,
            r = _this_$$.on_mount;
          this.$$.on_disconnect = r.map(va).filter(Xs);
          for (var e in this.$$.slotted) this.appendChild(this.$$.slotted[e]);
        }
        attributeChangedCallback(r, e, t) {
          this[r] = t;
        }
        disconnectedCallback() {
          It(this.$$.on_disconnect);
        }
        $destroy() {
          $(this, 1), (this.$destroy = Se);
        }
        $on(r, e) {
          if (!Xs(e)) return Se;
          var t = this.$$.callbacks[r] || (this.$$.callbacks[r] = []);
          return (
            t.push(e),
            () => {
              var i = t.indexOf(e);
              i !== -1 && t.splice(i, 1);
            }
          );
        }
        $set(r) {
          this.$$set && !zm(r) && ((this.$$.skip_bound = !0), this.$$set(r), (this.$$.skip_bound = !1));
        }
        constructor() {
          super(), this.attachShadow({ mode: "open" });
        }
      },
      "SvelteElement"
    ));
  var re = class re {
    $destroy() {
      $(this, 1), (this.$destroy = Se);
    }
    $on(e, t) {
      if (!Xs(t)) return Se;
      var i = this.$$.callbacks[e] || (this.$$.callbacks[e] = []);
      return (
        i.push(t),
        () => {
          var n = i.indexOf(t);
          n !== -1 && i.splice(n, 1);
        }
      );
    }
    $set(e) {
      this.$$set && !zm(e) && ((this.$$.skip_bound = !0), this.$$set(e), (this.$$.skip_bound = !1));
    }
  };
  h(re, "SvelteComponent");
  var Js = class Js {
    constructor(ref) {
      var e = ref === void 0 ? [] : ref;
      this.children = e;
      this.type = "root";
    }
  };
  h(Js, "RootNode");
  var ji = class ji {
    constructor(e, t) {
      this.parent = e;
      this.text = t;
      this.type = "text";
      e.children.push(this);
    }
  };
  h(ji, "TextNode");
  var bn = class bn {
    constructor(e) {
      this.parent = e;
      this.type = "block";
      this.command = "";
      e.children.push(this);
    }
  };
  h(bn, "BlockNode");
  var Zs = class Zs {
    constructor(e, t, i, n) {
      this.parent = e;
      this.raw = t;
      this.braces = i;
      this.parens = n;
      this.type = "comment";
      e.block = this;
    }
  };
  h(Zs, "CommentNode");
  var eo = class eo {
    constructor(e, t, i, n) {
      this.parent = e;
      this.raw = t;
      this.braces = i;
      this.parens = n;
      this.type = "preamble";
      e.block = this;
    }
  };
  h(eo, "PreambleNode");
  var to = class to {
    constructor(e, t, i, n) {
      this.parent = e;
      this.raw = t;
      this.braces = i;
      this.parens = n;
      this.type = "string";
      e.block = this;
    }
  };
  h(to, "StringNode");
  var io = class io {
    constructor(e, t) {
      this.parent = e;
      this.wrapType = t;
      this.type = "entry";
      (e.block = this), (this.fields = []);
    }
  };
  h(io, "EntryNode");
  var yi = class yi {
    constructor(e, ref) {
      var t = ref === void 0 ? "" : ref;
      this.parent = e;
      this.name = t;
      this.type = "field";
      this.value = new ro(this);
    }
  };
  h(yi, "FieldNode");
  var ro = class ro {
    constructor(e) {
      this.parent = e;
      this.type = "concat";
      this.canConsumeValue = !0;
      this.concat = [];
    }
  };
  h(ro, "ConcatNode");
  var no = class no {
    constructor(e, t) {
      this.parent = e;
      this.value = t;
      this.type = "literal";
      e.concat.push(this);
    }
  };
  h(no, "LiteralNode");
  var so = class so {
    constructor(e) {
      this.parent = e;
      this.type = "braced";
      this.value = "";
      this.depth = 0;
      e.concat.push(this);
    }
  };
  h(so, "BracedNode");
  var oo = class oo {
    constructor(e) {
      this.parent = e;
      this.type = "quoted";
      this.value = "";
      this.depth = 0;
      e.concat.push(this);
    }
  };
  h(oo, "QuotedNode");
  function Km(r) {
    var s;
    var e = new Js(),
      t = e,
      i = 1,
      n = 0;
    for (var o = 0; o < r.length; o++) {
      var u = r[o],
        l = r[o - 1];
      switch ((u === "\n" && (i++, (n = 0)), n++, t.type)) {
        case "root": {
          t = u === "@" ? new bn(t) : new ji(t, u);
          break;
        }
        case "text": {
          u === "@" && /[\s\r\n}]/.test(l) ? (t = new bn(t.parent)) : (t.text += u);
          break;
        }
        case "block": {
          if (u === "@") {
            var a = t.parent.children[t.parent.children.length - 2];
            (a == null ? void 0 : a.type) === "text" ? (a.text += "@" + t.command) : (t.parent.children.pop(), new ji(t.parent, "@" + t.command), t.parent.children.push(t)), (t.command = "");
          } else if (u === "{" || u === "(") {
            var a1 = t.command.trim();
            if (a1 === "" || /\s/.test(a1)) t.parent.children.pop(), (t = new ji(t.parent, "@" + t.command + u));
            else {
              t.command = a1;
              var c = t.command.toLowerCase(),
                _ref = _slicedToArray(u === "{" ? [1, 0] : [0, 1], 2),
                f = _ref[0],
                d = _ref[1],
                p = "@" + c + u;
              switch (c) {
                case "string":
                  t = new to(t, p, f, d);
                  break;
                case "preamble":
                  t = new eo(t, p, f, d);
                  break;
                case "comment":
                  t = new Zs(t, p, f, d);
                  break;
                default:
                  t = new io(t, u);
                  break;
              }
            }
          } else u.match(/[=#,})[\]]/) ? (t.parent.children.pop(), (t = new ji(t.parent, "@" + t.command + u))) : (t.command += u);
          break;
        }
        case "comment":
        case "string":
        case "preamble":
          u === "{" ? t.braces++ : u === "}" ? t.braces-- : u === "(" ? t.parens++ : u === ")" && t.parens--, (t.raw += u), t.braces === 0 && t.parens === 0 && (t = t.parent.parent);
          break;
        case "entry": {
          if (Qs(u)) t.key && (t.keyEnded = !0);
          else if (u === ",") t = new yi(t);
          else if ((t.wrapType === "{" && u === "}") || (t.wrapType === "(" && u === ")")) t = t.parent.parent;
          else if (u === "=" && t.key && Gm(t.key)) {
            var a2 = new yi(t, t.key);
            t.fields.push(a2), (t.key = void 0), (t = a2.value);
          } else {
            if (t.keyEnded) throw new st(r, t, o, i, n, "The entry key cannot contain whitespace");
            if (KE(u)) t.key = ((s = t.key) != null ? s : "") + u;
            else throw new st(r, t, o, i, n, "The entry key cannot contain the character (".concat(u, ")"));
          }
          break;
        }
        case "field": {
          if (u === "}" || u === ")") (t.name = t.name.trim()), (t = t.parent.parent.parent);
          else if (u === "=") (t.name = t.name.trim()), (t = t.value);
          else if (u === ",") (t.name = t.name.trim()), (t = new yi(t.parent));
          else if (Gm(u)) t.name ? (t.name += u) : Qs(u) || (t.parent.fields.push(t), (t.name = u));
          else throw new st(r, t, o, i, n);
          break;
        }
        case "concat": {
          if (Qs(u)) break;
          if (t.canConsumeValue) {
            if (/[#=,}()[\]]/.test(u)) throw new st(r, t, o, i, n);
            (t.canConsumeValue = !1), u === "{" ? (t = new so(t)) : u === '"' ? (t = new oo(t)) : (t = new no(t, u));
          } else if (u === ",") t = new yi(t.parent.parent);
          else if (u === "}" || u === ")") t = t.parent.parent.parent.parent;
          else if (u === "#") t.canConsumeValue = !0;
          else throw new st(r, t, o, i, n);
          break;
        }
        case "literal":
          Qs(u) ? (t = t.parent) : u === "," ? (t = new yi(t.parent.parent.parent)) : u === "}" ? (t = t.parent.parent.parent.parent.parent) : u === "#" ? ((t = t.parent), (t.canConsumeValue = !0)) : (t.value += u);
          break;
        case "braced":
          if (u === "}" && t.depth === 0) {
            t = t.parent;
            break;
          } else u === "{" ? t.depth++ : u === "}" && t.depth--;
          t.value += u;
          break;
        case "quoted":
          if (u === '"' && t.depth === 0) {
            t = t.parent;
            break;
          } else if (u === "{") t.depth++;
          else if (u === "}" && (t.depth--, t.depth < 0)) throw new st(r, t, o, i, n);
          t.value += u;
          break;
      }
    }
    return e;
  }
  h(Km, "generateAST");
  function Qs(r) {
    return /^[ \t\n\r]*$/.test(r);
  }
  h(Qs, "isWhitespace");
  function KE(r) {
    return !/[#%{}~$,]/.test(r);
  }
  h(KE, "isValidKeyCharacter");
  function Gm(r) {
    return !/[=,{}()[\]]/.test(r);
  }
  h(Gm, "isValidFieldName");
  var st = class st extends Error {
    constructor(t, i, n, s, o, u) {
      super("Line ".concat(s, ":").concat(o, ": Syntax Error in ").concat(i.type, " (").concat(u, ")\n") + t.slice(Math.max(0, n - 20), n) + ">>" + t[n] + "<<" + t.slice(n + 1, n + 20));
      this.node = i;
      this.line = s;
      this.column = o;
      this.hint = u;
      (this.name = "Syntax Error"), (this.char = t[n]);
    }
  };
  h(st, "BibTeXSyntaxError");
  var si = class si1 {
    constructor(e, t, ref) {
      var i = ref === void 0 ? [] : ref;
      this.kind = e;
      this.parent = t;
      this.children = i;
      this.type = "block";
      t instanceof si ? t.children.push(this) : t instanceof Fn && t.args.push(this);
    }
  };
  h(si, "BlockNode");
  var uo = class uo {
    constructor(e, ref) {
      var t = ref === void 0 ? "" : ref;
      this.parent = e;
      this.text = t;
      this.type = "text";
      e.children.push(this);
    }
  };
  h(uo, "TextNode");
  var Fn = class Fn {
    constructor(e, ref, ref1) {
      var t = ref === void 0 ? "" : ref,
        i = ref1 === void 0 ? [] : ref1;
      this.parent = e;
      this.command = t;
      this.args = i;
      this.type = "command";
      e.children.push(this);
    }
  };
  h(Fn, "CommandNode");
  function lo(r) {
    var e = new si("root"),
      t = e;
    for (var i = 0; i < r.length; i++) {
      var n = r[i];
      switch (t.type) {
        case "block": {
          n === "\\" ? (t = new Fn(t)) : n === "{" ? (t = new si("curly", t)) : ((n === "}" && t.kind === "curly") || (n === "]" && t.kind === "square")) && t.parent ? (t = t.parent) : (t = new uo(t, n));
          break;
        }
        case "text": {
          n === "\\" || n === "{" || (n === "}" && t.parent.kind === "curly") || (n === "]" && t.parent.kind === "square") ? ((t = t.parent), i--) : (n === "}" && console.log(t.parent), (t.text += n));
          break;
        }
        case "command":
          n === "{" ? (t = new si("curly", t)) : n === "[" ? (t = new si("square", t)) : t.args.length === 0 ? (t.command += n) : ((t = t.parent), i--);
      }
    }
    return e;
  }
  h(lo, "parseLaTeX");
  function ao(r) {
    return wa(r);
  }
  h(ao, "stringifyLaTeX");
  function wa(r) {
    var e = r.children
      .map((t) => {
        switch (t.type) {
          case "block":
            return wa(t);
          case "command":
            return XE(t);
          case "text":
            return t.text;
        }
      })
      .join("");
    switch (r.kind) {
      case "root":
        return e;
      case "curly":
        return "{" + e + "}";
      case "square":
        return "[" + e + "]";
    }
  }
  h(wa, "stringifyBlock");
  function XE(r) {
    return "\\" + r.command + r.args.map(wa).join("");
  }
  h(XE, "stringifyCommand");
  function yn(r) {
    var e = Jh(Qh({}, r), { children: [] });
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.type === "block" && t.kind === "curly") {
          var i = yn(t);
          e.children.push(...i.children);
        } else e.children.push(t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(yn, "flattenLaTeX");
  var Xm = new Map([
    ["0023", "\\#"],
    ["0024", "\\$"],
    ["0025", "\\%"],
    ["0026", "\\&"],
    ["0027", "'"],
    ["0040", "\\@"],
    ["002a", "\\textasteriskcentered"],
    ["005f", "\\_"],
    ["007c", "\\vert{}"],
    ["00a0", "~"],
    ["00a1", "\\textexclamdown{}"],
    ["00a2", "\\textcent{}"],
    ["00a3", "\\textsterling{}"],
    ["00a4", "\\textcurrency{}"],
    ["00a5", "\\textyen{}"],
    ["00a6", "\\textbrokenbar{}"],
    ["00a7", "\\textsection{}"],
    ["00a8", "\\textasciidieresis{}"],
    ["00a9", "\\textcopyright{}"],
    ["00aa", "\\textordfeminine{}"],
    ["00ab", "\\guillemotleft{}"],
    ["00ac", "\\lnot{}"],
    ["00ad", "\\-"],
    ["00ae", "\\textregistered{}"],
    ["00af", "\\textasciimacron{}"],
    ["00b0", "\\textdegree{}"],
    ["00b1", "\\pm{}"],
    ["00b2", "\\ensuremath{^2}"],
    ["00b3", "\\ensuremath{^3}"],
    ["00b4", "\\textasciiacute{}"],
    ["00b5", "\\mathrm{\\mu}"],
    ["00b6", "\\textparagraph{}"],
    ["00b7", "\\cdot{}"],
    ["00b8", "\\c{}"],
    ["00b9", "\\ensuremath{^1}"],
    ["00ba", "\\textordmasculine{}"],
    ["00bb", "\\guillemotright{}"],
    ["00bc", "\\textonequarter{}"],
    ["00bd", "\\textonehalf{}"],
    ["00be", "\\textthreequarters{}"],
    ["00bf", "\\textquestiondown{}"],
    ["00c0", "\\`{A}"],
    ["00c1", "\\'{A}"],
    ["00c2", "\\^{A}"],
    ["00c3", "\\~{A}"],
    ["00c4", '\\"{A}'],
    ["00c5", "\\AA{}"],
    ["00c6", "\\AE{}"],
    ["00c7", "\\c{C}"],
    ["00c8", "\\`{E}"],
    ["00c9", "\\'{E}"],
    ["00ca", "\\^{E}"],
    ["00cb", '\\"{E}'],
    ["00cc", "\\`{I}"],
    ["00cd", "\\'{I}"],
    ["00ce", "\\^{I}"],
    ["00cf", '\\"{I}'],
    ["00d0", "\\DH{}"],
    ["00d1", "\\~{N}"],
    ["00d2", "\\`{O}"],
    ["00d3", "\\'{O}"],
    ["00d4", "\\^{O}"],
    ["00d5", "\\~{O}"],
    ["00d6", '\\"{O}'],
    ["00d7", "\\texttimes{}"],
    ["00d8", "\\O{}"],
    ["00d9", "\\`{U}"],
    ["00da", "\\'{U}"],
    ["00db", "\\^{U}"],
    ["00dc", '\\"{U}'],
    ["00dd", "\\'{Y}"],
    ["00de", "\\TH{}"],
    ["00df", "\\ss{}"],
    ["00e0", "\\`{a}"],
    ["00e1", "\\'{a}"],
    ["00e2", "\\^{a}"],
    ["00e3", "\\~{a}"],
    ["00e4", '\\"{a}'],
    ["00e5", "\\aa{}"],
    ["00e6", "\\ae{}"],
    ["00e7", "\\c{c}"],
    ["00e8", "\\`{e}"],
    ["00e9", "\\'{e}"],
    ["00ea", "\\^{e}"],
    ["00eb", '\\"{e}'],
    ["00ec", "\\`{\\i}"],
    ["00ed", "\\'{\\i}"],
    ["00ee", "\\^{\\i}"],
    ["00ef", '\\"{\\i}'],
    ["00f0", "\\dh{}"],
    ["00f1", "\\~{n}"],
    ["00f2", "\\`{o}"],
    ["00f3", "\\'{o}"],
    ["00f4", "\\^{o}"],
    ["00f5", "\\~{o}"],
    ["00f6", '\\"{o}'],
    ["00f7", "\\div{}"],
    ["00f8", "\\o{}"],
    ["00f9", "\\`{u}"],
    ["00fa", "\\'{u}"],
    ["00fb", "\\^{u}"],
    ["00fc", '\\"{u}'],
    ["00fd", "\\'{y}"],
    ["00fe", "\\th{}"],
    ["00ff", '\\"{y}'],
    ["0100", "\\={A}"],
    ["0101", "\\={a}"],
    ["0102", "\\u{A}"],
    ["0103", "\\u{a}"],
    ["0104", "\\k{A}"],
    ["0105", "\\k{a}"],
    ["0106", "\\'{C}"],
    ["0107", "\\'{c}"],
    ["0108", "\\^{C}"],
    ["0109", "\\^{c}"],
    ["010a", "\\.{C}"],
    ["010b", "\\.{c}"],
    ["010c", "\\v{C}"],
    ["010d", "\\v{c}"],
    ["010e", "\\v{D}"],
    ["010f", "\\v{d}"],
    ["0110", "\\DJ{}"],
    ["0111", "\\dj{}"],
    ["0112", "\\={E}"],
    ["0113", "\\={e}"],
    ["0114", "\\u{E}"],
    ["0115", "\\u{e}"],
    ["0116", "\\.{E}"],
    ["0117", "\\.{e}"],
    ["0118", "\\k{E}"],
    ["0119", "\\k{e}"],
    ["011a", "\\v{E}"],
    ["011b", "\\v{e}"],
    ["011c", "\\^{G}"],
    ["011d", "\\^{g}"],
    ["011e", "\\u{G}"],
    ["011f", "\\u{g}"],
    ["0120", "\\.{G}"],
    ["0121", "\\.{g}"],
    ["0122", "\\c{G}"],
    ["0123", "\\c{g}"],
    ["0124", "\\^{H}"],
    ["0125", "\\^{h}"],
    ["0126", "{\\fontencoding{LELA}\\selectfont\\char40}"],
    ["0127", "\\Elzxh{}"],
    ["0128", "\\~{I}"],
    ["0129", "\\~{\\i}"],
    ["012a", "\\={I}"],
    ["012b", "\\={\\i}"],
    ["012c", "\\u{I}"],
    ["012d", "\\u{\\i}"],
    ["012e", "\\k{I}"],
    ["012f", "\\k{i}"],
    ["0130", "\\.{I}"],
    ["0131", "\\i{}"],
    ["0132", "IJ"],
    ["0133", "ij"],
    ["0134", "\\^{J}"],
    ["0135", "\\^{\\j}"],
    ["0136", "\\c{K}"],
    ["0137", "\\c{k}"],
    ["0138", "{\\fontencoding{LELA}\\selectfont\\char91}"],
    ["0139", "\\'{L}"],
    ["013a", "\\'{l}"],
    ["013b", "\\c{L}"],
    ["013c", "\\c{l}"],
    ["013d", "\\v{L}"],
    ["013e", "\\v{l}"],
    ["013f", "{\\fontencoding{LELA}\\selectfont\\char201}"],
    ["0140", "{\\fontencoding{LELA}\\selectfont\\char202}"],
    ["0141", "\\L{}"],
    ["0142", "\\l{}"],
    ["0143", "\\'{N}"],
    ["0144", "\\'{n}"],
    ["0145", "\\c{N}"],
    ["0146", "\\c{n}"],
    ["0147", "\\v{N}"],
    ["0148", "\\v{n}"],
    ["0149", "'n"],
    ["014a", "\\NG{}"],
    ["014b", "\\ng{}"],
    ["014c", "\\={O}"],
    ["014d", "\\={o}"],
    ["014e", "\\u{O}"],
    ["014f", "\\u{o}"],
    ["0150", "\\H{O}"],
    ["0151", "\\H{o}"],
    ["0152", "\\OE{}"],
    ["0153", "\\oe{}"],
    ["0154", "\\'{R}"],
    ["0155", "\\'{r}"],
    ["0156", "\\c{R}"],
    ["0157", "\\c{r}"],
    ["0158", "\\v{R}"],
    ["0159", "\\v{r}"],
    ["015a", "\\'{S}"],
    ["015b", "\\'{s}"],
    ["015c", "\\^{S}"],
    ["015d", "\\^{s}"],
    ["015e", "\\c{S}"],
    ["015f", "\\c{s}"],
    ["0160", "\\v{S}"],
    ["0161", "\\v{s}"],
    ["0162", "\\c{T}"],
    ["0163", "\\c{t}"],
    ["0164", "\\v{T}"],
    ["0165", "\\v{t}"],
    ["0166", "{\\fontencoding{LELA}\\selectfont\\char47}"],
    ["0167", "{\\fontencoding{LELA}\\selectfont\\char63}"],
    ["0168", "\\~{U}"],
    ["0169", "\\~{u}"],
    ["016a", "\\={U}"],
    ["016b", "\\={u}"],
    ["016c", "\\u{U}"],
    ["016d", "\\u{u}"],
    ["016e", "\\r{U}"],
    ["016f", "\\r{u}"],
    ["0170", "\\H{U}"],
    ["0171", "\\H{u}"],
    ["0172", "\\k{U}"],
    ["0173", "\\k{u}"],
    ["0174", "\\^{W}"],
    ["0175", "\\^{w}"],
    ["0176", "\\^{Y}"],
    ["0177", "\\^{y}"],
    ["0178", '\\"{Y}'],
    ["0179", "\\'{Z}"],
    ["017a", "\\'{z}"],
    ["017b", "\\.{Z}"],
    ["017c", "\\.{z}"],
    ["017d", "\\v{Z}"],
    ["017e", "\\v{z}"],
    ["0195", "\\texthvlig{}"],
    ["019e", "\\textnrleg{}"],
    ["01aa", "\\eth{}"],
    ["01ba", "{\\fontencoding{LELA}\\selectfont\\char195}"],
    ["01c2", "\\textdoublepipe{}"],
    ["01f5", "\\'{g}"],
    ["0250", "\\Elztrna{}"],
    ["0252", "\\Elztrnsa{}"],
    ["0254", "\\Elzopeno{}"],
    ["0256", "\\Elzrtld{}"],
    ["0258", "{\\fontencoding{LEIP}\\selectfont\\char61}"],
    ["0259", "\\Elzschwa{}"],
    ["025b", "\\varepsilon{}"],
    ["0263", "\\Elzpgamma{}"],
    ["0264", "\\Elzpbgam{}"],
    ["0265", "\\Elztrnh{}"],
    ["026c", "\\Elzbtdl{}"],
    ["026d", "\\Elzrtll{}"],
    ["026f", "\\Elztrnm{}"],
    ["0270", "\\Elztrnmlr{}"],
    ["0271", "\\Elzltlmr{}"],
    ["0272", "\\Elzltln{}"],
    ["0273", "\\Elzrtln{}"],
    ["0277", "\\Elzclomeg{}"],
    ["0278", "\\textphi{}"],
    ["0279", "\\Elztrnr{}"],
    ["027a", "\\Elztrnrl{}"],
    ["027b", "\\Elzrttrnr{}"],
    ["027c", "\\Elzrl{}"],
    ["027d", "\\Elzrtlr{}"],
    ["027e", "\\Elzfhr{}"],
    ["027f", "{\\fontencoding{LEIP}\\selectfont\\char202}"],
    ["0282", "\\Elzrtls{}"],
    ["0283", "\\Elzesh{}"],
    ["0287", "\\Elztrnt{}"],
    ["0288", "\\Elzrtlt{}"],
    ["028a", "\\Elzpupsil{}"],
    ["028b", "\\Elzpscrv{}"],
    ["028c", "\\Elzinvv{}"],
    ["028d", "\\Elzinvw{}"],
    ["028e", "\\Elztrny{}"],
    ["0290", "\\Elzrtlz{}"],
    ["0292", "\\Elzyogh{}"],
    ["0294", "\\Elzglst{}"],
    ["0295", "\\Elzreglst{}"],
    ["0296", "\\Elzinglst{}"],
    ["029e", "\\textturnk{}"],
    ["02a4", "\\Elzdyogh{}"],
    ["02a7", "\\Elztesh{}"],
    ["02c7", "\\textasciicaron{}"],
    ["02c8", "\\Elzverts{}"],
    ["02cc", "\\Elzverti{}"],
    ["02d0", "\\Elzlmrk{}"],
    ["02d1", "\\Elzhlmrk{}"],
    ["02d2", "\\Elzsbrhr{}"],
    ["02d3", "\\Elzsblhr{}"],
    ["02d4", "\\Elzrais{}"],
    ["02d5", "\\Elzlow{}"],
    ["02d8", "\\textasciibreve{}"],
    ["02d9", "\\textperiodcentered{}"],
    ["02da", "\\r{}"],
    ["02db", "\\k{}"],
    ["02dc", "\\texttildelow{}"],
    ["02dd", "\\H{}"],
    ["02e5", "\\tone{55}"],
    ["02e6", "\\tone{44}"],
    ["02e7", "\\tone{33}"],
    ["02e8", "\\tone{22}"],
    ["02e9", "\\tone{11}"],
    ["0300", "\\`"],
    ["0301", "\\'"],
    ["0302", "\\^"],
    ["0303", "\\~"],
    ["0304", "\\="],
    ["0306", "\\u"],
    ["0307", "\\."],
    ["0308", '\\"'],
    ["030a", "\\r"],
    ["030b", "\\H"],
    ["030c", "\\v"],
    ["030f", "\\cyrchar\\C"],
    ["0311", "{\\fontencoding{LECO}\\selectfont\\char177}"],
    ["0318", "{\\fontencoding{LECO}\\selectfont\\char184}"],
    ["0319", "{\\fontencoding{LECO}\\selectfont\\char185}"],
    ["0321", "\\Elzpalh{}"],
    ["0322", "\\Elzrh{}"],
    ["0327", "\\c"],
    ["0328", "\\k"],
    ["032a", "\\Elzsbbrg{}"],
    ["032b", "{\\fontencoding{LECO}\\selectfont\\char203}"],
    ["032f", "{\\fontencoding{LECO}\\selectfont\\char207}"],
    ["0335", "\\Elzxl{}"],
    ["0336", "\\Elzbar{}"],
    ["0337", "{\\fontencoding{LECO}\\selectfont\\char215}"],
    ["0338", "{\\fontencoding{LECO}\\selectfont\\char216}"],
    ["033a", "{\\fontencoding{LECO}\\selectfont\\char218}"],
    ["033b", "{\\fontencoding{LECO}\\selectfont\\char219}"],
    ["033c", "{\\fontencoding{LECO}\\selectfont\\char220}"],
    ["033d", "{\\fontencoding{LECO}\\selectfont\\char221}"],
    ["0361", "{\\fontencoding{LECO}\\selectfont\\char225}"],
    ["0386", "\\'{A}"],
    ["0388", "\\'{E}"],
    ["0389", "\\'{H}"],
    ["038a", "\\'{}{I}"],
    ["038c", "\\'{}O"],
    ["038e", "\\mathrm{'Y}"],
    ["038f", "\\mathrm{'\\Omega}"],
    ["0390", "\\acute{\\ddot{\\iota}}"],
    ["0391", "\\ensuremath{\\Alpha}"],
    ["0392", "\\ensuremath{\\Beta}"],
    ["0393", "\\ensuremath{\\Gamma}"],
    ["0394", "\\ensuremath{\\Delta}"],
    ["0395", "\\ensuremath{\\Epsilon}"],
    ["0396", "\\ensuremath{\\Zeta}"],
    ["0397", "\\ensuremath{\\Eta}"],
    ["0398", "\\ensuremath{\\Theta}"],
    ["0399", "\\ensuremath{\\Iota}"],
    ["039a", "\\ensuremath{\\Kappa}"],
    ["039b", "\\ensuremath{\\Lambda}"],
    ["039e", "\\ensuremath{\\Xi}"],
    ["03a0", "\\ensuremath{\\Pi}"],
    ["03a1", "\\ensuremath{\\Rho}"],
    ["03a3", "\\ensuremath{\\Sigma}"],
    ["03a4", "\\ensuremath{\\Tau}"],
    ["03a5", "\\ensuremath{\\Upsilon}"],
    ["03a6", "\\ensuremath{\\Phi}"],
    ["03a7", "\\ensuremath{\\Chi}"],
    ["03a8", "\\ensuremath{\\Psi}"],
    ["03a9", "\\ensuremath{\\Omega}"],
    ["03aa", "\\mathrm{\\ddot{I}}"],
    ["03ab", "\\mathrm{\\ddot{Y}}"],
    ["03ac", "\\'{$\\alpha$}"],
    ["03ad", "\\acute{\\epsilon}"],
    ["03ae", "\\acute{\\eta}"],
    ["03af", "\\acute{\\iota}"],
    ["03b0", "\\acute{\\ddot{\\upsilon}}"],
    ["03b1", "\\ensuremath{\\alpha}"],
    ["03b2", "\\ensuremath{\\beta}"],
    ["03b3", "\\ensuremath{\\gamma}"],
    ["03b4", "\\ensuremath{\\delta}"],
    ["03b5", "\\ensuremath{\\epsilon}"],
    ["03b6", "\\ensuremath{\\zeta}"],
    ["03b7", "\\ensuremath{\\eta}"],
    ["03b8", "\\texttheta{}"],
    ["03b9", "\\ensuremath{\\iota}"],
    ["03ba", "\\ensuremath{\\kappa}"],
    ["03bb", "\\ensuremath{\\lambda}"],
    ["03bc", "\\ensuremath{\\mu}"],
    ["03bd", "\\ensuremath{\\nu}"],
    ["03be", "\\ensuremath{\\xi}"],
    ["03c0", "\\ensuremath{\\pi}"],
    ["03c1", "\\ensuremath{\\rho}"],
    ["03c2", "\\ensuremath{\\varsigma}"],
    ["03c3", "\\ensuremath{\\sigma}"],
    ["03c4", "\\ensuremath{\\tau}"],
    ["03c5", "\\ensuremath{\\upsilon}"],
    ["03c6", "\\ensuremath{\\varphi}"],
    ["03c7", "\\ensuremath{\\chi}"],
    ["03c8", "\\ensuremath{\\psi}"],
    ["03c9", "\\ensuremath{\\omega}"],
    ["03ca", "\\ensuremath{\\ddot{\\iota}}"],
    ["03cb", "\\ensuremath{\\ddot{\\upsilon}}"],
    ["03cc", "\\'{o}"],
    ["03cd", "\\acute{\\upsilon}"],
    ["03ce", "\\acute{\\omega}"],
    ["03d0", "\\Pisymbol{ppi022}{87}"],
    ["03d1", "\\textvartheta{}"],
    ["03d2", "\\ensuremath{\\Upsilon}"],
    ["03d5", "\\ensuremath{\\phi}"],
    ["03d6", "\\ensuremath{\\varpi}"],
    ["03da", "\\Stigma{}"],
    ["03dc", "\\Digamma{}"],
    ["03dd", "\\digamma{}"],
    ["03de", "\\Koppa{}"],
    ["03e0", "\\Sampi{}"],
    ["03f0", "\\varkappa{}"],
    ["03f1", "\\varrho{}"],
    ["03f4", "\\textTheta{}"],
    ["03f6", "\\backepsilon{}"],
    ["0401", "\\cyrchar\\CYRYO{}"],
    ["0402", "\\cyrchar\\CYRDJE{}"],
    ["0403", "\\cyrchar{\\'\\CYRG}"],
    ["0404", "\\cyrchar\\CYRIE{}"],
    ["0405", "\\cyrchar\\CYRDZE{}"],
    ["0406", "\\cyrchar\\CYRII{}"],
    ["0407", "\\cyrchar\\CYRYI{}"],
    ["0408", "\\cyrchar\\CYRJE{}"],
    ["0409", "\\cyrchar\\CYRLJE{}"],
    ["040a", "\\cyrchar\\CYRNJE{}"],
    ["040b", "\\cyrchar\\CYRTSHE{}"],
    ["040c", "\\cyrchar{\\'\\CYRK}"],
    ["040e", "\\cyrchar\\CYRUSHRT{}"],
    ["040f", "\\cyrchar\\CYRDZHE{}"],
    ["0410", "\\cyrchar\\CYRA{}"],
    ["0411", "\\cyrchar\\CYRB{}"],
    ["0412", "\\cyrchar\\CYRV{}"],
    ["0413", "\\cyrchar\\CYRG{}"],
    ["0414", "\\cyrchar\\CYRD{}"],
    ["0415", "\\cyrchar\\CYRE{}"],
    ["0416", "\\cyrchar\\CYRZH{}"],
    ["0417", "\\cyrchar\\CYRZ{}"],
    ["0418", "\\cyrchar\\CYRI{}"],
    ["0419", "\\cyrchar\\CYRISHRT{}"],
    ["041a", "\\cyrchar\\CYRK{}"],
    ["041b", "\\cyrchar\\CYRL{}"],
    ["041c", "\\cyrchar\\CYRM{}"],
    ["041d", "\\cyrchar\\CYRN{}"],
    ["041e", "\\cyrchar\\CYRO{}"],
    ["041f", "\\cyrchar\\CYRP{}"],
    ["0420", "\\cyrchar\\CYRR{}"],
    ["0421", "\\cyrchar\\CYRS{}"],
    ["0422", "\\cyrchar\\CYRT{}"],
    ["0423", "\\cyrchar\\CYRU{}"],
    ["0424", "\\cyrchar\\CYRF{}"],
    ["0425", "\\cyrchar\\CYRH{}"],
    ["0426", "\\cyrchar\\CYRC{}"],
    ["0427", "\\cyrchar\\CYRCH{}"],
    ["0428", "\\cyrchar\\CYRSH{}"],
    ["0429", "\\cyrchar\\CYRSHCH{}"],
    ["042a", "\\cyrchar\\CYRHRDSN{}"],
    ["042b", "\\cyrchar\\CYRERY{}"],
    ["042c", "\\cyrchar\\CYRSFTSN{}"],
    ["042d", "\\cyrchar\\CYREREV{}"],
    ["042e", "\\cyrchar\\CYRYU{}"],
    ["042f", "\\cyrchar\\CYRYA{}"],
    ["0430", "\\cyrchar\\cyra{}"],
    ["0431", "\\cyrchar\\cyrb{}"],
    ["0432", "\\cyrchar\\cyrv{}"],
    ["0433", "\\cyrchar\\cyrg{}"],
    ["0434", "\\cyrchar\\cyrd{}"],
    ["0435", "\\cyrchar\\cyre{}"],
    ["0436", "\\cyrchar\\cyrzh{}"],
    ["0437", "\\cyrchar\\cyrz{}"],
    ["0438", "\\cyrchar\\cyri{}"],
    ["0439", "\\cyrchar\\cyrishrt{}"],
    ["043a", "\\cyrchar\\cyrk{}"],
    ["043b", "\\cyrchar\\cyrl{}"],
    ["043c", "\\cyrchar\\cyrm{}"],
    ["043d", "\\cyrchar\\cyrn{}"],
    ["043e", "\\cyrchar\\cyro{}"],
    ["043f", "\\cyrchar\\cyrp{}"],
    ["0440", "\\cyrchar\\cyrr{}"],
    ["0441", "\\cyrchar\\cyrs{}"],
    ["0442", "\\cyrchar\\cyrt{}"],
    ["0443", "\\cyrchar\\cyru{}"],
    ["0444", "\\cyrchar\\cyrf{}"],
    ["0445", "\\cyrchar\\cyrh{}"],
    ["0446", "\\cyrchar\\cyrc{}"],
    ["0447", "\\cyrchar\\cyrch{}"],
    ["0448", "\\cyrchar\\cyrsh{}"],
    ["0449", "\\cyrchar\\cyrshch{}"],
    ["044a", "\\cyrchar\\cyrhrdsn{}"],
    ["044b", "\\cyrchar\\cyrery{}"],
    ["044c", "\\cyrchar\\cyrsftsn{}"],
    ["044d", "\\cyrchar\\cyrerev{}"],
    ["044e", "\\cyrchar\\cyryu{}"],
    ["044f", "\\cyrchar\\cyrya{}"],
    ["0451", "\\cyrchar\\cyryo{}"],
    ["0452", "\\cyrchar\\cyrdje{}"],
    ["0453", "\\cyrchar{\\'\\cyrg}"],
    ["0454", "\\cyrchar\\cyrie{}"],
    ["0455", "\\cyrchar\\cyrdze{}"],
    ["0456", "\\cyrchar\\cyrii{}"],
    ["0457", "\\cyrchar\\cyryi{}"],
    ["0458", "\\cyrchar\\cyrje{}"],
    ["0459", "\\cyrchar\\cyrlje{}"],
    ["045a", "\\cyrchar\\cyrnje{}"],
    ["045b", "\\cyrchar\\cyrtshe{}"],
    ["045c", "\\cyrchar{\\'\\cyrk}"],
    ["045e", "\\cyrchar\\cyrushrt{}"],
    ["045f", "\\cyrchar\\cyrdzhe{}"],
    ["0460", "\\cyrchar\\CYROMEGA{}"],
    ["0461", "\\cyrchar\\cyromega{}"],
    ["0462", "\\cyrchar\\CYRYAT{}"],
    ["0464", "\\cyrchar\\CYRIOTE{}"],
    ["0465", "\\cyrchar\\cyriote{}"],
    ["0466", "\\cyrchar\\CYRLYUS{}"],
    ["0467", "\\cyrchar\\cyrlyus{}"],
    ["0468", "\\cyrchar\\CYRIOTLYUS{}"],
    ["0469", "\\cyrchar\\cyriotlyus{}"],
    ["046a", "\\cyrchar\\CYRBYUS{}"],
    ["046c", "\\cyrchar\\CYRIOTBYUS{}"],
    ["046d", "\\cyrchar\\cyriotbyus{}"],
    ["046e", "\\cyrchar\\CYRKSI{}"],
    ["046f", "\\cyrchar\\cyrksi{}"],
    ["0470", "\\cyrchar\\CYRPSI{}"],
    ["0471", "\\cyrchar\\cyrpsi{}"],
    ["0472", "\\cyrchar\\CYRFITA{}"],
    ["0474", "\\cyrchar\\CYRIZH{}"],
    ["0478", "\\cyrchar\\CYRUK{}"],
    ["0479", "\\cyrchar\\cyruk{}"],
    ["047a", "\\cyrchar\\CYROMEGARND{}"],
    ["047b", "\\cyrchar\\cyromegarnd{}"],
    ["047c", "\\cyrchar\\CYROMEGATITLO{}"],
    ["047d", "\\cyrchar\\cyromegatitlo{}"],
    ["047e", "\\cyrchar\\CYROT{}"],
    ["047f", "\\cyrchar\\cyrot{}"],
    ["0480", "\\cyrchar\\CYRKOPPA{}"],
    ["0481", "\\cyrchar\\cyrkoppa{}"],
    ["0482", "\\cyrchar\\cyrthousands{}"],
    ["0488", "\\cyrchar\\cyrhundredthousands{}"],
    ["0489", "\\cyrchar\\cyrmillions{}"],
    ["048c", "\\cyrchar\\CYRSEMISFTSN{}"],
    ["048d", "\\cyrchar\\cyrsemisftsn{}"],
    ["048e", "\\cyrchar\\CYRRTICK{}"],
    ["048f", "\\cyrchar\\cyrrtick{}"],
    ["0490", "\\cyrchar\\CYRGUP{}"],
    ["0491", "\\cyrchar\\cyrgup{}"],
    ["0492", "\\cyrchar\\CYRGHCRS{}"],
    ["0493", "\\cyrchar\\cyrghcrs{}"],
    ["0494", "\\cyrchar\\CYRGHK{}"],
    ["0495", "\\cyrchar\\cyrghk{}"],
    ["0496", "\\cyrchar\\CYRZHDSC{}"],
    ["0497", "\\cyrchar\\cyrzhdsc{}"],
    ["0498", "\\cyrchar\\CYRZDSC{}"],
    ["0499", "\\cyrchar\\cyrzdsc{}"],
    ["049a", "\\cyrchar\\CYRKDSC{}"],
    ["049b", "\\cyrchar\\cyrkdsc{}"],
    ["049c", "\\cyrchar\\CYRKVCRS{}"],
    ["049d", "\\cyrchar\\cyrkvcrs{}"],
    ["049e", "\\cyrchar\\CYRKHCRS{}"],
    ["049f", "\\cyrchar\\cyrkhcrs{}"],
    ["04a0", "\\cyrchar\\CYRKBEAK{}"],
    ["04a1", "\\cyrchar\\cyrkbeak{}"],
    ["04a2", "\\cyrchar\\CYRNDSC{}"],
    ["04a3", "\\cyrchar\\cyrndsc{}"],
    ["04a4", "\\cyrchar\\CYRNG{}"],
    ["04a5", "\\cyrchar\\cyrng{}"],
    ["04a6", "\\cyrchar\\CYRPHK{}"],
    ["04a7", "\\cyrchar\\cyrphk{}"],
    ["04a8", "\\cyrchar\\CYRABHHA{}"],
    ["04a9", "\\cyrchar\\cyrabhha{}"],
    ["04aa", "\\cyrchar\\CYRSDSC{}"],
    ["04ab", "\\cyrchar\\cyrsdsc{}"],
    ["04ac", "\\cyrchar\\CYRTDSC{}"],
    ["04ad", "\\cyrchar\\cyrtdsc{}"],
    ["04ae", "\\cyrchar\\CYRY{}"],
    ["04af", "\\cyrchar\\cyry{}"],
    ["04b0", "\\cyrchar\\CYRYHCRS{}"],
    ["04b1", "\\cyrchar\\cyryhcrs{}"],
    ["04b2", "\\cyrchar\\CYRHDSC{}"],
    ["04b3", "\\cyrchar\\cyrhdsc{}"],
    ["04b4", "\\cyrchar\\CYRTETSE{}"],
    ["04b5", "\\cyrchar\\cyrtetse{}"],
    ["04b6", "\\cyrchar\\CYRCHRDSC{}"],
    ["04b7", "\\cyrchar\\cyrchrdsc{}"],
    ["04b8", "\\cyrchar\\CYRCHVCRS{}"],
    ["04b9", "\\cyrchar\\cyrchvcrs{}"],
    ["04ba", "\\cyrchar\\CYRSHHA{}"],
    ["04bb", "\\cyrchar\\cyrshha{}"],
    ["04bc", "\\cyrchar\\CYRABHCH{}"],
    ["04bd", "\\cyrchar\\cyrabhch{}"],
    ["04be", "\\cyrchar\\CYRABHCHDSC{}"],
    ["04bf", "\\cyrchar\\cyrabhchdsc{}"],
    ["04c0", "\\cyrchar\\CYRpalochka{}"],
    ["04c3", "\\cyrchar\\CYRKHK{}"],
    ["04c4", "\\cyrchar\\cyrkhk{}"],
    ["04c7", "\\cyrchar\\CYRNHK{}"],
    ["04c8", "\\cyrchar\\cyrnhk{}"],
    ["04cb", "\\cyrchar\\CYRCHLDSC{}"],
    ["04cc", "\\cyrchar\\cyrchldsc{}"],
    ["04d4", "\\cyrchar\\CYRAE{}"],
    ["04d5", "\\cyrchar\\cyrae{}"],
    ["04d8", "\\cyrchar\\CYRSCHWA{}"],
    ["04d9", "\\cyrchar\\cyrschwa{}"],
    ["04e0", "\\cyrchar\\CYRABHDZE{}"],
    ["04e1", "\\cyrchar\\cyrabhdze{}"],
    ["04e8", "\\cyrchar\\CYROTLD{}"],
    ["04e9", "\\cyrchar\\cyrotld{}"],
    ["2002", "\\hspace{0.6em}"],
    ["2003", "\\hspace{1em}"],
    ["2004", "\\hspace{0.33em}"],
    ["2005", "\\hspace{0.25em}"],
    ["2006", "\\hspace{0.166em}"],
    ["2007", "\\hphantom{0}"],
    ["2008", "\\hphantom{,}"],
    ["2009", "\\hspace{0.167em}"],
    ["200a", "\\mkern1mu{}"],
    ["2010", "-"],
    ["2014", "--"],
    ["2015", "\\rule{1em}{1pt}"],
    ["2016", "\\Vert{}"],
    ["2018", "`"],
    ["2019", "'"],
    ["201b", "\\Elzreapos{}"],
    ["201c", "``"],
    ["201d", "''"],
    ["201e", ",,"],
    ["2020", "\\textdagger{}"],
    ["2021", "\\textdaggerdbl{}"],
    ["2022", "\\textbullet{}"],
    ["2025", ".."],
    ["2026", "\\ldots{}"],
    ["2030", "\\textperthousand{}"],
    ["2031", "\\textpertenthousand{}"],
    ["2032", "\\ensuremath{'}"],
    ["2033", "\\ensuremath{''}"],
    ["2034", "\\ensuremath{'''}"],
    ["2035", "\\backprime{}"],
    ["2039", "\\guilsinglleft{}"],
    ["203a", "\\guilsinglright{}"],
    ["2057", "''''"],
    ["205f", "\\mkern4mu{}"],
    ["2060", "\\nolinebreak{}"],
    ["20a7", "\\ensuremath{\\Elzpes}"],
    ["20ac", "\\mbox{\\texteuro}{}"],
    ["20db", "\\dddot{}"],
    ["20dc", "\\ddddot{}"],
    ["2102", "\\mathbb{C}"],
    ["210a", "\\mathscr{g}"],
    ["210b", "\\mathscr{H}"],
    ["210c", "\\mathfrak{H}"],
    ["210d", "\\mathbb{H}"],
    ["210f", "\\hslash{}"],
    ["2110", "\\mathscr{I}"],
    ["2111", "\\mathfrak{I}"],
    ["2112", "\\mathscr{L}"],
    ["2113", "\\mathscr{l}"],
    ["2115", "\\mathbb{N}"],
    ["2116", "\\cyrchar\\textnumero{}"],
    ["2118", "\\wp{}"],
    ["2119", "\\mathbb{P}"],
    ["211a", "\\mathbb{Q}"],
    ["211b", "\\mathscr{R}"],
    ["211c", "\\mathfrak{R}"],
    ["211d", "\\mathbb{R}"],
    ["211e", "\\Elzxrat{}"],
    ["2122", "\\texttrademark{}"],
    ["2124", "\\mathbb{Z}"],
    ["2126", "\\Omega{}"],
    ["2127", "\\mho{}"],
    ["2128", "\\mathfrak{Z}"],
    ["2129", "\\ElsevierGlyph{2129}"],
    ["212b", "\\AA{}"],
    ["212c", "\\mathscr{B}"],
    ["212d", "\\mathfrak{C}"],
    ["212f", "\\mathscr{e}"],
    ["2130", "\\mathscr{E}"],
    ["2131", "\\mathscr{F}"],
    ["2133", "\\mathscr{M}"],
    ["2134", "\\mathscr{o}"],
    ["2135", "\\aleph{}"],
    ["2136", "\\beth{}"],
    ["2137", "\\gimel{}"],
    ["2138", "\\daleth{}"],
    ["2153", "\\textfrac{1}{3}"],
    ["2154", "\\textfrac{2}{3}"],
    ["2155", "\\textfrac{1}{5}"],
    ["2156", "\\textfrac{2}{5}"],
    ["2157", "\\textfrac{3}{5}"],
    ["2158", "\\textfrac{4}{5}"],
    ["2159", "\\textfrac{1}{6}"],
    ["215a", "\\textfrac{5}{6}"],
    ["215b", "\\textfrac{1}{8}"],
    ["215c", "\\textfrac{3}{8}"],
    ["215d", "\\textfrac{5}{8}"],
    ["215e", "\\textfrac{7}{8}"],
    ["2190", "\\leftarrow{}"],
    ["2191", "\\uparrow{}"],
    ["2192", "\\rightarrow{}"],
    ["2193", "\\downarrow{}"],
    ["2194", "\\leftrightarrow{}"],
    ["2195", "\\updownarrow{}"],
    ["2196", "\\nwarrow{}"],
    ["2197", "\\nearrow{}"],
    ["2198", "\\searrow{}"],
    ["2199", "\\swarrow{}"],
    ["219a", "\\nleftarrow{}"],
    ["219b", "\\nrightarrow{}"],
    ["219c", "\\arrowwaveright{}"],
    ["219d", "\\arrowwaveright{}"],
    ["219e", "\\twoheadleftarrow{}"],
    ["21a0", "\\twoheadrightarrow{}"],
    ["21a2", "\\leftarrowtail{}"],
    ["21a3", "\\rightarrowtail{}"],
    ["21a6", "\\mapsto{}"],
    ["21a9", "\\hookleftarrow{}"],
    ["21aa", "\\hookrightarrow{}"],
    ["21ab", "\\looparrowleft{}"],
    ["21ac", "\\looparrowright{}"],
    ["21ad", "\\leftrightsquigarrow{}"],
    ["21ae", "\\nleftrightarrow{}"],
    ["21b0", "\\Lsh{}"],
    ["21b1", "\\Rsh{}"],
    ["21b3", "\\ElsevierGlyph{21B3}"],
    ["21b6", "\\curvearrowleft{}"],
    ["21b7", "\\curvearrowright{}"],
    ["21ba", "\\circlearrowleft{}"],
    ["21bb", "\\circlearrowright{}"],
    ["21bc", "\\leftharpoonup{}"],
    ["21bd", "\\leftharpoondown{}"],
    ["21be", "\\upharpoonright{}"],
    ["21bf", "\\upharpoonleft{}"],
    ["21c0", "\\rightharpoonup{}"],
    ["21c1", "\\rightharpoondown{}"],
    ["21c2", "\\downharpoonright{}"],
    ["21c3", "\\downharpoonleft{}"],
    ["21c4", "\\rightleftarrows{}"],
    ["21c5", "\\dblarrowupdown{}"],
    ["21c6", "\\leftrightarrows{}"],
    ["21c7", "\\leftleftarrows{}"],
    ["21c8", "\\upuparrows{}"],
    ["21c9", "\\rightrightarrows{}"],
    ["21ca", "\\downdownarrows{}"],
    ["21cb", "\\leftrightharpoons{}"],
    ["21cc", "\\rightleftharpoons{}"],
    ["21cd", "\\nLeftarrow{}"],
    ["21ce", "\\nLeftrightarrow{}"],
    ["21cf", "\\nRightarrow{}"],
    ["21d0", "\\Leftarrow{}"],
    ["21d1", "\\Uparrow{}"],
    ["21d2", "\\Rightarrow{}"],
    ["21d3", "\\Downarrow{}"],
    ["21d4", "\\Leftrightarrow{}"],
    ["21d5", "\\Updownarrow{}"],
    ["21da", "\\Lleftarrow{}"],
    ["21db", "\\Rrightarrow{}"],
    ["21dd", "\\rightsquigarrow{}"],
    ["21f5", "\\DownArrowUpArrow{}"],
    ["2200", "\\forall{}"],
    ["2201", "\\complement{}"],
    ["2202", "\\partial{}"],
    ["2203", "\\exists{}"],
    ["2204", "\\nexists{}"],
    ["2205", "\\varnothing{}"],
    ["2207", "\\nabla{}"],
    ["2208", "\\in{}"],
    ["2209", "\\not\\in{}"],
    ["220b", "\\ni{}"],
    ["220c", "\\not\\ni{}"],
    ["220f", "\\prod{}"],
    ["2210", "\\coprod{}"],
    ["2211", "\\sum{}"],
    ["2212", "-"],
    ["2213", "\\mp{}"],
    ["2214", "\\dotplus{}"],
    ["2216", "\\setminus{}"],
    ["2217", "{\\_\\ast}"],
    ["2218", "\\circ{}"],
    ["2219", "\\bullet{}"],
    ["221a", "\\surd{}"],
    ["221d", "\\propto{}"],
    ["221e", "\\infty{}"],
    ["221f", "\\rightangle{}"],
    ["2220", "\\angle{}"],
    ["2221", "\\measuredangle{}"],
    ["2222", "\\sphericalangle{}"],
    ["2223", "\\mid{}"],
    ["2224", "\\nmid{}"],
    ["2225", "\\parallel{}"],
    ["2226", "\\nparallel{}"],
    ["2227", "\\wedge{}"],
    ["2228", "\\vee{}"],
    ["2229", "\\cap{}"],
    ["222a", "\\cup{}"],
    ["222b", "\\int{}"],
    ["222c", "\\int\\!\\int{}"],
    ["222d", "\\int\\!\\int\\!\\int{}"],
    ["222e", "\\oint{}"],
    ["222f", "\\surfintegral{}"],
    ["2230", "\\volintegral{}"],
    ["2231", "\\clwintegral{}"],
    ["2232", "\\ElsevierGlyph{2232}"],
    ["2233", "\\ElsevierGlyph{2233}"],
    ["2234", "\\therefore{}"],
    ["2235", "\\because{}"],
    ["2237", "\\Colon{}"],
    ["2238", "\\ElsevierGlyph{2238}"],
    ["223a", "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}"],
    ["223b", "\\homothetic{}"],
    ["223c", "\\sim{}"],
    ["223d", "\\backsim{}"],
    ["223e", "\\lazysinv{}"],
    ["2240", "\\wr{}"],
    ["2241", "\\not\\sim{}"],
    ["2242", "\\ElsevierGlyph{2242}"],
    ["2243", "\\simeq{}"],
    ["2244", "\\not\\simeq{}"],
    ["2245", "\\cong{}"],
    ["2246", "\\approxnotequal{}"],
    ["2247", "\\not\\cong{}"],
    ["2248", "\\approx{}"],
    ["2249", "\\not\\approx{}"],
    ["224a", "\\approxeq{}"],
    ["224b", "\\tildetrpl{}"],
    ["224c", "\\allequal{}"],
    ["224d", "\\asymp{}"],
    ["224e", "\\Bumpeq{}"],
    ["224f", "\\bumpeq{}"],
    ["2250", "\\doteq{}"],
    ["2251", "\\doteqdot{}"],
    ["2252", "\\fallingdotseq{}"],
    ["2253", "\\risingdotseq{}"],
    ["2254", ":="],
    ["2255", "=:"],
    ["2256", "\\eqcirc{}"],
    ["2257", "\\circeq{}"],
    ["2259", "\\estimates{}"],
    ["225a", "\\ElsevierGlyph{225A}"],
    ["225b", "\\starequal{}"],
    ["225c", "\\triangleq{}"],
    ["225f", "\\ElsevierGlyph{225F}"],
    ["2260", "\\not ="],
    ["2261", "\\equiv{}"],
    ["2262", "\\not\\equiv{}"],
    ["2264", "\\leq{}"],
    ["2265", "\\geq{}"],
    ["2266", "\\leqq{}"],
    ["2267", "\\geqq{}"],
    ["2268", "\\lneqq{}"],
    ["2269", "\\gneqq{}"],
    ["226a", "\\ll{}"],
    ["226b", "\\gg{}"],
    ["226c", "\\between{}"],
    ["226d", "\\not\\kern-0.3em\\times{}"],
    ["226e", "\\not&lt;"],
    ["226f", "\\not&gt;"],
    ["2270", "\\not\\leq{}"],
    ["2271", "\\not\\geq{}"],
    ["2272", "\\lessequivlnt{}"],
    ["2273", "\\greaterequivlnt{}"],
    ["2274", "\\ElsevierGlyph{2274}"],
    ["2275", "\\ElsevierGlyph{2275}"],
    ["2276", "\\lessgtr{}"],
    ["2277", "\\gtrless{}"],
    ["2278", "\\notlessgreater{}"],
    ["2279", "\\notgreaterless{}"],
    ["227a", "\\prec{}"],
    ["227b", "\\succ{}"],
    ["227c", "\\preccurlyeq{}"],
    ["227d", "\\succcurlyeq{}"],
    ["227e", "\\precapprox{}"],
    ["227f", "\\succapprox{}"],
    ["2280", "\\not\\prec{}"],
    ["2281", "\\not\\succ{}"],
    ["2282", "\\subset{}"],
    ["2283", "\\supset{}"],
    ["2284", "\\not\\subset{}"],
    ["2285", "\\not\\supset{}"],
    ["2286", "\\subseteq{}"],
    ["2287", "\\supseteq{}"],
    ["2288", "\\not\\subseteq{}"],
    ["2289", "\\not\\supseteq{}"],
    ["228a", "\\subsetneq{}"],
    ["228b", "\\supsetneq{}"],
    ["228e", "\\uplus{}"],
    ["228f", "\\sqsubset{}"],
    ["2290", "\\sqsupset{}"],
    ["2291", "\\sqsubseteq{}"],
    ["2292", "\\sqsupseteq{}"],
    ["2293", "\\sqcap{}"],
    ["2294", "\\sqcup{}"],
    ["2295", "\\oplus{}"],
    ["2296", "\\ominus{}"],
    ["2297", "\\otimes{}"],
    ["2298", "\\oslash{}"],
    ["2299", "\\odot{}"],
    ["229a", "\\circledcirc{}"],
    ["229b", "\\circledast{}"],
    ["229d", "\\circleddash{}"],
    ["229e", "\\boxplus{}"],
    ["229f", "\\boxminus{}"],
    ["22a0", "\\boxtimes{}"],
    ["22a1", "\\boxdot{}"],
    ["22a2", "\\vdash{}"],
    ["22a3", "\\dashv{}"],
    ["22a4", "\\top{}"],
    ["22a5", "\\perp{}"],
    ["22a7", "\\truestate{}"],
    ["22a8", "\\forcesextra{}"],
    ["22a9", "\\Vdash{}"],
    ["22aa", "\\Vvdash{}"],
    ["22ab", "\\VDash{}"],
    ["22ac", "\\nvdash{}"],
    ["22ad", "\\nvDash{}"],
    ["22ae", "\\nVdash{}"],
    ["22af", "\\nVDash{}"],
    ["22b2", "\\vartriangleleft{}"],
    ["22b3", "\\vartriangleright{}"],
    ["22b4", "\\trianglelefteq{}"],
    ["22b5", "\\trianglerighteq{}"],
    ["22b6", "\\original{}"],
    ["22b7", "\\image{}"],
    ["22b8", "\\multimap{}"],
    ["22b9", "\\hermitconjmatrix{}"],
    ["22ba", "\\intercal{}"],
    ["22bb", "\\veebar{}"],
    ["22be", "\\rightanglearc{}"],
    ["22c0", "\\ElsevierGlyph{22C0}"],
    ["22c1", "\\ElsevierGlyph{22C1}"],
    ["22c2", "\\bigcap{}"],
    ["22c3", "\\bigcup{}"],
    ["22c4", "\\diamond{}"],
    ["22c5", "\\cdot{}"],
    ["22c6", "\\star{}"],
    ["22c7", "\\divideontimes{}"],
    ["22c8", "\\bowtie{}"],
    ["22c9", "\\ltimes{}"],
    ["22ca", "\\rtimes{}"],
    ["22cb", "\\leftthreetimes{}"],
    ["22cc", "\\rightthreetimes{}"],
    ["22cd", "\\backsimeq{}"],
    ["22ce", "\\curlyvee{}"],
    ["22cf", "\\curlywedge{}"],
    ["22d0", "\\Subset{}"],
    ["22d1", "\\Supset{}"],
    ["22d2", "\\Cap{}"],
    ["22d3", "\\Cup{}"],
    ["22d4", "\\pitchfork{}"],
    ["22d6", "\\lessdot{}"],
    ["22d7", "\\gtrdot{}"],
    ["22d8", "\\verymuchless{}"],
    ["22d9", "\\verymuchgreater{}"],
    ["22da", "\\lesseqgtr{}"],
    ["22db", "\\gtreqless{}"],
    ["22de", "\\curlyeqprec{}"],
    ["22df", "\\curlyeqsucc{}"],
    ["22e2", "\\not\\sqsubseteq{}"],
    ["22e3", "\\not\\sqsupseteq{}"],
    ["22e5", "\\Elzsqspne{}"],
    ["22e6", "\\lnsim{}"],
    ["22e7", "\\gnsim{}"],
    ["22e8", "\\precedesnotsimilar{}"],
    ["22e9", "\\succnsim{}"],
    ["22ea", "\\ntriangleleft{}"],
    ["22eb", "\\ntriangleright{}"],
    ["22ec", "\\ntrianglelefteq{}"],
    ["22ed", "\\ntrianglerighteq{}"],
    ["22ee", "\\vdots{}"],
    ["22ef", "\\cdots{}"],
    ["22f0", "\\upslopeellipsis{}"],
    ["22f1", "\\downslopeellipsis{}"],
    ["2305", "\\barwedge{}"],
    ["2306", "\\perspcorrespond{}"],
    ["2308", "\\lceil{}"],
    ["2309", "\\rceil{}"],
    ["230a", "\\lfloor{}"],
    ["230b", "\\rfloor{}"],
    ["2315", "\\recorder{}"],
    ["2316", '\\mathchar"2208'],
    ["231c", "\\ulcorner{}"],
    ["231d", "\\urcorner{}"],
    ["231e", "\\llcorner{}"],
    ["231f", "\\lrcorner{}"],
    ["2322", "\\frown{}"],
    ["2323", "\\smile{}"],
    ["2329", "\\langle{}"],
    ["232a", "\\rangle{}"],
    ["233d", "\\ElsevierGlyph{E838}"],
    ["23a3", "\\Elzdlcorn{}"],
    ["23b0", "\\lmoustache{}"],
    ["23b1", "\\rmoustache{}"],
    ["2423", "\\textvisiblespace{}"],
    ["2460", "\\ding{172}"],
    ["2461", "\\ding{173}"],
    ["2462", "\\ding{174}"],
    ["2463", "\\ding{175}"],
    ["2464", "\\ding{176}"],
    ["2465", "\\ding{177}"],
    ["2466", "\\ding{178}"],
    ["2467", "\\ding{179}"],
    ["2468", "\\ding{180}"],
    ["2469", "\\ding{181}"],
    ["24c8", "\\circledS{}"],
    ["2506", "\\Elzdshfnc{}"],
    ["2519", "\\Elzsqfnw{}"],
    ["2571", "\\diagup{}"],
    ["25a0", "\\ding{110}"],
    ["25a1", "\\square{}"],
    ["25aa", "\\blacksquare{}"],
    ["25ad", "\\fbox{~~}"],
    ["25af", "\\Elzvrecto{}"],
    ["25b1", "\\ElsevierGlyph{E381}"],
    ["25b2", "\\ding{115}"],
    ["25b3", "\\bigtriangleup{}"],
    ["25b4", "\\blacktriangle{}"],
    ["25b5", "\\vartriangle{}"],
    ["25b8", "\\blacktriangleright{}"],
    ["25b9", "\\triangleright{}"],
    ["25bc", "\\ding{116}"],
    ["25bd", "\\bigtriangledown{}"],
    ["25be", "\\blacktriangledown{}"],
    ["25bf", "\\triangledown{}"],
    ["25c2", "\\blacktriangleleft{}"],
    ["25c3", "\\triangleleft{}"],
    ["25c6", "\\ding{117}"],
    ["25ca", "\\lozenge{}"],
    ["25cb", "\\bigcirc{}"],
    ["25cf", "\\ding{108}"],
    ["25d0", "\\Elzcirfl{}"],
    ["25d1", "\\Elzcirfr{}"],
    ["25d2", "\\Elzcirfb{}"],
    ["25d7", "\\ding{119}"],
    ["25d8", "\\Elzrvbull{}"],
    ["25e7", "\\Elzsqfl{}"],
    ["25e8", "\\Elzsqfr{}"],
    ["25ea", "\\Elzsqfse{}"],
    ["25ef", "\\bigcirc{}"],
    ["2605", "\\ding{72}"],
    ["2606", "\\ding{73}"],
    ["260e", "\\ding{37}"],
    ["261b", "\\ding{42}"],
    ["261e", "\\ding{43}"],
    ["263e", "\\rightmoon{}"],
    ["263f", "\\mercury{}"],
    ["2640", "\\venus{}"],
    ["2642", "\\male{}"],
    ["2643", "\\jupiter{}"],
    ["2644", "\\saturn{}"],
    ["2645", "\\uranus{}"],
    ["2646", "\\neptune{}"],
    ["2647", "\\pluto{}"],
    ["2648", "\\aries{}"],
    ["2649", "\\taurus{}"],
    ["264a", "\\gemini{}"],
    ["264b", "\\cancer{}"],
    ["264c", "\\leo{}"],
    ["264d", "\\virgo{}"],
    ["264e", "\\libra{}"],
    ["264f", "\\scorpio{}"],
    ["2650", "\\sagittarius{}"],
    ["2651", "\\capricornus{}"],
    ["2652", "\\aquarius{}"],
    ["2653", "\\pisces{}"],
    ["2660", "\\ding{171}"],
    ["2662", "\\diamond{}"],
    ["2663", "\\ding{168}"],
    ["2665", "\\ding{170}"],
    ["2666", "\\ding{169}"],
    ["2669", "\\quarternote{}"],
    ["266a", "\\eighthnote{}"],
    ["266d", "\\flat{}"],
    ["266e", "\\natural{}"],
    ["266f", "\\sharp{}"],
    ["2701", "\\ding{33}"],
    ["2702", "\\ding{34}"],
    ["2703", "\\ding{35}"],
    ["2704", "\\ding{36}"],
    ["2706", "\\ding{38}"],
    ["2707", "\\ding{39}"],
    ["2708", "\\ding{40}"],
    ["2709", "\\ding{41}"],
    ["270c", "\\ding{44}"],
    ["270d", "\\ding{45}"],
    ["270e", "\\ding{46}"],
    ["270f", "\\ding{47}"],
    ["2710", "\\ding{48}"],
    ["2711", "\\ding{49}"],
    ["2712", "\\ding{50}"],
    ["2713", "\\ding{51}"],
    ["2714", "\\ding{52}"],
    ["2715", "\\ding{53}"],
    ["2716", "\\ding{54}"],
    ["2717", "\\ding{55}"],
    ["2718", "\\ding{56}"],
    ["2719", "\\ding{57}"],
    ["271a", "\\ding{58}"],
    ["271b", "\\ding{59}"],
    ["271c", "\\ding{60}"],
    ["271d", "\\ding{61}"],
    ["271e", "\\ding{62}"],
    ["271f", "\\ding{63}"],
    ["2720", "\\ding{64}"],
    ["2721", "\\ding{65}"],
    ["2722", "\\ding{66}"],
    ["2723", "\\ding{67}"],
    ["2724", "\\ding{68}"],
    ["2725", "\\ding{69}"],
    ["2726", "\\ding{70}"],
    ["2727", "\\ding{71}"],
    ["2729", "\\ding{73}"],
    ["272a", "\\ding{74}"],
    ["272b", "\\ding{75}"],
    ["272c", "\\ding{76}"],
    ["272d", "\\ding{77}"],
    ["272e", "\\ding{78}"],
    ["272f", "\\ding{79}"],
    ["2730", "\\ding{80}"],
    ["2731", "\\ding{81}"],
    ["2732", "\\ding{82}"],
    ["2733", "\\ding{83}"],
    ["2734", "\\ding{84}"],
    ["2735", "\\ding{85}"],
    ["2736", "\\ding{86}"],
    ["2737", "\\ding{87}"],
    ["2738", "\\ding{88}"],
    ["2739", "\\ding{89}"],
    ["273a", "\\ding{90}"],
    ["273b", "\\ding{91}"],
    ["273c", "\\ding{92}"],
    ["273d", "\\ding{93}"],
    ["273e", "\\ding{94}"],
    ["273f", "\\ding{95}"],
    ["2740", "\\ding{96}"],
    ["2741", "\\ding{97}"],
    ["2742", "\\ding{98}"],
    ["2743", "\\ding{99}"],
    ["2744", "\\ding{100}"],
    ["2745", "\\ding{101}"],
    ["2746", "\\ding{102}"],
    ["2747", "\\ding{103}"],
    ["2748", "\\ding{104}"],
    ["2749", "\\ding{105}"],
    ["274a", "\\ding{106}"],
    ["274b", "\\ding{107}"],
    ["274d", "\\ding{109}"],
    ["274f", "\\ding{111}"],
    ["2750", "\\ding{112}"],
    ["2751", "\\ding{113}"],
    ["2752", "\\ding{114}"],
    ["2756", "\\ding{118}"],
    ["2758", "\\ding{120}"],
    ["2759", "\\ding{121}"],
    ["275a", "\\ding{122}"],
    ["275b", "\\ding{123}"],
    ["275c", "\\ding{124}"],
    ["275d", "\\ding{125}"],
    ["275e", "\\ding{126}"],
    ["2761", "\\ding{161}"],
    ["2762", "\\ding{162}"],
    ["2763", "\\ding{163}"],
    ["2764", "\\ding{164}"],
    ["2765", "\\ding{165}"],
    ["2766", "\\ding{166}"],
    ["2767", "\\ding{167}"],
    ["2776", "\\ding{182}"],
    ["2777", "\\ding{183}"],
    ["2778", "\\ding{184}"],
    ["2779", "\\ding{185}"],
    ["277a", "\\ding{186}"],
    ["277b", "\\ding{187}"],
    ["277c", "\\ding{188}"],
    ["277d", "\\ding{189}"],
    ["277e", "\\ding{190}"],
    ["277f", "\\ding{191}"],
    ["2780", "\\ding{192}"],
    ["2781", "\\ding{193}"],
    ["2782", "\\ding{194}"],
    ["2783", "\\ding{195}"],
    ["2784", "\\ding{196}"],
    ["2785", "\\ding{197}"],
    ["2786", "\\ding{198}"],
    ["2787", "\\ding{199}"],
    ["2788", "\\ding{200}"],
    ["2789", "\\ding{201}"],
    ["278a", "\\ding{202}"],
    ["278b", "\\ding{203}"],
    ["278c", "\\ding{204}"],
    ["278d", "\\ding{205}"],
    ["278e", "\\ding{206}"],
    ["278f", "\\ding{207}"],
    ["2790", "\\ding{208}"],
    ["2791", "\\ding{209}"],
    ["2792", "\\ding{210}"],
    ["2793", "\\ding{211}"],
    ["2794", "\\ding{212}"],
    ["2798", "\\ding{216}"],
    ["2799", "\\ding{217}"],
    ["279a", "\\ding{218}"],
    ["279b", "\\ding{219}"],
    ["279c", "\\ding{220}"],
    ["279d", "\\ding{221}"],
    ["279e", "\\ding{222}"],
    ["279f", "\\ding{223}"],
    ["27a0", "\\ding{224}"],
    ["27a1", "\\ding{225}"],
    ["27a2", "\\ding{226}"],
    ["27a3", "\\ding{227}"],
    ["27a4", "\\ding{228}"],
    ["27a5", "\\ding{229}"],
    ["27a6", "\\ding{230}"],
    ["27a7", "\\ding{231}"],
    ["27a8", "\\ding{232}"],
    ["27a9", "\\ding{233}"],
    ["27aa", "\\ding{234}"],
    ["27ab", "\\ding{235}"],
    ["27ac", "\\ding{236}"],
    ["27ad", "\\ding{237}"],
    ["27ae", "\\ding{238}"],
    ["27af", "\\ding{239}"],
    ["27b1", "\\ding{241}"],
    ["27b2", "\\ding{242}"],
    ["27b3", "\\ding{243}"],
    ["27b4", "\\ding{244}"],
    ["27b5", "\\ding{245}"],
    ["27b6", "\\ding{246}"],
    ["27b7", "\\ding{247}"],
    ["27b8", "\\ding{248}"],
    ["27b9", "\\ding{249}"],
    ["27ba", "\\ding{250}"],
    ["27bb", "\\ding{251}"],
    ["27bc", "\\ding{252}"],
    ["27bd", "\\ding{253}"],
    ["27be", "\\ding{254}"],
    ["27f5", "\\longleftarrow{}"],
    ["27f6", "\\longrightarrow{}"],
    ["27f7", "\\longleftrightarrow{}"],
    ["27f8", "\\Longleftarrow{}"],
    ["27f9", "\\Longrightarrow{}"],
    ["27fa", "\\Longleftrightarrow{}"],
    ["27fc", "\\longmapsto{}"],
    ["27ff", "\\sim\\joinrel\\leadsto"],
    ["2905", "\\ElsevierGlyph{E212}"],
    ["2912", "\\UpArrowBar{}"],
    ["2913", "\\DownArrowBar{}"],
    ["2923", "\\ElsevierGlyph{E20C}"],
    ["2924", "\\ElsevierGlyph{E20D}"],
    ["2925", "\\ElsevierGlyph{E20B}"],
    ["2926", "\\ElsevierGlyph{E20A}"],
    ["2927", "\\ElsevierGlyph{E211}"],
    ["2928", "\\ElsevierGlyph{E20E}"],
    ["2929", "\\ElsevierGlyph{E20F}"],
    ["292a", "\\ElsevierGlyph{E210}"],
    ["2933", "\\ElsevierGlyph{E21C}"],
    ["2936", "\\ElsevierGlyph{E21A}"],
    ["2937", "\\ElsevierGlyph{E219}"],
    ["2940", "\\Elolarr{}"],
    ["2941", "\\Elorarr{}"],
    ["2942", "\\ElzRlarr{}"],
    ["2944", "\\ElzrLarr{}"],
    ["2947", "\\Elzrarrx{}"],
    ["294e", "\\LeftRightVector{}"],
    ["294f", "\\RightUpDownVector{}"],
    ["2950", "\\DownLeftRightVector{}"],
    ["2951", "\\LeftUpDownVector{}"],
    ["2952", "\\LeftVectorBar{}"],
    ["2953", "\\RightVectorBar{}"],
    ["2954", "\\RightUpVectorBar{}"],
    ["2955", "\\RightDownVectorBar{}"],
    ["2956", "\\DownLeftVectorBar{}"],
    ["2957", "\\DownRightVectorBar{}"],
    ["2958", "\\LeftUpVectorBar{}"],
    ["2959", "\\LeftDownVectorBar{}"],
    ["295a", "\\LeftTeeVector{}"],
    ["295b", "\\RightTeeVector{}"],
    ["295c", "\\RightUpTeeVector{}"],
    ["295d", "\\RightDownTeeVector{}"],
    ["295e", "\\DownLeftTeeVector{}"],
    ["295f", "\\DownRightTeeVector{}"],
    ["2960", "\\LeftUpTeeVector{}"],
    ["2961", "\\LeftDownTeeVector{}"],
    ["296e", "\\UpEquilibrium{}"],
    ["296f", "\\ReverseUpEquilibrium{}"],
    ["2970", "\\RoundImplies{}"],
    ["297c", "\\ElsevierGlyph{E214}"],
    ["297d", "\\ElsevierGlyph{E215}"],
    ["2980", "\\Elztfnc{}"],
    ["2985", "\\ElsevierGlyph{3018}"],
    ["2986", "\\Elroang{}"],
    ["2993", "&lt;\\kern-0.58em("],
    ["2994", "\\ElsevierGlyph{E291}"],
    ["2999", "\\Elzddfnc{}"],
    ["299c", "\\Angle{}"],
    ["29a0", "\\Elzlpargt{}"],
    ["29b5", "\\ElsevierGlyph{E260}"],
    ["29b6", "\\ElsevierGlyph{E61B}"],
    ["29ca", "\\ElzLap{}"],
    ["29cb", "\\Elzdefas{}"],
    ["29cf", "\\LeftTriangleBar{}"],
    ["29d0", "\\RightTriangleBar{}"],
    ["29dc", "\\ElsevierGlyph{E372}"],
    ["29eb", "\\blacklozenge{}"],
    ["29f4", "\\RuleDelayed{}"],
    ["2a04", "\\Elxuplus{}"],
    ["2a05", "\\ElzThr{}"],
    ["2a06", "\\Elxsqcup{}"],
    ["2a07", "\\ElzInf{}"],
    ["2a08", "\\ElzSup{}"],
    ["2a0d", "\\ElzCint{}"],
    ["2a0f", "\\clockoint{}"],
    ["2a10", "\\ElsevierGlyph{E395}"],
    ["2a16", "\\sqrint{}"],
    ["2a25", "\\ElsevierGlyph{E25A}"],
    ["2a2a", "\\ElsevierGlyph{E25B}"],
    ["2a2d", "\\ElsevierGlyph{E25C}"],
    ["2a2e", "\\ElsevierGlyph{E25D}"],
    ["2a2f", "\\ElzTimes{}"],
    ["2a34", "\\ElsevierGlyph{E25E}"],
    ["2a35", "\\ElsevierGlyph{E25E}"],
    ["2a3c", "\\ElsevierGlyph{E259}"],
    ["2a3f", "\\amalg{}"],
    ["2a53", "\\ElzAnd{}"],
    ["2a54", "\\ElzOr{}"],
    ["2a55", "\\ElsevierGlyph{E36E}"],
    ["2a56", "\\ElOr{}"],
    ["2a5e", "\\perspcorrespond{}"],
    ["2a5f", "\\Elzminhat{}"],
    ["2a63", "\\ElsevierGlyph{225A}"],
    ["2a6e", "\\stackrel{*}{=}"],
    ["2a75", "\\Equal{}"],
    ["2a7d", "\\leqslant{}"],
    ["2a7e", "\\geqslant{}"],
    ["2a85", "\\lessapprox{}"],
    ["2a86", "\\gtrapprox{}"],
    ["2a87", "\\lneq{}"],
    ["2a88", "\\gneq{}"],
    ["2a89", "\\lnapprox{}"],
    ["2a8a", "\\gnapprox{}"],
    ["2a8b", "\\lesseqqgtr{}"],
    ["2a8c", "\\gtreqqless{}"],
    ["2a95", "\\eqslantless{}"],
    ["2a96", "\\eqslantgtr{}"],
    ["2a9d", "\\Pisymbol{ppi020}{117}"],
    ["2a9e", "\\Pisymbol{ppi020}{105}"],
    ["2aa1", "\\NestedLessLess{}"],
    ["2aa2", "\\NestedGreaterGreater{}"],
    ["2aaf", "\\preceq{}"],
    ["2ab0", "\\succeq{}"],
    ["2ab5", "\\precneqq{}"],
    ["2ab6", "\\succneqq{}"],
    ["2ab7", "\\precapprox{}"],
    ["2ab8", "\\succapprox{}"],
    ["2ab9", "\\precnapprox{}"],
    ["2aba", "\\succnapprox{}"],
    ["2ac5", "\\subseteqq{}"],
    ["2ac6", "\\supseteqq{}"],
    ["2acb", "\\subsetneqq{}"],
    ["2acc", "\\supsetneqq{}"],
    ["2aeb", "\\ElsevierGlyph{E30D}"],
    ["2af6", "\\Elztdcol{}"],
    ["2afd", "{{/}\\!\\!{/}}"],
    ["300a", "\\ElsevierGlyph{300A}"],
    ["300b", "\\ElsevierGlyph{300B}"],
    ["3018", "\\ElsevierGlyph{3018}"],
    ["3019", "\\ElsevierGlyph{3019}"],
    ["301a", "\\openbracketleft{}"],
    ["301b", "\\openbracketright{}"],
    ["fb00", "ff"],
    ["fb01", "fi"],
    ["fb02", "fl"],
    ["fb03", "ffi"],
    ["fb04", "ffl"],
    ["d400", "\\mathbf{A}"],
    ["d401", "\\mathbf{B}"],
    ["d402", "\\mathbf{C}"],
    ["d403", "\\mathbf{D}"],
    ["d404", "\\mathbf{E}"],
    ["d405", "\\mathbf{F}"],
    ["d406", "\\mathbf{G}"],
    ["d407", "\\mathbf{H}"],
    ["d408", "\\mathbf{I}"],
    ["d409", "\\mathbf{J}"],
    ["d40a", "\\mathbf{K}"],
    ["d40b", "\\mathbf{L}"],
    ["d40c", "\\mathbf{M}"],
    ["d40d", "\\mathbf{N}"],
    ["d40e", "\\mathbf{O}"],
    ["d40f", "\\mathbf{P}"],
    ["d410", "\\mathbf{Q}"],
    ["d411", "\\mathbf{R}"],
    ["d412", "\\mathbf{S}"],
    ["d413", "\\mathbf{T}"],
    ["d414", "\\mathbf{U}"],
    ["d415", "\\mathbf{V}"],
    ["d416", "\\mathbf{W}"],
    ["d417", "\\mathbf{X}"],
    ["d418", "\\mathbf{Y}"],
    ["d419", "\\mathbf{Z}"],
    ["d41a", "\\mathbf{a}"],
    ["d41b", "\\mathbf{b}"],
    ["d41c", "\\mathbf{c}"],
    ["d41d", "\\mathbf{d}"],
    ["d41e", "\\mathbf{e}"],
    ["d41f", "\\mathbf{f}"],
    ["d420", "\\mathbf{g}"],
    ["d421", "\\mathbf{h}"],
    ["d422", "\\mathbf{i}"],
    ["d423", "\\mathbf{j}"],
    ["d424", "\\mathbf{k}"],
    ["d425", "\\mathbf{l}"],
    ["d426", "\\mathbf{m}"],
    ["d427", "\\mathbf{n}"],
    ["d428", "\\mathbf{o}"],
    ["d429", "\\mathbf{p}"],
    ["d42a", "\\mathbf{q}"],
    ["d42b", "\\mathbf{r}"],
    ["d42c", "\\mathbf{s}"],
    ["d42d", "\\mathbf{t}"],
    ["d42e", "\\mathbf{u}"],
    ["d42f", "\\mathbf{v}"],
    ["d430", "\\mathbf{w}"],
    ["d431", "\\mathbf{x}"],
    ["d432", "\\mathbf{y}"],
    ["d433", "\\mathbf{z}"],
    ["d434", "\\mathsl{A}"],
    ["d435", "\\mathsl{B}"],
    ["d436", "\\mathsl{C}"],
    ["d437", "\\mathsl{D}"],
    ["d438", "\\mathsl{E}"],
    ["d439", "\\mathsl{F}"],
    ["d43a", "\\mathsl{G}"],
    ["d43b", "\\mathsl{H}"],
    ["d43c", "\\mathsl{I}"],
    ["d43d", "\\mathsl{J}"],
    ["d43e", "\\mathsl{K}"],
    ["d43f", "\\mathsl{L}"],
    ["d440", "\\mathsl{M}"],
    ["d441", "\\mathsl{N}"],
    ["d442", "\\mathsl{O}"],
    ["d443", "\\mathsl{P}"],
    ["d444", "\\mathsl{Q}"],
    ["d445", "\\mathsl{R}"],
    ["d446", "\\mathsl{S}"],
    ["d447", "\\mathsl{T}"],
    ["d448", "\\mathsl{U}"],
    ["d449", "\\mathsl{V}"],
    ["d44a", "\\mathsl{W}"],
    ["d44b", "\\mathsl{X}"],
    ["d44c", "\\mathsl{Y}"],
    ["d44d", "\\mathsl{Z}"],
    ["d44e", "\\mathsl{a}"],
    ["d44f", "\\mathsl{b}"],
    ["d450", "\\mathsl{c}"],
    ["d451", "\\mathsl{d}"],
    ["d452", "\\mathsl{e}"],
    ["d453", "\\mathsl{f}"],
    ["d454", "\\mathsl{g}"],
    ["d456", "\\mathsl{i}"],
    ["d457", "\\mathsl{j}"],
    ["d458", "\\mathsl{k}"],
    ["d459", "\\mathsl{l}"],
    ["d45a", "\\mathsl{m}"],
    ["d45b", "\\mathsl{n}"],
    ["d45c", "\\mathsl{o}"],
    ["d45d", "\\mathsl{p}"],
    ["d45e", "\\mathsl{q}"],
    ["d45f", "\\mathsl{r}"],
    ["d460", "\\mathsl{s}"],
    ["d461", "\\mathsl{t}"],
    ["d462", "\\mathsl{u}"],
    ["d463", "\\mathsl{v}"],
    ["d464", "\\mathsl{w}"],
    ["d465", "\\mathsl{x}"],
    ["d466", "\\mathsl{y}"],
    ["d467", "\\mathsl{z}"],
    ["d468", "\\mathbit{A}"],
    ["d469", "\\mathbit{B}"],
    ["d46a", "\\mathbit{C}"],
    ["d46b", "\\mathbit{D}"],
    ["d46c", "\\mathbit{E}"],
    ["d46d", "\\mathbit{F}"],
    ["d46e", "\\mathbit{G}"],
    ["d46f", "\\mathbit{H}"],
    ["d470", "\\mathbit{I}"],
    ["d471", "\\mathbit{J}"],
    ["d472", "\\mathbit{K}"],
    ["d473", "\\mathbit{L}"],
    ["d474", "\\mathbit{M}"],
    ["d475", "\\mathbit{N}"],
    ["d476", "\\mathbit{O}"],
    ["d477", "\\mathbit{P}"],
    ["d478", "\\mathbit{Q}"],
    ["d479", "\\mathbit{R}"],
    ["d47a", "\\mathbit{S}"],
    ["d47b", "\\mathbit{T}"],
    ["d47c", "\\mathbit{U}"],
    ["d47d", "\\mathbit{V}"],
    ["d47e", "\\mathbit{W}"],
    ["d47f", "\\mathbit{X}"],
    ["d480", "\\mathbit{Y}"],
    ["d481", "\\mathbit{Z}"],
    ["d482", "\\mathbit{a}"],
    ["d483", "\\mathbit{b}"],
    ["d484", "\\mathbit{c}"],
    ["d485", "\\mathbit{d}"],
    ["d486", "\\mathbit{e}"],
    ["d487", "\\mathbit{f}"],
    ["d488", "\\mathbit{g}"],
    ["d489", "\\mathbit{h}"],
    ["d48a", "\\mathbit{i}"],
    ["d48b", "\\mathbit{j}"],
    ["d48c", "\\mathbit{k}"],
    ["d48d", "\\mathbit{l}"],
    ["d48e", "\\mathbit{m}"],
    ["d48f", "\\mathbit{n}"],
    ["d490", "\\mathbit{o}"],
    ["d491", "\\mathbit{p}"],
    ["d492", "\\mathbit{q}"],
    ["d493", "\\mathbit{r}"],
    ["d494", "\\mathbit{s}"],
    ["d495", "\\mathbit{t}"],
    ["d496", "\\mathbit{u}"],
    ["d497", "\\mathbit{v}"],
    ["d498", "\\mathbit{w}"],
    ["d499", "\\mathbit{x}"],
    ["d49a", "\\mathbit{y}"],
    ["d49b", "\\mathbit{z}"],
    ["d49c", "\\mathscr{A}"],
    ["d49e", "\\mathscr{C}"],
    ["d49f", "\\mathscr{D}"],
    ["d4a2", "\\mathscr{G}"],
    ["d4a5", "\\mathscr{J}"],
    ["d4a6", "\\mathscr{K}"],
    ["d4a9", "\\mathscr{N}"],
    ["d4aa", "\\mathscr{O}"],
    ["d4ab", "\\mathscr{P}"],
    ["d4ac", "\\mathscr{Q}"],
    ["d4ae", "\\mathscr{S}"],
    ["d4af", "\\mathscr{T}"],
    ["d4b0", "\\mathscr{U}"],
    ["d4b1", "\\mathscr{V}"],
    ["d4b2", "\\mathscr{W}"],
    ["d4b3", "\\mathscr{X}"],
    ["d4b4", "\\mathscr{Y}"],
    ["d4b5", "\\mathscr{Z}"],
    ["d4b6", "\\mathscr{a}"],
    ["d4b7", "\\mathscr{b}"],
    ["d4b8", "\\mathscr{c}"],
    ["d4b9", "\\mathscr{d}"],
    ["d4bb", "\\mathscr{f}"],
    ["d4bd", "\\mathscr{h}"],
    ["d4be", "\\mathscr{i}"],
    ["d4bf", "\\mathscr{j}"],
    ["d4c0", "\\mathscr{k}"],
    ["d4c1", "\\mathscr{l}"],
    ["d4c2", "\\mathscr{m}"],
    ["d4c3", "\\mathscr{n}"],
    ["d4c5", "\\mathscr{p}"],
    ["d4c6", "\\mathscr{q}"],
    ["d4c7", "\\mathscr{r}"],
    ["d4c8", "\\mathscr{s}"],
    ["d4c9", "\\mathscr{t}"],
    ["d4ca", "\\mathscr{u}"],
    ["d4cb", "\\mathscr{v}"],
    ["d4cc", "\\mathscr{w}"],
    ["d4cd", "\\mathscr{x}"],
    ["d4ce", "\\mathscr{y}"],
    ["d4cf", "\\mathscr{z}"],
    ["d4d0", "\\mathmit{A}"],
    ["d4d1", "\\mathmit{B}"],
    ["d4d2", "\\mathmit{C}"],
    ["d4d3", "\\mathmit{D}"],
    ["d4d4", "\\mathmit{E}"],
    ["d4d5", "\\mathmit{F}"],
    ["d4d6", "\\mathmit{G}"],
    ["d4d7", "\\mathmit{H}"],
    ["d4d8", "\\mathmit{I}"],
    ["d4d9", "\\mathmit{J}"],
    ["d4da", "\\mathmit{K}"],
    ["d4db", "\\mathmit{L}"],
    ["d4dc", "\\mathmit{M}"],
    ["d4dd", "\\mathmit{N}"],
    ["d4de", "\\mathmit{O}"],
    ["d4df", "\\mathmit{P}"],
    ["d4e0", "\\mathmit{Q}"],
    ["d4e1", "\\mathmit{R}"],
    ["d4e2", "\\mathmit{S}"],
    ["d4e3", "\\mathmit{T}"],
    ["d4e4", "\\mathmit{U}"],
    ["d4e5", "\\mathmit{V}"],
    ["d4e6", "\\mathmit{W}"],
    ["d4e7", "\\mathmit{X}"],
    ["d4e8", "\\mathmit{Y}"],
    ["d4e9", "\\mathmit{Z}"],
    ["d4ea", "\\mathmit{a}"],
    ["d4eb", "\\mathmit{b}"],
    ["d4ec", "\\mathmit{c}"],
    ["d4ed", "\\mathmit{d}"],
    ["d4ee", "\\mathmit{e}"],
    ["d4ef", "\\mathmit{f}"],
    ["d4f0", "\\mathmit{g}"],
    ["d4f1", "\\mathmit{h}"],
    ["d4f2", "\\mathmit{i}"],
    ["d4f3", "\\mathmit{j}"],
    ["d4f4", "\\mathmit{k}"],
    ["d4f5", "\\mathmit{l}"],
    ["d4f6", "\\mathmit{m}"],
    ["d4f7", "\\mathmit{n}"],
    ["d4f8", "\\mathmit{o}"],
    ["d4f9", "\\mathmit{p}"],
    ["d4fa", "\\mathmit{q}"],
    ["d4fb", "\\mathmit{r}"],
    ["d4fc", "\\mathmit{s}"],
    ["d4fd", "\\mathmit{t}"],
    ["d4fe", "\\mathmit{u}"],
    ["d4ff", "\\mathmit{v}"],
    ["d500", "\\mathmit{w}"],
    ["d501", "\\mathmit{x}"],
    ["d502", "\\mathmit{y}"],
    ["d503", "\\mathmit{z}"],
    ["d504", "\\mathfrak{A}"],
    ["d505", "\\mathfrak{B}"],
    ["d507", "\\mathfrak{D}"],
    ["d508", "\\mathfrak{E}"],
    ["d509", "\\mathfrak{F}"],
    ["d50a", "\\mathfrak{G}"],
    ["d50d", "\\mathfrak{J}"],
    ["d50e", "\\mathfrak{K}"],
    ["d50f", "\\mathfrak{L}"],
    ["d510", "\\mathfrak{M}"],
    ["d511", "\\mathfrak{N}"],
    ["d512", "\\mathfrak{O}"],
    ["d513", "\\mathfrak{P}"],
    ["d514", "\\mathfrak{Q}"],
    ["d516", "\\mathfrak{S}"],
    ["d517", "\\mathfrak{T}"],
    ["d518", "\\mathfrak{U}"],
    ["d519", "\\mathfrak{V}"],
    ["d51a", "\\mathfrak{W}"],
    ["d51b", "\\mathfrak{X}"],
    ["d51c", "\\mathfrak{Y}"],
    ["d51e", "\\mathfrak{a}"],
    ["d51f", "\\mathfrak{b}"],
    ["d520", "\\mathfrak{c}"],
    ["d521", "\\mathfrak{d}"],
    ["d522", "\\mathfrak{e}"],
    ["d523", "\\mathfrak{f}"],
    ["d524", "\\mathfrak{g}"],
    ["d525", "\\mathfrak{h}"],
    ["d526", "\\mathfrak{i}"],
    ["d527", "\\mathfrak{j}"],
    ["d528", "\\mathfrak{k}"],
    ["d529", "\\mathfrak{l}"],
    ["d52a", "\\mathfrak{m}"],
    ["d52b", "\\mathfrak{n}"],
    ["d52c", "\\mathfrak{o}"],
    ["d52d", "\\mathfrak{p}"],
    ["d52e", "\\mathfrak{q}"],
    ["d52f", "\\mathfrak{r}"],
    ["d530", "\\mathfrak{s}"],
    ["d531", "\\mathfrak{t}"],
    ["d532", "\\mathfrak{u}"],
    ["d533", "\\mathfrak{v}"],
    ["d534", "\\mathfrak{w}"],
    ["d535", "\\mathfrak{x}"],
    ["d536", "\\mathfrak{y}"],
    ["d537", "\\mathfrak{z}"],
    ["d538", "\\mathbb{A}"],
    ["d539", "\\mathbb{B}"],
    ["d53b", "\\mathbb{D}"],
    ["d53c", "\\mathbb{E}"],
    ["d53d", "\\mathbb{F}"],
    ["d53e", "\\mathbb{G}"],
    ["d540", "\\mathbb{I}"],
    ["d541", "\\mathbb{J}"],
    ["d542", "\\mathbb{K}"],
    ["d543", "\\mathbb{L}"],
    ["d544", "\\mathbb{M}"],
    ["d546", "\\mathbb{O}"],
    ["d54a", "\\mathbb{S}"],
    ["d54b", "\\mathbb{T}"],
    ["d54c", "\\mathbb{U}"],
    ["d54d", "\\mathbb{V}"],
    ["d54e", "\\mathbb{W}"],
    ["d54f", "\\mathbb{X}"],
    ["d550", "\\mathbb{Y}"],
    ["d552", "\\mathbb{a}"],
    ["d553", "\\mathbb{b}"],
    ["d554", "\\mathbb{c}"],
    ["d555", "\\mathbb{d}"],
    ["d556", "\\mathbb{e}"],
    ["d557", "\\mathbb{f}"],
    ["d558", "\\mathbb{g}"],
    ["d559", "\\mathbb{h}"],
    ["d55a", "\\mathbb{i}"],
    ["d55b", "\\mathbb{j}"],
    ["d55c", "\\mathbb{k}"],
    ["d55d", "\\mathbb{l}"],
    ["d55e", "\\mathbb{m}"],
    ["d55f", "\\mathbb{n}"],
    ["d560", "\\mathbb{o}"],
    ["d561", "\\mathbb{p}"],
    ["d562", "\\mathbb{q}"],
    ["d563", "\\mathbb{r}"],
    ["d564", "\\mathbb{s}"],
    ["d565", "\\mathbb{t}"],
    ["d566", "\\mathbb{u}"],
    ["d567", "\\mathbb{v}"],
    ["d568", "\\mathbb{w}"],
    ["d569", "\\mathbb{x}"],
    ["d56a", "\\mathbb{y}"],
    ["d56b", "\\mathbb{z}"],
    ["d56c", "\\mathslbb{A}"],
    ["d56d", "\\mathslbb{B}"],
    ["d56e", "\\mathslbb{C}"],
    ["d56f", "\\mathslbb{D}"],
    ["d570", "\\mathslbb{E}"],
    ["d571", "\\mathslbb{F}"],
    ["d572", "\\mathslbb{G}"],
    ["d573", "\\mathslbb{H}"],
    ["d574", "\\mathslbb{I}"],
    ["d575", "\\mathslbb{J}"],
    ["d576", "\\mathslbb{K}"],
    ["d577", "\\mathslbb{L}"],
    ["d578", "\\mathslbb{M}"],
    ["d579", "\\mathslbb{N}"],
    ["d57a", "\\mathslbb{O}"],
    ["d57b", "\\mathslbb{P}"],
    ["d57c", "\\mathslbb{Q}"],
    ["d57d", "\\mathslbb{R}"],
    ["d57e", "\\mathslbb{S}"],
    ["d57f", "\\mathslbb{T}"],
    ["d580", "\\mathslbb{U}"],
    ["d581", "\\mathslbb{V}"],
    ["d582", "\\mathslbb{W}"],
    ["d583", "\\mathslbb{X}"],
    ["d584", "\\mathslbb{Y}"],
    ["d585", "\\mathslbb{Z}"],
    ["d586", "\\mathslbb{a}"],
    ["d587", "\\mathslbb{b}"],
    ["d588", "\\mathslbb{c}"],
    ["d589", "\\mathslbb{d}"],
    ["d58a", "\\mathslbb{e}"],
    ["d58b", "\\mathslbb{f}"],
    ["d58c", "\\mathslbb{g}"],
    ["d58d", "\\mathslbb{h}"],
    ["d58e", "\\mathslbb{i}"],
    ["d58f", "\\mathslbb{j}"],
    ["d590", "\\mathslbb{k}"],
    ["d591", "\\mathslbb{l}"],
    ["d592", "\\mathslbb{m}"],
    ["d593", "\\mathslbb{n}"],
    ["d594", "\\mathslbb{o}"],
    ["d595", "\\mathslbb{p}"],
    ["d596", "\\mathslbb{q}"],
    ["d597", "\\mathslbb{r}"],
    ["d598", "\\mathslbb{s}"],
    ["d599", "\\mathslbb{t}"],
    ["d59a", "\\mathslbb{u}"],
    ["d59b", "\\mathslbb{v}"],
    ["d59c", "\\mathslbb{w}"],
    ["d59d", "\\mathslbb{x}"],
    ["d59e", "\\mathslbb{y}"],
    ["d59f", "\\mathslbb{z}"],
    ["d5a0", "\\mathsf{A}"],
    ["d5a1", "\\mathsf{B}"],
    ["d5a2", "\\mathsf{C}"],
    ["d5a3", "\\mathsf{D}"],
    ["d5a4", "\\mathsf{E}"],
    ["d5a5", "\\mathsf{F}"],
    ["d5a6", "\\mathsf{G}"],
    ["d5a7", "\\mathsf{H}"],
    ["d5a8", "\\mathsf{I}"],
    ["d5a9", "\\mathsf{J}"],
    ["d5aa", "\\mathsf{K}"],
    ["d5ab", "\\mathsf{L}"],
    ["d5ac", "\\mathsf{M}"],
    ["d5ad", "\\mathsf{N}"],
    ["d5ae", "\\mathsf{O}"],
    ["d5af", "\\mathsf{P}"],
    ["d5b0", "\\mathsf{Q}"],
    ["d5b1", "\\mathsf{R}"],
    ["d5b2", "\\mathsf{S}"],
    ["d5b3", "\\mathsf{T}"],
    ["d5b4", "\\mathsf{U}"],
    ["d5b5", "\\mathsf{V}"],
    ["d5b6", "\\mathsf{W}"],
    ["d5b7", "\\mathsf{X}"],
    ["d5b8", "\\mathsf{Y}"],
    ["d5b9", "\\mathsf{Z}"],
    ["d5ba", "\\mathsf{a}"],
    ["d5bb", "\\mathsf{b}"],
    ["d5bc", "\\mathsf{c}"],
    ["d5bd", "\\mathsf{d}"],
    ["d5be", "\\mathsf{e}"],
    ["d5bf", "\\mathsf{f}"],
    ["d5c0", "\\mathsf{g}"],
    ["d5c1", "\\mathsf{h}"],
    ["d5c2", "\\mathsf{i}"],
    ["d5c3", "\\mathsf{j}"],
    ["d5c4", "\\mathsf{k}"],
    ["d5c5", "\\mathsf{l}"],
    ["d5c6", "\\mathsf{m}"],
    ["d5c7", "\\mathsf{n}"],
    ["d5c8", "\\mathsf{o}"],
    ["d5c9", "\\mathsf{p}"],
    ["d5ca", "\\mathsf{q}"],
    ["d5cb", "\\mathsf{r}"],
    ["d5cc", "\\mathsf{s}"],
    ["d5cd", "\\mathsf{t}"],
    ["d5ce", "\\mathsf{u}"],
    ["d5cf", "\\mathsf{v}"],
    ["d5d0", "\\mathsf{w}"],
    ["d5d1", "\\mathsf{x}"],
    ["d5d2", "\\mathsf{y}"],
    ["d5d3", "\\mathsf{z}"],
    ["d5d4", "\\mathsfbf{A}"],
    ["d5d5", "\\mathsfbf{B}"],
    ["d5d6", "\\mathsfbf{C}"],
    ["d5d7", "\\mathsfbf{D}"],
    ["d5d8", "\\mathsfbf{E}"],
    ["d5d9", "\\mathsfbf{F}"],
    ["d5da", "\\mathsfbf{G}"],
    ["d5db", "\\mathsfbf{H}"],
    ["d5dc", "\\mathsfbf{I}"],
    ["d5dd", "\\mathsfbf{J}"],
    ["d5de", "\\mathsfbf{K}"],
    ["d5df", "\\mathsfbf{L}"],
    ["d5e0", "\\mathsfbf{M}"],
    ["d5e1", "\\mathsfbf{N}"],
    ["d5e2", "\\mathsfbf{O}"],
    ["d5e3", "\\mathsfbf{P}"],
    ["d5e4", "\\mathsfbf{Q}"],
    ["d5e5", "\\mathsfbf{R}"],
    ["d5e6", "\\mathsfbf{S}"],
    ["d5e7", "\\mathsfbf{T}"],
    ["d5e8", "\\mathsfbf{U}"],
    ["d5e9", "\\mathsfbf{V}"],
    ["d5ea", "\\mathsfbf{W}"],
    ["d5eb", "\\mathsfbf{X}"],
    ["d5ec", "\\mathsfbf{Y}"],
    ["d5ed", "\\mathsfbf{Z}"],
    ["d5ee", "\\mathsfbf{a}"],
    ["d5ef", "\\mathsfbf{b}"],
    ["d5f0", "\\mathsfbf{c}"],
    ["d5f1", "\\mathsfbf{d}"],
    ["d5f2", "\\mathsfbf{e}"],
    ["d5f3", "\\mathsfbf{f}"],
    ["d5f4", "\\mathsfbf{g}"],
    ["d5f5", "\\mathsfbf{h}"],
    ["d5f6", "\\mathsfbf{i}"],
    ["d5f7", "\\mathsfbf{j}"],
    ["d5f8", "\\mathsfbf{k}"],
    ["d5f9", "\\mathsfbf{l}"],
    ["d5fa", "\\mathsfbf{m}"],
    ["d5fb", "\\mathsfbf{n}"],
    ["d5fc", "\\mathsfbf{o}"],
    ["d5fd", "\\mathsfbf{p}"],
    ["d5fe", "\\mathsfbf{q}"],
    ["d5ff", "\\mathsfbf{r}"],
    ["d600", "\\mathsfbf{s}"],
    ["d601", "\\mathsfbf{t}"],
    ["d602", "\\mathsfbf{u}"],
    ["d603", "\\mathsfbf{v}"],
    ["d604", "\\mathsfbf{w}"],
    ["d605", "\\mathsfbf{x}"],
    ["d606", "\\mathsfbf{y}"],
    ["d607", "\\mathsfbf{z}"],
    ["d608", "\\mathsfsl{A}"],
    ["d609", "\\mathsfsl{B}"],
    ["d60a", "\\mathsfsl{C}"],
    ["d60b", "\\mathsfsl{D}"],
    ["d60c", "\\mathsfsl{E}"],
    ["d60d", "\\mathsfsl{F}"],
    ["d60e", "\\mathsfsl{G}"],
    ["d60f", "\\mathsfsl{H}"],
    ["d610", "\\mathsfsl{I}"],
    ["d611", "\\mathsfsl{J}"],
    ["d612", "\\mathsfsl{K}"],
    ["d613", "\\mathsfsl{L}"],
    ["d614", "\\mathsfsl{M}"],
    ["d615", "\\mathsfsl{N}"],
    ["d616", "\\mathsfsl{O}"],
    ["d617", "\\mathsfsl{P}"],
    ["d618", "\\mathsfsl{Q}"],
    ["d619", "\\mathsfsl{R}"],
    ["d61a", "\\mathsfsl{S}"],
    ["d61b", "\\mathsfsl{T}"],
    ["d61c", "\\mathsfsl{U}"],
    ["d61d", "\\mathsfsl{V}"],
    ["d61e", "\\mathsfsl{W}"],
    ["d61f", "\\mathsfsl{X}"],
    ["d620", "\\mathsfsl{Y}"],
    ["d621", "\\mathsfsl{Z}"],
    ["d622", "\\mathsfsl{a}"],
    ["d623", "\\mathsfsl{b}"],
    ["d624", "\\mathsfsl{c}"],
    ["d625", "\\mathsfsl{d}"],
    ["d626", "\\mathsfsl{e}"],
    ["d627", "\\mathsfsl{f}"],
    ["d628", "\\mathsfsl{g}"],
    ["d629", "\\mathsfsl{h}"],
    ["d62a", "\\mathsfsl{i}"],
    ["d62b", "\\mathsfsl{j}"],
    ["d62c", "\\mathsfsl{k}"],
    ["d62d", "\\mathsfsl{l}"],
    ["d62e", "\\mathsfsl{m}"],
    ["d62f", "\\mathsfsl{n}"],
    ["d630", "\\mathsfsl{o}"],
    ["d631", "\\mathsfsl{p}"],
    ["d632", "\\mathsfsl{q}"],
    ["d633", "\\mathsfsl{r}"],
    ["d634", "\\mathsfsl{s}"],
    ["d635", "\\mathsfsl{t}"],
    ["d636", "\\mathsfsl{u}"],
    ["d637", "\\mathsfsl{v}"],
    ["d638", "\\mathsfsl{w}"],
    ["d639", "\\mathsfsl{x}"],
    ["d63a", "\\mathsfsl{y}"],
    ["d63b", "\\mathsfsl{z}"],
    ["d63c", "\\mathsfbfsl{A}"],
    ["d63d", "\\mathsfbfsl{B}"],
    ["d63e", "\\mathsfbfsl{C}"],
    ["d63f", "\\mathsfbfsl{D}"],
    ["d640", "\\mathsfbfsl{E}"],
    ["d641", "\\mathsfbfsl{F}"],
    ["d642", "\\mathsfbfsl{G}"],
    ["d643", "\\mathsfbfsl{H}"],
    ["d644", "\\mathsfbfsl{I}"],
    ["d645", "\\mathsfbfsl{J}"],
    ["d646", "\\mathsfbfsl{K}"],
    ["d647", "\\mathsfbfsl{L}"],
    ["d648", "\\mathsfbfsl{M}"],
    ["d649", "\\mathsfbfsl{N}"],
    ["d64a", "\\mathsfbfsl{O}"],
    ["d64b", "\\mathsfbfsl{P}"],
    ["d64c", "\\mathsfbfsl{Q}"],
    ["d64d", "\\mathsfbfsl{R}"],
    ["d64e", "\\mathsfbfsl{S}"],
    ["d64f", "\\mathsfbfsl{T}"],
    ["d650", "\\mathsfbfsl{U}"],
    ["d651", "\\mathsfbfsl{V}"],
    ["d652", "\\mathsfbfsl{W}"],
    ["d653", "\\mathsfbfsl{X}"],
    ["d654", "\\mathsfbfsl{Y}"],
    ["d655", "\\mathsfbfsl{Z}"],
    ["d656", "\\mathsfbfsl{a}"],
    ["d657", "\\mathsfbfsl{b}"],
    ["d658", "\\mathsfbfsl{c}"],
    ["d659", "\\mathsfbfsl{d}"],
    ["d65a", "\\mathsfbfsl{e}"],
    ["d65b", "\\mathsfbfsl{f}"],
    ["d65c", "\\mathsfbfsl{g}"],
    ["d65d", "\\mathsfbfsl{h}"],
    ["d65e", "\\mathsfbfsl{i}"],
    ["d65f", "\\mathsfbfsl{j}"],
    ["d660", "\\mathsfbfsl{k}"],
    ["d661", "\\mathsfbfsl{l}"],
    ["d662", "\\mathsfbfsl{m}"],
    ["d663", "\\mathsfbfsl{n}"],
    ["d664", "\\mathsfbfsl{o}"],
    ["d665", "\\mathsfbfsl{p}"],
    ["d666", "\\mathsfbfsl{q}"],
    ["d667", "\\mathsfbfsl{r}"],
    ["d668", "\\mathsfbfsl{s}"],
    ["d669", "\\mathsfbfsl{t}"],
    ["d66a", "\\mathsfbfsl{u}"],
    ["d66b", "\\mathsfbfsl{v}"],
    ["d66c", "\\mathsfbfsl{w}"],
    ["d66d", "\\mathsfbfsl{x}"],
    ["d66e", "\\mathsfbfsl{y}"],
    ["d66f", "\\mathsfbfsl{z}"],
    ["d670", "\\mathtt{A}"],
    ["d671", "\\mathtt{B}"],
    ["d672", "\\mathtt{C}"],
    ["d673", "\\mathtt{D}"],
    ["d674", "\\mathtt{E}"],
    ["d675", "\\mathtt{F}"],
    ["d676", "\\mathtt{G}"],
    ["d677", "\\mathtt{H}"],
    ["d678", "\\mathtt{I}"],
    ["d679", "\\mathtt{J}"],
    ["d67a", "\\mathtt{K}"],
    ["d67b", "\\mathtt{L}"],
    ["d67c", "\\mathtt{M}"],
    ["d67d", "\\mathtt{N}"],
    ["d67e", "\\mathtt{O}"],
    ["d67f", "\\mathtt{P}"],
    ["d680", "\\mathtt{Q}"],
    ["d681", "\\mathtt{R}"],
    ["d682", "\\mathtt{S}"],
    ["d683", "\\mathtt{T}"],
    ["d684", "\\mathtt{U}"],
    ["d685", "\\mathtt{V}"],
    ["d686", "\\mathtt{W}"],
    ["d687", "\\mathtt{X}"],
    ["d688", "\\mathtt{Y}"],
    ["d689", "\\mathtt{Z}"],
    ["d68a", "\\mathtt{a}"],
    ["d68b", "\\mathtt{b}"],
    ["d68c", "\\mathtt{c}"],
    ["d68d", "\\mathtt{d}"],
    ["d68e", "\\mathtt{e}"],
    ["d68f", "\\mathtt{f}"],
    ["d690", "\\mathtt{g}"],
    ["d691", "\\mathtt{h}"],
    ["d692", "\\mathtt{i}"],
    ["d693", "\\mathtt{j}"],
    ["d694", "\\mathtt{k}"],
    ["d695", "\\mathtt{l}"],
    ["d696", "\\mathtt{m}"],
    ["d697", "\\mathtt{n}"],
    ["d698", "\\mathtt{o}"],
    ["d699", "\\mathtt{p}"],
    ["d69a", "\\mathtt{q}"],
    ["d69b", "\\mathtt{r}"],
    ["d69c", "\\mathtt{s}"],
    ["d69d", "\\mathtt{t}"],
    ["d69e", "\\mathtt{u}"],
    ["d69f", "\\mathtt{v}"],
    ["d6a0", "\\mathtt{w}"],
    ["d6a1", "\\mathtt{x}"],
    ["d6a2", "\\mathtt{y}"],
    ["d6a3", "\\mathtt{z}"],
    ["d6a8", "\\mathbf{\\Alpha}"],
    ["d6a9", "\\mathbf{\\Beta}"],
    ["d6aa", "\\mathbf{\\Gamma}"],
    ["d6ab", "\\mathbf{\\Delta}"],
    ["d6ac", "\\mathbf{\\Epsilon}"],
    ["d6ad", "\\mathbf{\\Zeta}"],
    ["d6ae", "\\mathbf{\\Eta}"],
    ["d6af", "\\mathbf{\\Theta}"],
    ["d6b0", "\\mathbf{\\Iota}"],
    ["d6b1", "\\mathbf{\\Kappa}"],
    ["d6b2", "\\mathbf{\\Lambda}"],
    ["d6b5", "\\mathbf{\\Xi}"],
    ["d6b7", "\\mathbf{\\Pi}"],
    ["d6b8", "\\mathbf{\\Rho}"],
    ["d6b9", "\\mathbf{\\vartheta}"],
    ["d6ba", "\\mathbf{\\Sigma}"],
    ["d6bb", "\\mathbf{\\Tau}"],
    ["d6bc", "\\mathbf{\\Upsilon}"],
    ["d6bd", "\\mathbf{\\Phi}"],
    ["d6be", "\\mathbf{\\Chi}"],
    ["d6bf", "\\mathbf{\\Psi}"],
    ["d6c0", "\\mathbf{\\Omega}"],
    ["d6c1", "\\mathbf{\\nabla}"],
    ["d6c2", "\\mathbf{\\Alpha}"],
    ["d6c3", "\\mathbf{\\Beta}"],
    ["d6c4", "\\mathbf{\\Gamma}"],
    ["d6c5", "\\mathbf{\\Delta}"],
    ["d6c6", "\\mathbf{\\Epsilon}"],
    ["d6c7", "\\mathbf{\\Zeta}"],
    ["d6c8", "\\mathbf{\\Eta}"],
    ["d6c9", "\\mathbf{\\theta}"],
    ["d6ca", "\\mathbf{\\Iota}"],
    ["d6cb", "\\mathbf{\\Kappa}"],
    ["d6cc", "\\mathbf{\\Lambda}"],
    ["d6cf", "\\mathbf{\\Xi}"],
    ["d6d1", "\\mathbf{\\Pi}"],
    ["d6d2", "\\mathbf{\\Rho}"],
    ["d6d3", "\\mathbf{\\varsigma}"],
    ["d6d4", "\\mathbf{\\Sigma}"],
    ["d6d5", "\\mathbf{\\Tau}"],
    ["d6d6", "\\mathbf{\\Upsilon}"],
    ["d6d7", "\\mathbf{\\Phi}"],
    ["d6d8", "\\mathbf{\\Chi}"],
    ["d6d9", "\\mathbf{\\Psi}"],
    ["d6da", "\\mathbf{\\Omega}"],
    ["d6db", "\\partial{}"],
    ["d6dc", "\\in"],
    ["d6dd", "\\mathbf{\\vartheta}"],
    ["d6de", "\\mathbf{\\varkappa}"],
    ["d6df", "\\mathbf{\\phi}"],
    ["d6e0", "\\mathbf{\\varrho}"],
    ["d6e1", "\\mathbf{\\varpi}"],
    ["d6e2", "\\mathsl{\\Alpha}"],
    ["d6e3", "\\mathsl{\\Beta}"],
    ["d6e4", "\\mathsl{\\Gamma}"],
    ["d6e5", "\\mathsl{\\Delta}"],
    ["d6e6", "\\mathsl{\\Epsilon}"],
    ["d6e7", "\\mathsl{\\Zeta}"],
    ["d6e8", "\\mathsl{\\Eta}"],
    ["d6e9", "\\mathsl{\\Theta}"],
    ["d6ea", "\\mathsl{\\Iota}"],
    ["d6eb", "\\mathsl{\\Kappa}"],
    ["d6ec", "\\mathsl{\\Lambda}"],
    ["d6ef", "\\mathsl{\\Xi}"],
    ["d6f1", "\\mathsl{\\Pi}"],
    ["d6f2", "\\mathsl{\\Rho}"],
    ["d6f3", "\\mathsl{\\vartheta}"],
    ["d6f4", "\\mathsl{\\Sigma}"],
    ["d6f5", "\\mathsl{\\Tau}"],
    ["d6f6", "\\mathsl{\\Upsilon}"],
    ["d6f7", "\\mathsl{\\Phi}"],
    ["d6f8", "\\mathsl{\\Chi}"],
    ["d6f9", "\\mathsl{\\Psi}"],
    ["d6fa", "\\mathsl{\\Omega}"],
    ["d6fb", "\\mathsl{\\nabla}"],
    ["d6fc", "\\mathsl{\\Alpha}"],
    ["d6fd", "\\mathsl{\\Beta}"],
    ["d6fe", "\\mathsl{\\Gamma}"],
    ["d6ff", "\\mathsl{\\Delta}"],
    ["d700", "\\mathsl{\\Epsilon}"],
    ["d701", "\\mathsl{\\Zeta}"],
    ["d702", "\\mathsl{\\Eta}"],
    ["d703", "\\mathsl{\\Theta}"],
    ["d704", "\\mathsl{\\Iota}"],
    ["d705", "\\mathsl{\\Kappa}"],
    ["d706", "\\mathsl{\\Lambda}"],
    ["d709", "\\mathsl{\\Xi}"],
    ["d70b", "\\mathsl{\\Pi}"],
    ["d70c", "\\mathsl{\\Rho}"],
    ["d70d", "\\mathsl{\\varsigma}"],
    ["d70e", "\\mathsl{\\Sigma}"],
    ["d70f", "\\mathsl{\\Tau}"],
    ["d710", "\\mathsl{\\Upsilon}"],
    ["d711", "\\mathsl{\\Phi}"],
    ["d712", "\\mathsl{\\Chi}"],
    ["d713", "\\mathsl{\\Psi}"],
    ["d714", "\\mathsl{\\Omega}"],
    ["d715", "\\partial{}"],
    ["d716", "\\in"],
    ["d717", "\\mathsl{\\vartheta}"],
    ["d718", "\\mathsl{\\varkappa}"],
    ["d719", "\\mathsl{\\phi}"],
    ["d71a", "\\mathsl{\\varrho}"],
    ["d71b", "\\mathsl{\\varpi}"],
    ["d71c", "\\mathbit{\\Alpha}"],
    ["d71d", "\\mathbit{\\Beta}"],
    ["d71e", "\\mathbit{\\Gamma}"],
    ["d71f", "\\mathbit{\\Delta}"],
    ["d720", "\\mathbit{\\Epsilon}"],
    ["d721", "\\mathbit{\\Zeta}"],
    ["d722", "\\mathbit{\\Eta}"],
    ["d723", "\\mathbit{\\Theta}"],
    ["d724", "\\mathbit{\\Iota}"],
    ["d725", "\\mathbit{\\Kappa}"],
    ["d726", "\\mathbit{\\Lambda}"],
    ["d729", "\\mathbit{\\Xi}"],
    ["d72b", "\\mathbit{\\Pi}"],
    ["d72c", "\\mathbit{\\Rho}"],
    ["d72d", "\\mathbit{O}"],
    ["d72e", "\\mathbit{\\Sigma}"],
    ["d72f", "\\mathbit{\\Tau}"],
    ["d730", "\\mathbit{\\Upsilon}"],
    ["d731", "\\mathbit{\\Phi}"],
    ["d732", "\\mathbit{\\Chi}"],
    ["d733", "\\mathbit{\\Psi}"],
    ["d734", "\\mathbit{\\Omega}"],
    ["d735", "\\mathbit{\\nabla}"],
    ["d736", "\\mathbit{\\Alpha}"],
    ["d737", "\\mathbit{\\Beta}"],
    ["d738", "\\mathbit{\\Gamma}"],
    ["d739", "\\mathbit{\\Delta}"],
    ["d73a", "\\mathbit{\\Epsilon}"],
    ["d73b", "\\mathbit{\\Zeta}"],
    ["d73c", "\\mathbit{\\Eta}"],
    ["d73d", "\\mathbit{\\Theta}"],
    ["d73e", "\\mathbit{\\Iota}"],
    ["d73f", "\\mathbit{\\Kappa}"],
    ["d740", "\\mathbit{\\Lambda}"],
    ["d743", "\\mathbit{\\Xi}"],
    ["d745", "\\mathbit{\\Pi}"],
    ["d746", "\\mathbit{\\Rho}"],
    ["d747", "\\mathbit{\\varsigma}"],
    ["d748", "\\mathbit{\\Sigma}"],
    ["d749", "\\mathbit{\\Tau}"],
    ["d74a", "\\mathbit{\\Upsilon}"],
    ["d74b", "\\mathbit{\\Phi}"],
    ["d74c", "\\mathbit{\\Chi}"],
    ["d74d", "\\mathbit{\\Psi}"],
    ["d74e", "\\mathbit{\\Omega}"],
    ["d74f", "\\partial{}"],
    ["d750", "\\in"],
    ["d751", "\\mathbit{\\vartheta}"],
    ["d752", "\\mathbit{\\varkappa}"],
    ["d753", "\\mathbit{\\phi}"],
    ["d754", "\\mathbit{\\varrho}"],
    ["d755", "\\mathbit{\\varpi}"],
    ["d756", "\\mathsfbf{\\Alpha}"],
    ["d757", "\\mathsfbf{\\Beta}"],
    ["d758", "\\mathsfbf{\\Gamma}"],
    ["d759", "\\mathsfbf{\\Delta}"],
    ["d75a", "\\mathsfbf{\\Epsilon}"],
    ["d75b", "\\mathsfbf{\\Zeta}"],
    ["d75c", "\\mathsfbf{\\Eta}"],
    ["d75d", "\\mathsfbf{\\Theta}"],
    ["d75e", "\\mathsfbf{\\Iota}"],
    ["d75f", "\\mathsfbf{\\Kappa}"],
    ["d760", "\\mathsfbf{\\Lambda}"],
    ["d763", "\\mathsfbf{\\Xi}"],
    ["d765", "\\mathsfbf{\\Pi}"],
    ["d766", "\\mathsfbf{\\Rho}"],
    ["d767", "\\mathsfbf{\\vartheta}"],
    ["d768", "\\mathsfbf{\\Sigma}"],
    ["d769", "\\mathsfbf{\\Tau}"],
    ["d76a", "\\mathsfbf{\\Upsilon}"],
    ["d76b", "\\mathsfbf{\\Phi}"],
    ["d76c", "\\mathsfbf{\\Chi}"],
    ["d76d", "\\mathsfbf{\\Psi}"],
    ["d76e", "\\mathsfbf{\\Omega}"],
    ["d76f", "\\mathsfbf{\\nabla}"],
    ["d770", "\\mathsfbf{\\Alpha}"],
    ["d771", "\\mathsfbf{\\Beta}"],
    ["d772", "\\mathsfbf{\\Gamma}"],
    ["d773", "\\mathsfbf{\\Delta}"],
    ["d774", "\\mathsfbf{\\Epsilon}"],
    ["d775", "\\mathsfbf{\\Zeta}"],
    ["d776", "\\mathsfbf{\\Eta}"],
    ["d777", "\\mathsfbf{\\Theta}"],
    ["d778", "\\mathsfbf{\\Iota}"],
    ["d779", "\\mathsfbf{\\Kappa}"],
    ["d77a", "\\mathsfbf{\\Lambda}"],
    ["d77d", "\\mathsfbf{\\Xi}"],
    ["d77f", "\\mathsfbf{\\Pi}"],
    ["d780", "\\mathsfbf{\\Rho}"],
    ["d781", "\\mathsfbf{\\varsigma}"],
    ["d782", "\\mathsfbf{\\Sigma}"],
    ["d783", "\\mathsfbf{\\Tau}"],
    ["d784", "\\mathsfbf{\\Upsilon}"],
    ["d785", "\\mathsfbf{\\Phi}"],
    ["d786", "\\mathsfbf{\\Chi}"],
    ["d787", "\\mathsfbf{\\Psi}"],
    ["d788", "\\mathsfbf{\\Omega}"],
    ["d789", "\\partial{}"],
    ["d78a", "\\in"],
    ["d78b", "\\mathsfbf{\\vartheta}"],
    ["d78c", "\\mathsfbf{\\varkappa}"],
    ["d78d", "\\mathsfbf{\\phi}"],
    ["d78e", "\\mathsfbf{\\varrho}"],
    ["d78f", "\\mathsfbf{\\varpi}"],
    ["d790", "\\mathsfbfsl{\\Alpha}"],
    ["d791", "\\mathsfbfsl{\\Beta}"],
    ["d792", "\\mathsfbfsl{\\Gamma}"],
    ["d793", "\\mathsfbfsl{\\Delta}"],
    ["d794", "\\mathsfbfsl{\\Epsilon}"],
    ["d795", "\\mathsfbfsl{\\Zeta}"],
    ["d796", "\\mathsfbfsl{\\Eta}"],
    ["d797", "\\mathsfbfsl{\\vartheta}"],
    ["d798", "\\mathsfbfsl{\\Iota}"],
    ["d799", "\\mathsfbfsl{\\Kappa}"],
    ["d79a", "\\mathsfbfsl{\\Lambda}"],
    ["d79d", "\\mathsfbfsl{\\Xi}"],
    ["d79f", "\\mathsfbfsl{\\Pi}"],
    ["d7a0", "\\mathsfbfsl{\\Rho}"],
    ["d7a1", "\\mathsfbfsl{\\vartheta}"],
    ["d7a2", "\\mathsfbfsl{\\Sigma}"],
    ["d7a3", "\\mathsfbfsl{\\Tau}"],
    ["d7a4", "\\mathsfbfsl{\\Upsilon}"],
    ["d7a5", "\\mathsfbfsl{\\Phi}"],
    ["d7a6", "\\mathsfbfsl{\\Chi}"],
    ["d7a7", "\\mathsfbfsl{\\Psi}"],
    ["d7a8", "\\mathsfbfsl{\\Omega}"],
    ["d7a9", "\\mathsfbfsl{\\nabla}"],
    ["d7aa", "\\mathsfbfsl{\\Alpha}"],
    ["d7ab", "\\mathsfbfsl{\\Beta}"],
    ["d7ac", "\\mathsfbfsl{\\Gamma}"],
    ["d7ad", "\\mathsfbfsl{\\Delta}"],
    ["d7ae", "\\mathsfbfsl{\\Epsilon}"],
    ["d7af", "\\mathsfbfsl{\\Zeta}"],
    ["d7b0", "\\mathsfbfsl{\\Eta}"],
    ["d7b1", "\\mathsfbfsl{\\vartheta}"],
    ["d7b2", "\\mathsfbfsl{\\Iota}"],
    ["d7b3", "\\mathsfbfsl{\\Kappa}"],
    ["d7b4", "\\mathsfbfsl{\\Lambda}"],
    ["d7b7", "\\mathsfbfsl{\\Xi}"],
    ["d7b9", "\\mathsfbfsl{\\Pi}"],
    ["d7ba", "\\mathsfbfsl{\\Rho}"],
    ["d7bb", "\\mathsfbfsl{\\varsigma}"],
    ["d7bc", "\\mathsfbfsl{\\Sigma}"],
    ["d7bd", "\\mathsfbfsl{\\Tau}"],
    ["d7be", "\\mathsfbfsl{\\Upsilon}"],
    ["d7bf", "\\mathsfbfsl{\\Phi}"],
    ["d7c0", "\\mathsfbfsl{\\Chi}"],
    ["d7c1", "\\mathsfbfsl{\\Psi}"],
    ["d7c2", "\\mathsfbfsl{\\Omega}"],
    ["d7c3", "\\partial{}"],
    ["d7c4", "\\in"],
    ["d7c5", "\\mathsfbfsl{\\vartheta}"],
    ["d7c6", "\\mathsfbfsl{\\varkappa}"],
    ["d7c7", "\\mathsfbfsl{\\phi}"],
    ["d7c8", "\\mathsfbfsl{\\varrho}"],
    ["d7c9", "\\mathsfbfsl{\\varpi}"],
    ["d7ce", "\\mathbf{0}"],
    ["d7cf", "\\mathbf{1}"],
    ["d7d0", "\\mathbf{2}"],
    ["d7d1", "\\mathbf{3}"],
    ["d7d2", "\\mathbf{4}"],
    ["d7d3", "\\mathbf{5}"],
    ["d7d4", "\\mathbf{6}"],
    ["d7d5", "\\mathbf{7}"],
    ["d7d6", "\\mathbf{8}"],
    ["d7d7", "\\mathbf{9}"],
    ["d7d8", "\\mathbb{0}"],
    ["d7d9", "\\mathbb{1}"],
    ["d7da", "\\mathbb{2}"],
    ["d7db", "\\mathbb{3}"],
    ["d7dc", "\\mathbb{4}"],
    ["d7dd", "\\mathbb{5}"],
    ["d7de", "\\mathbb{6}"],
    ["d7df", "\\mathbb{7}"],
    ["d7e0", "\\mathbb{8}"],
    ["d7e1", "\\mathbb{9}"],
    ["d7e2", "\\mathsf{0}"],
    ["d7e3", "\\mathsf{1}"],
    ["d7e4", "\\mathsf{2}"],
    ["d7e5", "\\mathsf{3}"],
    ["d7e6", "\\mathsf{4}"],
    ["d7e7", "\\mathsf{5}"],
    ["d7e8", "\\mathsf{6}"],
    ["d7e9", "\\mathsf{7}"],
    ["d7ea", "\\mathsf{8}"],
    ["d7eb", "\\mathsf{9}"],
    ["d7ec", "\\mathsfbf{0}"],
    ["d7ed", "\\mathsfbf{1}"],
    ["d7ee", "\\mathsfbf{2}"],
    ["d7ef", "\\mathsfbf{3}"],
    ["d7f0", "\\mathsfbf{4}"],
    ["d7f1", "\\mathsfbf{5}"],
    ["d7f2", "\\mathsfbf{6}"],
    ["d7f3", "\\mathsfbf{7}"],
    ["d7f4", "\\mathsfbf{8}"],
    ["d7f5", "\\mathsfbf{9}"],
    ["d7f6", "\\mathtt{0}"],
    ["d7f7", "\\mathtt{1}"],
    ["d7f8", "\\mathtt{2}"],
    ["d7f9", "\\mathtt{3}"],
    ["d7fa", "\\mathtt{4}"],
    ["d7fb", "\\mathtt{5}"],
    ["d7fc", "\\mathtt{6}"],
    ["d7fd", "\\mathtt{7}"],
    ["d7fe", "\\mathtt{8}"],
    ["d7ff", "\\mathtt{9}"],
  ]);
  function Qm(r) {
    var n;
    var e = [];
    r = r.replace(/\$[^$]+\$/, (s) => (e.push(s), "MATH.EXP.".concat(e.length - 1)));
    var t = "",
      i = !1;
    for (var s = 0; s < r.length; s++) {
      if (i) {
        (i = !1), (t += r[s]);
        continue;
      }
      if (r[s] === "\\") {
        (i = !0), (t += r[s]);
        continue;
      }
      var o = r.charCodeAt(s).toString(16).padStart(4, "0");
      t += (n = Xm.get(o)) != null ? n : r[s];
    }
    return t.replace(/MATH\.EXP\.(\d+)/, (s, o) => {
      var u;
      return (u = e[Number(o)]) != null ? u : "";
    });
  }
  h(Qm, "escapeSpecialCharacters");
  function Jm(r) {
    return r.replace(/(\w)(\S*)/g, (e, t, i) => {
      var n = t + i;
      return QE(n) ? n : t.toLocaleUpperCase() + i.toLocaleLowerCase();
    });
  }
  h(Jm, "titleCase");
  function QE(r) {
    return /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/.test(r);
  }
  h(QE, "isRomanNumeral");
  function wr(r) {
    return r.replace(/[^0-9A-Za-z]/g, "").toLocaleLowerCase();
  }
  h(wr, "alphaNum");
  function Zm(r) {
    return r.replace(/\r\n?/g, "\n");
  }
  h(Zm, "convertCRLF");
  function e0(r, e) {
    var t = r.split(" "),
      i = [],
      n = "";
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = t.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _slicedToArray(_step.value, 2),
          s = _step_value[0],
          o = _step_value[1];
        n.length + o.length + 1 > e && s > 0 && (i.push(n.trim()), (n = "")), (n += o + " ");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return [...i, n.trim()];
  }
  h(e0, "wrapText");
  function t0(r) {
    return r
      .replace(/\s*\n\s*\n\s*/g, "<<BIBTEX_TIDY_PARA>>")
      .replace(/\s*\n\s*/g, " ")
      .replace(/<<BIBTEX_TIDY_PARA>>/g, "\n\n");
  }
  h(t0, "unwrapText");
  function xa(r, e) {
    return e && (r = ao(yn(lo(r)))), "{".concat(r, "}");
  }
  h(xa, "addEnclosingBraces");
  function i0(r) {
    return r.replace(/^\{([^{}]*)\}$/g, "$1");
  }
  h(i0, "removeEnclosingBraces");
  function r0(r) {
    return r.replace(/\\?_/g, "\\%5F");
  }
  h(r0, "escapeURL");
  function n0(r, e) {
    var t = r.split(" and ");
    return t.length > e ? [...t.slice(0, e), "others"].join(" and ") : r;
  }
  h(n0, "limitAuthors");
  function s0(r) {
    for (var e = 0; e < 4; e++) r = r.replace(/(\d)\s*-\s*(\d)/g, "$1--$2");
    return r;
  }
  h(s0, "formatPageRange");
  function Cn(r) {
    var e;
    return r.type !== "text" && ((e = r.block) == null ? void 0 : e.type) === "entry";
  }
  h(Cn, "isEntryNode");
  function o0(r, e, t, i) {
    var f, d;
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (t)
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var p = _step.value;
          n.set(p, !!i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    n.has("key") || n.set("key", !1);
    var s = new Set(),
      o = [],
      u = new Map(),
      l = new Map(),
      a = new Map(),
      c = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = Hi(r)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var p1 = _step1.value;
        var m = e.get(p1);
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var _step_value = _slicedToArray(_step2.value, 2),
              D = _step_value[0],
              g = _step_value[1];
            var b = void 0,
              F = void 0;
            switch (D) {
              case "key": {
                if (!p1.key) continue;
                var E = p1.key.toLocaleLowerCase();
                (b = u.get(E)), b ? (F = "The citation key ".concat(p1.key, " has already been used.")) : u.set(E, p1);
                break;
              }
              case "doi": {
                var E1 = wr((f = m.get("doi")) != null ? f : "");
                if (!E1) continue;
                (b = l.get(E1)), b ? (F = "Entry ".concat(p1.key, " has an identical DOI to entry ").concat(b.key, ".")) : l.set(E1, p1);
                break;
              }
              case "citation": {
                var E2 = m.get("title"),
                  A = m.get("author"),
                  _ = m.get("number");
                if (!E2 || !A) continue;
                var B = [wr(A.split(/,| and/)[0]), wr(E2), wr(_ != null ? _ : "0")].join(":");
                (b = a.get(B)), b ? (F = "Entry ".concat(p1.key, " has similar content to entry ").concat(b.key, ".")) : a.set(B, p1);
                break;
              }
              case "abstract": {
                var A1 = wr((d = m.get("abstract")) != null ? d : "").slice(0, 100);
                if (!A1) continue;
                (b = c.get(A1)), b ? (F = "Entry ".concat(p1.key, " has a similar abstract to entry ").concat(b.key, ".")) : c.set(A1, p1);
                break;
              }
            }
            b && g && (s.add(p1), JE(i, b, p1)), F && o.push({ code: "DUPLICATE_ENTRY", rule: D, message: "Duplicate ".concat(g ? "removed" : "detected", ". ").concat(F) });
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return { entries: s, warnings: o };
  }
  h(o0, "checkForDuplicates");
  function JE(r, e, t) {
    if (r)
      switch (r) {
        case "last":
          (e.key = t.key), (e.fields = t.fields);
          break;
        case "combine":
        case "overwrite":
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            var _loop = function () {
              var i = _step.value;
              var n = e.fields.find((s) => s.name.toLocaleLowerCase() === i.name.toLocaleLowerCase());
              n ? r === "overwrite" && (n.value = i.value) : e.fields.push(i);
            };
            for (var _iterator = t.fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          break;
        case "first":
          return;
      }
  }
  h(JE, "mergeEntries");
  var Sa = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"];
  function u0(r, e, t) {
    var s, o, u, l, a;
    var i = new Map(),
      n = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var c = _step.value;
        if (c.type === "text" || ((s = c.block) == null ? void 0 : s.type) !== "entry") {
          n.push(c);
          continue;
        }
        var f = new Map();
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var d = _step1.value;
            d.startsWith("-") && (d = d.slice(1));
            var p = void 0;
            if (d === "key") p = (o = c.block.key) != null ? o : "";
            else if (d === "type") p = c.command;
            else if (d === "month") {
              var m = (u = e.get(c.block)) == null ? void 0 : u.get(d),
                D = m ? Sa.indexOf(m) : -1;
              p = D > -1 ? D : "";
            } else p = (a = (l = e.get(c.block)) == null ? void 0 : l.get(d)) != null ? a : "";
            f.set(d, typeof p == "string" ? p.toLowerCase() : p);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        for (i.set(c, f); n.length > 0; ) i.set(n.pop(), f);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      var _loop = function () {
        var c = _step2.value;
        var f = c.startsWith("-"),
          d = f ? c.slice(1) : c;
        r.children.sort((p, m) => {
          var b, F, E, A;
          var D = (F = (b = i.get(p)) == null ? void 0 : b.get(d)) != null ? F : "￰",
            g = (A = (E = i.get(m)) == null ? void 0 : E.get(d)) != null ? A : "￰";
          return typeof D == "number" && (D = String(D).padStart(50, "0")), typeof g == "number" && (g = String(g).padStart(50, "0")), (f ? g : D).localeCompare(f ? D : g);
        });
      };
      for (var _iterator2 = [...t].reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) _loop();
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  }
  h(u0, "sortEntries");
  function l0(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = Hi(r)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        t.fields.sort((i, n) => {
          var s = e.indexOf(i.name.toLocaleLowerCase()),
            o = e.indexOf(n.name.toLocaleLowerCase());
          return s === -1 && o === -1 ? 0 : s === -1 ? 1 : o === -1 ? -1 : o < s ? 1 : o > s ? -1 : 0;
        });
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(l0, "sortEntryFields");
  var ZE = new Set(Sa);
  function h0(r, e, t) {
    var i = e.omit,
      n = e.tab,
      s = e.space,
      o = n ? "	" : " ".repeat(s),
      u = new Set(i),
      l = r.children
        .map((a) => ev(a, e, o, u, t))
        .join("")
        .trimEnd();
    return l.endsWith("\n") || (l += "\n"), l;
  }
  h(h0, "formatBibtex");
  function ev(r, e, t, i, n) {
    if (r.type === "text") return a0(r.text, e);
    if (!r.block) throw new Error("FATAL!");
    switch (r.block.type) {
      case "preamble":
      case "string":
        return "".concat(r.block.raw, "\n") + (e.blankLines ? "\n" : "");
      case "comment":
        return a0(r.block.raw, e);
      case "entry":
        return tv(r.command, r.block, e, t, i, n == null ? void 0 : n.get(r.block)) + (e.blankLines ? "\n" : "");
    }
  }
  h(ev, "formatNode");
  function tv(r, e, t, i, n, s) {
    var o = t.align,
      u = t.trailingCommas,
      l = t.removeDuplicateFields,
      a = t.removeEmptyFields,
      c = t.lowercase,
      f = "",
      d = c ? r.toLocaleLowerCase() : r;
    f += "@".concat(d, "{");
    var p = s != null ? s : e.key;
    p && (f += "".concat(p, ","));
    var m = new Set();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.fields.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _slicedToArray(_step.value, 2),
          D = _step_value[0],
          g = _step_value[1];
        var b = g.name.toLocaleLowerCase(),
          F = c ? b : g.name;
        if (g.name !== "" && !n.has(b) && !(l && m.has(b))) {
          if ((m.add(b), g.value.concat.length === 0)) {
            if (a) continue;
            f += "\n".concat(i).concat(F);
          } else {
            var E = Ba(g, t);
            if (a && (E === "{}" || E === '""')) continue;
            f += "\n"
              .concat(i)
              .concat(F.trim().padEnd(o - 1), " = ")
              .concat(E);
          }
          (D < e.fields.length - 1 || u) && (f += ",");
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return (f += "\n}\n"), f;
  }
  h(tv, "formatEntry");
  function a0(r, param) {
    var e = param.stripComments,
      t = param.tidyComments;
    if (e) return "";
    if (t) {
      var i = r.trim();
      return i === "" ? "" : i + "\n";
    } else return r.replace(/^[ \t]*\n|[ \t]*$/g, "");
  }
  h(a0, "formatComment");
  function Ba(r, e) {
    var t = e.curly,
      i = e.numeric,
      n = e.align,
      s = e.stripEnclosingBraces,
      o = e.dropAllCaps,
      u = e.escape,
      l = e.encodeUrls,
      a = e.wrap,
      c = e.maxAuthors,
      f = e.tab,
      d = e.space,
      p = e.enclosingBraces,
      m = e.removeBraces,
      D = r.name.toLocaleLowerCase(),
      g = f ? "	" : " ".repeat(d),
      b = new Set((p != null ? p : []).map((E) => E.toLocaleLowerCase())),
      F = new Set((m != null ? m : []).map((E) => E.toLocaleLowerCase()));
    return r.value.concat
      .map((param) => {
        var E = param.type,
          A = param.value;
        var _ = A.match(/^[1-9][0-9]*$/);
        if ((_ && t && (E = "braced"), E === "literal" || (i && _))) return A;
        var B = A.slice(0, 3).toLowerCase();
        if (!t && i && D === "month" && ZE.has(B)) return B;
        if (((A = t0(A)), s && (A = i0(A)), o && !A.match(/[a-z]/) && (A = Jm(A)), D === "url" && l && (A = r0(A)), u && (A = Qm(A)), D === "pages" && (A = s0(A)), D === "author" && c && (A = n0(A, c)), F.has(D) && (A = ao(yn(lo(A)))), b.has(D) && (E === "braced" || t) && (A = xa(A, !0)), E === "braced" && r.value.concat.length === 1 && (A = A.trim()), E === "braced" || t)) {
          var I = "".concat(g).concat(n, "{").concat(A, "}").length,
            Q = A.includes("\n\n");
          if ((a && I > a) || Q) {
            var W = A.split("\n\n"),
              H = g.repeat(2);
            if (a) {
              var z = a;
              W = W.map((oe) => e0(oe, z - H.length).join("\n" + H));
            }
            A = "\n" + H + W.join("\n\n".concat(H)) + "\n" + g;
          }
          return xa(A);
        } else return '"'.concat(A, '"');
      })
      .join(" # ");
  }
  h(Ba, "formatValue");
  function An(r, e) {
    return r
      .replace(/\s+/g, " ")
      .split(/ and /i)
      .map((t) => {
        var i = t.trim();
        e && (i = i.replace(/["{}]/g, ""));
        var n = i.indexOf(",");
        if (n > -1) return { firstNames: i.slice(n + 1).trim(), lastName: i.slice(0, n).trim() };
        {
          var s = i.lastIndexOf(" ");
          return { firstNames: i.slice(0, s).trim(), lastName: i.slice(s).trim() };
        }
      });
  }
  h(An, "parseAuthors");
  var iv = {
      auth: {
        description: "Last name of first authors",
        callback: (r) => {
          var i, n;
          var t =
            (n = An((i = r.get("author")) != null ? i : "", !0)[0]) == null
              ? void 0
              : n.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_"
                );
          return t ? [t] : [];
        },
      },
      authEtAl: {
        description: "If 1 or 2 authors, both authors, otherwise first author and EtAl",
        callback: (r) => {
          var t;
          var e = An((t = r.get("author")) != null ? t : "", !0);
          return [
            ...e
              .slice(0, 2)
              .map((i) =>
                i.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_"
                )
              ),
            ...(e.length > 2 ? ["Et", "Al"] : []),
          ];
        },
      },
      authors: {
        description: "Last name all authors",
        callback: (r) => {
          var t;
          return An((t = r.get("author")) != null ? t : "", !0).map((i) =>
            i.lastName.replace(
              /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
              "_"
            )
          );
        },
      },
      authorsN: {
        description: "Last name N authors, with EtAl if more",
        callback: (r, e) => {
          var i;
          var t = An((i = r.get("author")) != null ? i : "", !0);
          return [
            ...t
              .slice(0, e)
              .map((n) =>
                n.lastName.replace(
                  /(?:[\0-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/g,
                  "_"
                )
              ),
            ...(t.length > e ? ["Et", "Al"] : []),
          ];
        },
      },
      veryshorttitle: { description: "First non-function word of the title", callback: (r) => c0(ho(r)).slice(0, 1) },
      shorttitle: { description: "First three non-function words of the title", callback: (r) => c0(ho(r)).slice(0, 3) },
      title: { description: "Full title, capitalized", callback: (r) => d0(co(ho(r))) },
      fulltitle: { description: "Full title, verbatim", callback: (r) => co(ho(r)) },
      year: {
        description: "Year",
        callback: (r) => {
          var t;
          var e = (t = r.get("year")) == null ? void 0 : t.replace(/[^0-9]/g, "");
          return e ? [e] : [];
        },
      },
      duplicateLetter: { description: "If the multiple entries end up with the same key, then insert a letter a-z. By default this will be inserted at the end.", callback: () => ["[duplicateLetter]"] },
      duplicateNumber: { description: "If the multiple entries end up with the same key, then insert a number.", callback: () => ["[duplicateNumber]"] },
    },
    rv = {
      required: {
        description: "If data is missing, revert to existing key",
        callback: (r) => {
          if (r.length === 0) throw new En();
          return r;
        },
      },
      lower: { description: "Convert to lowercase", callback: (r) => r.map((e) => e.toLocaleLowerCase()) },
      upper: { description: "Convert to uppercase", callback: (r) => r.map((e) => e.toLocaleUpperCase()) },
      capitalize: { description: "Capitalize first letter of each word", callback: d0 },
    },
    En = class En extends Error {};
  h(En, "MissingRequiredData");
  function f0(r, e, t) {
    var o;
    var i = t;
    !t.includes("[duplicateLetter]") && !t.includes("[duplicateNumber]") && (i = t + "[duplicateLetter]");
    var n = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var u = _step.value;
        if (Cn(u)) {
          var l = e.get(u.block);
          if (!l) continue;
          var a = nv(l, i);
          if (!a) continue;
          var c = (o = n.get(a)) != null ? o : [];
          n.set(a, [...c, u.block]);
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var s = new Map();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined,
      _iteratorNormalCompletion2 = true,
      _didIteratorError2 = false,
      _iteratorError2 = undefined;
    try {
      for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
        var _step_value = _slicedToArray(_step1.value, 2),
          u1 = _step_value[0],
          l1 = _step_value[1];
        try {
          for (var _iterator2 = l1.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
            var _step_value1 = _slicedToArray(_step2.value, 2),
              a1 = _step_value1[0],
              c1 = _step_value1[1];
            var f = l1.length > 1 ? String.fromCharCode(97 + a1) : "",
              d = l1.length > 1 ? String(a1 + 1) : "";
            c1.key = u1.replace(/\[duplicateLetter\]/g, f).replace(/\[duplicateNumber\]/g, d);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
    return s;
  }
  h(f0, "generateKeys");
  function nv(r, e) {
    try {
      var _$t = e.replace(/\[[^:\]]+(?::[^:\]]+)*\]/g, (i) => {
        var _i_slice_split = _toArray(i.slice(1, -1).split(":")),
          n = _i_slice_split[0],
          s = _i_slice_split.slice(1);
        if (!n) throw new Error("Token parse error");
        var o,
          u = n.replace(/[0-9]+/g, (c) => ((o = Number(c)), "N")),
          l = iv[u],
          a;
        if (l) a = l.callback(r, o);
        else if (u === u.toLocaleUpperCase()) {
          var c = r.get(u.toLocaleLowerCase());
          a = c ? co(c) : [];
        } else throw new Error("Invalid citation key token ".concat(u));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var c1 = _step.value;
            var f = rv[c1];
            if (f) a = f.callback(a);
            else throw new Error("Invalid modifier ".concat(c1));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return a.join("");
      });
      return _$t === "" ? void 0 : _$t;
    } catch (t) {
      if (t instanceof En) return;
      throw t;
    }
  }
  h(nv, "generateKey");
  var sv = new Set([
    "a",
    "about",
    "above",
    "across",
    "against",
    "along",
    "among",
    "an",
    "and",
    "around",
    "at",
    "before",
    "behind",
    "below",
    "beneath",
    "beside",
    "between",
    "beyond",
    "but",
    "by",
    "down",
    "during",
    "except",
    "for",
    "for",
    "from",
    "in",
    "inside",
    "into",
    "like",
    "near",
    "nor",
    "of",
    "off",
    "on",
    "onto",
    "or",
    "since",
    "so",
    "the",
    "through",
    "to",
    "toward",
    "under",
    "until",
    "up",
    "upon",
    "with",
    "within",
    "without",
    "yet",
  ]);
  function c0(r) {
    return co(r).filter((e) => !sv.has(e.toLocaleLowerCase()));
  }
  h(c0, "nonFunctionWords");
  function co(r) {
    return r
      .split(
        /(?:[\0-\/:-@\[-`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u036F\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482-\u0489\u0530\u0557\u0558\u055A-\u055F\u0589-\u05CF\u05EB-\u05EE\u05F3-\u061F\u064B-\u066D\u0670\u06D4\u06D6-\u06E4\u06E7-\u06ED\u06F0-\u06F9\u06FD\u06FE\u0700-\u070F\u0711\u0730-\u074C\u07A6-\u07B0\u07B2-\u07C9\u07EB-\u07F3\u07F6-\u07F9\u07FB-\u07FF\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u083F\u0859-\u085F\u086B-\u086F\u0888\u088F-\u089F\u08CA-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962-\u0970\u0981-\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA-\u09BC\u09BE-\u09CD\u09CF-\u09DB\u09DE\u09E2-\u09EF\u09F2-\u09FB\u09FD-\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A-\u0A58\u0A5D\u0A5F-\u0A71\u0A75-\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA-\u0ABC\u0ABE-\u0ACF\u0AD1-\u0ADF\u0AE2-\u0AF8\u0AFA-\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A-\u0B3C\u0B3E-\u0B5B\u0B5E\u0B62-\u0B70\u0B72-\u0B82\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BCF\u0BD1-\u0C04\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C3E-\u0C57\u0C5B\u0C5C\u0C5E\u0C5F\u0C62-\u0C7F\u0C81-\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA-\u0CBC\u0CBE-\u0CDC\u0CDF\u0CE2-\u0CF0\u0CF3-\u0D03\u0D0D\u0D11\u0D3B\u0D3C\u0D3E-\u0D4D\u0D4F-\u0D53\u0D57-\u0D5E\u0D62-\u0D79\u0D80-\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0E00\u0E31\u0E34-\u0E3F\u0E47-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EB1\u0EB4-\u0EBC\u0EBE\u0EBF\u0EC5\u0EC7-\u0EDB\u0EE0-\u0EFF\u0F01-\u0F3F\u0F48\u0F6D-\u0F87\u0F8D-\u0FFF\u102B-\u103E\u1040-\u104F\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16F0\u16F9-\u16FF\u1712-\u171E\u1732-\u173F\u1752-\u175F\u176D\u1771-\u177F\u17B4-\u17D6\u17D8-\u17DB\u17DD-\u181F\u1879-\u187F\u1885\u1886\u18A9\u18AB-\u18AF\u18F6-\u18FF\u191F-\u194F\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19FF\u1A17-\u1A1F\u1A55-\u1AA6\u1AA8-\u1B04\u1B34-\u1B44\u1B4D-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BFF\u1C24-\u1C4C\u1C50-\u1C59\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1CFB-\u1CFF\u1DC0-\u1DFF\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u2182\u2185-\u2BFF\u2CE5-\u2CEA\u2CEF-\u2CF1\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7F\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF-\u2E2E\u2E30-\u3004\u3007-\u3030\u3036-\u303A\u303D-\u3040\u3097-\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA620-\uA629\uA62C-\uA63F\uA66F-\uA67E\uA69E\uA69F\uA6E6-\uA716\uA720\uA721\uA789\uA78A\uA7CB-\uA7CF\uA7D2\uA7D4\uA7DA-\uA7F1\uA802\uA806\uA80B\uA823-\uA83F\uA874-\uA881\uA8B4-\uA8F1\uA8F8-\uA8FA\uA8FC\uA8FF-\uA909\uA926-\uA92F\uA947-\uA95F\uA97D-\uA983\uA9B3-\uA9CE\uA9D0-\uA9DF\uA9E5\uA9F0-\uA9F9\uA9FF\uAA29-\uAA3F\uAA43\uAA4C-\uAA5F\uAA77-\uAA79\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAC3-\uAADA\uAADE\uAADF\uAAEB-\uAAF1\uAAF5-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABE3-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB1E\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFE6F\uFE75\uFEFD-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEFF\uDF20-\uDF2C\uDF41\uDF4A-\uDF4F\uDF76-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0-\uDFFF]|\uD801[\uDC9E-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDD6F\uDD7B\uDD8B\uDD93\uDD96\uDDA2\uDDB2\uDDBA\uDDBD-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDF7F\uDF86\uDFB1\uDFBB-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE01-\uDE0F\uDE14\uDE18\uDE36-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE5-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD24-\uDE7F\uDEAA-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF46-\uDF6F\uDF82-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC00-\uDC02\uDC38-\uDC70\uDC73\uDC74\uDC76-\uDC82\uDCB0-\uDCCF\uDCE9-\uDD02\uDD27-\uDD43\uDD45\uDD46\uDD48-\uDD4F\uDD73-\uDD75\uDD77-\uDD82\uDDB3-\uDDC0\uDDC5-\uDDD9\uDDDB\uDDDD-\uDDFF\uDE12\uDE2C-\uDE3E\uDE41-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEDF-\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A-\uDF3C\uDF3E-\uDF4F\uDF51-\uDF5C\uDF62-\uDFFF]|\uD805[\uDC35-\uDC46\uDC4B-\uDC5E\uDC62-\uDC7F\uDCB0-\uDCC3\uDCC6\uDCC8-\uDD7F\uDDAF-\uDDD7\uDDDC-\uDDFF\uDE30-\uDE43\uDE45-\uDE7F\uDEAB-\uDEB7\uDEB9-\uDEFF\uDF1B-\uDF3F\uDF47-\uDFFF]|\uD806[\uDC2C-\uDC9F\uDCE0-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD30-\uDD3E\uDD40\uDD42-\uDD9F\uDDA8\uDDA9\uDDD1-\uDDE0\uDDE2\uDDE4-\uDDFF\uDE01-\uDE0A\uDE33-\uDE39\uDE3B-\uDE4F\uDE51-\uDE5B\uDE8A-\uDE9C\uDE9E-\uDEAF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC2F-\uDC3F\uDC41-\uDC71\uDC90-\uDCFF\uDD07\uDD0A\uDD31-\uDD45\uDD47-\uDD5F\uDD66\uDD69\uDD8A-\uDD97\uDD99-\uDEDF\uDEF3-\uDF01\uDF03\uDF11\uDF34-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC00-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80E-\uD810\uD812-\uD819\uD824-\uD82A\uD82D\uD82E\uD830-\uD834\uD836\uD83C-\uD83F\uD87B-\uD87D\uD87F\uD889-\uDBFF][\uDC00-\uDFFF]|\uD80B[\uDC00-\uDF8F\uDFF1-\uDFFF]|\uD80D[\uDC30-\uDC40\uDC47-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F-\uDE6F\uDEBF-\uDECF\uDEEE-\uDEFF\uDF30-\uDF3F\uDF44-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4F\uDF51-\uDF92\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82B[\uDC00-\uDFEF\uDFF4\uDFFC\uDFFF]|\uD82C[\uDD23-\uDD31\uDD33-\uDD4F\uDD53\uDD54\uDD56-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC-\uDFFF]|\uD837[\uDC00-\uDEFF\uDF1F-\uDF24\uDF2B-\uDFFF]|\uD838[\uDC00-\uDC2F\uDC6E-\uDCFF\uDD2D-\uDD36\uDD3E-\uDD4D\uDD4F-\uDE8F\uDEAE-\uDEBF\uDEEC-\uDFFF]|\uD839[\uDC00-\uDCCF\uDCEC-\uDFDF\uDFE7\uDFEC\uDFEF\uDFFF]|\uD83A[\uDCC5-\uDCFF\uDD44-\uDD4A\uDD4C-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD869[\uDEE0-\uDEFF]|\uD86D[\uDF3A-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDF4F]|\uD888[\uDFB0-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+/
      )
      .filter((e) => e.length > 0);
  }
  h(co, "words");
  function d0(r) {
    return r.map((e) => e.slice(0, 1).toLocaleUpperCase() + e.slice(1).toLocaleLowerCase());
  }
  h(d0, "capitalize");
  function ho(r) {
    var e, t;
    return (t = (e = r.get("title")) != null ? e : r.get("booktitle")) != null ? t : "";
  }
  h(ho, "title");
  var p0 = ["doi", "citation", "abstract"];
  var fo = ["title", "shorttitle", "author", "year", "month", "day", "journal", "booktitle", "location", "on", "publisher", "address", "series", "volume", "number", "pages", "doi", "isbn", "issn", "url", "urldate", "copyright", "category", "note", "metadata"],
    _a = ["key"],
    m0 = "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]",
    vn = [
      { key: "help", cli: { "--help": !0, "-h": !0 }, title: "Help", description: ["Show help"], type: "boolean" },
      { key: "v2", cli: { "--v2": !0 }, title: "Enable planned v2 CLI changes", description: ["Input files will no longer be modified by default. Instead, you will need to specify `--modify`/`-m` option to overwrite the file, or `--output`/`-o` to output to a different file."], type: "string", defaultValue: void 0 },
      { key: "outputPath", cli: { "--output": (r) => r[0], "-o": (r) => r[0] }, title: "Output path", description: ["Write output to specified path. When omitted (and -m/--modify is not used), the result will be printed to stdout."], type: "string", defaultValue: void 0 },
      { key: "modify", cli: { "--modify": !0, "-m": !0, "--no-modify": !1 }, title: "Modify input files", description: ["Overwrite the original input files with the tidied result. This is enabled by default but will be disabled by default in v2. For v1, use --no-modify to output to stdout instead of overwriting the input files."], type: "boolean", defaultValue: !0 },
      { key: "omit", cli: { "--omit": (r) => (r.length === 0 && (console.error("Expected a omit list"), process.exit(1)), r) }, toCLI: (r) => (Array.isArray(r) && r.length > 0 ? "--omit=".concat(r.join(",")) : void 0), title: "Remove fields", description: ["Remove specified fields from bibliography entries."], examples: ["--omit=id,name"], type: "string[]", defaultValue: [] },
      { key: "curly", cli: { "--curly": !0, "--no-curly": !1 }, toCLI: (r) => (r ? "--curly" : void 0), title: "Enclose values in braces", description: ['Enclose all property values in braces. Quoted values will be converted to braces. For example, "Journal of Tea" will become {Journal of Tea}.'], type: "boolean", defaultValue: !1 },
      { key: "numeric", cli: { "--numeric": !0, "--no-numeric": !1 }, toCLI: (r) => (r ? "--numeric" : void 0), title: "Use numeric values where possible", description: ["Strip quotes and braces from numeric/month values. For example, {1998} will become 1998."], type: "boolean", defaultValue: !1 },
      {
        key: "space",
        cli: { "--space": (r) => (r.length > 0 ? Number(r[0]) : !0) },
        toCLI: (r, e) => {
          if (!e.tab) {
            if (typeof r == "number" && r !== 2) return "--space=".concat(r);
            if (r && r !== 2) return "--space";
          }
        },
        title: "Indent with spaces",
        description: ["Indent all fields with the specified number of spaces. Ignored if tab is set."],
        examples: ["--space=2 (default)", "--space=4"],
        type: "boolean | number",
        convertBoolean: { true: 2, false: void 0 },
        defaultValue: 2,
      },
      { key: "tab", cli: { "--tab": !0, "--no-tab": !1 }, toCLI: (r) => (r ? "--tab" : void 0), title: "Indent with tabs", description: ["Indent all fields with a tab."], type: "boolean", defaultValue: !1 },
      {
        key: "align",
        cli: { "--align": (r) => Number(r[0]), "--no-align": !1 },
        toCLI: (r) => {
          if (r === !1 || r === 1 || r === 0) return "--no-align";
          if (typeof r == "number" && r !== 14) return "--align=".concat(r);
        },
        title: "Align values",
        description: ["Insert whitespace between fields and values so that values are visually aligned."],
        examples: ["--align=14 (default)"],
        type: "boolean | number",
        convertBoolean: { true: 14, false: 1 },
        defaultValue: 14,
      },
      { key: "blankLines", cli: { "--blank-lines": !0, "--no-blank-lines": !1 }, toCLI: (r) => (r ? "--blank-lines" : void 0), title: "Insert blank lines", description: ["Insert an empty line between each entry."], type: "boolean" },
      {
        key: "sort",
        cli: { "--sort": (r) => (r.length > 0 ? r : !0), "--no-sort": !1 },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--sort=".concat(r.join(","));
          if (r === !0) return "--sort";
        },
        title: "Sort bibliography entries",
        description: ["Sort entries by specified fields. For descending order, prefix the field with a dash (-)."],
        examples: ["--sort (sort by id)", "--sort=-year,name (sort year descending then name ascending)", "--sort=name,year"],
        type: "boolean | string[]",
        convertBoolean: { true: _a, false: void 0 },
      },
      {
        key: "duplicates",
        cli: {
          "--duplicates": (r) => {
            if (r.length === 0) return !0;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var e = _step.value;
                e !== "doi" && e !== "key" && e !== "abstract" && e !== "citation" && (console.error('Invalid key for merge option: "'.concat(e, '"')), process.exit(1));
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            return r;
          },
        },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--duplicates=".concat(r.join(","));
          if (r === !0) return "--duplicates";
        },
        title: "Check for duplicates",
        description: ["Warn if duplicates are found, which are entries where DOI, abstract, or author and title are the same."],
        examples: ["--duplicates doi (same DOIs)", "--duplicates key (same IDs)", "--duplicates abstract (similar abstracts)", "--duplicates citation (similar author and titles)", "--duplicates doi, key (identical DOI or keys)", "--duplicates (same DOI, key, abstract, or citation)"],
        type: "boolean | ('doi' | 'key' | 'abstract' | 'citation')[]",
        convertBoolean: { true: p0, false: void 0 },
        defaultValue: (r) => (r.merge ? p0 : void 0),
      },
      {
        key: "merge",
        cli: { "--merge": (r) => (r.length === 0 ? !0 : (r[0] !== "first" && r[0] !== "last" && r[0] !== "combine" && r[0] !== "overwrite" && (console.error('Invalid merge strategy: "'.concat(r[0], '"')), process.exit(1)), r[0])), "--no-merge": !1 },
        toCLI: (r) => {
          if (typeof r == "string") return "--merge=".concat(r);
          if (r) return "--merge";
        },
        title: "Merge duplicate entries",
        description: [
          "Merge duplicates entries. Use the duplicates option to determine how duplicates are identified. There are different ways to merge:",
          "- first: only keep the original entry",
          "- last: only keep the last found duplicate",
          "- combine: keep original entry and merge in fields of duplicates if they do not already exist",
          "- overwrite: keep original entry and merge in fields of duplicates, overwriting existing fields if they exist",
        ],
        type: "boolean | 'first' | 'last' | 'combine' | 'overwrite'",
        convertBoolean: { true: "combine", false: void 0 },
      },
      { key: "stripEnclosingBraces", cli: { "--strip-enclosing-braces": !0 }, toCLI: (r) => (r ? "--strip-enclosing-braces" : void 0), title: "Strip double-braced values", description: ["Where an entire value is enclosed in double braces, remove the extra braces. For example, {{Journal of Tea}} will become {Journal of Tea}."], type: "boolean", defaultValue: !1 },
      { key: "dropAllCaps", cli: { "--drop-all-caps": !0 }, toCLI: (r) => (r ? "--drop-all-caps" : void 0), title: "Drop all caps", description: ["Where values are all caps, make them title case. For example, {JOURNAL OF TEA} will become {Journal of Tea}. Roman numerals will be left unchanged."], type: "boolean", defaultValue: !1 },
      { key: "escape", cli: { "--escape": !0, "--no-escape": !1 }, toCLI: (r) => (r === !1 ? "--no-escape" : void 0), title: "Escape special characters", description: ["Escape special characters, such as umlaut. This ensures correct typesetting with latex. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "sortFields",
        cli: { "--sort-fields": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return JSON.stringify(r) === JSON.stringify(fo) ? "--sort-fields" : "--sort-fields=".concat(r.join(","));
          if (r === !0) return "--sort-fields";
        },
        title: "Sort fields",
        description: ["Sort the fields within entries.", "If no fields are specified fields will be sorted by: title, shorttitle, author, year, month, day, journal, booktitle, location, on, publisher, address, series, volume, number, pages, doi, isbn, issn, url, urldate, copyright, category, note, metadata"],
        examples: ["--sort-fields=name,author"],
        type: "boolean | string[]",
        convertBoolean: { true: fo, false: void 0 },
        defaultValue: void 0,
      },
      { key: "sortProperties", cli: { "--sort-properties": (r) => (r.length > 0 ? r : !0) }, title: "Sort properties", description: ["Alias of sort fields (legacy)"], type: "boolean | string[]", deprecated: !0 },
      { key: "stripComments", cli: { "--strip-comments": !0, "--no-strip-comments": !1 }, toCLI: (r) => (r ? "--strip-comments" : void 0), title: "Remove comments", description: ["Remove all comments from the bibtex source."], type: "boolean", defaultValue: !1 },
      { key: "trailingCommas", cli: { "--trailing-commas": !0, "--no-trailing-commas": !0 }, toCLI: (r) => (r ? "--trailing-commas" : void 0), title: "Trailing commas", description: ["End the last key value pair in each entry with a comma."], type: "boolean", defaultValue: !1 },
      { key: "encodeUrls", cli: { "--encode-urls": !0, "--no-encode-urls": !0 }, toCLI: (r) => (r ? "--encode-urls" : void 0), title: "Encode URLs", description: ["Replace invalid URL characters with percent encoded values."], type: "boolean", defaultValue: !1 },
      { key: "tidyComments", cli: { "--tidy-comments": !0, "--no-tidy-comments": !1 }, toCLI: (r) => (r === !1 ? "--no-tidy-comments" : void 0), title: "Tidy comments", description: ["Remove whitespace surrounding comments."], type: "boolean", defaultValue: !0 },
      { key: "removeEmptyFields", cli: { "--remove-empty-fields": !0, "--no-remove-empty-fields": !1 }, toCLI: (r) => (r ? "--remove-empty-fields" : void 0), title: "Remove empty fields", description: ["Remove any fields that have empty values."], type: "boolean", defaultValue: !1 },
      { key: "removeDuplicateFields", cli: { "--remove-dupe-fields": !0, "--no-remove-dupe-fields": !1 }, toCLI: (r) => (r === !1 ? "--no-remove-dupe-fields" : void 0), title: "Remove duplicate fields", description: ["Only allow one of each field in each entry. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "generateKeys",
        cli: { "--generate-keys": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (r === !0 || r === m0) return "--generate-keys";
          if (typeof r == "string") return '--generate-keys="'.concat(r.replace(/"/g, '\\"'), '"');
        },
        title: "Generate citation keys [Experimental]",
        description: ["For all entries replace the key with a new key of the form <author><year><title>. A JabRef citation pattern can be provided. This is an experimental option that may change without warning."],
        type: "boolean | string",
        convertBoolean: { true: m0, false: void 0 },
        defaultValue: void 0,
      },
      { key: "maxAuthors", cli: { "--max-authors": (r) => Number(r[0]) }, toCLI: (r) => (r ? "--max-authors=".concat(r) : void 0), title: "Maximum authors", description: ['Truncate authors if above a given number into "and others".'], type: "number" },
      { key: "lowercase", cli: { "--no-lowercase": !1 }, toCLI: (r) => (r === !1 ? "--no-lowercase" : void 0), title: "Lowercase fields", description: ["Lowercase field names and entry type. Enabled by default."], type: "boolean", defaultValue: !0 },
      {
        key: "enclosingBraces",
        cli: { "--enclosing-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--enclosing-braces=".concat(r.join(","));
          if (r === !0) return "--enclosing-braces";
        },
        title: "Enclose values in double braces",
        description: ["Enclose the given fields in double braces, such that case is preserved during BibTeX compilation."],
        examples: ["--enclosing-braces=title,journal (output title and journal fields will be of the form {{This is a title}})", "--enclosing-braces (equivalent to ---enclosing-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      {
        key: "removeBraces",
        cli: { "--remove-braces": (r) => (r.length > 0 ? r : !0) },
        toCLI: (r) => {
          if (Array.isArray(r) && r.length > 0) return "--remove-braces=".concat(r.join(","));
          if (r === !0) return "--remove-braces";
        },
        title: "Remove braces",
        description: ["Remove any curly braces within the value, unless they are part of a command."],
        examples: ["--remove-braces=title,journal", "--remove-braces (equivalent to ---remove-braces=title)"],
        type: "boolean | string[]",
        convertBoolean: { true: ["title"], false: void 0 },
      },
      { key: "wrap", cli: { "--wrap": (r) => (r.length > 0 ? Number(r[0]) : !0), "--no-wrap": !1 }, toCLI: (r) => (r ? "--wrap=".concat(r) : void 0), title: "Wrap values", description: ["Wrap long values at the given column"], examples: ["--wrap (80 by default)", "--wrap=82"], type: "boolean | number", convertBoolean: { true: 80, false: void 0 } },
      { key: "version", cli: { "--version": !0, "-v": !0 }, title: "Version", description: ["Show bibtex-tidy version."], type: "boolean" },
      { key: "quiet", cli: { "--quiet": !0 }, title: "Quiet", description: ["Suppress logs on stdout."], type: "boolean" },
      { key: "backup", cli: { "--backup": !0, "--no-backup": !1 }, title: "Backup", description: ["Make a backup <filename>.original. Enabled by default (unless --modify is explicitly provided or outputting to a different file/stdio). Deprecated but provided for backward compatibility."], type: "boolean", defaultValue: !0, deprecated: !0 },
    ],
    g0 = Object.fromEntries(vn.map((r) => [r.key, r]));
  function kn(r) {
    return Object.fromEntries(
      vn.map((e) => {
        var t = e.key,
          i = r[t];
        return e.convertBoolean && typeof i == "boolean" ? [t, i ? e.convertBoolean.true : e.convertBoolean.false] : typeof i == "undefined" && e.defaultValue !== void 0 ? (typeof e.defaultValue == "function" ? [t, e.defaultValue(r)] : [t, e.defaultValue]) : [t, i];
      })
    );
  }
  h(kn, "normalizeOptions");
  function D0(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = kn(e);
    r = Zm(r);
    var i = Km(r),
      n = Hi(i)
        .filter((a) => !a.key)
        .map((a) => ({ code: "MISSING_KEY", message: "".concat(a.parent.command, " entry does not have a citation key.") })),
      s = ov(i, t),
      o = o0(i, s, t.duplicates, t.merge);
    n.push(...o.warnings), (i.children = i.children.filter((a) => !Cn(a) || !o.entries.has(a.block))), t.sort && u0(i, s, t.sort), t.sortFields && l0(i, t.sortFields);
    var u = t.generateKeys ? f0(i, s, t.generateKeys) : void 0;
    return { bibtex: h0(i, t, u), warnings: n, count: Hi(i).length };
  }
  h(D0, "tidy");
  function Hi(r) {
    return r.children.filter(Cn).map((e) => e.block);
  }
  h(Hi, "getEntries");
  function ov(r, e) {
    return new Map(
      Hi(r).map((t) => [
        t,
        new Map(
          t.fields.map((i) => {
            var n;
            return [i.name.toLocaleLowerCase(), (n = Ba(i, e)) != null ? n : ""];
          })
        ),
      ])
    );
  }
  h(ov, "generateValueLookup");
  var ce = class ce1 {
    lineAt(e) {
      if (e < 0 || e > this.length) throw new RangeError("Invalid position ".concat(e, " in document of length ").concat(this.length));
      return this.lineInner(e, !1, 1, 0);
    }
    line(e) {
      if (e < 1 || e > this.lines) throw new RangeError("Invalid line number ".concat(e, " in ").concat(this.lines, "-line document"));
      return this.lineInner(e, !0, 1, 0);
    }
    replace(e, t, i) {
      var n = [];
      return this.decompose(0, e, n, 2), i.length && i.decompose(0, i.length, n, 3), this.decompose(t, this.length, n, 1), ot.from(n, this.length - (t - e) + i.length);
    }
    append(e) {
      return this.replace(this.length, this.length, e);
    }
    slice(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
      var i = [];
      return this.decompose(e, t, i, 0), ot.from(i, t - e);
    }
    eq(e) {
      if (e == this) return !0;
      if (e.length != this.length || e.lines != this.lines) return !1;
      var t = this.scanIdentical(e, 1),
        i = this.length - this.scanIdentical(e, -1),
        n = new Ei(this),
        s = new Ei(e);
      for (var o = t, u = t; ; ) {
        if ((n.next(o), s.next(o), (o = 0), n.lineBreak != s.lineBreak || n.done != s.done || n.value != s.value)) return !1;
        if (((u += n.value.length), n.done || u >= i)) return !0;
      }
    }
    iter() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
      return new Ei(this, e);
    }
    iterRange(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length;
      return new xn(this, e, t);
    }
    iterLines(e, t) {
      var i;
      if (e == null) i = this.iter();
      else {
        t == null && (t = this.lines + 1);
        var n = this.line(e).from;
        i = this.iterRange(n, Math.max(n, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
      }
      return new Sn(i);
    }
    toString() {
      return this.sliceString(0);
    }
    toJSON() {
      var e = [];
      return this.flatten(e), e;
    }
    static of(e) {
      if (e.length == 0) throw new RangeError("A document must have at least one line");
      return e.length == 1 && !e[0] ? ce.empty : e.length <= 32 ? new ke(e) : ot.from(ke.split(e, []));
    }
    constructor() {}
  };
  h(ce, "Text");
  var ke = class ke1 extends ce {
    get lines() {
      return this.text.length;
    }
    get children() {
      return null;
    }
    lineInner(e, t, i, n) {
      for (var s = 0; ; s++) {
        var o = this.text[s],
          u = n + o.length;
        if ((t ? i : u) >= e) return new Do(n, u, i, o);
        (n = u + 1), i++;
      }
    }
    decompose(e, t, i, n) {
      var s = e <= 0 && t >= this.length ? this : new ke(b0(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
      if (n & 1) {
        var o = i.pop(),
          u = go(s.text, o.text.slice(), 0, s.length);
        if (u.length <= 32) i.push(new ke(u, o.length + s.length));
        else {
          var l = u.length >> 1;
          i.push(new ke(u.slice(0, l)), new ke(u.slice(l)));
        }
      } else i.push(s);
    }
    replace(e, t, i) {
      if (!(i instanceof ke)) return super.replace(e, t, i);
      var n = go(this.text, go(i.text, b0(this.text, 0, e)), t),
        s = this.length + i.length - (t - e);
      return n.length <= 32 ? new ke(n, s) : ot.from(ke.split(n, []), s);
    }
    sliceString(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
      var n = "";
      for (var s = 0, o = 0; s <= t && o < this.text.length; o++) {
        var u = this.text[o],
          l = s + u.length;
        s > e && o && (n += i), e < l && t > s && (n += u.slice(Math.max(0, e - s), t - s)), (s = l + 1);
      }
      return n;
    }
    flatten(e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          e.push(t);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    scanIdentical() {
      return 0;
    }
    static split(e, t) {
      var i = [],
        n = -1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          i.push(s), (n += s.length + 1), i.length == 32 && (t.push(new ke(i, n)), (i = []), (n = -1));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return n > -1 && t.push(new ke(i, n)), t;
    }
    constructor(e, ref) {
      var t = ref === void 0 ? uv(e) : ref;
      super(), (this.text = e), (this.length = t);
    }
  };
  h(ke, "TextLeaf");
  var ot = class ot1 extends ce {
    lineInner(e, t, i, n) {
      for (var s = 0; ; s++) {
        var o = this.children[s],
          u = n + o.length,
          l = i + o.lines - 1;
        if ((t ? l : u) >= e) return o.lineInner(e, t, i, n);
        (n = u + 1), (i = l + 1);
      }
    }
    decompose(e, t, i, n) {
      for (var s = 0, o = 0; o <= t && s < this.children.length; s++) {
        var u = this.children[s],
          l = o + u.length;
        if (e <= l && t >= o) {
          var a = n & ((o <= e ? 1 : 0) | (l >= t ? 2 : 0));
          o >= e && l <= t && !a ? i.push(u) : u.decompose(e - o, t - o, i, a);
        }
        o = l + 1;
      }
    }
    replace(e, t, i) {
      if (i.lines < this.lines)
        for (var n = 0, s = 0; n < this.children.length; n++) {
          var o = this.children[n],
            u = s + o.length;
          if (e >= s && t <= u) {
            var l = o.replace(e - s, t - s, i),
              a = this.lines - o.lines + l.lines;
            if (l.lines < a >> (5 - 1) && l.lines > a >> (5 + 1)) {
              var c = this.children.slice();
              return (c[n] = l), new ot(c, this.length - (t - e) + i.length);
            }
            return super.replace(s, u, l);
          }
          s = u + 1;
        }
      return super.replace(e, t, i);
    }
    sliceString(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.length,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "\n";
      var n = "";
      for (var s = 0, o = 0; s < this.children.length && o <= t; s++) {
        var u = this.children[s],
          l = o + u.length;
        o > e && s && (n += i), e < l && t > o && (n += u.sliceString(e - o, t - o, i)), (o = l + 1);
      }
      return n;
    }
    flatten(e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          t.flatten(e);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    scanIdentical(e, t) {
      if (!(e instanceof ot)) return 0;
      var i = 0,
        _ref = _slicedToArray(t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1], 4),
        n = _ref[0],
        s = _ref[1],
        o = _ref[2],
        u = _ref[3];
      for (; ; n += t, s += t) {
        if (n == o || s == u) return i;
        var l = this.children[n],
          a = e.children[s];
        if (l != a) return i + l.scanIdentical(a, t);
        i += l.length + 1;
      }
    }
    static from(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.reduce((i, n) => i + n.length + 1, -1);
      var i = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var p = _step.value;
          i += p.lines;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if (i < 32) {
        var p1 = [];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var m = _step1.value;
            m.flatten(p1);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return new ke(p1, t);
      }
      var n = Math.max(32, i >> 5),
        s = n << 1,
        o = n >> 1,
        u = [],
        l = 0,
        a = -1,
        c = [];
      function f(p) {
        var m;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (p.lines > s && p instanceof ot)
          try {
            for (var _iterator = p.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var D = _step.value;
              f(D);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else p.lines > o && (l > o || !l) ? (d(), u.push(p)) : p instanceof ke && l && (m = c[c.length - 1]) instanceof ke && p.lines + m.lines <= 32 ? ((l += p.lines), (a += p.length + 1), (c[c.length - 1] = new ke(m.text.concat(p.text), m.length + 1 + p.length))) : (l + p.lines > n && d(), (l += p.lines), (a += p.length + 1), c.push(p));
      }
      h(f, "add");
      function d() {
        l != 0 && (u.push(c.length == 1 ? c[0] : ot.from(c, a)), (a = -1), (l = c.length = 0));
      }
      h(d, "flush");
      var _iteratorNormalCompletion2 = true,
        _didIteratorError2 = false,
        _iteratorError2 = undefined;
      try {
        for (var _iterator2 = e[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var p2 = _step2.value;
          f(p2);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
      return d(), u.length == 1 ? u[0] : new ot(u, t);
    }
    constructor(e, t) {
      super(), (this.children = e), (this.length = t), (this.lines = 0);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          this.lines += i.lines;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  };
  h(ot, "TextNode");
  ce.empty = new ke([""], 0);
  function uv(r) {
    var e = -1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        e += t.length + 1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(uv, "textLength");
  function go(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1e9;
    for (var n = 0, s = 0, o = !0; s < r.length && n <= i; s++) {
      var u = r[s],
        l = n + u.length;
      l >= t && (l > i && (u = u.slice(0, i - n)), n < t && (u = u.slice(t - n)), o ? ((e[e.length - 1] += u), (o = !1)) : e.push(u)), (n = l + 1);
    }
    return e;
  }
  h(go, "appendText");
  function b0(r, e, t) {
    return go(r, [""], e, t);
  }
  h(b0, "sliceText");
  var Ei = class Ei {
    nextInner(e, t) {
      for (this.done = this.lineBreak = !1; ; ) {
        var i = this.nodes.length - 1,
          n = this.nodes[i],
          s = this.offsets[i],
          o = s >> 1,
          u = n instanceof ke ? n.text.length : n.children.length;
        if (o == (t > 0 ? u : 0)) {
          if (i == 0) return (this.done = !0), (this.value = ""), this;
          t > 0 && this.offsets[i - 1]++, this.nodes.pop(), this.offsets.pop();
        } else if ((s & 1) == (t > 0 ? 0 : 1)) {
          if (((this.offsets[i] += t), e == 0)) return (this.lineBreak = !0), (this.value = "\n"), this;
          e--;
        } else if (n instanceof ke) {
          var l = n.text[o + (t < 0 ? -1 : 0)];
          if (((this.offsets[i] += t), l.length > Math.max(0, e))) return (this.value = e == 0 ? l : t > 0 ? l.slice(e) : l.slice(0, l.length - e)), this;
          e -= l.length;
        } else {
          var l1 = n.children[o + (t < 0 ? -1 : 0)];
          e > l1.length ? ((e -= l1.length), (this.offsets[i] += t)) : (t < 0 && this.offsets[i]--, this.nodes.push(l1), this.offsets.push(t > 0 ? 1 : (l1 instanceof ke ? l1.text.length : l1.children.length) << 1));
        }
      }
    }
    next() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return e < 0 && (this.nextInner(-e, -this.dir), (e = this.value.length)), this.nextInner(e, this.dir);
    }
    constructor(e, ref) {
      var t = ref === void 0 ? 1 : ref;
      (this.dir = t), (this.done = !1), (this.lineBreak = !1), (this.value = ""), (this.nodes = [e]), (this.offsets = [t > 0 ? 1 : (e instanceof ke ? e.text.length : e.children.length) << 1]);
    }
  };
  h(Ei, "RawTextCursor");
  var xn = class xn {
    nextInner(e, t) {
      if (t < 0 ? this.pos <= this.from : this.pos >= this.to) return (this.value = ""), (this.done = !0), this;
      e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
      var i = t < 0 ? this.pos - this.from : this.to - this.pos;
      e > i && (e = i), (i -= e);
      var _this_cursor_next = this.cursor.next(e),
        n = _this_cursor_next.value;
      return (this.pos += (n.length + e) * t), (this.value = n.length <= i ? n : t < 0 ? n.slice(n.length - i) : n.slice(0, i)), (this.done = !this.value), this;
    }
    next() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return e < 0 ? (e = Math.max(e, this.from - this.pos)) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
    }
    get lineBreak() {
      return this.cursor.lineBreak && this.value != "";
    }
    constructor(e, t, i) {
      (this.value = ""), (this.done = !1), (this.cursor = new Ei(e, t > i ? -1 : 1)), (this.pos = t > i ? e.length : 0), (this.from = Math.min(t, i)), (this.to = Math.max(t, i));
    }
  };
  h(xn, "PartialTextCursor");
  var Sn = class Sn {
    next() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      var _this_inner_next = this.inner.next(e),
        t = _this_inner_next.done,
        i = _this_inner_next.lineBreak,
        n = _this_inner_next.value;
      return t ? ((this.done = !0), (this.value = "")) : i ? (this.afterBreak ? (this.value = "") : ((this.afterBreak = !0), this.next())) : ((this.value = n), (this.afterBreak = !1)), this;
    }
    get lineBreak() {
      return !1;
    }
    constructor(e) {
      (this.inner = e), (this.afterBreak = !0), (this.value = ""), (this.done = !1);
    }
  };
  h(Sn, "LineCursor");
  typeof Symbol < "u" &&
    ((ce.prototype[Symbol.iterator] = function () {
      return this.iter();
    }),
    (Ei.prototype[Symbol.iterator] =
      xn.prototype[Symbol.iterator] =
      Sn.prototype[Symbol.iterator] =
        function () {
          return this;
        }));
  var Do = class Do {
    get length() {
      return this.to - this.from;
    }
    constructor(e, t, i, n) {
      (this.from = e), (this.to = t), (this.number = i), (this.text = n);
    }
  };
  h(Do, "Line");
  var xr =
    "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o"
      .split(",")
      .map((r) => (r ? parseInt(r, 36) : 1));
  for (var r = 1; r < xr.length; r++) xr[r] += xr[r - 1];
  function lv(r) {
    for (var e = 1; e < xr.length; e += 2) if (xr[e] > r) return xr[e - 1] <= r;
    return !1;
  }
  h(lv, "isExtendingChar");
  function F0(r) {
    return r >= 127462 && r <= 127487;
  }
  h(F0, "isRegionalIndicator");
  var y0 = 8205;
  function Bt(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0,
      i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0;
    return (t ? w0 : av)(r, e, i);
  }
  h(Bt, "findClusterBreak");
  function w0(r, e, t) {
    if (e == r.length) return e;
    e && x0(r.charCodeAt(e)) && S0(r.charCodeAt(e - 1)) && e--;
    var i = Bn(r, e);
    for (e += yo(i); e < r.length; ) {
      var n = Bn(r, e);
      if (i == y0 || n == y0 || (t && lv(n))) (e += yo(n)), (i = n);
      else if (F0(n)) {
        var s = 0,
          o = e - 2;
        for (; o >= 0 && F0(Bn(r, o)); ) s++, (o -= 2);
        if (s % 2 == 0) break;
        e += 2;
      } else break;
    }
    return e;
  }
  h(w0, "nextClusterBreak");
  function av(r, e, t) {
    for (; e > 0; ) {
      var i = w0(r, e - 2, t);
      if (i < e) return i;
      e--;
    }
    return 0;
  }
  h(av, "prevClusterBreak");
  function x0(r) {
    return r >= 56320 && r < 57344;
  }
  h(x0, "surrogateLow");
  function S0(r) {
    return r >= 55296 && r < 56320;
  }
  h(S0, "surrogateHigh");
  function Bn(r, e) {
    var t = r.charCodeAt(e);
    if (!S0(t) || e + 1 == r.length) return t;
    var i = r.charCodeAt(e + 1);
    return x0(i) ? ((t - 55296) << 10) + (i - 56320) + 65536 : t;
  }
  h(Bn, "codePointAt");
  function yo(r) {
    return r < 65536 ? 1 : 2;
  }
  h(yo, "codePointSize");
  var Ta = /\r\n?|\n/,
    Xe = (function (r) {
      return (r[(r.Simple = 0)] = "Simple"), (r[(r.TrackDel = 1)] = "TrackDel"), (r[(r.TrackBefore = 2)] = "TrackBefore"), (r[(r.TrackAfter = 3)] = "TrackAfter"), r;
    })(Xe || (Xe = {})),
    Ze = class Ze1 {
      get length() {
        var e = 0;
        for (var t = 0; t < this.sections.length; t += 2) e += this.sections[t];
        return e;
      }
      get newLength() {
        var e = 0;
        for (var t = 0; t < this.sections.length; t += 2) {
          var i = this.sections[t + 1];
          e += i < 0 ? this.sections[t] : i;
        }
        return e;
      }
      get empty() {
        return this.sections.length == 0 || (this.sections.length == 2 && this.sections[1] < 0);
      }
      iterGaps(e) {
        for (var t = 0, i = 0, n = 0; t < this.sections.length; ) {
          var s = this.sections[t++],
            o = this.sections[t++];
          o < 0 ? (e(i, n, s), (n += s)) : (n += o), (i += s);
        }
      }
      iterChangedRanges(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        Ra(this, e, t);
      }
      get invertedDesc() {
        var e = [];
        for (var t = 0; t < this.sections.length; ) {
          var i = this.sections[t++],
            n = this.sections[t++];
          n < 0 ? e.push(i, n) : e.push(n, i);
        }
        return new Ze(e);
      }
      composeDesc(e) {
        return this.empty ? e : e.empty ? this : B0(this, e);
      }
      mapDesc(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        return e.empty ? this : $a(this, e, t);
      }
      mapPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1,
          i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Xe.Simple;
        var n = 0,
          s = 0;
        for (var o = 0; o < this.sections.length; ) {
          var u = this.sections[o++],
            l = this.sections[o++],
            a = n + u;
          if (l < 0) {
            if (a > e) return s + (e - n);
            s += u;
          } else {
            if (i != Xe.Simple && a >= e && ((i == Xe.TrackDel && n < e && a > e) || (i == Xe.TrackBefore && n < e) || (i == Xe.TrackAfter && a > e))) return null;
            if (a > e || (a == e && t < 0 && !u)) return e == n || t < 0 ? s : s + l;
            s += l;
          }
          n = a;
        }
        if (e > n) throw new RangeError("Position ".concat(e, " is out of range for changeset of length ").concat(n));
        return s;
      }
      touchesRange(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
        for (var i = 0, n = 0; i < this.sections.length && n <= t; ) {
          var s = this.sections[i++],
            o = this.sections[i++],
            u = n + s;
          if (o >= 0 && n <= t && u >= e) return n < e && u > t ? "cover" : !0;
          n = u;
        }
        return !1;
      }
      toString() {
        var e = "";
        for (var t = 0; t < this.sections.length; ) {
          var i = this.sections[t++],
            n = this.sections[t++];
          e += (e ? " " : "") + i + (n >= 0 ? ":" + n : "");
        }
        return e;
      }
      toJSON() {
        return this.sections;
      }
      static fromJSON(e) {
        if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number")) throw new RangeError("Invalid JSON representation of ChangeDesc");
        return new Ze(e);
      }
      static create(e) {
        return new Ze(e);
      }
      constructor(e) {
        this.sections = e;
      }
    };
  h(Ze, "ChangeDesc");
  var we = class we1 extends Ze {
    apply(e) {
      if (this.length != e.length) throw new RangeError("Applying change set to a document with the wrong length");
      return Ra(this, (t, i, n, s, o) => (e = e.replace(n, n + (i - t), o)), !1), e;
    }
    mapDesc(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      return $a(this, e, t, !0);
    }
    invert(e) {
      var t = this.sections.slice(),
        i = [];
      for (var n = 0, s = 0; n < t.length; n += 2) {
        var o = t[n],
          u = t[n + 1];
        if (u >= 0) {
          (t[n] = u), (t[n + 1] = o);
          var l = n >> 1;
          for (; i.length < l; ) i.push(ce.empty);
          i.push(o ? e.slice(s, s + o) : ce.empty);
        }
        s += o;
      }
      return new we(t, i);
    }
    compose(e) {
      return this.empty ? e : e.empty ? this : B0(this, e, !0);
    }
    map(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      return e.empty ? this : $a(this, e, t, !0);
    }
    iterChanges(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      Ra(this, e, t);
    }
    get desc() {
      return Ze.create(this.sections);
    }
    filter(e) {
      var t = [],
        i = [],
        n = [],
        s = new vi(this);
      e: for (var o = 0, u = 0; ; ) {
        var l = o == e.length ? 1e9 : e[o++];
        for (; u < l || (u == l && s.len == 0); ) {
          if (s.done) break e;
          var c = Math.min(s.len, l - u);
          He(n, c, -1);
          var f = s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0;
          He(t, c, f), f > 0 && Ai(i, t, s.text), s.forward(c), (u += c);
        }
        var a = e[o++];
        for (; u < a; ) {
          if (s.done) break e;
          var c1 = Math.min(s.len, a - u);
          He(t, c1, -1), He(n, c1, s.ins == -1 ? -1 : s.off == 0 ? s.ins : 0), s.forward(c1), (u += c1);
        }
      }
      return { changes: new we(t, i), filtered: Ze.create(n) };
    }
    toJSON() {
      var e = [];
      for (var t = 0; t < this.sections.length; t += 2) {
        var i = this.sections[t],
          n = this.sections[t + 1];
        n < 0 ? e.push(i) : n == 0 ? e.push([i]) : e.push([i].concat(this.inserted[t >> 1].toJSON()));
      }
      return e;
    }
    static of(e, t, i) {
      var n = [],
        s = [],
        o = 0,
        u = null;
      function l() {
        var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
        if (!c && !n.length) return;
        o < t && He(n, t - o, -1);
        var f = new we(n, s);
        (u = u ? u.compose(f.map(u)) : f), (n = []), (s = []), (o = 0);
      }
      h(l, "flush");
      function a(c) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (Array.isArray(c))
          try {
            for (var _iterator = c[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var f = _step.value;
              a(f);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else if (c instanceof we) {
          if (c.length != t) throw new RangeError("Mismatched change set length (got ".concat(c.length, ", expected ").concat(t, ")"));
          l(), (u = u ? u.compose(c.map(u)) : c);
        } else {
          var f1 = c.from,
            tmp = c.to,
            d = tmp === void 0 ? f1 : tmp,
            p = c.insert;
          if (f1 > d || f1 < 0 || d > t) throw new RangeError("Invalid change range ".concat(f1, " to ").concat(d, " (in doc of length ").concat(t, ")"));
          var m = p ? (typeof p == "string" ? ce.of(p.split(i || Ta)) : p) : ce.empty,
            D = m.length;
          if (f1 == d && D == 0) return;
          f1 < o && l(), f1 > o && He(n, f1 - o, -1), He(n, d - f1, D), Ai(s, n, m), (o = d);
        }
      }
      return h(a, "process"), a(e), l(!u), u;
    }
    static empty(e) {
      return new we(e ? [e, -1] : [], []);
    }
    static fromJSON(e) {
      if (!Array.isArray(e)) throw new RangeError("Invalid JSON representation of ChangeSet");
      var t = [],
        i = [];
      for (var n = 0; n < e.length; n++) {
        var s = e[n];
        if (typeof s == "number") t.push(s, -1);
        else {
          if (!Array.isArray(s) || typeof s[0] != "number" || s.some((o, u) => u && typeof o != "string")) throw new RangeError("Invalid JSON representation of ChangeSet");
          if (s.length == 1) t.push(s[0], 0);
          else {
            for (; i.length < n; ) i.push(ce.empty);
            (i[n] = ce.of(s.slice(1))), t.push(s[0], i[n].length);
          }
        }
      }
      return new we(t, i);
    }
    static createSet(e, t) {
      return new we(e, t);
    }
    constructor(e, t) {
      super(e), (this.inserted = t);
    }
  };
  h(we, "ChangeSet");
  function He(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    if (e == 0 && t <= 0) return;
    var n = r.length - 2;
    n >= 0 && t <= 0 && t == r[n + 1] ? (r[n] += e) : e == 0 && r[n] == 0 ? (r[n + 1] += t) : i ? ((r[n] += e), (r[n + 1] += t)) : r.push(e, t);
  }
  h(He, "addSection");
  function Ai(r, e, t) {
    if (t.length == 0) return;
    var i = (e.length - 2) >> 1;
    if (i < r.length) r[r.length - 1] = r[r.length - 1].append(t);
    else {
      for (; r.length < i; ) r.push(ce.empty);
      r.push(t);
    }
  }
  h(Ai, "addInsert");
  function Ra(r, e, t) {
    var i = r.inserted;
    for (var n = 0, s = 0, o = 0; o < r.sections.length; ) {
      var u = r.sections[o++],
        l = r.sections[o++];
      if (l < 0) (n += u), (s += u);
      else {
        var a = n,
          c = s,
          f = ce.empty;
        for (; (a += u), (c += l), l && i && (f = f.append(i[(o - 2) >> 1])), !(t || o == r.sections.length || r.sections[o + 1] < 0); ) (u = r.sections[o++]), (l = r.sections[o++]);
        e(n, a, s, c, f), (n = a), (s = c);
      }
    }
  }
  h(Ra, "iterChanges");
  function $a(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    var n = [],
      s = i ? [] : null,
      o = new vi(r),
      u = new vi(e);
    for (var l = -1; ; )
      if (o.ins == -1 && u.ins == -1) {
        var a = Math.min(o.len, u.len);
        He(n, a, -1), o.forward(a), u.forward(a);
      } else if (u.ins >= 0 && (o.ins < 0 || l == o.i || (o.off == 0 && (u.len < o.len || (u.len == o.len && !t))))) {
        var a1 = u.len;
        for (He(n, u.ins, -1); a1; ) {
          var c = Math.min(o.len, a1);
          o.ins >= 0 && l < o.i && o.len <= c && (He(n, 0, o.ins), s && Ai(s, n, o.text), (l = o.i)), o.forward(c), (a1 -= c);
        }
        u.next();
      } else if (o.ins >= 0) {
        var a2 = 0,
          c1 = o.len;
        for (; c1; )
          if (u.ins == -1) {
            var f = Math.min(c1, u.len);
            (a2 += f), (c1 -= f), u.forward(f);
          } else if (u.ins == 0 && u.len < c1) (c1 -= u.len), u.next();
          else break;
        He(n, a2, l < o.i ? o.ins : 0), s && l < o.i && Ai(s, n, o.text), (l = o.i), o.forward(o.len - c1);
      } else {
        if (o.done && u.done) return s ? we.createSet(n, s) : Ze.create(n);
        throw new Error("Mismatched change set lengths");
      }
  }
  h($a, "mapSet");
  function B0(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    var i = [],
      n = t ? [] : null,
      s = new vi(r),
      o = new vi(e);
    for (var u = !1; ; ) {
      if (s.done && o.done) return n ? we.createSet(i, n) : Ze.create(i);
      if (s.ins == 0) He(i, s.len, 0, u), s.next();
      else if (o.len == 0 && !o.done) He(i, 0, o.ins, u), n && Ai(n, i, o.text), o.next();
      else {
        if (s.done || o.done) throw new Error("Mismatched change set lengths");
        {
          var l = Math.min(s.len2, o.len),
            a = i.length;
          if (s.ins == -1) {
            var c = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
            He(i, l, c, u), n && c && Ai(n, i, o.text);
          } else o.ins == -1 ? (He(i, s.off ? 0 : s.len, l, u), n && Ai(n, i, s.textBit(l))) : (He(i, s.off ? 0 : s.len, o.off ? 0 : o.ins, u), n && !o.off && Ai(n, i, o.text));
          (u = (s.ins > l || (o.ins >= 0 && o.len > l)) && (u || i.length > a)), s.forward2(l), o.forward(l);
        }
      }
    }
  }
  h(B0, "composeSets");
  var vi = class vi {
    next() {
      var _this_set = this.set,
        e = _this_set.sections;
      this.i < e.length ? ((this.len = e[this.i++]), (this.ins = e[this.i++])) : ((this.len = 0), (this.ins = -2)), (this.off = 0);
    }
    get done() {
      return this.ins == -2;
    }
    get len2() {
      return this.ins < 0 ? this.len : this.ins;
    }
    get text() {
      var _this_set = this.set,
        e = _this_set.inserted,
        t = (this.i - 2) >> 1;
      return t >= e.length ? ce.empty : e[t];
    }
    textBit(e) {
      var _this_set = this.set,
        t = _this_set.inserted,
        i = (this.i - 2) >> 1;
      return i >= t.length && !e ? ce.empty : t[i].slice(this.off, e == null ? void 0 : this.off + e);
    }
    forward(e) {
      e == this.len ? this.next() : ((this.len -= e), (this.off += e));
    }
    forward2(e) {
      this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : ((this.ins -= e), (this.off += e));
    }
    constructor(e) {
      (this.set = e), (this.i = 0), this.next();
    }
  };
  h(vi, "SectionIter");
  var Vt = class Vt1 {
    get anchor() {
      return this.flags & 16 ? this.to : this.from;
    }
    get head() {
      return this.flags & 16 ? this.from : this.to;
    }
    get empty() {
      return this.from == this.to;
    }
    get assoc() {
      return this.flags & 4 ? -1 : this.flags & 8 ? 1 : 0;
    }
    get bidiLevel() {
      var e = this.flags & 3;
      return e == 3 ? null : e;
    }
    get goalColumn() {
      var e = this.flags >> 5;
      return e == 33554431 ? void 0 : e;
    }
    map(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
      var i, n;
      return this.empty ? (i = n = e.mapPos(this.from, t)) : ((i = e.mapPos(this.from, 1)), (n = e.mapPos(this.to, -1))), i == this.from && n == this.to ? this : new Vt(i, n, this.flags);
    }
    extend(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      if (e <= this.anchor && t >= this.anchor) return j.range(e, t);
      var i = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
      return j.range(this.anchor, i);
    }
    eq(e) {
      return this.anchor == e.anchor && this.head == e.head;
    }
    toJSON() {
      return { anchor: this.anchor, head: this.head };
    }
    static fromJSON(e) {
      if (!e || typeof e.anchor != "number" || typeof e.head != "number") throw new RangeError("Invalid JSON representation for SelectionRange");
      return j.range(e.anchor, e.head);
    }
    static create(e, t, i) {
      return new Vt(e, t, i);
    }
    constructor(e, t, i) {
      (this.from = e), (this.to = t), (this.flags = i);
    }
  };
  h(Vt, "SelectionRange");
  var j = class j1 {
    map(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
      return e.empty
        ? this
        : j.create(
            this.ranges.map((i) => i.map(e, t)),
            this.mainIndex
          );
    }
    eq(e) {
      if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex) return !1;
      for (var t = 0; t < this.ranges.length; t++) if (!this.ranges[t].eq(e.ranges[t])) return !1;
      return !0;
    }
    get main() {
      return this.ranges[this.mainIndex];
    }
    asSingle() {
      return this.ranges.length == 1 ? this : new j([this.main], 0);
    }
    addRange(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      return j.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
    }
    replaceRange(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.mainIndex;
      var i = this.ranges.slice();
      return (i[t] = e), j.create(i, this.mainIndex);
    }
    toJSON() {
      return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
    }
    static fromJSON(e) {
      if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length) throw new RangeError("Invalid JSON representation for EditorSelection");
      return new j(
        e.ranges.map((t) => Vt.fromJSON(t)),
        e.main
      );
    }
    static single(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      return new j([j.range(e, t)], 0);
    }
    static create(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      if (e.length == 0) throw new RangeError("A selection needs at least one range");
      for (var i = 0, n = 0; n < e.length; n++) {
        var s = e[n];
        if (s.empty ? s.from <= i : s.from < i) return j.normalized(e.slice(), t);
        i = s.to;
      }
      return new j(e, t);
    }
    static cursor(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 ? arguments[2] : void 0,
        n = arguments.length > 3 ? arguments[3] : void 0;
      return Vt.create(e, e, (t == 0 ? 0 : t < 0 ? 4 : 8) | (i == null ? 3 : Math.min(2, i)) | ((n !== null && n !== void 0 ? n : 33554431) << 5));
    }
    static range(e, t, i, n) {
      var s = ((i !== null && i !== void 0 ? i : 33554431) << 5) | (n == null ? 3 : Math.min(2, n));
      return t < e ? Vt.create(t, e, 24 | s) : Vt.create(e, t, (t > e ? 4 : 0) | s);
    }
    static normalized(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var i = e[t];
      e.sort((n, s) => n.from - s.from), (t = e.indexOf(i));
      for (var n = 1; n < e.length; n++) {
        var s = e[n],
          o = e[n - 1];
        if (s.empty ? s.from <= o.to : s.from < o.to) {
          var u = o.from,
            l = Math.max(s.to, o.to);
          n <= t && t--, e.splice(--n, 2, s.anchor > s.head ? j.range(l, u) : j.range(u, l));
        }
      }
      return new j(e, t);
    }
    constructor(e, t) {
      (this.ranges = e), (this.mainIndex = t);
    }
  };
  h(j, "EditorSelection");
  function _0(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (t.to > e) throw new RangeError("Selection points outside of document");
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(_0, "checkSelection");
  var Na = 0,
    U = class U1 {
      static define() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new U(e.combine || ((t) => t), e.compareInput || ((t, i) => t === i), e.compare || (e.combine ? (t, i) => t === i : Va), !!e.static, e.enables);
      }
      of(e) {
        return new Yi([], this, 0, e);
      }
      compute(e, t) {
        if (this.isStatic) throw new Error("Can't compute a static facet");
        return new Yi(e, this, 1, t);
      }
      computeN(e, t) {
        if (this.isStatic) throw new Error("Can't compute a static facet");
        return new Yi(e, this, 2, t);
      }
      from(e, t) {
        return t || (t = h((i) => i, "get")), this.compute([e], (i) => t(i.field(e)));
      }
      constructor(e, t, i, n, s) {
        (this.combine = e), (this.compareInput = t), (this.compare = i), (this.isStatic = n), (this.id = Na++), (this.default = e([])), (this.extensions = typeof s == "function" ? s(this) : s);
      }
    };
  h(U, "Facet");
  function Va(r, e) {
    return r == e || (r.length == e.length && r.every((t, i) => t === e[i]));
  }
  h(Va, "sameArray");
  var Yi = class Yi {
    dynamicSlot(e) {
      var t;
      var i = this.value,
        n = this.facet.compareInput,
        s = this.id,
        o = e[s] >> 1,
        u = this.type == 2,
        l = !1,
        a = !1,
        c = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.dependencies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var f = _step.value;
          f == "doc" ? (l = !0) : f == "selection" ? (a = !0) : ((t = e[f.id]) !== null && t !== void 0 ? t : 1) & 1 || c.push(e[f.id]);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return {
        create(f) {
          return (f.values[o] = i(f)), 1;
        },
        update(f, d) {
          if ((l && d.docChanged) || (a && (d.docChanged || d.selection)) || Ma(f, c)) {
            var p = i(f);
            if (u ? !C0(p, f.values[o], n) : !n(p, f.values[o])) return (f.values[o] = p), 1;
          }
          return 0;
        },
        reconfigure: (f, d) => {
          var p,
            m = d.config.address[s];
          if (m != null) {
            var D = Co(d, m);
            if (this.dependencies.every((g) => (g instanceof U ? d.facet(g) === f.facet(g) : g instanceof Me ? d.field(g, !1) == f.field(g, !1) : !0)) || (u ? C0((p = i(f)), D, n) : n((p = i(f)), D))) return (f.values[o] = D), 0;
          } else p = i(f);
          return (f.values[o] = p), 1;
        },
      };
    }
    constructor(e, t, i, n) {
      (this.dependencies = e), (this.facet = t), (this.type = i), (this.value = n), (this.id = Na++);
    }
  };
  h(Yi, "FacetProvider");
  function C0(r, e, t) {
    if (r.length != e.length) return !1;
    for (var i = 0; i < r.length; i++) if (!t(r[i], e[i])) return !1;
    return !0;
  }
  h(C0, "compareArray");
  function Ma(r, e) {
    var t = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        On(r, i) & 1 && (t = !0);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(Ma, "ensureAll");
  function hv(r, e, t) {
    var i = t.map((l) => r[l.id]),
      n = t.map((l) => l.type),
      s = i.filter((l) => !(l & 1)),
      o = r[e.id] >> 1;
    function u(l) {
      var a = [];
      for (var c = 0; c < i.length; c++) {
        var f = Co(l, i[c]);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (n[c] == 2)
          try {
            for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              a.push(d);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else a.push(f);
      }
      return e.combine(a);
    }
    return (
      h(u, "get"),
      {
        create(l) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var a = _step.value;
              On(l, a);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return (l.values[o] = u(l)), 1;
        },
        update(l, a) {
          if (!Ma(l, s)) return 0;
          var c = u(l);
          return e.compare(c, l.values[o]) ? 0 : ((l.values[o] = c), 1);
        },
        reconfigure(l, a) {
          var c = Ma(l, i),
            f = a.config.facets[e.id],
            d = a.facet(e);
          if (f && !c && Va(t, f)) return (l.values[o] = d), 0;
          var p = u(l);
          return e.compare(p, d) ? ((l.values[o] = d), 0) : ((l.values[o] = p), 1);
        },
      }
    );
  }
  h(hv, "dynamicFacetSlot");
  var A0 = U.define({ static: !0 }),
    Me = class Me1 {
      static define(e) {
        var t = new Me(Na++, e.create, e.update, e.compare || ((i, n) => i === n), e);
        return e.provide && (t.provides = e.provide(t)), t;
      }
      create(e) {
        var t = e.facet(A0).find((i) => i.field == this);
        return ((t === null || t === void 0 ? void 0 : t.create) || this.createF)(e);
      }
      slot(e) {
        var t = e[this.id] >> 1;
        return {
          create: (i) => ((i.values[t] = this.create(i)), 1),
          update: (i, n) => {
            var s = i.values[t],
              o = this.updateF(s, n);
            return this.compareF(s, o) ? 0 : ((i.values[t] = o), 1);
          },
          reconfigure: (i, n) => (n.config.address[this.id] != null ? ((i.values[t] = n.field(this)), 0) : ((i.values[t] = this.create(i)), 1)),
        };
      }
      init(e) {
        return [this, A0.of({ field: this, create: e })];
      }
      get extension() {
        return this;
      }
      constructor(e, t, i, n, s) {
        (this.id = e), (this.createF = t), (this.updateF = i), (this.compareF = n), (this.spec = s), (this.provides = void 0);
      }
    };
  h(Me, "StateField");
  var Ui = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
  function wn(r) {
    return (e) => new _n(e, r);
  }
  h(wn, "prec");
  var Or = { highest: wn(Ui.highest), high: wn(Ui.high), default: wn(Ui.default), low: wn(Ui.low), lowest: wn(Ui.lowest) },
    _n = class _n {
      constructor(e, t) {
        (this.inner = e), (this.prec = t);
      }
    };
  h(_n, "PrecExtension");
  var oi = class oi1 {
    of(e) {
      return new Sr(this, e);
    }
    reconfigure(e) {
      return oi.reconfigure.of({ compartment: this, extension: e });
    }
    get(e) {
      return e.config.compartments.get(this);
    }
  };
  h(oi, "Compartment");
  var Sr = class Sr {
    constructor(e, t) {
      (this.compartment = e), (this.inner = t);
    }
  };
  h(Sr, "CompartmentInstance");
  var Gi = class Gi1 {
    staticFacet(e) {
      var t = this.address[e.id];
      return t == null ? e.default : this.staticValues[t >> 1];
    }
    static resolve(e, t, i) {
      var _loop = function (d1) {
        var p = s[d1],
          m = p[0].facet,
          D = (c && c[d1]) || [];
        if (p.every((g) => g.type == 0))
          if (((u[m.id] = (l.length << 1) | 1), Va(D, p))) l.push(i.facet(m));
          else {
            var g = m.combine(p.map((b) => b.value));
            l.push(i && m.compare(g, i.facet(m)) ? i.facet(m) : g);
          }
        else {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            var _loop = function () {
              var g = _step.value;
              g.type == 0 ? ((u[g.id] = (l.length << 1) | 1), l.push(g.value)) : ((u[g.id] = a.length << 1), a.push((b) => g.dynamicSlot(b)));
            };
            for (var _iterator = p[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) _loop();
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (u[m.id] = a.length << 1), a.push((g) => hv(g, m, p));
        }
      };
      var n = [],
        s = Object.create(null),
        o = new Map();
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = cv(e, t, o)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var d = _step.value;
          d instanceof Me ? n.push(d) : (s[d.facet.id] || (s[d.facet.id] = [])).push(d);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var u = Object.create(null),
        l = [],
        a = [];
      var _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        var _loop1 = function () {
          var d = _step1.value;
          (u[d.id] = a.length << 1), a.push((p) => d.slot(p));
        };
        for (var _iterator1 = n[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) _loop1();
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
            _iterator1.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
      var c = i === null || i === void 0 ? void 0 : i.config.facets;
      for (var d1 in s) _loop(d1);
      var f = a.map((d) => d(u));
      return new Gi(e, o, f, u, l, s);
    }
    constructor(e, t, i, n, s, o) {
      for (this.base = e, this.compartments = t, this.dynamicSlots = i, this.address = n, this.staticValues = s, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < i.length; ) this.statusTemplate.push(0);
    }
  };
  h(Gi, "Configuration");
  function cv(r, e, t) {
    var i = [[], [], [], [], []],
      n = new Map();
    function s(o, u) {
      var l = n.get(o);
      if (l != null) {
        if (l <= u) return;
        var a = i[l].indexOf(o);
        a > -1 && i[l].splice(a, 1), o instanceof Sr && t.delete(o.compartment);
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if ((n.set(o, u), Array.isArray(o)))
        try {
          for (var _iterator = o[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var a1 = _step.value;
            s(a1, u);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      else if (o instanceof Sr) {
        if (t.has(o.compartment)) throw new RangeError("Duplicate use of compartment in extensions");
        var a2 = e.get(o.compartment) || o.inner;
        t.set(o.compartment, a2), s(a2, u);
      } else if (o instanceof _n) s(o.inner, o.prec);
      else if (o instanceof Me) i[u].push(o), o.provides && s(o.provides, u);
      else if (o instanceof Yi) i[u].push(o), o.facet.extensions && s(o.facet.extensions, Ui.default);
      else {
        var a3 = o.extension;
        if (!a3) throw new Error("Unrecognized extension value in extension set (".concat(o, "). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks."));
        s(a3, u);
      }
    }
    return h(s, "inner"), s(r, Ui.default), i.reduce((o, u) => o.concat(u));
  }
  h(cv, "flatten");
  function On(r, e) {
    if (e & 1) return 2;
    var t = e >> 1,
      i = r.status[t];
    if (i == 4) throw new Error("Cyclic dependency between fields and/or facets");
    if (i & 2) return i;
    r.status[t] = 4;
    var n = r.computeSlot(r, r.config.dynamicSlots[t]);
    return (r.status[t] = 2 | n);
  }
  h(On, "ensureAddr");
  function Co(r, e) {
    return e & 1 ? r.config.staticValues[e >> 1] : r.values[e >> 1];
  }
  h(Co, "getAddr");
  var O0 = U.define(),
    T0 = U.define({ combine: (r) => r.some((e) => e), static: !0 }),
    R0 = U.define({ combine: (r) => (r.length ? r[0] : void 0), static: !0 }),
    $0 = U.define(),
    M0 = U.define(),
    P0 = U.define(),
    L0 = U.define({ combine: (r) => (r.length ? r[0] : !1) }),
    ut = class ut {
      static define() {
        return new bo();
      }
      constructor(e, t) {
        (this.type = e), (this.value = t);
      }
    };
  h(ut, "Annotation");
  var bo = class bo {
    of(e) {
      return new ut(this, e);
    }
  };
  h(bo, "AnnotationType");
  var Fo = class Fo {
    of(e) {
      return new de(this, e);
    }
    constructor(e) {
      this.map = e;
    }
  };
  h(Fo, "StateEffectType");
  var de = class de1 {
    map(e) {
      var t = this.type.map(this.value, e);
      return t === void 0 ? void 0 : t == this.value ? this : new de(this.type, t);
    }
    is(e) {
      return this.type == e;
    }
    static define() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return new Fo(e.map || ((t) => t));
    }
    static mapEffects(e, t) {
      if (!e.length) return e;
      var i = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n.map(t);
          s && i.push(s);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i;
    }
    constructor(e, t) {
      (this.type = e), (this.value = t);
    }
  };
  h(de, "StateEffect");
  de.reconfigure = de.define();
  de.appendConfig = de.define();
  var xe = class xe1 {
    static create(e, t, i, n, s, o) {
      return new xe(e, t, i, n, s, o);
    }
    get newDoc() {
      return this._doc || (this._doc = this.changes.apply(this.startState.doc));
    }
    get newSelection() {
      return this.selection || this.startState.selection.map(this.changes);
    }
    get state() {
      return this._state || this.startState.applyTransaction(this), this._state;
    }
    annotation(e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.annotations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          if (t.type == e) return t.value;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    get docChanged() {
      return !this.changes.empty;
    }
    get reconfigured() {
      return this.startState.config != this.state.config;
    }
    isUserEvent(e) {
      var t = this.annotation(xe.userEvent);
      return !!(t && (t == e || (t.length > e.length && t.slice(0, e.length) == e && t[e.length] == ".")));
    }
    constructor(e, t, i, n, s, o) {
      (this.startState = e), (this.changes = t), (this.selection = i), (this.effects = n), (this.annotations = s), (this.scrollIntoView = o), (this._doc = null), (this._state = null), i && _0(i, t.newLength), s.some((u) => u.type == xe.time) || (this.annotations = s.concat(xe.time.of(Date.now())));
    }
  };
  h(xe, "Transaction");
  xe.time = ut.define();
  xe.userEvent = ut.define();
  xe.addToHistory = ut.define();
  xe.remote = ut.define();
  function fv(r, e) {
    var t = [];
    for (var i = 0, n = 0; ; ) {
      var s = void 0,
        o = void 0;
      if (i < r.length && (n == e.length || e[n] >= r[i])) (s = r[i++]), (o = r[i++]);
      else if (n < e.length) (s = e[n++]), (o = e[n++]);
      else return t;
      !t.length || t[t.length - 1] < s ? t.push(s, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
    }
  }
  h(fv, "joinRanges");
  function q0(r, e, t) {
    var i;
    var n, s, o;
    return (
      t ? ((n = e.changes), (s = we.empty(e.changes.length)), (o = r.changes.compose(e.changes))) : ((n = e.changes.map(r.changes)), (s = r.changes.mapDesc(e.changes, !0)), (o = r.changes.compose(n))),
      { changes: o, selection: e.selection ? e.selection.map(s) : (i = r.selection) === null || i === void 0 ? void 0 : i.map(n), effects: de.mapEffects(r.effects, n).concat(de.mapEffects(e.effects, s)), annotations: r.annotations.length ? r.annotations.concat(e.annotations) : e.annotations, scrollIntoView: r.scrollIntoView || e.scrollIntoView }
    );
  }
  h(q0, "mergeTransaction");
  function Pa(r, e, t) {
    var i = e.selection,
      n = Br(e.annotations);
    return e.userEvent && (n = n.concat(xe.userEvent.of(e.userEvent))), { changes: e.changes instanceof we ? e.changes : we.of(e.changes || [], t, r.facet(R0)), selection: i && (i instanceof j ? i : j.single(i.anchor, i.head)), effects: Br(e.effects), annotations: n, scrollIntoView: !!e.scrollIntoView };
  }
  h(Pa, "resolveTransactionInner");
  function I0(r, e, t) {
    var i = Pa(r, e.length ? e[0] : {}, r.doc.length);
    e.length && e[0].filter === !1 && (t = !1);
    for (var s = 1; s < e.length; s++) {
      e[s].filter === !1 && (t = !1);
      var o = !!e[s].sequential;
      i = q0(i, Pa(r, e[s], o ? i.changes.newLength : r.doc.length), o);
    }
    var n = xe.create(r, i.changes, i.selection, i.effects, i.annotations, i.scrollIntoView);
    return pv(t ? dv(n) : n);
  }
  h(I0, "resolveTransaction");
  function dv(r) {
    var e = r.startState,
      t = !0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.facet($0)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        var s = n(r);
        if (s === !1) {
          t = !1;
          break;
        }
        Array.isArray(s) && (t = t === !0 ? s : fv(t, s));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (t !== !0) {
      var n1, s1;
      if (t === !1) (s1 = r.changes.invertedDesc), (n1 = we.empty(e.doc.length));
      else {
        var o = r.changes.filter(t);
        (n1 = o.changes), (s1 = o.filtered.mapDesc(o.changes).invertedDesc);
      }
      r = xe.create(e, n1, r.selection && r.selection.map(s1), de.mapEffects(r.effects, s1), r.annotations, r.scrollIntoView);
    }
    var i = e.facet(M0);
    for (var n2 = i.length - 1; n2 >= 0; n2--) {
      var s2 = i[n2](r);
      s2 instanceof xe ? (r = s2) : Array.isArray(s2) && s2.length == 1 && s2[0] instanceof xe ? (r = s2[0]) : (r = I0(e, Br(s2), !1));
    }
    return r;
  }
  h(dv, "filterTransaction");
  function pv(r) {
    var e = r.startState,
      t = e.facet(P0),
      i = r;
    for (var n = t.length - 1; n >= 0; n--) {
      var s = t[n](r);
      s && Object.keys(s).length && (i = q0(i, Pa(e, s, r.changes.newLength), !0));
    }
    return i == r ? r : xe.create(e, r.changes, r.selection, i.effects, i.annotations, i.scrollIntoView);
  }
  h(pv, "extendTransaction");
  var mv = [];
  function Br(r) {
    return r == null ? mv : Array.isArray(r) ? r : [r];
  }
  h(Br, "asArray");
  var St = (function (r) {
      return (r[(r.Word = 0)] = "Word"), (r[(r.Space = 1)] = "Space"), (r[(r.Other = 2)] = "Other"), r;
    })(St || (St = {})),
    gv = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/,
    La;
  try {
    La = new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
  } catch (e) {}
  function Dv(r) {
    if (La) return La.test(r);
    for (var e = 0; e < r.length; e++) {
      var t = r[e];
      if (/\w/.test(t) || (t > "\x80" && (t.toUpperCase() != t.toLowerCase() || gv.test(t)))) return !0;
    }
    return !1;
  }
  h(Dv, "hasWordChar");
  function bv(r) {
    return (e) => {
      if (!/\S/.test(e)) return St.Space;
      if (Dv(e)) return St.Word;
      for (var t = 0; t < r.length; t++) if (e.indexOf(r[t]) > -1) return St.Word;
      return St.Other;
    };
  }
  h(bv, "makeCategorizer");
  var le = class le1 {
    field(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      var i = this.config.address[e.id];
      if (i == null) {
        if (t) throw new RangeError("Field is not present in this state");
        return;
      }
      return On(this, i), Co(this, i);
    }
    update() {
      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
        e[_key] = arguments[_key];
      }
      return I0(this, e, !0);
    }
    applyTransaction(e) {
      var t = this.config,
        i = t.base,
        n = t.compartments;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var o = _step.value;
          o.is(oi.reconfigure) ? (t && ((n = new Map()), t.compartments.forEach((u, l) => n.set(l, u)), (t = null)), n.set(o.value.compartment, o.value.extension)) : o.is(de.reconfigure) ? ((t = null), (i = o.value)) : o.is(de.appendConfig) && ((t = null), (i = Br(i).concat(o.value)));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var s;
      t
        ? (s = e.startState.values.slice())
        : ((t = Gi.resolve(i, n, this)),
          (s = new le(
            t,
            this.doc,
            this.selection,
            t.dynamicSlots.map(() => null),
            (u, l) => l.reconfigure(u, this),
            null
          ).values)),
        new le(t, e.newDoc, e.newSelection, s, (o, u) => u.update(o, e), e);
    }
    replaceSelection(e) {
      return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({ changes: { from: t.from, to: t.to, insert: e }, range: j.cursor(t.from + e.length) }));
    }
    changeByRange(e) {
      var t = this.selection,
        i = e(t.ranges[0]),
        n = this.changes(i.changes),
        s = [i.range],
        o = Br(i.effects);
      for (var u = 1; u < t.ranges.length; u++) {
        var l = e(t.ranges[u]),
          a = this.changes(l.changes),
          c = a.map(n);
        for (var d = 0; d < u; d++) s[d] = s[d].map(c);
        var f = n.mapDesc(a, !0);
        s.push(l.range.map(f)), (n = n.compose(c)), (o = de.mapEffects(o, c).concat(de.mapEffects(Br(l.effects), f)));
      }
      return { changes: n, selection: j.create(s, t.mainIndex), effects: o };
    }
    changes() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      return e instanceof we ? e : we.of(e, this.doc.length, this.facet(le.lineSeparator));
    }
    toText(e) {
      return ce.of(e.split(this.facet(le.lineSeparator) || Ta));
    }
    sliceDoc() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0,
        t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.doc.length;
      return this.doc.sliceString(e, t, this.lineBreak);
    }
    facet(e) {
      var t = this.config.address[e.id];
      return t == null ? e.default : (On(this, t), Co(this, t));
    }
    toJSON(e) {
      var t = { doc: this.sliceDoc(), selection: this.selection.toJSON() };
      if (e)
        for (var i in e) {
          var n = e[i];
          n instanceof Me && this.config.address[n.id] != null && (t[i] = n.spec.toJSON(this.field(e[i]), this));
        }
      return t;
    }
    static fromJSON(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
        i = arguments.length > 2 ? arguments[2] : void 0;
      if (!e || typeof e.doc != "string") throw new RangeError("Invalid JSON representation for EditorState");
      var n = [];
      if (i) {
        var _loop = function (s) {
          if (Object.prototype.hasOwnProperty.call(e, s)) {
            var o = i[s],
              u = e[s];
            n.push(o.init((l) => o.spec.fromJSON(u, l)));
          }
        };
        for (var s in i) _loop(s);
      }
      return le.create({ doc: e.doc, selection: j.fromJSON(e.selection), extensions: t.extensions ? n.concat([t.extensions]) : n });
    }
    static create() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var t = Gi.resolve(e.extensions || [], new Map()),
        i = e.doc instanceof ce ? e.doc : ce.of((e.doc || "").split(t.staticFacet(le.lineSeparator) || Ta)),
        n = e.selection ? (e.selection instanceof j ? e.selection : j.single(e.selection.anchor, e.selection.head)) : j.single(0);
      return (
        _0(n, i.length),
        t.staticFacet(T0) || (n = n.asSingle()),
        new le(
          t,
          i,
          n,
          t.dynamicSlots.map(() => null),
          (s, o) => o.create(s),
          null
        )
      );
    }
    get tabSize() {
      return this.facet(le.tabSize);
    }
    get lineBreak() {
      return this.facet(le.lineSeparator) || "\n";
    }
    get readOnly() {
      return this.facet(L0);
    }
    phrase(e) {
      for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        t[_key - 1] = arguments[_key];
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.facet(le.phrases)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (Object.prototype.hasOwnProperty.call(i, e)) {
            e = i[e];
            break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return (
        t.length &&
          (e = e.replace(/\$(\$|\d*)/g, (i, n) => {
            if (n == "$") return "$";
            var s = +(n || 1);
            return !s || s > t.length ? i : t[s - 1];
          })),
        e
      );
    }
    languageDataAt(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
      var n = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined,
        _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        for (var _iterator = this.facet(O0)[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
          var s = _step.value;
          try {
            for (var _iterator1 = s(this, t, i)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var o = _step1.value;
              Object.prototype.hasOwnProperty.call(o, e) && n.push(o[e]);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
      return n;
    }
    charCategorizer(e) {
      return bv(this.languageDataAt("wordChars", e).join(""));
    }
    wordAt(e) {
      var _this_doc_lineAt = this.doc.lineAt(e),
        t = _this_doc_lineAt.text,
        i = _this_doc_lineAt.from,
        n = _this_doc_lineAt.length,
        s = this.charCategorizer(e),
        o = e - i,
        u = e - i;
      for (; o > 0; ) {
        var l = Bt(t, o, !1);
        if (s(t.slice(l, o)) != St.Word) break;
        o = l;
      }
      for (; u < n; ) {
        var l1 = Bt(t, u);
        if (s(t.slice(u, l1)) != St.Word) break;
        u = l1;
      }
      return o == u ? null : j.range(o + i, u + i);
    }
    constructor(e, t, i, n, s, o) {
      (this.config = e), (this.doc = t), (this.selection = i), (this.values = n), (this.status = e.statusTemplate.slice()), (this.computeSlot = s), o && (o._state = this);
      for (var u = 0; u < this.config.dynamicSlots.length; u++) On(this, u << 1);
      this.computeSlot = null;
    }
  };
  h(le, "EditorState");
  le.allowMultipleSelections = T0;
  le.tabSize = U.define({ combine: (r) => (r.length ? r[0] : 4) });
  le.lineSeparator = R0;
  le.readOnly = L0;
  le.phrases = U.define({
    compare(r, e) {
      var t = Object.keys(r),
        i = Object.keys(e);
      return t.length == i.length && t.every((n) => r[n] == e[n]);
    },
  });
  le.languageData = O0;
  le.changeFilter = $0;
  le.transactionFilter = M0;
  le.transactionExtender = P0;
  oi.reconfigure = de.define();
  function ui(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var i = {};
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var n = _step.value;
        try {
          for (var _iterator1 = Object.keys(n)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
            var s = _step1.value;
            var o = n[s],
              u = i[s];
            if (u === void 0) i[s] = o;
            else if (!(u === o || o === void 0))
              if (Object.hasOwnProperty.call(t, s)) i[s] = t[s](u, o);
              else throw new Error("Config merge conflict for field " + s);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    for (var n1 in e) i[n1] === void 0 && (i[n1] = e[n1]);
    return i;
  }
  h(ui, "combineConfig");
  var zt = class zt {
    eq(e) {
      return this == e;
    }
    range(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      return ki.create(e, t, this);
    }
  };
  h(zt, "RangeValue");
  zt.prototype.startSide = zt.prototype.endSide = 0;
  zt.prototype.point = !1;
  zt.prototype.mapMode = Xe.TrackDel;
  var ki = class ki1 {
    static create(e, t, i) {
      return new ki(e, t, i);
    }
    constructor(e, t, i) {
      (this.from = e), (this.to = t), (this.value = i);
    }
  };
  h(ki, "Range");
  function qa(r, e) {
    return r.from - e.from || r.value.startSide - e.value.startSide;
  }
  h(qa, "cmpRange");
  var _r = class _r1 {
    get length() {
      return this.to[this.to.length - 1];
    }
    findIndex(e, t, i) {
      var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
      var s = i ? this.to : this.from;
      for (var o = n, u = s.length; ; ) {
        if (o == u) return o;
        var l = (o + u) >> 1,
          a = s[l] - e || (i ? this.value[l].endSide : this.value[l].startSide) - t;
        if (l == o) return a >= 0 ? o : u;
        a >= 0 ? (u = l) : (o = l + 1);
      }
    }
    between(e, t, i, n) {
      for (var s = this.findIndex(t, -1e9, !0), o = this.findIndex(i, 1e9, !1, s); s < o; s++) if (n(this.from[s] + e, this.to[s] + e, this.value[s]) === !1) return !1;
    }
    map(e, t) {
      var i = [],
        n = [],
        s = [],
        o = -1,
        u = -1;
      for (var l = 0; l < this.value.length; l++) {
        var a = this.value[l],
          c = this.from[l] + e,
          f = this.to[l] + e,
          d = void 0,
          p = void 0;
        if (c == f) {
          var m = t.mapPos(c, a.startSide, a.mapMode);
          if (m == null || ((d = p = m), a.startSide != a.endSide && ((p = t.mapPos(c, a.endSide)), p < d))) continue;
        } else if (((d = t.mapPos(c, a.startSide)), (p = t.mapPos(f, a.endSide)), d > p || (d == p && a.startSide > 0 && a.endSide <= 0))) continue;
        (p - d || a.endSide - a.startSide) < 0 || (o < 0 && (o = d), a.point && (u = Math.max(u, p - d)), i.push(a), n.push(d - o), s.push(p - o));
      }
      return { mapped: i.length ? new _r(n, s, i, u) : null, pos: o };
    }
    constructor(e, t, i, n) {
      (this.from = e), (this.to = t), (this.value = i), (this.maxPoint = n);
    }
  };
  h(_r, "Chunk");
  var pe = class pe1 {
    static create(e, t, i, n) {
      return new pe(e, t, i, n);
    }
    get length() {
      var e = this.chunk.length - 1;
      return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
    }
    get size() {
      if (this.isEmpty) return 0;
      var e = this.nextLayer.size;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.chunk[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          e += t.value.length;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return e;
    }
    chunkEnd(e) {
      return this.chunkPos[e] + this.chunk[e].length;
    }
    update(e) {
      var tmp = e.add,
        t = tmp === void 0 ? [] : tmp,
        tmp1 = e.sort,
        i = tmp1 === void 0 ? !1 : tmp1,
        tmp2 = e.filterFrom,
        n = tmp2 === void 0 ? 0 : tmp2,
        tmp3 = e.filterTo,
        s = tmp3 === void 0 ? this.length : tmp3,
        o = e.filter;
      if (t.length == 0 && !o) return this;
      if ((i && (t = t.slice().sort(qa)), this.isEmpty)) return t.length ? pe.of(t) : this;
      var u = new Tn(this, null, -1).goto(0),
        l = 0,
        a = [],
        c = new Wt();
      for (; u.value || l < t.length; )
        if (l < t.length && (u.from - t[l].from || u.startSide - t[l].value.startSide) >= 0) {
          var f = t[l++];
          c.addInner(f.from, f.to, f.value) || a.push(f);
        } else
          u.rangeIndex == 1 && u.chunkIndex < this.chunk.length && (l == t.length || this.chunkEnd(u.chunkIndex) < t[l].from) && (!o || n > this.chunkEnd(u.chunkIndex) || s < this.chunkPos[u.chunkIndex]) && c.addChunk(this.chunkPos[u.chunkIndex], this.chunk[u.chunkIndex])
            ? u.nextChunk()
            : ((!o || n > u.to || s < u.from || o(u.from, u.to, u.value)) && (c.addInner(u.from, u.to, u.value) || a.push(ki.create(u.from, u.to, u.value))), u.next());
      return c.finishInner(this.nextLayer.isEmpty && !a.length ? pe.empty : this.nextLayer.update({ add: a, filter: o, filterFrom: n, filterTo: s }));
    }
    map(e) {
      if (e.empty || this.isEmpty) return this;
      var t = [],
        i = [],
        n = -1;
      for (var o = 0; o < this.chunk.length; o++) {
        var u = this.chunkPos[o],
          l = this.chunk[o],
          a = e.touchesRange(u, u + l.length);
        if (a === !1) (n = Math.max(n, l.maxPoint)), t.push(l), i.push(e.mapPos(u));
        else if (a === !0) {
          var _l_map = l.map(u, e),
            c = _l_map.mapped,
            f = _l_map.pos;
          c && ((n = Math.max(n, c.maxPoint)), t.push(c), i.push(f));
        }
      }
      var s = this.nextLayer.map(e);
      return t.length == 0 ? s : new pe(i, t, s || pe.empty, n);
    }
    between(e, t, i) {
      if (!this.isEmpty) {
        for (var n = 0; n < this.chunk.length; n++) {
          var s = this.chunkPos[n],
            o = this.chunk[n];
          if (t >= s && e <= s + o.length && o.between(s, e - s, t - s, i) === !1) return;
        }
        this.nextLayer.between(e, t, i);
      }
    }
    iter() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return wi.from([this]).goto(e);
    }
    get isEmpty() {
      return this.nextLayer == this;
    }
    static iter(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return wi.from(e).goto(t);
    }
    static compare(e, t, i, n) {
      var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
      var o = e.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
        u = t.filter((f) => f.maxPoint > 0 || (!f.isEmpty && f.maxPoint >= s)),
        l = E0(o, u, i),
        a = new Ci(o, l, s),
        c = new Ci(u, l, s);
      i.iterGaps((f, d, p) => v0(a, f, c, d, p, n)), i.empty && i.length == 0 && v0(a, 0, c, 0, 0, n);
    }
    static eq(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0,
        n = arguments.length > 3 ? arguments[3] : void 0;
      n == null && (n = 1e9 - 1);
      var s = e.filter((c) => !c.isEmpty && t.indexOf(c) < 0),
        o = t.filter((c) => !c.isEmpty && e.indexOf(c) < 0);
      if (s.length != o.length) return !1;
      if (!s.length) return !0;
      var u = E0(s, o),
        l = new Ci(s, u, 0).goto(i),
        a = new Ci(o, u, 0).goto(i);
      for (;;) {
        if (l.to != a.to || !Ia(l.active, a.active) || (l.point && (!a.point || !l.point.eq(a.point)))) return !1;
        if (l.to > n) return !0;
        l.next(), a.next();
      }
    }
    static spans(e, t, i, n) {
      var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : -1;
      var o = new Ci(e, null, s).goto(t),
        u = t,
        l = o.openStart;
      for (;;) {
        var a = Math.min(o.to, i);
        if (o.point) {
          var c = o.activeForPoint(o.to),
            f = o.pointFrom < t ? c.length + 1 : Math.min(c.length, l);
          n.point(u, a, o.point, c, f, o.pointRank), (l = Math.min(o.openEnd(a), c.length));
        } else a > u && (n.span(u, a, o.active, l), (l = o.openEnd(a)));
        if (o.to > i) return l + (o.point && o.to > i ? 1 : 0);
        (u = o.to), o.next();
      }
    }
    static of(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      var i = new Wt();
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = (e instanceof ki ? [e] : t ? Fv(e) : e)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          i.add(n.from, n.to, n.value);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i.finish();
    }
    constructor(e, t, i, n) {
      (this.chunkPos = e), (this.chunk = t), (this.nextLayer = i), (this.maxPoint = n);
    }
  };
  h(pe, "RangeSet");
  pe.empty = new pe([], [], null, -1);
  function Fv(r) {
    if (r.length > 1)
      for (var e = r[0], t = 1; t < r.length; t++) {
        var i = r[t];
        if (qa(e, i) > 0) return r.slice().sort(qa);
        e = i;
      }
    return r;
  }
  h(Fv, "lazySort");
  pe.empty.nextLayer = pe.empty;
  var Wt = class Wt1 {
    finishChunk(e) {
      this.chunks.push(new _r(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), (this.chunkStart = -1), (this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint)), (this.maxPoint = -1), e && ((this.from = []), (this.to = []), (this.value = []));
    }
    add(e, t, i) {
      this.addInner(e, t, i) || (this.nextLayer || (this.nextLayer = new Wt())).add(e, t, i);
    }
    addInner(e, t, i) {
      var n = e - this.lastTo || i.startSide - this.last.endSide;
      if (n <= 0 && (e - this.lastFrom || i.startSide - this.last.startSide) < 0) throw new Error("Ranges must be added sorted by `from` position and `startSide`");
      return n < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), (this.last = i), (this.lastFrom = e), (this.lastTo = t), this.value.push(i), i.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
    }
    addChunk(e, t) {
      if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0) return !1;
      this.from.length && this.finishChunk(!0), (this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint)), this.chunks.push(t), this.chunkPos.push(e);
      var i = t.value.length - 1;
      return (this.last = t.value[i]), (this.lastFrom = t.from[i] + e), (this.lastTo = t.to[i] + e), !0;
    }
    finish() {
      return this.finishInner(pe.empty);
    }
    finishInner(e) {
      if ((this.from.length && this.finishChunk(!1), this.chunks.length == 0)) return e;
      var t = pe.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
      return (this.from = null), t;
    }
    constructor() {
      (this.chunks = []), (this.chunkPos = []), (this.chunkStart = -1), (this.last = null), (this.lastFrom = -1e9), (this.lastTo = -1e9), (this.from = []), (this.to = []), (this.value = []), (this.maxPoint = -1), (this.setMaxPoint = -1), (this.nextLayer = null);
    }
  };
  h(Wt, "RangeSetBuilder");
  function E0(r, e, t) {
    var i = new Map();
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        for (var o = 0; o < s.chunk.length; o++) s.chunk[o].maxPoint <= 0 && i.set(s.chunk[o], s.chunkPos[o]);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    var n = new Set();
    var _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
        var s1 = _step1.value;
        for (var o1 = 0; o1 < s1.chunk.length; o1++) {
          var u = i.get(s1.chunk[o1]);
          u != null && (t ? t.mapPos(u) : u) == s1.chunkPos[o1] && !(t === null || t === void 0 ? void 0 : t.touchesRange(u, u + s1.chunk[o1].length)) && n.add(s1.chunk[o1]);
        }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
          _iterator1.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    return n;
  }
  h(E0, "findSharedChunks");
  var Tn = class Tn {
    get startSide() {
      return this.value ? this.value.startSide : 0;
    }
    get endSide() {
      return this.value ? this.value.endSide : 0;
    }
    goto(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
      return (this.chunkIndex = this.rangeIndex = 0), this.gotoInner(e, t, !1), this;
    }
    gotoInner(e, t, i) {
      for (; this.chunkIndex < this.layer.chunk.length; ) {
        var n = this.layer.chunk[this.chunkIndex];
        if (!((this.skip && this.skip.has(n)) || this.layer.chunkEnd(this.chunkIndex) < e || n.maxPoint < this.minPoint)) break;
        this.chunkIndex++, (i = !1);
      }
      if (this.chunkIndex < this.layer.chunk.length) {
        var n1 = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
        (!i || this.rangeIndex < n1) && this.setRangeIndex(n1);
      }
      this.next();
    }
    forward(e, t) {
      (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
    }
    next() {
      for (;;)
        if (this.chunkIndex == this.layer.chunk.length) {
          (this.from = this.to = 1e9), (this.value = null);
          break;
        } else {
          var e = this.layer.chunkPos[this.chunkIndex],
            t = this.layer.chunk[this.chunkIndex],
            i = e + t.from[this.rangeIndex];
          if (((this.from = i), (this.to = e + t.to[this.rangeIndex]), (this.value = t.value[this.rangeIndex]), this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || (this.value.point && this.to - this.from >= this.minPoint))) break;
        }
    }
    setRangeIndex(e) {
      if (e == this.layer.chunk[this.chunkIndex].value.length) {
        if ((this.chunkIndex++, this.skip)) for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); ) this.chunkIndex++;
        this.rangeIndex = 0;
      } else this.rangeIndex = e;
    }
    nextChunk() {
      this.chunkIndex++, (this.rangeIndex = 0), this.next();
    }
    compare(e) {
      return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
    }
    constructor(e, t, i, ref) {
      var n = ref === void 0 ? 0 : ref;
      (this.layer = e), (this.skip = t), (this.minPoint = i), (this.rank = n);
    }
  };
  h(Tn, "LayerCursor");
  var wi = class wi1 {
    static from(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
      var n = [];
      for (var s = 0; s < e.length; s++) for (var o = e[s]; !o.isEmpty; o = o.nextLayer) o.maxPoint >= i && n.push(new Tn(o, t, i, s));
      return n.length == 1 ? n[0] : new wi(n);
    }
    get startSide() {
      return this.value ? this.value.startSide : 0;
    }
    goto(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          i.goto(e, t);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) Oa(this.heap, i1);
      return this.next(), this;
    }
    forward(e, t) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.heap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          i.forward(e, t);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      for (var i1 = this.heap.length >> 1; i1 >= 0; i1--) Oa(this.heap, i1);
      (this.to - e || this.value.endSide - t) < 0 && this.next();
    }
    next() {
      if (this.heap.length == 0) (this.from = this.to = 1e9), (this.value = null), (this.rank = -1);
      else {
        var e = this.heap[0];
        (this.from = e.from), (this.to = e.to), (this.value = e.value), (this.rank = e.rank), e.value && e.next(), Oa(this.heap, 0);
      }
    }
    constructor(e) {
      this.heap = e;
    }
  };
  h(wi, "HeapCursor");
  function Oa(r, e) {
    for (var t = r[e]; ; ) {
      var i = (e << 1) + 1;
      if (i >= r.length) break;
      var n = r[i];
      if ((i + 1 < r.length && n.compare(r[i + 1]) >= 0 && ((n = r[i + 1]), i++), t.compare(n) < 0)) break;
      (r[i] = t), (r[e] = n), (e = i);
    }
  }
  h(Oa, "heapBubble");
  var Ci = class Ci {
    goto(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1e9;
      return this.cursor.goto(e, t), (this.active.length = this.activeTo.length = this.activeRank.length = 0), (this.minActive = -1), (this.to = e), (this.endSide = t), (this.openStart = -1), this.next(), this;
    }
    forward(e, t) {
      for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; ) this.removeActive(this.minActive);
      this.cursor.forward(e, t);
    }
    removeActive(e) {
      po(this.active, e), po(this.activeTo, e), po(this.activeRank, e), (this.minActive = k0(this.active, this.activeTo));
    }
    addActive(e) {
      var t = 0,
        _this_cursor = this.cursor,
        i = _this_cursor.value,
        n = _this_cursor.to,
        s = _this_cursor.rank;
      for (; t < this.activeRank.length && this.activeRank[t] <= s; ) t++;
      mo(this.active, t, i), mo(this.activeTo, t, n), mo(this.activeRank, t, s), e && mo(e, t, this.cursor.from), (this.minActive = k0(this.active, this.activeTo));
    }
    next() {
      var e = this.to,
        t = this.point;
      this.point = null;
      var i = this.openStart < 0 ? [] : null;
      for (;;) {
        var n = this.minActive;
        if (n > -1 && (this.activeTo[n] - this.cursor.from || this.active[n].endSide - this.cursor.startSide) < 0) {
          if (this.activeTo[n] > e) {
            (this.to = this.activeTo[n]), (this.endSide = this.active[n].endSide);
            break;
          }
          this.removeActive(n), i && po(i, n);
        } else if (this.cursor.value)
          if (this.cursor.from > e) {
            (this.to = this.cursor.from), (this.endSide = this.cursor.startSide);
            break;
          } else {
            var s = this.cursor.value;
            if (!s.point) this.addActive(i), this.cursor.next();
            else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to) this.cursor.next();
            else {
              (this.point = s), (this.pointFrom = this.cursor.from), (this.pointRank = this.cursor.rank), (this.to = this.cursor.to), (this.endSide = s.endSide), this.cursor.next(), this.forward(this.to, this.endSide);
              break;
            }
          }
        else {
          this.to = this.endSide = 1e9;
          break;
        }
      }
      if (i) {
        this.openStart = 0;
        for (var n1 = i.length - 1; n1 >= 0 && i[n1] < e; n1--) this.openStart++;
      }
    }
    activeForPoint(e) {
      if (!this.active.length) return this.active;
      var t = [];
      for (var i = this.active.length - 1; i >= 0 && !(this.activeRank[i] < this.pointRank); i--) (this.activeTo[i] > e || (this.activeTo[i] == e && this.active[i].endSide >= this.point.endSide)) && t.push(this.active[i]);
      return t.reverse();
    }
    openEnd(e) {
      var t = 0;
      for (var i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > e; i--) t++;
      return t;
    }
    constructor(e, t, i) {
      (this.minPoint = i), (this.active = []), (this.activeTo = []), (this.activeRank = []), (this.minActive = -1), (this.point = null), (this.pointFrom = 0), (this.pointRank = 0), (this.to = -1e9), (this.endSide = 0), (this.openStart = -1), (this.cursor = wi.from(e, t, i));
    }
  };
  h(Ci, "SpanCursor");
  function v0(r, e, t, i, n, s) {
    r.goto(e), t.goto(i);
    var o = i + n,
      u = i,
      l = i - e;
    for (;;) {
      var a = r.to + l - t.to || r.endSide - t.endSide,
        c = a < 0 ? r.to + l : t.to,
        f = Math.min(c, o);
      if ((r.point || t.point ? (r.point && t.point && (r.point == t.point || r.point.eq(t.point)) && Ia(r.activeForPoint(r.to + l), t.activeForPoint(t.to))) || s.comparePoint(u, f, r.point, t.point) : f > u && !Ia(r.active, t.active) && s.compareRange(u, f, r.active, t.active), c > o)) break;
      (u = c), a <= 0 && r.next(), a >= 0 && t.next();
    }
  }
  h(v0, "compare");
  function Ia(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (r[t] != e[t] && !r[t].eq(e[t])) return !1;
    return !0;
  }
  h(Ia, "sameValues");
  function po(r, e) {
    for (var t = e, i = r.length - 1; t < i; t++) r[t] = r[t + 1];
    r.pop();
  }
  h(po, "remove");
  function mo(r, e, t) {
    for (var i = r.length - 1; i >= e; i--) r[i + 1] = r[i];
    r[e] = t;
  }
  h(mo, "insert");
  function k0(r, e) {
    var t = -1,
      i = 1e9;
    for (var n = 0; n < e.length; n++) (e[n] - i || r[n].endSide - r[t].endSide) < 0 && ((t = n), (i = e[n]));
    return t;
  }
  h(k0, "findMinIndex");
  function Ao(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : r.length;
    var i = 0;
    for (var n = 0; n < t; ) r.charCodeAt(n) == 9 ? ((i += e - (i % e)), n++) : (i++, (n = Bt(r, n)));
    return i;
  }
  h(Ao, "countColumn");
  function N0(r, e, t, i) {
    for (var n = 0, s = 0; ; ) {
      if (s >= e) return n;
      if (n == r.length) break;
      (s += r.charCodeAt(n) == 9 ? t - (s % t) : 1), (n = Bt(r, n));
    }
    return i === !0 ? -1 : r.length;
  }
  h(N0, "findColumn");
  var za = "ͼ",
    V0 = typeof Symbol > "u" ? "__" + za : Symbol.for(za),
    Wa = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"),
    z0 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {},
    lt = class lt {
      getRules() {
        return this.rules.join("\n");
      }
      static newName() {
        var e = z0[V0] || 1;
        return (z0[V0] = e + 1), za + e.toString(36);
      }
      static mount(e, t) {
        (e[Wa] || new vo(e)).mount(Array.isArray(t) ? t : [t]);
      }
      constructor(e, t) {
        this.rules = [];
        var _ref = t || {},
          i = _ref.finish;
        function n(o) {
          return /^@/.test(o) ? [o] : o.split(/,\s*/);
        }
        h(n, "splitSelector");
        function s(o, u, l, a) {
          var c = [],
            f = /^@(\w+)\b/.exec(o[0]),
            d = f && f[1] == "keyframes";
          if (f && u == null) return l.push(o[0] + ";");
          for (var p in u) {
            var m = u[p];
            if (/&/.test(p))
              s(
                p
                  .split(/,\s*/)
                  .map((D) => o.map((g) => D.replace(/&/, g)))
                  .reduce((D, g) => D.concat(g)),
                m,
                l
              );
            else if (m && typeof m == "object") {
              if (!f) throw new RangeError("The value of a property (" + p + ") should be a primitive value.");
              s(n(p), m, c, d);
            } else m != null && c.push(p.replace(/_.*/, "").replace(/[A-Z]/g, (D) => "-" + D.toLowerCase()) + ": " + m + ";");
          }
          (c.length || d) && l.push((i && !f && !a ? o.map(i) : o).join(", ") + " {" + c.join(" ") + "}");
        }
        h(s, "render");
        for (var o in e) s(n(o), e[o], this.rules);
      }
    };
  h(lt, "StyleModule");
  var Eo = null,
    vo = class vo {
      mount(e) {
        var t = this.sheet,
          i = 0,
          n = 0;
        for (var s = 0; s < e.length; s++) {
          var o = e[s],
            u = this.modules.indexOf(o);
          if ((u < n && u > -1 && (this.modules.splice(u, 1), n--, (u = -1)), u == -1)) {
            if ((this.modules.splice(n++, 0, o), t)) for (var l = 0; l < o.rules.length; l++) t.insertRule(o.rules[l], i++);
          } else {
            for (; n < u; ) i += this.modules[n++].rules.length;
            (i += o.rules.length), n++;
          }
        }
        if (!t) {
          var s1 = "";
          for (var o1 = 0; o1 < this.modules.length; o1++) s1 += this.modules[o1].getRules() + "\n";
          this.styleTag.textContent = s1;
        }
      }
      constructor(e) {
        if (!e.head && e.adoptedStyleSheets && typeof CSSStyleSheet < "u") {
          if (Eo) return (e.adoptedStyleSheets = [Eo.sheet].concat(e.adoptedStyleSheets)), (e[Wa] = Eo);
          (this.sheet = new CSSStyleSheet()), (e.adoptedStyleSheets = [this.sheet].concat(e.adoptedStyleSheets)), (Eo = this);
        } else {
          this.styleTag = (e.ownerDocument || e).createElement("style");
          var t = e.head || e;
          t.insertBefore(this.styleTag, t.firstChild);
        }
        (this.modules = []), (e[Wa] = this);
      }
    };
  h(vo, "StyleSet");
  var li = {
      8: "Backspace",
      9: "Tab",
      10: "Enter",
      12: "NumLock",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      44: "PrintScreen",
      45: "Insert",
      46: "Delete",
      59: ";",
      61: "=",
      91: "Meta",
      92: "Meta",
      106: "*",
      107: "+",
      108: ",",
      109: "-",
      110: ".",
      111: "/",
      144: "NumLock",
      145: "ScrollLock",
      160: "Shift",
      161: "Shift",
      162: "Control",
      163: "Control",
      164: "Alt",
      165: "Alt",
      173: "-",
      186: ";",
      187: "=",
      188: ",",
      189: "-",
      190: ".",
      191: "/",
      192: "`",
      219: "[",
      220: "\\",
      221: "]",
      222: "'",
    },
    Tr = { 48: ")", 49: "!", 50: "@", 51: "#", 52: "$", 53: "%", 54: "^", 55: "&", 56: "*", 57: "(", 59: ":", 61: "+", 173: "_", 186: ":", 187: "+", 188: "<", 189: "_", 190: ">", 191: "?", 192: "~", 219: "{", 220: "|", 221: "}", 222: '"' },
    W0 = typeof navigator < "u" && /Chrome\/(\d+)/.exec(navigator.userAgent),
    oB = typeof navigator < "u" && /Gecko\/\d+/.test(navigator.userAgent),
    yv = typeof navigator < "u" && /Mac/.test(navigator.platform),
    Cv = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),
    Av = yv || (W0 && +W0[1] < 57);
  for (Te = 0; Te < 10; Te++) li[48 + Te] = li[96 + Te] = String(Te);
  var Te;
  for (Te = 1; Te <= 24; Te++) li[Te + 111] = "F" + Te;
  var Te;
  for (Te = 65; Te <= 90; Te++) (li[Te] = String.fromCharCode(Te + 32)), (Tr[Te] = String.fromCharCode(Te));
  var Te;
  for (ko in li) Tr.hasOwnProperty(ko) || (Tr[ko] = li[ko]);
  var ko;
  function j0(r) {
    var e = (Av && (r.ctrlKey || r.altKey || r.metaKey)) || (Cv && r.shiftKey && r.key && r.key.length == 1) || r.key == "Unidentified",
      t = (!e && r.key) || (r.shiftKey ? Tr : li)[r.keyCode] || r.key || "Unidentified";
    return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
  }
  h(j0, "keyName");
  function eu(r) {
    var e;
    return r.nodeType == 11 ? (e = r.getSelection ? r : r.ownerDocument) : (e = r), e.getSelection();
  }
  h(eu, "getSelection");
  function zr(r, e) {
    return e ? r == e || r.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
  }
  h(zr, "contains");
  function Ev(r) {
    var e = r.activeElement;
    for (; e && e.shadowRoot; ) e = e.shadowRoot.activeElement;
    return e;
  }
  h(Ev, "deepActiveElement");
  function Ro(r, e) {
    if (!e.anchorNode) return !1;
    try {
      return zr(r, e.anchorNode);
    } catch (e) {
      return !1;
    }
  }
  h(Ro, "hasSelection");
  function Kn(r) {
    return r.nodeType == 3 ? Wr(r, 0, r.nodeValue.length).getClientRects() : r.nodeType == 1 ? r.getClientRects() : [];
  }
  h(Kn, "clientRectsFor");
  function tu(r, e, t, i) {
    return t ? H0(r, e, t, i, -1) || H0(r, e, t, i, 1) : !1;
  }
  h(tu, "isEquivalentPosition");
  function iu(r) {
    for (var e = 0; ; e++) if (((r = r.previousSibling), !r)) return e;
  }
  h(iu, "domIndex");
  function H0(r, e, t, i, n) {
    for (;;) {
      if (r == t && e == i) return !0;
      if (e == (n < 0 ? 0 : Xn(r))) {
        if (r.nodeName == "DIV") return !1;
        var s = r.parentNode;
        if (!s || s.nodeType != 1) return !1;
        (e = iu(r) + (n < 0 ? 0 : 1)), (r = s);
      } else if (r.nodeType == 1) {
        if (((r = r.childNodes[e + (n < 0 ? -1 : 0)]), r.nodeType == 1 && r.contentEditable == "false")) return !1;
        e = n < 0 ? Xn(r) : 0;
      } else return !1;
    }
  }
  h(H0, "scanFor");
  function Xn(r) {
    return r.nodeType == 3 ? r.nodeValue.length : r.childNodes.length;
  }
  h(Xn, "maxOffset");
  var Sg = { left: 0, right: 0, top: 0, bottom: 0 };
  function ph(r, e) {
    var t = e ? r.left : r.right;
    return { left: t, right: t, top: r.top, bottom: r.bottom };
  }
  h(ph, "flattenRect");
  function vv(r) {
    return { left: 0, right: r.innerWidth, top: 0, bottom: r.innerHeight };
  }
  h(vv, "windowRect");
  function kv(r, e, t, i, n, s, o, u) {
    var l = r.ownerDocument,
      a = l.defaultView || window;
    for (var c = r; c; )
      if (c.nodeType == 1) {
        var f = void 0,
          d = c == l.body;
        if (d) f = vv(a);
        else {
          if (c.scrollHeight <= c.clientHeight && c.scrollWidth <= c.clientWidth) {
            c = c.assignedSlot || c.parentNode;
            continue;
          }
          var D = c.getBoundingClientRect();
          f = { left: D.left, right: D.left + c.clientWidth, top: D.top, bottom: D.top + c.clientHeight };
        }
        var p = 0,
          m = 0;
        if (n == "nearest") e.top < f.top ? ((m = -(f.top - e.top + o)), t > 0 && e.bottom > f.bottom + m && (m = e.bottom - f.bottom + m + o)) : e.bottom > f.bottom && ((m = e.bottom - f.bottom + o), t < 0 && e.top - m < f.top && (m = -(f.top + m - e.top + o)));
        else {
          var D1 = e.bottom - e.top,
            g = f.bottom - f.top;
          m = (n == "center" && D1 <= g ? e.top + D1 / 2 - g / 2 : n == "start" || (n == "center" && t < 0) ? e.top - o : e.bottom - g + o) - f.top;
        }
        if (
          (i == "nearest"
            ? e.left < f.left
              ? ((p = -(f.left - e.left + s)), t > 0 && e.right > f.right + p && (p = e.right - f.right + p + s))
              : e.right > f.right && ((p = e.right - f.right + s), t < 0 && e.left < f.left + p && (p = -(f.left + p - e.left + s)))
            : (p = (i == "center" ? e.left + (e.right - e.left) / 2 - (f.right - f.left) / 2 : (i == "start") == u ? e.left - s : e.right - (f.right - f.left) + s) - f.left),
          p || m)
        )
          if (d) a.scrollBy(p, m);
          else {
            var D2 = 0,
              g1 = 0;
            if (m) {
              var b = c.scrollTop;
              (c.scrollTop += m), (g1 = c.scrollTop - b);
            }
            if (p) {
              var b1 = c.scrollLeft;
              (c.scrollLeft += p), (D2 = c.scrollLeft - b1);
            }
            (e = { left: e.left - D2, top: e.top - g1, right: e.right - D2, bottom: e.bottom - g1 }), D2 && Math.abs(D2 - p) < 1 && (i = "nearest"), g1 && Math.abs(g1 - m) < 1 && (n = "nearest");
          }
        if (d) break;
        c = c.assignedSlot || c.parentNode;
      } else if (c.nodeType == 11) c = c.host;
      else break;
  }
  h(kv, "scrollRectIntoView");
  function wv(r) {
    var e = r.ownerDocument;
    for (var t = r.parentNode; t && t != e.body; )
      if (t.nodeType == 1) {
        if (t.scrollHeight > t.clientHeight || t.scrollWidth > t.clientWidth) return t;
        t = t.assignedSlot || t.parentNode;
      } else if (t.nodeType == 11) t = t.host;
      else break;
    return null;
  }
  h(wv, "scrollableParent");
  var $o = class $o {
    eq(e) {
      return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
    }
    setRange(e) {
      this.set(e.anchorNode, e.anchorOffset, e.focusNode, e.focusOffset);
    }
    set(e, t, i, n) {
      (this.anchorNode = e), (this.anchorOffset = t), (this.focusNode = i), (this.focusOffset = n);
    }
    constructor() {
      (this.anchorNode = null), (this.anchorOffset = 0), (this.focusNode = null), (this.focusOffset = 0);
    }
  };
  h($o, "DOMSelectionState");
  var Rr = null;
  function Bg(r) {
    if (r.setActive) return r.setActive();
    if (Rr) return r.focus(Rr);
    var e = [];
    for (var t = r; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode);
    if (
      (r.focus(
        Rr == null
          ? {
              get preventScroll() {
                return (Rr = { preventScroll: !0 }), !0;
              },
            }
          : void 0
      ),
      !Rr)
    ) {
      Rr = !1;
      for (var t1 = 0; t1 < e.length; ) {
        var i = e[t1++],
          n = e[t1++],
          s = e[t1++];
        i.scrollTop != n && (i.scrollTop = n), i.scrollLeft != s && (i.scrollLeft = s);
      }
    }
  }
  h(Bg, "focusPreventScroll");
  var U0;
  function Wr(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e;
    var i = U0 || (U0 = document.createRange());
    return i.setEnd(r, t), i.setStart(r, e), i;
  }
  h(Wr, "textRange");
  function Mr(r, e, t) {
    var i = { key: e, code: e, keyCode: t, which: t, cancelable: !0 },
      n = new KeyboardEvent("keydown", i);
    (n.synthetic = !0), r.dispatchEvent(n);
    var s = new KeyboardEvent("keyup", i);
    return (s.synthetic = !0), r.dispatchEvent(s), n.defaultPrevented || s.defaultPrevented;
  }
  h(Mr, "dispatchKey");
  function xv(r) {
    for (; r; ) {
      if (r && (r.nodeType == 9 || (r.nodeType == 11 && r.host))) return r;
      r = r.assignedSlot || r.parentNode;
    }
    return null;
  }
  h(xv, "getRoot");
  function _g(r) {
    for (; r.attributes.length; ) r.removeAttributeNode(r.attributes[0]);
  }
  h(_g, "clearAttributes");
  function Sv(r, e) {
    var t = e.focusNode,
      i = e.focusOffset;
    if (!t || e.anchorNode != t || e.anchorOffset != i) return !1;
    for (;;)
      if (i) {
        if (t.nodeType != 1) return !1;
        var n = t.childNodes[i - 1];
        n.contentEditable == "false" ? i-- : ((t = n), (i = Xn(t)));
      } else {
        if (t == r) return !0;
        (i = iu(t)), (t = t.parentNode);
      }
  }
  h(Sv, "atElementStart");
  var Pe = class Pe1 {
    static before(e, t) {
      return new Pe(e.parentNode, iu(e), t);
    }
    static after(e, t) {
      return new Pe(e.parentNode, iu(e) + 1, t);
    }
    constructor(e, t, ref) {
      var i = ref === void 0 ? !0 : ref;
      (this.node = e), (this.offset = t), (this.precise = i);
    }
  };
  h(Pe, "DOMPos");
  var mh = [],
    De = class De1 {
      get overrideDOMText() {
        return null;
      }
      get posAtStart() {
        return this.parent ? this.parent.posBefore(this) : 0;
      }
      get posAtEnd() {
        return this.posAtStart + this.length;
      }
      posBefore(e) {
        var t = this.posAtStart;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            if (i == e) return t;
            t += i.length + i.breakAfter;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        throw new RangeError("Invalid child in posBefore");
      }
      posAfter(e) {
        return this.posBefore(e) + e.length;
      }
      coordsAt(e, t) {
        return null;
      }
      sync(e, t) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (this.dirty & 2) {
          var i = this.dom,
            n = null,
            s;
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
              var o = _step.value;
              if (o.dirty) {
                if (!o.dom && (s = n ? n.nextSibling : i.firstChild)) {
                  var u = De.get(s);
                  (!u || (!u.parent && u.canReuseDOM(o))) && o.reuseDOM(s);
                }
                o.sync(e, t), (o.dirty = 0);
              }
              if (((s = n ? n.nextSibling : i.firstChild), t && !t.written && t.node == i && s != o.dom && (t.written = !0), o.dom.parentNode == i)) for (; s && s != o.dom; ) s = Y0(s);
              else i.insertBefore(o.dom, s);
              n = o.dom;
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          for (s = n ? n.nextSibling : i.firstChild, s && t && t.node == i && (t.written = !0); s; ) s = Y0(s);
        } else if (this.dirty & 1)
          try {
            for (var _iterator1 = this.children[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var i1 = _step1.value;
              i1.dirty && (i1.sync(e, t), (i1.dirty = 0));
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
      reuseDOM(e) {}
      localPosFromDOM(e, t) {
        var i;
        if (e == this.dom) i = this.dom.childNodes[t];
        else {
          var n = Xn(e) == 0 ? 0 : t == 0 ? -1 : 1;
          for (;;) {
            var s = e.parentNode;
            if (s == this.dom) break;
            n == 0 && s.firstChild != s.lastChild && (e == s.firstChild ? (n = -1) : (n = 1)), (e = s);
          }
          n < 0 ? (i = e) : (i = e.nextSibling);
        }
        if (i == this.dom.firstChild) return 0;
        for (; i && !De.get(i); ) i = i.nextSibling;
        if (!i) return this.length;
        for (var n1 = 0, s1 = 0; ; n1++) {
          var o = this.children[n1];
          if (o.dom == i) return s1;
          s1 += o.length + o.breakAfter;
        }
      }
      domBoundsAround(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        var n = -1,
          s = -1,
          o = -1,
          u = -1;
        for (var l = 0, a = i, c = i; l < this.children.length; l++) {
          var f = this.children[l],
            d = a + f.length;
          if (a < e && d > t) return f.domBoundsAround(e, t, a);
          if ((d >= e && n == -1 && ((n = l), (s = a)), a > t && f.dom.parentNode == this.dom)) {
            (o = l), (u = c);
            break;
          }
          (c = d), (a = d + f.breakAfter);
        }
        return { from: s, to: u < 0 ? i + this.length : u, startDOM: (n ? this.children[n - 1].dom.nextSibling : null) || this.dom.firstChild, endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null };
      }
      markDirty() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
        (this.dirty |= 2), this.markParentsDirty(e);
      }
      markParentsDirty(e) {
        for (var t = this.parent; t; t = t.parent) {
          if ((e && (t.dirty |= 2), t.dirty & 1)) return;
          (t.dirty |= 1), (e = !1);
        }
      }
      setParent(e) {
        this.parent != e && ((this.parent = e), this.dirty && this.markParentsDirty(!0));
      }
      setDOM(e) {
        this.dom && (this.dom.cmView = null), (this.dom = e), (e.cmView = this);
      }
      get rootView() {
        for (var e = this; ; ) {
          var t = e.parent;
          if (!t) return e;
          e = t;
        }
      }
      replaceChildren(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : mh;
        this.markDirty();
        for (var n = e; n < t; n++) {
          var s = this.children[n];
          s.parent == this && s.destroy();
        }
        this.children.splice(e, t - e, ...i);
        for (var n1 = 0; n1 < i.length; n1++) i[n1].setParent(this);
      }
      ignoreMutation(e) {
        return !1;
      }
      ignoreEvent(e) {
        return !1;
      }
      childCursor() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
        return new Ln(this.children, e, this.children.length);
      }
      childPos(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
        return this.childCursor().findPos(e, t);
      }
      toString() {
        var e = this.constructor.name.replace("View", "");
        return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
      }
      static get(e) {
        return e.cmView;
      }
      get isEditable() {
        return !0;
      }
      get isWidget() {
        return !1;
      }
      merge(e, t, i, n, s, o) {
        return !1;
      }
      become(e) {
        return !1;
      }
      canReuseDOM(e) {
        return e.constructor == this.constructor;
      }
      getSide() {
        return 0;
      }
      destroy() {
        this.parent = null;
      }
      constructor() {
        (this.parent = null), (this.dom = null), (this.dirty = 2);
      }
    };
  h(De, "ContentView");
  De.prototype.breakAfter = 0;
  function Y0(r) {
    var e = r.nextSibling;
    return r.parentNode.removeChild(r), e;
  }
  h(Y0, "rm$1");
  var Ln = class Ln {
    findPos(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      for (;;) {
        if (e > this.pos || (e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))) return (this.off = e - this.pos), this;
        var i = this.children[--this.i];
        this.pos -= i.length + i.breakAfter;
      }
    }
    constructor(e, t, i) {
      (this.children = e), (this.pos = t), (this.i = i), (this.off = 0);
    }
  };
  h(Ln, "ChildCursor");
  function Og(r, e, t, i, n, s, o, u, l) {
    var a = r.children,
      c = a.length ? a[e] : null,
      f = s.length ? s[s.length - 1] : null,
      d = f ? f.breakAfter : o;
    if (!(e == i && c && !o && !d && s.length < 2 && c.merge(t, n, s.length ? f : null, t == 0, u, l))) {
      if (i < a.length) {
        var p = a[i];
        p && n < p.length ? (e == i && ((p = p.split(n)), (n = 0)), !d && f && p.merge(0, n, f, !0, 0, l) ? (s[s.length - 1] = p) : (n && p.merge(0, n, null, !1, 0, l), s.push(p))) : (p === null || p === void 0 ? void 0 : p.breakAfter) && (f ? (f.breakAfter = 1) : (o = 1)), i++;
      }
      for (c && ((c.breakAfter = o), t > 0 && (!o && s.length && c.merge(t, c.length, s[0], !1, u, 0) ? (c.breakAfter = s.shift().breakAfter) : (t < c.length || (c.children.length && c.children[c.children.length - 1].length == 0)) && c.merge(t, c.length, null, !1, u, 0), e++)); e < i && s.length; )
        if (a[i - 1].become(s[s.length - 1])) i--, s.pop(), (l = s.length ? 0 : u);
        else if (a[e].become(s[0])) e++, s.shift(), (u = s.length ? 0 : l);
        else break;
      !s.length && e && i < a.length && !a[e - 1].breakAfter && a[i].merge(0, 0, a[e - 1], !1, u, l) && e--, (e < i || s.length) && r.replaceChildren(e, i, s);
    }
  }
  h(Og, "replaceRange");
  function Tg(r, e, t, i, n, s) {
    var o = r.childCursor(),
      _o_findPos = o.findPos(t, 1),
      u = _o_findPos.i,
      l = _o_findPos.off,
      _o_findPos1 = o.findPos(e, -1),
      a = _o_findPos1.i,
      c = _o_findPos1.off,
      f = e - t;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var d = _step.value;
        f += d.length;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    (r.length += f), Og(r, a, c, u, l, i, 0, n, s);
  }
  h(Tg, "mergeChildrenInto");
  var at = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" },
    Xa = typeof document < "u" ? document : { documentElement: { style: {} } },
    Qa = /Edge\/(\d+)/.exec(at.userAgent),
    Rg = /MSIE \d/.test(at.userAgent),
    Ja = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(at.userAgent),
    su = !!(Rg || Ja || Qa),
    G0 = !su && /gecko\/(\d+)/i.test(at.userAgent),
    ja = !su && /Chrome\/(\d+)/.exec(at.userAgent),
    K0 = "webkitFontSmoothing" in Xa.documentElement.style,
    $g = !su && /Apple Computer/.test(at.vendor),
    X0 = $g && (/Mobile\/\w+/.test(at.userAgent) || at.maxTouchPoints > 2),
    Y = {
      mac: X0 || /Mac/.test(at.platform),
      windows: /Win/.test(at.platform),
      linux: /Linux|X11/.test(at.platform),
      ie: su,
      ie_version: Rg ? Xa.documentMode || 6 : Ja ? +Ja[1] : Qa ? +Qa[1] : 0,
      gecko: G0,
      gecko_version: G0 ? +(/Firefox\/(\d+)/.exec(at.userAgent) || [0, 0])[1] : 0,
      chrome: !!ja,
      chrome_version: ja ? +ja[1] : 0,
      ios: X0,
      android: /Android\b/.test(at.userAgent),
      webkit: K0,
      safari: $g,
      webkit_version: K0 ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
      tabSize: Xa.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size",
    },
    Bv = 256,
    Ot = class Ot1 extends De {
      get length() {
        return this.text.length;
      }
      createDOM(e) {
        this.setDOM(e || document.createTextNode(this.text));
      }
      sync(e, t) {
        this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), (this.dom.nodeValue = this.text));
      }
      reuseDOM(e) {
        e.nodeType == 3 && this.createDOM(e);
      }
      merge(e, t, i) {
        return i && (!(i instanceof Ot) || this.length - (t - e) + i.length > Bv) ? !1 : ((this.text = this.text.slice(0, e) + (i ? i.text : "") + this.text.slice(t)), this.markDirty(), !0);
      }
      split(e) {
        var t = new Ot(this.text.slice(e));
        return (this.text = this.text.slice(0, e)), this.markDirty(), t;
      }
      localPosFromDOM(e, t) {
        return e == this.dom ? t : t ? this.text.length : 0;
      }
      domAtPos(e) {
        return new Pe(this.dom, e);
      }
      domBoundsAround(e, t, i) {
        return { from: i, to: i + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
      }
      coordsAt(e, t) {
        return Za(this.dom, e, t);
      }
      constructor(e) {
        super(), (this.text = e);
      }
    };
  h(Ot, "TextView");
  var ht = class ht1 extends De {
    setAttrs(e) {
      if ((_g(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)) for (var t in this.mark.attrs) e.setAttribute(t, this.mark.attrs[t]);
      return e;
    }
    reuseDOM(e) {
      e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), (this.dirty |= 6));
    }
    sync(e, t) {
      this.dom ? this.dirty & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
    }
    merge(e, t, i, n, s, o) {
      return i && (!(i instanceof ht && i.mark.eq(this.mark)) || (e && s <= 0) || (t < this.length && o <= 0)) ? !1 : (Tg(this, e, t, i ? i.children : [], s - 1, o - 1), this.markDirty(), !0);
    }
    split(e) {
      var t = [],
        i = 0,
        n = -1,
        s = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var u = _step.value;
          var l = i + u.length;
          l > e && t.push(i < e ? u.split(e - i) : u), n < 0 && i >= e && (n = s), (i = l), s++;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var o = this.length - e;
      return (this.length = e), n > -1 && ((this.children.length = n), this.markDirty()), new ht(this.mark, t, o);
    }
    domAtPos(e) {
      return Pg(this, e);
    }
    coordsAt(e, t) {
      return qg(this, e, t);
    }
    constructor(e, ref, ref1) {
      var t = ref === void 0 ? [] : ref,
        i = ref1 === void 0 ? 0 : ref1;
      super(), (this.mark = e), (this.children = t), (this.length = i);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          n.setParent(this);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  };
  h(ht, "MarkView");
  function Za(r, e, t) {
    var i = r.nodeValue.length;
    e > i && (e = i);
    var n = e,
      s = e,
      o = 0;
    (e == 0 && t < 0) || (e == i && t >= 0) ? Y.chrome || Y.gecko || (e ? (n--, (o = 1)) : s < i && (s++, (o = -1))) : t < 0 ? n-- : s < i && s++;
    var u = Wr(r, n, s).getClientRects();
    if (!u.length) return Sg;
    var l = u[(o ? o < 0 : t >= 0) ? 0 : u.length - 1];
    return Y.safari && !o && l.width == 0 && (l = Array.prototype.find.call(u, (a) => a.width) || l), o ? ph(l, o < 0) : l || null;
  }
  h(Za, "textCoords");
  var _t = class _t1 extends De {
    static create(e, t, i) {
      return new (e.customView || _t)(e, t, i);
    }
    split(e) {
      var t = _t.create(this.widget, this.length - e, this.side);
      return (this.length -= e), t;
    }
    sync(e) {
      (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), (this.dom.contentEditable = "false"));
    }
    getSide() {
      return this.side;
    }
    merge(e, t, i, n, s, o) {
      return i && (!(i instanceof _t) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
    }
    become(e) {
      return e.length == this.length && e instanceof _t && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.eq(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), !0) : !1;
    }
    ignoreMutation() {
      return !0;
    }
    ignoreEvent(e) {
      return this.widget.ignoreEvent(e);
    }
    get overrideDOMText() {
      if (this.length == 0) return ce.empty;
      var e = this;
      for (; e.parent; ) e = e.parent;
      var t = e.view,
        i = t && t.state.doc,
        n = this.posAtStart;
      return i ? i.slice(n, n + this.length) : ce.empty;
    }
    domAtPos(e) {
      return e == 0 ? Pe.before(this.dom) : Pe.after(this.dom, e == this.length);
    }
    domBoundsAround() {
      return null;
    }
    coordsAt(e, t) {
      var i = this.dom.getClientRects(),
        n = null;
      if (!i.length) return Sg;
      for (var s = e > 0 ? i.length - 1 : 0; (n = i[s]), !(e > 0 ? s == 0 : s == i.length - 1 || n.top < n.bottom); s += e > 0 ? -1 : 1);
      return this.length ? n : ph(n, this.side > 0);
    }
    get isEditable() {
      return !1;
    }
    get isWidget() {
      return !0;
    }
    destroy() {
      super.destroy(), this.dom && this.widget.destroy(this.dom);
    }
    constructor(e, t, i) {
      super(), (this.widget = e), (this.length = t), (this.side = i), (this.prevWidget = null);
    }
  };
  h(_t, "WidgetView");
  var qn = class qn extends _t {
    domAtPos(e) {
      var _this_widget = this.widget,
        t = _this_widget.topView,
        i = _this_widget.text;
      return t
        ? eh(
            e,
            0,
            t,
            i,
            (n, s) => n.domAtPos(s),
            (n) => new Pe(i, Math.min(n, i.nodeValue.length))
          )
        : new Pe(i, Math.min(e, i.nodeValue.length));
    }
    sync() {
      this.setDOM(this.widget.toDOM());
    }
    localPosFromDOM(e, t) {
      var _this_widget = this.widget,
        i = _this_widget.topView,
        n = _this_widget.text;
      return i ? Mg(e, t, i, n) : Math.min(t, this.length);
    }
    ignoreMutation() {
      return !1;
    }
    get overrideDOMText() {
      return null;
    }
    coordsAt(e, t) {
      var _this_widget = this.widget,
        i = _this_widget.topView,
        n = _this_widget.text;
      return i
        ? eh(
            e,
            t,
            i,
            n,
            (s, o, u) => s.coordsAt(o, u),
            (s, o) => Za(n, s, o)
          )
        : Za(n, e, t);
    }
    destroy() {
      var e;
      super.destroy(), (e = this.widget.topView) === null || e === void 0 || e.destroy();
    }
    get isEditable() {
      return !0;
    }
    canReuseDOM() {
      return !0;
    }
  };
  h(qn, "CompositionView");
  function eh(r, e, t, i, n, s) {
    if (t instanceof ht) {
      for (var o = t.dom.firstChild; o; o = o.nextSibling) {
        var u = De.get(o);
        if (!u) return s(r, e);
        var l = zr(o, i),
          a = u.length + (l ? i.nodeValue.length : 0);
        if (r < a || (r == a && u.getSide() <= 0)) return l ? eh(r, e, u, i, n, s) : n(u, r, e);
        r -= a;
      }
      return n(t, t.length, -1);
    } else return t.dom == i ? s(r, e) : n(t, r, e);
  }
  h(eh, "scanCompositionTree");
  function Mg(r, e, t, i) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (t instanceof ht)
      try {
        for (var _iterator = t.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = 0,
            o = zr(n.dom, i);
          if (zr(n.dom, r)) return s + (o ? Mg(r, e, n, i) : n.localPosFromDOM(r, e));
          s += o ? i.nodeValue.length : n.length;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    else if (t.dom == i) return Math.min(e, i.nodeValue.length);
    return t.localPosFromDOM(r, e);
  }
  h(Mg, "posFromDOMInCompositionTree");
  var ai = class ai1 extends De {
    get length() {
      return 0;
    }
    merge() {
      return !1;
    }
    become(e) {
      return e instanceof ai && e.side == this.side;
    }
    split() {
      return new ai(this.side);
    }
    sync() {
      if (!this.dom) {
        var e = document.createElement("img");
        (e.className = "cm-widgetBuffer"), e.setAttribute("aria-hidden", "true"), this.setDOM(e);
      }
    }
    getSide() {
      return this.side;
    }
    domAtPos(e) {
      return Pe.before(this.dom);
    }
    localPosFromDOM() {
      return 0;
    }
    domBoundsAround() {
      return null;
    }
    coordsAt(e) {
      var t = this.dom.getBoundingClientRect(),
        i = _v(this, this.side > 0 ? -1 : 1);
      return i && i.top < t.bottom && i.bottom > t.top ? { left: t.left, right: t.right, top: i.top, bottom: i.bottom } : t;
    }
    get overrideDOMText() {
      return ce.empty;
    }
    constructor(e) {
      super(), (this.side = e);
    }
  };
  h(ai, "WidgetBufferView");
  Ot.prototype.children = _t.prototype.children = ai.prototype.children = mh;
  function _v(r, e) {
    var t = r.parent,
      i = t ? t.children.indexOf(r) : -1;
    for (; t && i >= 0; )
      if (e < 0 ? i > 0 : i < t.children.length) {
        var n = t.children[i + e];
        if (n instanceof Ot) {
          var s = n.coordsAt(e < 0 ? n.length : 0, e);
          if (s) return s;
        }
        i += e;
      } else if (t instanceof ht && t.parent) (i = t.parent.children.indexOf(t) + (e < 0 ? 0 : 1)), (t = t.parent);
      else {
        var n1 = t.dom.lastChild;
        if (n1 && n1.nodeName == "BR") return n1.getClientRects()[0];
        break;
      }
  }
  h(_v, "inlineSiblingRect");
  function Pg(r, e) {
    var t = r.dom,
      i = r.children,
      n = 0;
    for (var s = 0; n < i.length; n++) {
      var o = i[n],
        u = s + o.length;
      if (!(u == s && o.getSide() <= 0)) {
        if (e > s && e < u && o.dom.parentNode == t) return o.domAtPos(e - s);
        if (e <= s) break;
        s = u;
      }
    }
    for (var s1 = n; s1 > 0; s1--) {
      var o1 = i[s1 - 1];
      if (o1.dom.parentNode == t) return o1.domAtPos(o1.length);
    }
    for (var s2 = n; s2 < i.length; s2++) {
      var o2 = i[s2];
      if (o2.dom.parentNode == t) return o2.domAtPos(0);
    }
    return new Pe(t, 0);
  }
  h(Pg, "inlineDOMAtPos");
  function Lg(r, e, t) {
    var i,
      n = r.children;
    t > 0 && e instanceof ht && n.length && (i = n[n.length - 1]) instanceof ht && i.mark.eq(e.mark) ? Lg(i, e.children[0], t - 1) : (n.push(e), e.setParent(r)), (r.length += e.length);
  }
  h(Lg, "joinInlineInto");
  function qg(r, e, t) {
    var i = null,
      n = -1,
      s = null,
      o = -1;
    function u(a, c) {
      for (var f = 0, d = 0; f < a.children.length && d <= c; f++) {
        var p = a.children[f],
          m = d + p.length;
        m >= c && (p.children.length ? u(p, c - d) : !s && (m > c || (d == m && p.getSide() > 0)) ? ((s = p), (o = c - d)) : (d < c || (d == m && p.getSide() < 0)) && ((i = p), (n = c - d))), (d = m);
      }
    }
    h(u, "scan"), u(r, e);
    var l = (t < 0 ? i : s) || i || s;
    return l ? l.coordsAt(Math.max(0, l == i ? n : o), t) : Ov(r);
  }
  h(qg, "coordsInChildren");
  function Ov(r) {
    var e = r.dom.lastChild;
    if (!e) return r.dom.getBoundingClientRect();
    var t = Kn(e);
    return t[t.length - 1] || null;
  }
  h(Ov, "fallbackRect");
  function th(r, e) {
    for (var t in r) t == "class" && e.class ? (e.class += " " + r.class) : t == "style" && e.style ? (e.style += ";" + r.style) : (e[t] = r[t]);
    return e;
  }
  h(th, "combineAttrs");
  function gh(r, e) {
    if (r == e) return !0;
    if (!r || !e) return !1;
    var t = Object.keys(r),
      i = Object.keys(e);
    if (t.length != i.length) return !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        if (i.indexOf(n) == -1 || r[n] !== e[n]) return !1;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return !0;
  }
  h(gh, "attrsEq");
  function ih(r, e, t) {
    var i = null;
    if (e) for (var n in e) (t && n in t) || r.removeAttribute((i = n));
    if (t) for (var n1 in t) (e && e[n1] == t[n1]) || r.setAttribute((i = n1), t[n1]);
    return !!i;
  }
  h(ih, "updateAttrs");
  var Ht = class Ht {
    eq(e) {
      return !1;
    }
    updateDOM(e, t) {
      return !1;
    }
    compare(e) {
      return this == e || (this.constructor == e.constructor && this.eq(e));
    }
    get estimatedHeight() {
      return -1;
    }
    ignoreEvent(e) {
      return !0;
    }
    get customView() {
      return null;
    }
    destroy(e) {}
  };
  h(Ht, "WidgetType");
  var Fe = (function (r) {
      return (r[(r.Text = 0)] = "Text"), (r[(r.WidgetBefore = 1)] = "WidgetBefore"), (r[(r.WidgetAfter = 2)] = "WidgetAfter"), (r[(r.WidgetRange = 3)] = "WidgetRange"), r;
    })(Fe || (Fe = {})),
    he = class he extends zt {
      get heightRelevant() {
        return !1;
      }
      static mark(e) {
        return new Qi(e);
      }
      static widget(e) {
        var t = e.side || 0,
          i = !!e.block;
        return (t += i ? (t > 0 ? 3e8 : -4e8) : t > 0 ? 1e8 : -1e8), new Ut(e, t, t, i, e.widget || null, !1);
      }
      static replace(e) {
        var t = !!e.block,
          i,
          n;
        if (e.isBlockGap) (i = -5e8), (n = 4e8);
        else {
          var _Ig = Ig(e, t),
            s = _Ig.start,
            o = _Ig.end;
          (i = (s ? (t ? -3e8 : -1) : 5e8) - 1), (n = (o ? (t ? 2e8 : 1) : -6e8) + 1);
        }
        return new Ut(e, i, n, t, e.widget || null, !0);
      }
      static line(e) {
        return new Bi(e);
      }
      static set(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
        return pe.of(e, t);
      }
      hasHeight() {
        return this.widget ? this.widget.estimatedHeight > -1 : !1;
      }
      constructor(e, t, i, n) {
        super(), (this.startSide = e), (this.endSide = t), (this.widget = i), (this.spec = n);
      }
    };
  h(he, "Decoration");
  he.none = pe.empty;
  var Qi = class Qi1 extends he {
    eq(e) {
      return this == e || (e instanceof Qi && this.tagName == e.tagName && this.class == e.class && gh(this.attrs, e.attrs));
    }
    range(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      if (e >= t) throw new RangeError("Mark decorations may not be empty");
      return super.range(e, t);
    }
    constructor(e) {
      var _Ig = Ig(e),
        t = _Ig.start,
        i = _Ig.end;
      super(t ? -1 : 5e8, i ? 1 : -6e8, null, e), (this.tagName = e.tagName || "span"), (this.class = e.class || ""), (this.attrs = e.attributes || null);
    }
  };
  h(Qi, "MarkDecoration");
  Qi.prototype.point = !1;
  var Bi = class Bi1 extends he {
    eq(e) {
      return e instanceof Bi && this.spec.class == e.spec.class && gh(this.spec.attributes, e.spec.attributes);
    }
    range(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      if (t != e) throw new RangeError("Line decoration ranges must be zero-length");
      return super.range(e, t);
    }
    constructor(e) {
      super(-2e8, -2e8, null, e);
    }
  };
  h(Bi, "LineDecoration");
  Bi.prototype.mapMode = Xe.TrackBefore;
  Bi.prototype.point = !0;
  var Ut = class Ut1 extends he {
    get type() {
      return this.startSide < this.endSide ? Fe.WidgetRange : this.startSide <= 0 ? Fe.WidgetBefore : Fe.WidgetAfter;
    }
    get heightRelevant() {
      return this.block || (!!this.widget && this.widget.estimatedHeight >= 5);
    }
    eq(e) {
      return e instanceof Ut && Tv(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
    }
    range(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e;
      if (this.isReplace && (e > t || (e == t && this.startSide > 0 && this.endSide <= 0))) throw new RangeError("Invalid range for replacement decoration");
      if (!this.isReplace && t != e) throw new RangeError("Widget decorations can only have zero-length ranges");
      return super.range(e, t);
    }
    constructor(e, t, i, n, s, o) {
      super(t, i, s, e), (this.block = n), (this.isReplace = o), (this.mapMode = n ? (t <= 0 ? Xe.TrackBefore : Xe.TrackAfter) : Xe.TrackDel);
    }
  };
  h(Ut, "PointDecoration");
  Ut.prototype.point = !0;
  function Ig(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    var t = r.inclusiveStart,
      i = r.inclusiveEnd;
    return t == null && (t = r.inclusive), i == null && (i = r.inclusive), { start: t !== null && t !== void 0 ? t : e, end: i !== null && i !== void 0 ? i : e };
  }
  h(Ig, "getInclusive");
  function Tv(r, e) {
    return r == e || !!(r && e && r.compare(e));
  }
  h(Tv, "widgetsEq");
  function rh(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    var n = t.length - 1;
    n >= 0 && t[n] + i >= r ? (t[n] = Math.max(t[n], e)) : t.push(r, e);
  }
  h(rh, "addRange");
  var Ve = class Ve1 extends De {
    merge(e, t, i, n, s, o) {
      if (i) {
        if (!(i instanceof Ve)) return !1;
        this.dom || i.transferDOM(this);
      }
      return n && this.setDeco(i ? i.attrs : null), Tg(this, e, t, i ? i.children : [], s, o), !0;
    }
    split(e) {
      var t = new Ve();
      if (((t.breakAfter = this.breakAfter), this.length == 0)) return t;
      var _this_childPos = this.childPos(e),
        i = _this_childPos.i,
        n = _this_childPos.off;
      n && (t.append(this.children[i].split(n), 0), this.children[i].merge(n, this.children[i].length, null, !1, 0, 0), i++);
      for (var s = i; s < this.children.length; s++) t.append(this.children[s], 0);
      for (; i > 0 && this.children[i - 1].length == 0; ) this.children[--i].destroy();
      return (this.children.length = i), this.markDirty(), (this.length = e), t;
    }
    transferDOM(e) {
      this.dom && (this.markDirty(), e.setDOM(this.dom), (e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs), (this.prevAttrs = void 0), (this.dom = null));
    }
    setDeco(e) {
      gh(this.attrs, e) || (this.dom && ((this.prevAttrs = this.attrs), this.markDirty()), (this.attrs = e));
    }
    append(e, t) {
      Lg(this, e, t);
    }
    addLineDeco(e) {
      var t = e.spec.attributes,
        i = e.spec.class;
      t && (this.attrs = th(t, this.attrs || {})), i && (this.attrs = th({ class: i }, this.attrs || {}));
    }
    domAtPos(e) {
      return Pg(this, e);
    }
    reuseDOM(e) {
      e.nodeName == "DIV" && (this.setDOM(e), (this.dirty |= 6));
    }
    sync(e, t) {
      var i;
      this.dom ? this.dirty & 4 && (_g(this.dom), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)) : (this.setDOM(document.createElement("div")), (this.dom.className = "cm-line"), (this.prevAttrs = this.attrs ? null : void 0)),
        this.prevAttrs !== void 0 && (ih(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), (this.prevAttrs = void 0)),
        super.sync(e, t);
      var n = this.dom.lastChild;
      for (; n && De.get(n) instanceof ht; ) n = n.lastChild;
      if (!n || !this.length || (n.nodeName != "BR" && ((i = De.get(n)) === null || i === void 0 ? void 0 : i.isEditable) == !1 && (!Y.ios || !this.children.some((s) => s instanceof Ot)))) {
        var s = document.createElement("BR");
        (s.cmIgnore = !0), this.dom.appendChild(s);
      }
    }
    measureTextSize() {
      if (this.children.length == 0 || this.length > 20) return null;
      var e = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          if (!(t instanceof Ot) || /[^ -~]/.test(t.text)) return null;
          var i = Kn(t.dom);
          if (i.length != 1) return null;
          e += i[0].width;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return e ? { lineHeight: this.dom.getBoundingClientRect().height, charWidth: e / this.length } : null;
    }
    coordsAt(e, t) {
      return qg(this, e, t);
    }
    become(e) {
      return !1;
    }
    get type() {
      return Fe.Text;
    }
    static find(e, t) {
      for (var i = 0, n = 0; i < e.children.length; i++) {
        var s = e.children[i],
          o = n + s.length;
        if (o >= t) {
          if (s instanceof Ve) return s;
          if (o > t) break;
        }
        n = o + s.breakAfter;
      }
      return null;
    }
    constructor() {
      super(...arguments), (this.children = []), (this.length = 0), (this.prevAttrs = void 0), (this.attrs = null), (this.breakAfter = 0);
    }
  };
  h(Ve, "LineView");
  var Yt = class Yt1 extends De {
    merge(e, t, i, n, s, o) {
      return i && (!(i instanceof Yt) || !this.widget.compare(i.widget) || (e > 0 && s <= 0) || (t < this.length && o <= 0)) ? !1 : ((this.length = e + (i ? i.length : 0) + (this.length - t)), !0);
    }
    domAtPos(e) {
      return e == 0 ? Pe.before(this.dom) : Pe.after(this.dom, e == this.length);
    }
    split(e) {
      var t = this.length - e;
      this.length = e;
      var i = new Yt(this.widget, t, this.type);
      return (i.breakAfter = this.breakAfter), i;
    }
    get children() {
      return mh;
    }
    sync(e) {
      (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), (this.prevWidget = null), this.setDOM(this.widget.toDOM(e)), (this.dom.contentEditable = "false"));
    }
    get overrideDOMText() {
      return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : ce.empty;
    }
    domBoundsAround() {
      return null;
    }
    become(e) {
      return e instanceof Yt && e.type == this.type && e.widget.constructor == this.widget.constructor ? (e.widget.eq(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), (this.widget = e.widget), (this.length = e.length), (this.breakAfter = e.breakAfter), !0) : !1;
    }
    ignoreMutation() {
      return !0;
    }
    ignoreEvent(e) {
      return this.widget.ignoreEvent(e);
    }
    get isEditable() {
      return !1;
    }
    get isWidget() {
      return !0;
    }
    destroy() {
      super.destroy(), this.dom && this.widget.destroy(this.dom);
    }
    constructor(e, t, i) {
      super(), (this.widget = e), (this.length = t), (this.type = i), (this.breakAfter = 0), (this.prevWidget = null);
    }
  };
  h(Yt, "BlockWidgetView");
  var Pr = class Pr1 {
    posCovered() {
      if (this.content.length == 0) return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
      var e = this.content[this.content.length - 1];
      return !e.breakAfter && !(e instanceof Yt && e.type == Fe.WidgetBefore);
    }
    getLine() {
      return this.curLine || (this.content.push((this.curLine = new Ve())), (this.atCursorPos = !0)), this.curLine;
    }
    flushBuffer() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.bufferMarks;
      this.pendingBuffer && (this.curLine.append(wo(new ai(-1), e), e.length), (this.pendingBuffer = 0));
    }
    addBlockWidget(e) {
      this.flushBuffer(), (this.curLine = null), this.content.push(e);
    }
    finish(e) {
      this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : (this.pendingBuffer = 0), this.posCovered() || this.getLine();
    }
    buildText(e, t, i) {
      for (; e > 0; ) {
        if (this.textOff == this.text.length) {
          var _this_cursor_next = this.cursor.next(this.skip),
            s = _this_cursor_next.value,
            o = _this_cursor_next.lineBreak,
            u = _this_cursor_next.done;
          if (((this.skip = 0), u)) throw new Error("Ran out of text content when drawing inline views");
          if (o) {
            this.posCovered() || this.getLine(), this.content.length ? (this.content[this.content.length - 1].breakAfter = 1) : (this.breakAtStart = 1), this.flushBuffer(), (this.curLine = null), (this.atCursorPos = !0), e--;
            continue;
          } else (this.text = s), (this.textOff = 0);
        }
        var n = Math.min(this.text.length - this.textOff, e, 512);
        this.flushBuffer(t.slice(t.length - i)), this.getLine().append(wo(new Ot(this.text.slice(this.textOff, this.textOff + n)), t), i), (this.atCursorPos = !0), (this.textOff += n), (e -= n), (i = 0);
      }
    }
    span(e, t, i, n) {
      this.buildText(t - e, i, n), (this.pos = t), this.openStart < 0 && (this.openStart = n);
    }
    point(e, t, i, n, s, o) {
      if (this.disallowBlockEffectsFor[o] && i instanceof Ut) {
        if (i.block) throw new RangeError("Block decorations may not be specified via plugins");
        if (t > this.doc.lineAt(this.pos).to) throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
      }
      var u = t - e;
      if (i instanceof Ut)
        if (i.block) {
          var l = i.type;
          l == Fe.WidgetAfter && !this.posCovered() && this.getLine(), this.addBlockWidget(new Yt(i.widget || new In("div"), u, l));
        } else {
          var l1 = _t.create(i.widget || new In("span"), u, u ? 0 : i.startSide),
            a = this.atCursorPos && !l1.isEditable && s <= n.length && (e < t || i.startSide > 0),
            c = !l1.isEditable && (e < t || s > n.length || i.startSide <= 0),
            f = this.getLine();
          this.pendingBuffer == 2 && !a && (this.pendingBuffer = 0), this.flushBuffer(n), a && (f.append(wo(new ai(1), n), s), (s = n.length + Math.max(0, s - n.length))), f.append(wo(l1, n), s), (this.atCursorPos = c), (this.pendingBuffer = c ? (e < t || s > n.length ? 1 : 2) : 0), this.pendingBuffer && (this.bufferMarks = n.slice());
        }
      else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(i);
      u && (this.textOff + u <= this.text.length ? (this.textOff += u) : ((this.skip += u - (this.text.length - this.textOff)), (this.text = ""), (this.textOff = 0)), (this.pos = t)), this.openStart < 0 && (this.openStart = s);
    }
    static build(e, t, i, n, s) {
      var o = new Pr(e, t, i, s);
      return (o.openEnd = pe.spans(n, t, i, o)), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
    }
    constructor(e, t, i, n) {
      (this.doc = e), (this.pos = t), (this.end = i), (this.disallowBlockEffectsFor = n), (this.content = []), (this.curLine = null), (this.breakAtStart = 0), (this.pendingBuffer = 0), (this.bufferMarks = []), (this.atCursorPos = !0), (this.openStart = -1), (this.openEnd = -1), (this.text = ""), (this.textOff = 0), (this.cursor = e.iter()), (this.skip = t);
    }
  };
  h(Pr, "ContentBuilder");
  function wo(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        r = new ht(t, [r], r.length);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return r;
  }
  h(wo, "wrapMarks");
  var In = class In extends Ht {
    eq(e) {
      return e.tag == this.tag;
    }
    toDOM() {
      return document.createElement(this.tag);
    }
    updateDOM(e) {
      return e.nodeName.toLowerCase() == this.tag;
    }
    constructor(e) {
      super(), (this.tag = e);
    }
  };
  h(In, "NullWidget");
  var Ng = U.define(),
    Vg = U.define(),
    zg = U.define(),
    Wg = U.define(),
    nh = U.define(),
    jg = U.define(),
    Hg = U.define(),
    Ug = U.define({ combine: (r) => r.some((e) => e) }),
    Yg = U.define({ combine: (r) => r.some((e) => e) }),
    Ji = class Ji1 {
      map(e) {
        return e.empty ? this : new Ji(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin);
      }
      constructor(e, ref, ref1, ref2, ref3) {
        var t = ref === void 0 ? "nearest" : ref,
          i = ref1 === void 0 ? "nearest" : ref1,
          n = ref2 === void 0 ? 5 : ref2,
          s = ref3 === void 0 ? 5 : ref3;
        (this.range = e), (this.y = t), (this.x = i), (this.yMargin = n), (this.xMargin = s);
      }
    };
  h(Ji, "ScrollTarget");
  var Q0 = de.define({ map: (r, e) => r.map(e) });
  function Ft(r, e, t) {
    var i = r.facet(Wg);
    i.length ? i[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
  }
  h(Ft, "logException");
  var ou = U.define({ combine: (r) => (r.length ? r[0] : !0) }),
    Rv = 0,
    Rn = U.define(),
    ze = class ze1 {
      static define(e, t) {
        var _ref = t || {},
          i = _ref.eventHandlers,
          n = _ref.provide,
          s = _ref.decorations;
        return new ze(Rv++, e, i, (o) => {
          var u = [Rn.of(o)];
          return (
            s &&
              u.push(
                Qn.of((l) => {
                  var a = l.plugin(o);
                  return a ? s(a) : he.none;
                })
              ),
            n && u.push(n(o)),
            u
          );
        });
      }
      static fromClass(e, t) {
        return ze.define((i) => new e(i), t);
      }
      constructor(e, t, i, n) {
        (this.id = e), (this.create = t), (this.domEventHandlers = i), (this.extension = n(this));
      }
    };
  h(ze, "ViewPlugin");
  var Lr = class Lr {
    update(e) {
      if (this.value) {
        if (this.mustUpdate) {
          var _$t = this.mustUpdate;
          if (((this.mustUpdate = null), this.value.update))
            try {
              this.value.update(_$t);
            } catch (i) {
              if ((Ft(_$t.state, i, "CodeMirror plugin crashed"), this.value.destroy))
                try {
                  this.value.destroy();
                } catch (e) {}
              this.deactivate();
            }
        }
      } else if (this.spec)
        try {
          this.value = this.spec.create(e);
        } catch (t) {
          Ft(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
        }
      return this;
    }
    destroy(e) {
      var t;
      if (!((t = this.value) === null || t === void 0) && t.destroy)
        try {
          this.value.destroy();
        } catch (i) {
          Ft(e.state, i, "CodeMirror plugin crashed");
        }
    }
    deactivate() {
      this.spec = this.value = null;
    }
    constructor(e) {
      (this.spec = e), (this.mustUpdate = null), (this.value = null);
    }
  };
  h(Lr, "PluginInstance");
  var Gg = U.define(),
    Dh = U.define(),
    Qn = U.define(),
    Kg = U.define(),
    Xg = U.define(),
    $n = U.define(),
    ct = class ct1 {
      join(e) {
        return new ct(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
      }
      addToSet(e) {
        var t = e.length,
          i = this;
        for (; t > 0; t--) {
          var n = e[t - 1];
          if (!(n.fromA > i.toA)) {
            if (n.toA < i.fromA) break;
            (i = i.join(n)), e.splice(t - 1, 1);
          }
        }
        return e.splice(t, 0, i), e;
      }
      static extendWithRanges(e, t) {
        if (t.length == 0) return e;
        var i = [];
        for (var n = 0, s = 0, o = 0, u = 0; ; n++) {
          var l = n == e.length ? null : e[n],
            a = o - u,
            c = l ? l.fromB : 1e9;
          for (; s < t.length && t[s] < c; ) {
            var f = t[s],
              d = t[s + 1],
              p = Math.max(u, f),
              m = Math.min(c, d);
            if ((p <= m && new ct(p + a, m + a, p, m).addToSet(i), d > c)) break;
            s += 2;
          }
          if (!l) return i;
          new ct(l.fromA, l.toA, l.fromB, l.toB).addToSet(i), (o = l.toA), (u = l.toB);
        }
      }
      constructor(e, t, i, n) {
        (this.fromA = e), (this.toA = t), (this.fromB = i), (this.toB = n);
      }
    };
  h(ct, "ChangedRange");
  var Zi = class Zi1 {
    static create(e, t, i) {
      return new Zi(e, t, i);
    }
    get viewportChanged() {
      return (this.flags & 4) > 0;
    }
    get heightChanged() {
      return (this.flags & 2) > 0;
    }
    get geometryChanged() {
      return this.docChanged || (this.flags & 10) > 0;
    }
    get focusChanged() {
      return (this.flags & 1) > 0;
    }
    get docChanged() {
      return !this.changes.empty;
    }
    get selectionSet() {
      return this.transactions.some((e) => e.selection);
    }
    get empty() {
      return this.flags == 0 && this.transactions.length == 0;
    }
    constructor(e, t, i) {
      (this.view = e), (this.state = t), (this.transactions = i), (this.flags = 0), (this.startState = e.state), (this.changes = we.empty(this.startState.doc.length));
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          this.changes = this.changes.compose(s.changes);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var n = [];
      this.changes.iterChangedRanges((s, o, u, l) => n.push(new ct(s, o, u, l))), (this.changedRanges = n);
    }
  };
  h(Zi, "ViewUpdate");
  var Oe = (function (r) {
      return (r[(r.LTR = 0)] = "LTR"), (r[(r.RTL = 1)] = "RTL"), r;
    })(Oe || (Oe = {})),
    sh = Oe.LTR,
    $v = Oe.RTL;
  function Qg(r) {
    var e = [];
    for (var t = 0; t < r.length; t++) e.push(1 << +r[t]);
    return e;
  }
  h(Qg, "dec");
  var Mv = Qg("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),
    Pv = Qg("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),
    oh = Object.create(null),
    jt = [];
  for (var _i = 0, _iter = ["()", "[]", "{}"]; _i < _iter.length; _i++) {
    var r1 = _iter[_i];
    var e = r1.charCodeAt(0),
      t = r1.charCodeAt(1);
    (oh[e] = t), (oh[t] = -e);
  }
  function Lv(r) {
    return r <= 247 ? Mv[r] : 1424 <= r && r <= 1524 ? 2 : 1536 <= r && r <= 1785 ? Pv[r - 1536] : 1774 <= r && r <= 2220 ? 4 : 8192 <= r && r <= 8203 ? 256 : 64336 <= r && r <= 65023 ? 4 : r == 8204 ? 256 : 1;
  }
  h(Lv, "charType");
  var qv = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/,
    hi = class hi {
      get dir() {
        return this.level % 2 ? $v : sh;
      }
      side(e, t) {
        return (this.dir == t) == e ? this.to : this.from;
      }
      static find(e, t, i, n) {
        var s = -1;
        for (var o = 0; o < e.length; o++) {
          var u = e[o];
          if (u.from <= t && u.to >= t) {
            if (u.level == i) return o;
            (s < 0 || (n != 0 ? (n < 0 ? u.from < t : u.to > t) : e[s].level > u.level)) && (s = o);
          }
        }
        if (s < 0) throw new RangeError("Index out of range");
        return s;
      }
      constructor(e, t, i) {
        (this.from = e), (this.to = t), (this.level = i);
      }
    };
  h(hi, "BidiSpan");
  var Be = [];
  function Iv(r, e) {
    var t = r.length,
      i = e == sh ? 1 : 2,
      n = e == sh ? 2 : 1;
    if (!r || (i == 1 && !qv.test(r))) return Jg(t);
    for (var o = 0, u = i, l = i; o < t; o++) {
      var a = Lv(r.charCodeAt(o));
      a == 512 ? (a = u) : a == 8 && l == 4 && (a = 16), (Be[o] = a == 4 ? 2 : a), a & 7 && (l = a), (u = a);
    }
    for (var o1 = 0, u1 = i, l1 = i; o1 < t; o1++) {
      var a1 = Be[o1];
      if (a1 == 128) o1 < t - 1 && u1 == Be[o1 + 1] && u1 & 24 ? (a1 = Be[o1] = u1) : (Be[o1] = 256);
      else if (a1 == 64) {
        var c = o1 + 1;
        for (; c < t && Be[c] == 64; ) c++;
        var f = (o1 && u1 == 8) || (c < t && Be[c] == 8) ? (l1 == 1 ? 1 : 8) : 256;
        for (var d = o1; d < c; d++) Be[d] = f;
        o1 = c - 1;
      } else a1 == 8 && l1 == 1 && (Be[o1] = 1);
      (u1 = a1), a1 & 7 && (l1 = a1);
    }
    for (var o2 = 0, u2 = 0, l2 = 0, a2, c1, f1; o2 < t; o2++)
      if ((c1 = oh[(a2 = r.charCodeAt(o2))]))
        if (c1 < 0) {
          for (var d1 = u2 - 3; d1 >= 0; d1 -= 3)
            if (jt[d1 + 1] == -c1) {
              var p = jt[d1 + 2],
                m = p & 2 ? i : p & 4 ? (p & 1 ? n : i) : 0;
              m && (Be[o2] = Be[jt[d1]] = m), (u2 = d1);
              break;
            }
        } else {
          if (jt.length == 189) break;
          (jt[u2++] = o2), (jt[u2++] = a2), (jt[u2++] = l2);
        }
      else if ((f1 = Be[o2]) == 2 || f1 == 1) {
        var d2 = f1 == i;
        l2 = d2 ? 0 : 1;
        for (var p1 = u2 - 3; p1 >= 0; p1 -= 3) {
          var m1 = jt[p1 + 2];
          if (m1 & 2) break;
          if (d2) jt[p1 + 2] |= 2;
          else {
            if (m1 & 4) break;
            jt[p1 + 2] |= 4;
          }
        }
      }
    for (var o3 = 0; o3 < t; o3++)
      if (Be[o3] == 256) {
        var u3 = o3 + 1;
        for (; u3 < t && Be[u3] == 256; ) u3++;
        var l3 = (o3 ? Be[o3 - 1] : i) == 1,
          a3 = (u3 < t ? Be[u3] : i) == 1,
          c2 = l3 == a3 ? (l3 ? 1 : 2) : i;
        for (var f2 = o3; f2 < u3; f2++) Be[f2] = c2;
        o3 = u3 - 1;
      }
    var s = [];
    if (i == 1)
      for (var o4 = 0; o4 < t; ) {
        var u4 = o4,
          l4 = Be[o4++] != 1;
        for (; o4 < t && l4 == (Be[o4] != 1); ) o4++;
        if (l4)
          for (var a4 = o4; a4 > u4; ) {
            var c3 = a4,
              f3 = Be[--a4] != 2;
            for (; a4 > u4 && f3 == (Be[a4 - 1] != 2); ) a4--;
            s.push(new hi(a4, c3, f3 ? 2 : 1));
          }
        else s.push(new hi(u4, o4, 0));
      }
    else
      for (var o5 = 0; o5 < t; ) {
        var u5 = o5,
          l5 = Be[o5++] == 2;
        for (; o5 < t && l5 == (Be[o5] == 2); ) o5++;
        s.push(new hi(u5, o5, l5 ? 1 : 2));
      }
    return s;
  }
  h(Iv, "computeOrder");
  function Jg(r) {
    return [new hi(0, r, 0)];
  }
  h(Jg, "trivialOrder");
  var Zg = "";
  function Nv(r, e, t, i, n) {
    var s;
    var o = i.head - r.from,
      u = -1;
    if (o == 0) {
      if (!n || !r.length) return null;
      e[0].level != t && ((o = e[0].side(!1, t)), (u = 0));
    } else if (o == r.length) {
      if (n) return null;
      var d = e[e.length - 1];
      d.level != t && ((o = d.side(!0, t)), (u = e.length - 1));
    }
    u < 0 && (u = hi.find(e, o, (s = i.bidiLevel) !== null && s !== void 0 ? s : -1, i.assoc));
    var l = e[u];
    o == l.side(n, t) && ((l = e[(u += n ? 1 : -1)]), (o = l.side(!n, t)));
    var a = n == (l.dir == t),
      c = Bt(r.text, o, a);
    if (((Zg = r.text.slice(Math.min(o, c), Math.max(o, c))), c != l.side(n, t))) return j.cursor(c + r.from, a ? -1 : 1, l.level);
    var f = u == (n ? e.length - 1 : 0) ? null : e[u + (n ? 1 : -1)];
    return !f && l.level != t ? j.cursor(n ? r.to : r.from, n ? -1 : 1, t) : f && f.level < l.level ? j.cursor(f.side(!n, t) + r.from, n ? 1 : -1, f.level) : j.cursor(c + r.from, n ? -1 : 1, l.level);
  }
  h(Nv, "moveVisually");
  var Si = "￿",
    Nn = class Nn {
      append(e) {
        this.text += e;
      }
      lineBreak() {
        this.text += Si;
      }
      readRange(e, t) {
        if (!e) return this;
        var i = e.parentNode;
        for (var n = e; ; ) {
          this.findPointBefore(i, n), this.readNode(n);
          var s = n.nextSibling;
          if (s == t) break;
          var o = De.get(n),
            u = De.get(s);
          (o && u ? o.breakAfter : (o ? o.breakAfter : J0(n)) || (J0(s) && (n.nodeName != "BR" || n.cmIgnore))) && this.lineBreak(), (n = s);
        }
        return this.findPointBefore(i, t), this;
      }
      readTextNode(e) {
        var t = e.nodeValue;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            i.node == e && (i.pos = this.text.length + Math.min(i.offset, t.length));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        for (var i1 = 0, n = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
          var s = -1,
            o = 1,
            u = void 0;
          if ((this.lineSeparator ? ((s = t.indexOf(this.lineSeparator, i1)), (o = this.lineSeparator.length)) : (u = n.exec(t)) && ((s = u.index), (o = u[0].length)), this.append(t.slice(i1, s < 0 ? t.length : s)), s < 0)) break;
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          if ((this.lineBreak(), o > 1))
            try {
              for (var _iterator1 = this.points[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var l = _step1.value;
                l.node == e && l.pos > this.text.length && (l.pos -= o - 1);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          i1 = s + o;
        }
      }
      readNode(e) {
        if (e.cmIgnore) return;
        var t = De.get(e),
          i = t && t.overrideDOMText;
        if (i != null) {
          this.findPointInside(e, i.length);
          for (var n = i.iter(); !n.next().done; ) n.lineBreak ? this.lineBreak() : this.append(n.value);
        } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
      }
      findPointBefore(e, t) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            i.node == e && e.childNodes[i.offset] == t && (i.pos = this.text.length);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      findPointInside(e, t) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.points[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            (e.nodeType == 3 ? i.node == e : e.contains(i.node)) && (i.pos = this.text.length + Math.min(t, i.offset));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      constructor(e, t) {
        (this.points = e), (this.text = ""), (this.lineSeparator = t.facet(le.lineSeparator));
      }
    };
  h(Nn, "DOMReader");
  function J0(r) {
    return r.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(r.nodeName);
  }
  h(J0, "isBlockElement");
  var Vn = class Vn {
    constructor(e, t) {
      (this.node = e), (this.offset = t), (this.pos = -1);
    }
  };
  h(Vn, "DOMPoint");
  var zn = class zn extends De {
    get length() {
      return this.view.state.doc.length;
    }
    update(e) {
      var t = e.changedRanges;
      this.minWidth > 0 &&
        t.length &&
        (t.every((param) => {
          var o = param.fromA,
            u = param.toA;
          return u < this.minWidthFrom || o > this.minWidthTo;
        })
          ? ((this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1)), (this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)))
          : (this.minWidth = this.minWidthFrom = this.minWidthTo = 0)),
        this.view.inputState.composing < 0 ? (this.compositionDeco = he.none) : (e.transactions.length || this.dirty) && (this.compositionDeco = zv(this.view, e.changes)),
        (Y.ie || Y.chrome) && !this.compositionDeco.size && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
      var i = this.decorations,
        n = this.updateDeco(),
        s = jv(i, n, e.changes);
      return (t = ct.extendWithRanges(t, s)), this.dirty == 0 && t.length == 0 ? !1 : (this.updateInner(t, e.startState.doc.length), e.transactions.length && (this.lastUpdate = Date.now()), !0);
    }
    updateInner(e, t) {
      (this.view.viewState.mustMeasureContent = !0), this.updateChildren(e, t);
      var _this_view = this.view,
        i = _this_view.observer;
      i.ignore(() => {
        (this.dom.style.height = this.view.viewState.contentHeight + "px"), (this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "");
        var s = Y.chrome || Y.ios ? { node: i.selectionRange.focusNode, written: !1 } : void 0;
        this.sync(this.view, s), (this.dirty = 0), s && (s.written || i.selectionRange.focusNode != s.node) && (this.forceSelection = !0), (this.dom.style.height = "");
      });
      var n = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
        try {
          for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            s instanceof Yt && s.widget instanceof Wn && n.push(s.dom);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      i.updateGaps(n);
    }
    updateChildren(e, t) {
      var i = this.childCursor(t);
      for (var n = e.length - 1; ; n--) {
        var s = n >= 0 ? e[n] : null;
        if (!s) break;
        var o = s.fromA,
          u = s.toA,
          l = s.fromB,
          a = s.toB,
          _Pr_build = Pr.build(this.view.state.doc, l, a, this.decorations, this.dynamicDecorationMap),
          c = _Pr_build.content,
          f = _Pr_build.breakAtStart,
          d = _Pr_build.openStart,
          p = _Pr_build.openEnd,
          _i_findPos = i.findPos(u, 1),
          m = _i_findPos.i,
          D = _i_findPos.off,
          _i_findPos1 = i.findPos(o, -1),
          g = _i_findPos1.i,
          b = _i_findPos1.off;
        Og(this, g, b, m, D, c, f, d, p);
      }
    }
    updateSelection() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1,
        t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (((e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange(), !(t || this.mayControlSelection()))) return;
      var i = this.forceSelection;
      this.forceSelection = !1;
      var n = this.view.state.selection.main,
        s = this.domAtPos(n.anchor),
        o = n.empty ? s : this.domAtPos(n.head);
      if (Y.gecko && n.empty && Vv(s)) {
        var l = document.createTextNode("");
        this.view.observer.ignore(() => s.node.insertBefore(l, s.node.childNodes[s.offset] || null)), (s = o = new Pe(l, 0)), (i = !0);
      }
      var u = this.view.observer.selectionRange;
      (i || !u.focusNode || !tu(s.node, s.offset, u.anchorNode, u.anchorOffset) || !tu(o.node, o.offset, u.focusNode, u.focusOffset)) &&
        (this.view.observer.ignore(() => {
          Y.android && Y.chrome && this.dom.contains(u.focusNode) && Hv(u.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
          var l = eu(this.view.root);
          if (l)
            if (n.empty) {
              if (Y.gecko) {
                var a = Wv(s.node, s.offset);
                if (a && a != 3) {
                  var c = tD(s.node, s.offset, a == 1 ? 1 : -1);
                  c && (s = new Pe(c, a == 1 ? 0 : c.nodeValue.length));
                }
              }
              l.collapse(s.node, s.offset), n.bidiLevel != null && u.cursorBidiLevel != null && (u.cursorBidiLevel = n.bidiLevel);
            } else if (l.extend) {
              l.collapse(s.node, s.offset);
              try {
                l.extend(o.node, o.offset);
              } catch (e) {}
            } else {
              var a1 = document.createRange();
              var ref;
              n.anchor > n.head && ((ref = [o, s]), (s = ref[0]), (o = ref[1]), ref), a1.setEnd(o.node, o.offset), a1.setStart(s.node, s.offset), l.removeAllRanges(), l.addRange(a1);
            }
        }),
        this.view.observer.setSelectionRange(s, o)),
        (this.impreciseAnchor = s.precise ? null : new Pe(u.anchorNode, u.anchorOffset)),
        (this.impreciseHead = o.precise ? null : new Pe(u.focusNode, u.focusOffset));
    }
    enforceCursorAssoc() {
      if (this.compositionDeco.size) return;
      var _this = this,
        e = _this.view,
        t = e.state.selection.main,
        i = eu(e.root),
        _e_observer_selectionRange = e.observer.selectionRange,
        n = _e_observer_selectionRange.anchorNode,
        s = _e_observer_selectionRange.anchorOffset;
      if (!i || !t.empty || !t.assoc || !i.modify) return;
      var o = Ve.find(this, t.head);
      if (!o) return;
      var u = o.posAtStart;
      if (t.head == u || t.head == u + o.length) return;
      var l = this.coordsAt(t.head, -1),
        a = this.coordsAt(t.head, 1);
      if (!l || !a || l.bottom > a.top) return;
      var c = this.domAtPos(t.head + t.assoc);
      i.collapse(c.node, c.offset), i.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
      var f = e.observer.selectionRange;
      e.docView.posFromDOM(f.anchorNode, f.anchorOffset) != t.from && i.collapse(n, s);
    }
    mayControlSelection() {
      var e = this.view.root.activeElement;
      return e == this.dom || (Ro(this.dom, this.view.observer.selectionRange) && !(e && this.dom.contains(e)));
    }
    nearest(e) {
      for (var t = e; t; ) {
        var i = De.get(t);
        if (i && i.rootView == this) return i;
        t = t.parentNode;
      }
      return null;
    }
    posFromDOM(e, t) {
      var i = this.nearest(e);
      if (!i) throw new RangeError("Trying to find position for a DOM position outside of the document");
      return i.localPosFromDOM(e, t) + i.posAtStart;
    }
    domAtPos(e) {
      var _this_childCursor_findPos = this.childCursor().findPos(e, -1),
        t = _this_childCursor_findPos.i,
        i = _this_childCursor_findPos.off;
      for (; t < this.children.length - 1; ) {
        var n = this.children[t];
        if (i < n.length || n instanceof Ve) break;
        t++, (i = 0);
      }
      return this.children[t].domAtPos(i);
    }
    coordsAt(e, t) {
      for (var i = this.length, n = this.children.length - 1; ; n--) {
        var s = this.children[n],
          o = i - s.breakAfter - s.length;
        if (e > o || (e == o && s.type != Fe.WidgetBefore && s.type != Fe.WidgetAfter && (!n || t == 2 || this.children[n - 1].breakAfter || (this.children[n - 1].type == Fe.WidgetBefore && t > -2)))) return s.coordsAt(e - o, t);
        i = o;
      }
    }
    measureVisibleLineHeights(e) {
      var t = [],
        i = e.from,
        n = e.to,
        s = this.view.contentDOM.clientWidth,
        o = s > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1,
        u = -1,
        l = this.view.textDirection == Oe.LTR;
      for (var a = 0, c = 0; c < this.children.length; c++) {
        var f = this.children[c],
          d = a + f.length;
        if (d > n) break;
        if (a >= i) {
          var p = f.dom.getBoundingClientRect();
          if ((t.push(p.height), o)) {
            var m = f.dom.lastChild,
              D = m ? Kn(m) : [];
            if (D.length) {
              var g = D[D.length - 1],
                b = l ? g.right - p.left : p.right - g.left;
              b > u && ((u = b), (this.minWidth = s), (this.minWidthFrom = a), (this.minWidthTo = d));
            }
          }
        }
        a = d + f.breakAfter;
      }
      return t;
    }
    textDirectionAt(e) {
      var _this_childPos = this.childPos(e, 1),
        t = _this_childPos.i;
      return getComputedStyle(this.children[t].dom).direction == "rtl" ? Oe.RTL : Oe.LTR;
    }
    measureTextSize() {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          if (n instanceof Ve) {
            var s = n.measureTextSize();
            if (s) return s;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var e = document.createElement("div"),
        t,
        i;
      return (
        (e.className = "cm-line"),
        (e.style.width = "99999px"),
        (e.textContent = "abc def ghi jkl mno pqr stu"),
        this.view.observer.ignore(() => {
          this.dom.appendChild(e);
          var n = Kn(e.firstChild)[0];
          (t = e.getBoundingClientRect().height), (i = n ? n.width / 27 : 7), e.remove();
        }),
        { lineHeight: t, charWidth: i }
      );
    }
    childCursor() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.length;
      var t = this.children.length;
      return t && (e -= this.children[--t].length), new Ln(this.children, e, t);
    }
    computeBlockGapDeco() {
      var e = [],
        t = this.view.viewState;
      for (var i = 0, n = 0; ; n++) {
        var s = n == t.viewports.length ? null : t.viewports[n],
          o = s ? s.from - 1 : this.length;
        if (o > i) {
          var u = t.lineBlockAt(o).bottom - t.lineBlockAt(i).top;
          e.push(he.replace({ widget: new Wn(u), block: !0, inclusive: !0, isBlockGap: !0 }).range(i, o));
        }
        if (!s) break;
        i = s.to + 1;
      }
      return he.set(e);
    }
    updateDeco() {
      var e = this.view.state.facet(Qn).map((t, i) => ((this.dynamicDecorationMap[i] = typeof t == "function") ? t(this.view) : t));
      for (var t = e.length; t < e.length + 3; t++) this.dynamicDecorationMap[t] = !1;
      return (this.decorations = [...e, this.compositionDeco, this.computeBlockGapDeco(), this.view.viewState.lineGapDeco]);
    }
    scrollIntoView(e) {
      var t = e.range,
        i = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1),
        n;
      if (!i) return;
      !t.empty && (n = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (i = { left: Math.min(i.left, n.left), top: Math.min(i.top, n.top), right: Math.max(i.right, n.right), bottom: Math.max(i.bottom, n.bottom) });
      var s = 0,
        o = 0,
        u = 0,
        l = 0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (
          var _iterator = this.view.state
              .facet(Xg)
              .map((f) => f(this.view))
              [Symbol.iterator](),
            _step;
          !(_iteratorNormalCompletion = (_step = _iterator.next()).done);
          _iteratorNormalCompletion = true
        ) {
          var c = _step.value;
          if (c) {
            var f = c.left,
              d = c.right,
              p = c.top,
              m = c.bottom;
            f != null && (s = Math.max(s, f)), d != null && (o = Math.max(o, d)), p != null && (u = Math.max(u, p)), m != null && (l = Math.max(l, m));
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var a = { left: i.left - s, top: i.top - u, right: i.right + o, bottom: i.bottom + l };
      kv(this.view.scrollDOM, a, t.head < t.anchor ? -1 : 1, e.x, e.y, e.xMargin, e.yMargin, this.view.textDirection == Oe.LTR);
    }
    constructor(e) {
      super(),
        (this.view = e),
        (this.compositionDeco = he.none),
        (this.decorations = []),
        (this.dynamicDecorationMap = []),
        (this.minWidth = 0),
        (this.minWidthFrom = 0),
        (this.minWidthTo = 0),
        (this.impreciseAnchor = null),
        (this.impreciseHead = null),
        (this.forceSelection = !1),
        (this.lastUpdate = Date.now()),
        this.setDOM(e.contentDOM),
        (this.children = [new Ve()]),
        this.children[0].setParent(this),
        this.updateDeco(),
        this.updateInner([new ct(0, 0, 0, e.state.doc.length)], 0);
    }
  };
  h(zn, "DocView");
  function Vv(r) {
    return r.node.nodeType == 1 && r.node.firstChild && (r.offset == 0 || r.node.childNodes[r.offset - 1].contentEditable == "false") && (r.offset == r.node.childNodes.length || r.node.childNodes[r.offset].contentEditable == "false");
  }
  h(Vv, "betweenUneditable");
  var Wn = class Wn extends Ht {
    toDOM() {
      var e = document.createElement("div");
      return this.updateDOM(e), e;
    }
    eq(e) {
      return e.height == this.height;
    }
    updateDOM(e) {
      return (e.style.height = this.height + "px"), !0;
    }
    get estimatedHeight() {
      return this.height;
    }
    constructor(e) {
      super(), (this.height = e);
    }
  };
  h(Wn, "BlockGapWidget");
  function eD(r) {
    var e = r.observer.selectionRange,
      t = e.focusNode && tD(e.focusNode, e.focusOffset, 0);
    if (!t) return null;
    var i = r.docView.nearest(t);
    if (!i) return null;
    if (i instanceof Ve) {
      var n = t;
      for (; n.parentNode != i.dom; ) n = n.parentNode;
      var s = n.previousSibling;
      for (; s && !De.get(s); ) s = s.previousSibling;
      var o = s ? De.get(s).posAtEnd : i.posAtStart;
      return { from: o, to: o, node: n, text: t };
    } else {
      for (;;) {
        var s1 = i.parent;
        if (!s1) return null;
        if (s1 instanceof Ve) break;
        i = s1;
      }
      var n1 = i.posAtStart;
      return { from: n1, to: n1 + i.length, node: i.dom, text: t };
    }
  }
  h(eD, "compositionSurroundingNode");
  function zv(r, e) {
    var t = eD(r);
    if (!t) return he.none;
    var i = t.from,
      n = t.to,
      s = t.node,
      o = t.text,
      u = e.mapPos(i, 1),
      l = Math.max(u, e.mapPos(n, -1)),
      a = r.state,
      c = s.nodeType == 3 ? s.nodeValue : new Nn([], a).readRange(s.firstChild, null).text;
    if (l - u < c.length)
      if (a.doc.sliceString(u, Math.min(a.doc.length, u + c.length), Si) == c) l = u + c.length;
      else if (a.doc.sliceString(Math.max(0, l - c.length), l, Si) == c) u = l - c.length;
      else return he.none;
    else if (a.doc.sliceString(u, l, Si) != c) return he.none;
    var f = De.get(s);
    return f instanceof qn ? (f = f.widget.topView) : f && (f.parent = null), he.set(he.replace({ widget: new Mo(s, o, f), inclusive: !0 }).range(u, l));
  }
  h(zv, "computeCompositionDeco");
  var Mo = class Mo extends Ht {
    eq(e) {
      return this.top == e.top && this.text == e.text;
    }
    toDOM() {
      return this.top;
    }
    ignoreEvent() {
      return !1;
    }
    get customView() {
      return qn;
    }
    constructor(e, t, i) {
      super(), (this.top = e), (this.text = t), (this.topView = i);
    }
  };
  h(Mo, "CompositionWidget");
  function tD(r, e, t) {
    for (;;) {
      if (r.nodeType == 3) return r;
      if (r.nodeType == 1 && e > 0 && t <= 0) (r = r.childNodes[e - 1]), (e = Xn(r));
      else if (r.nodeType == 1 && e < r.childNodes.length && t >= 0) (r = r.childNodes[e]), (e = 0);
      else return null;
    }
  }
  h(tD, "nearbyTextNode");
  function Wv(r, e) {
    return r.nodeType != 1 ? 0 : (e && r.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < r.childNodes.length && r.childNodes[e].contentEditable == "false" ? 2 : 0);
  }
  h(Wv, "nextToUneditable");
  var Po = class Po {
    compareRange(e, t) {
      rh(e, t, this.changes);
    }
    comparePoint(e, t) {
      rh(e, t, this.changes);
    }
    constructor() {
      this.changes = [];
    }
  };
  h(Po, "DecorationComparator$1");
  function jv(r, e, t) {
    var i = new Po();
    return pe.compare(r, e, t, i), i.changes;
  }
  h(jv, "findChangedDeco");
  function Hv(r, e) {
    for (var t = r; t && t != e; t = t.assignedSlot || t.parentNode) if (t.nodeType == 1 && t.contentEditable == "false") return !0;
    return !1;
  }
  h(Hv, "inUneditable");
  function Uv(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
    var i = r.charCategorizer(e),
      n = r.doc.lineAt(e),
      s = e - n.from;
    if (n.length == 0) return j.cursor(e);
    s == 0 ? (t = 1) : s == n.length && (t = -1);
    var o = s,
      u = s;
    t < 0 ? (o = Bt(n.text, s, !1)) : (u = Bt(n.text, s));
    var l = i(n.text.slice(o, u));
    for (; o > 0; ) {
      var a = Bt(n.text, o, !1);
      if (i(n.text.slice(a, o)) != l) break;
      o = a;
    }
    for (; u < n.length; ) {
      var a1 = Bt(n.text, u);
      if (i(n.text.slice(u, a1)) != l) break;
      u = a1;
    }
    return j.range(o + n.from, u + n.from);
  }
  h(Uv, "groupAt");
  function Yv(r, e) {
    return e.left > r ? e.left - r : Math.max(0, r - e.right);
  }
  h(Yv, "getdx");
  function Gv(r, e) {
    return e.top > r ? e.top - r : Math.max(0, r - e.bottom);
  }
  h(Gv, "getdy");
  function Ha(r, e) {
    return r.top < e.bottom - 1 && r.bottom > e.top + 1;
  }
  h(Ha, "yOverlap");
  function Z0(r, e) {
    return e < r.top ? { top: e, left: r.left, right: r.right, bottom: r.bottom } : r;
  }
  h(Z0, "upTop");
  function eg(r, e) {
    return e > r.bottom ? { top: r.top, left: r.left, right: r.right, bottom: e } : r;
  }
  h(eg, "upBot");
  function uh(r, e, t) {
    var i,
      n,
      s,
      o,
      u = !1,
      l,
      a,
      c,
      f;
    for (var m = r.firstChild; m; m = m.nextSibling) {
      var D = Kn(m);
      for (var g = 0; g < D.length; g++) {
        var b = D[g];
        n && Ha(n, b) && (b = Z0(eg(b, n.bottom), n.top));
        var F = Yv(e, b),
          E = Gv(t, b);
        if (F == 0 && E == 0) return m.nodeType == 3 ? tg(m, e, t) : uh(m, e, t);
        if (!i || o > E || (o == E && s > F)) {
          (i = m), (n = b), (s = F), (o = E);
          var A = E ? (t < b.top ? -1 : 1) : F ? (e < b.left ? -1 : 1) : 0;
          u = !A || (A > 0 ? g < D.length - 1 : g > 0);
        }
        F == 0 ? (t > b.bottom && (!c || c.bottom < b.bottom) ? ((l = m), (c = b)) : t < b.top && (!f || f.top > b.top) && ((a = m), (f = b))) : c && Ha(c, b) ? (c = eg(c, b.bottom)) : f && Ha(f, b) && (f = Z0(f, b.top));
      }
    }
    if ((c && c.bottom >= t ? ((i = l), (n = c)) : f && f.top <= t && ((i = a), (n = f)), !i)) return { node: r, offset: 0 };
    var d = Math.max(n.left, Math.min(n.right, e));
    if (i.nodeType == 3) return tg(i, d, t);
    if (u && i.contentEditable != "false") return uh(i, d, t);
    var p = Array.prototype.indexOf.call(r.childNodes, i) + (e >= (n.left + n.right) / 2 ? 1 : 0);
    return { node: r, offset: p };
  }
  h(uh, "domPosAtCoords");
  function tg(r, e, t) {
    var i = r.nodeValue.length,
      n = -1,
      s = 1e9,
      o = 0;
    for (var u = 0; u < i; u++) {
      var l = Wr(r, u, u + 1).getClientRects();
      for (var a = 0; a < l.length; a++) {
        var c = l[a];
        if (c.top == c.bottom) continue;
        o || (o = e - c.left);
        var f = (c.top > t ? c.top - t : t - c.bottom) - 1;
        if (c.left - 1 <= e && c.right + 1 >= e && f < s) {
          var d = e >= (c.left + c.right) / 2,
            p = d;
          if (((Y.chrome || Y.gecko) && Wr(r, u).getBoundingClientRect().left == c.right && (p = !d), f <= 0)) return { node: r, offset: u + (p ? 1 : 0) };
          (n = u + (p ? 1 : 0)), (s = f);
        }
      }
    }
    return { node: r, offset: n > -1 ? n : o > 0 ? r.nodeValue.length : 0 };
  }
  h(tg, "domPosInText");
  function iD(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : -1;
    var n, s;
    var o = r.contentDOM.getBoundingClientRect(),
      u = o.top + r.viewState.paddingTop,
      l,
      _r_viewState = r.viewState,
      a = _r_viewState.docHeight,
      c = e.x,
      f = e.y,
      d = f - u;
    if (d < 0) return 0;
    if (d > a) return r.state.doc.length;
    for (var A = r.defaultLineHeight / 2, _ = !1; (l = r.elementAtHeight(d)), l.type != Fe.Text; )
      for (; (d = i > 0 ? l.bottom + A : l.top - A), !(d >= 0 && d <= a); ) {
        if (_) return t ? null : 0;
        (_ = !0), (i = -i);
      }
    f = u + d;
    var p = l.from;
    if (p < r.viewport.from) return r.viewport.from == 0 ? 0 : t ? null : ig(r, o, l, c, f);
    if (p > r.viewport.to) return r.viewport.to == r.state.doc.length ? r.state.doc.length : t ? null : ig(r, o, l, c, f);
    var m = r.dom.ownerDocument,
      D = r.root.elementFromPoint ? r.root : m,
      g = D.elementFromPoint(c, f);
    g && !r.contentDOM.contains(g) && (g = null), g || ((c = Math.max(o.left + 1, Math.min(o.right - 1, c))), (g = D.elementFromPoint(c, f)), g && !r.contentDOM.contains(g) && (g = null));
    var b,
      F = -1;
    if (g && ((n = r.docView.nearest(g)) === null || n === void 0 ? void 0 : n.isEditable) != !1) {
      if (m.caretPositionFromPoint) {
        var A1 = m.caretPositionFromPoint(c, f);
        var ref;
        A1 && ((ref = A1), (b = ref.offsetNode), (F = ref.offset), ref);
      } else if (m.caretRangeFromPoint) {
        var A2 = m.caretRangeFromPoint(c, f);
        var ref1;
        A2 && ((ref1 = A2), (b = ref1.startContainer), (F = ref1.startOffset), ref1, (!r.contentDOM.contains(b) || (Y.safari && Kv(b, F, c)) || (Y.chrome && Xv(b, F, c))) && (b = void 0));
      }
    }
    if (!b || !r.docView.dom.contains(b)) {
      var A3 = Ve.find(r.docView, p);
      if (!A3) return d > l.top + l.height / 2 ? l.to : l.from;
      var ref2;
      (ref2 = uh(A3.dom, c, f)), (b = ref2.node), (F = ref2.offset), ref2;
    }
    var E = r.docView.nearest(b);
    if (!E) return null;
    if (E.isWidget && ((s = E.dom) === null || s === void 0 ? void 0 : s.nodeType) == 1) {
      var A4 = E.dom.getBoundingClientRect();
      return e.y < A4.top || (e.y <= A4.bottom && e.x <= (A4.left + A4.right) / 2) ? E.posAtStart : E.posAtEnd;
    } else return E.localPosFromDOM(b, F) + E.posAtStart;
  }
  h(iD, "posAtCoords");
  function ig(r, e, t, i, n) {
    var s = Math.round((i - e.left) * r.defaultCharacterWidth);
    if (r.lineWrapping && t.height > r.defaultLineHeight * 1.5) {
      var u = Math.floor((n - t.top) / r.defaultLineHeight);
      s += u * r.viewState.heightOracle.lineLength;
    }
    var o = r.state.sliceDoc(t.from, t.to);
    return t.from + N0(o, s, r.state.tabSize);
  }
  h(ig, "posAtCoordsImprecise");
  function Kv(r, e, t) {
    var i;
    if (r.nodeType != 3 || e != (i = r.nodeValue.length)) return !1;
    for (var n = r.nextSibling; n; n = n.nextSibling) if (n.nodeType != 1 || n.nodeName != "BR") return !1;
    return Wr(r, i - 1, i).getBoundingClientRect().left > t;
  }
  h(Kv, "isSuspiciousSafariCaretResult");
  function Xv(r, e, t) {
    if (e != 0) return !1;
    for (var n = r; ; ) {
      var s = n.parentNode;
      if (!s || s.nodeType != 1 || s.firstChild != n) return !1;
      if (s.classList.contains("cm-line")) break;
      n = s;
    }
    var i = r.nodeType == 1 ? r.getBoundingClientRect() : Wr(r, 0, Math.max(r.nodeValue.length, 1)).getBoundingClientRect();
    return t - i.left > 5;
  }
  h(Xv, "isSuspiciousChromeCaretResult");
  function Qv(r, e, t, i) {
    var n = r.state.doc.lineAt(e.head),
      s = !i || !r.lineWrapping ? null : r.coordsAtPos(e.assoc < 0 && e.head > n.from ? e.head - 1 : e.head);
    if (s) {
      var l = r.dom.getBoundingClientRect(),
        a = r.textDirectionAt(n.from),
        c = r.posAtCoords({ x: t == (a == Oe.LTR) ? l.right - 1 : l.left + 1, y: (s.top + s.bottom) / 2 });
      if (c != null) return j.cursor(c, t ? -1 : 1);
    }
    var o = Ve.find(r.docView, e.head),
      u = o ? (t ? o.posAtEnd : o.posAtStart) : t ? n.to : n.from;
    return j.cursor(u, t ? -1 : 1);
  }
  h(Qv, "moveToLineBoundary");
  function rg(r, e, t, i) {
    var n = r.state.doc.lineAt(e.head),
      s = r.bidiSpans(n),
      o = r.textDirectionAt(n.from);
    for (var u = e, l = null; ; ) {
      var a = Nv(n, s, o, u, t),
        c = Zg;
      if (!a) {
        if (n.number == (t ? r.state.doc.lines : 1)) return u;
        (c = "\n"), (n = r.state.doc.line(n.number + (t ? 1 : -1))), (s = r.bidiSpans(n)), (a = j.cursor(t ? n.from : n.to));
      }
      if (l) {
        if (!l(c)) return u;
      } else {
        if (!i) return a;
        l = i(c);
      }
      u = a;
    }
  }
  h(rg, "moveByChar");
  function Jv(r, e, t) {
    var i = r.state.charCategorizer(e),
      n = i(t);
    return (s) => {
      var o = i(s);
      return n == St.Space && (n = o), n == o;
    };
  }
  h(Jv, "byGroup");
  function Zv(r, e, t, i) {
    var n = e.head,
      s = t ? 1 : -1;
    if (n == (t ? r.state.doc.length : 0)) return j.cursor(n, e.assoc);
    var o = e.goalColumn,
      u,
      l = r.contentDOM.getBoundingClientRect(),
      a = r.coordsAtPos(n),
      c = r.documentTop;
    if (a) o == null && (o = a.left - l.left), (u = s < 0 ? a.top : a.bottom);
    else {
      var p = r.viewState.lineBlockAt(n);
      o == null && (o = Math.min(l.right - l.left, r.defaultCharacterWidth * (n - p.from))), (u = (s < 0 ? p.top : p.bottom) + c);
    }
    var f = l.left + o,
      d = i !== null && i !== void 0 ? i : r.defaultLineHeight >> 1;
    for (var p1 = 0; ; p1 += 10) {
      var m = u + (d + p1) * s,
        D = iD(r, { x: f, y: m }, !1, s);
      if (m < l.top || m > l.bottom || (s < 0 ? D < n : D > n)) return j.cursor(D, e.assoc, void 0, o);
    }
  }
  h(Zv, "moveVertically");
  function Ua(r, e, t) {
    var i = r.state.facet(Kg).map((n) => n(r));
    for (;;) {
      var n = !1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          s.between(t.from - 1, t.from + 1, (o, u, l) => {
            t.from > o && t.from < u && ((t = e.head > t.from ? j.cursor(o, 1) : j.cursor(u, -1)), (n = !0));
          });
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if (!n) return t;
    }
  }
  h(Ua, "skipAtoms");
  var Lo = class Lo {
    setSelectionOrigin(e) {
      (this.lastSelectionOrigin = e), (this.lastSelectionTime = Date.now());
    }
    ensureHandlers(e, t) {
      var i;
      var n;
      this.customHandlers = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          if ((n = (i = s.update(e).spec) === null || i === void 0 ? void 0 : i.domEventHandlers)) {
            var _this = this,
              _loop = function (o) {
                _this.registeredEvents.indexOf(o) < 0 &&
                  o != "scroll" &&
                  (_this.registeredEvents.push(o),
                  e.contentDOM.addEventListener(o, (u) => {
                    ng(e, u) && _this.runCustomHandlers(o, e, u) && u.preventDefault();
                  }));
              };
            this.customHandlers.push({ plugin: s.value, handlers: n });
            for (var o in n) _loop(o);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    runCustomHandlers(e, t, i) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.customHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n.handlers[e];
          if (s)
            try {
              if (s.call(n.plugin, i, t) || i.defaultPrevented) return !0;
            } catch (o) {
              Ft(t.state, o);
            }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return !1;
    }
    runScrollHandlers(e, t) {
      (this.lastScrollTop = e.scrollDOM.scrollTop), (this.lastScrollLeft = e.scrollDOM.scrollLeft);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.customHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = i.handlers.scroll;
          if (n)
            try {
              n.call(i.plugin, t, e);
            } catch (s) {
              Ft(e.state, s);
            }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    keydown(e, t) {
      if (((this.lastKeyCode = t.keyCode), (this.lastKeyTime = Date.now()), t.keyCode == 9 && Date.now() < this.lastEscPress + 2e3)) return !0;
      if (Y.android && Y.chrome && !t.synthetic && (t.keyCode == 13 || t.keyCode == 8)) return e.observer.delayAndroidKey(t.key, t.keyCode), !0;
      var i;
      return Y.ios && !t.synthetic && !t.altKey && !t.metaKey && (((i = rD.find((n) => n.keyCode == t.keyCode)) && !t.ctrlKey) || (ek.indexOf(t.key) > -1 && t.ctrlKey && !t.shiftKey)) ? ((this.pendingIOSKey = i || t), setTimeout(() => this.flushIOSKey(e), 250), !0) : !1;
    }
    flushIOSKey(e) {
      var t = this.pendingIOSKey;
      return t ? ((this.pendingIOSKey = void 0), Mr(e.contentDOM, t.key, t.keyCode)) : !1;
    }
    ignoreDuringComposition(e) {
      return /^key/.test(e.type) ? (this.composing > 0 ? !0 : Y.safari && !Y.ios && Date.now() - this.compositionEndedAt < 100 ? ((this.compositionEndedAt = 0), !0) : !1) : !1;
    }
    mustFlushObserver(e) {
      return e.type == "keydown" && e.keyCode != 229;
    }
    startMouseSelection(e) {
      this.mouseSelection && this.mouseSelection.destroy(), (this.mouseSelection = e);
    }
    update(e) {
      this.mouseSelection && this.mouseSelection.update(e), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
    }
    destroy() {
      this.mouseSelection && this.mouseSelection.destroy();
    }
    constructor(e) {
      var _this = this,
        _loop = function (i) {
          var n = Le[i];
          e.contentDOM.addEventListener(
            i,
            (s) => {
              ng(e, s) && t(n, s);
            },
            lh[i]
          ),
            _this.registeredEvents.push(i);
        };
      (this.lastKeyCode = 0),
        (this.lastKeyTime = 0),
        (this.lastTouchTime = 0),
        (this.lastFocusTime = 0),
        (this.lastScrollTop = 0),
        (this.lastScrollLeft = 0),
        (this.chromeScrollHack = -1),
        (this.pendingIOSKey = void 0),
        (this.lastSelectionOrigin = null),
        (this.lastSelectionTime = 0),
        (this.lastEscPress = 0),
        (this.lastContextMenu = 0),
        (this.scrollHandlers = []),
        (this.registeredEvents = []),
        (this.customHandlers = []),
        (this.composing = -1),
        (this.compositionFirstChange = null),
        (this.compositionEndedAt = 0),
        (this.mouseSelection = null);
      var t = h((i, n) => {
        this.ignoreDuringComposition(n) || (n.type == "keydown" && this.keydown(e, n)) || (this.mustFlushObserver(n) && e.observer.forceFlush(), this.runCustomHandlers(n.type, e, n) ? n.preventDefault() : i(e, n));
      }, "handleEvent");
      for (var i in Le) _loop(i);
      e.scrollDOM.addEventListener("mousedown", (i) => {
        i.target == e.scrollDOM && i.clientY > e.contentDOM.getBoundingClientRect().bottom && t(Le.mousedown, i);
      }),
        Y.chrome &&
          Y.chrome_version == 102 &&
          e.scrollDOM.addEventListener(
            "wheel",
            () => {
              this.chromeScrollHack < 0 ? (e.contentDOM.style.pointerEvents = "none") : window.clearTimeout(this.chromeScrollHack),
                (this.chromeScrollHack = setTimeout(() => {
                  (this.chromeScrollHack = -1), (e.contentDOM.style.pointerEvents = "");
                }, 100));
            },
            { passive: !0 }
          ),
        (this.notifiedFocused = e.hasFocus),
        Y.safari && e.contentDOM.addEventListener("input", () => null);
    }
  };
  h(Lo, "InputState");
  var rD = [
      { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
      { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
      { key: "Delete", keyCode: 46, inputType: "deleteContentForward" },
    ],
    ek = "dthko",
    nD = [16, 17, 18, 20, 91, 92, 224, 225];
  function xo(r) {
    return r * 0.7 + 8;
  }
  h(xo, "dragScrollSpeed");
  var qo = class qo {
    start(e) {
      this.dragging === !1 && (e.preventDefault(), this.select(e));
    }
    move(e) {
      var t;
      if (e.buttons == 0) return this.destroy();
      if (this.dragging !== !1) return;
      this.select((this.lastEvent = e));
      var i = 0,
        n = 0,
        s = ((t = this.scrollParent) === null || t === void 0 ? void 0 : t.getBoundingClientRect()) || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight };
      e.clientX <= s.left ? (i = -xo(s.left - e.clientX)) : e.clientX >= s.right && (i = xo(e.clientX - s.right)), e.clientY <= s.top ? (n = -xo(s.top - e.clientY)) : e.clientY >= s.bottom && (n = xo(e.clientY - s.bottom)), this.setScrollSpeed(i, n);
    }
    up(e) {
      this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
    }
    destroy() {
      this.setScrollSpeed(0, 0);
      var e = this.view.contentDOM.ownerDocument;
      e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), (this.view.inputState.mouseSelection = null);
    }
    setScrollSpeed(e, t) {
      (this.scrollSpeed = { x: e, y: t }), e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), (this.scrolling = -1));
    }
    scroll() {
      this.scrollParent ? ((this.scrollParent.scrollLeft += this.scrollSpeed.x), (this.scrollParent.scrollTop += this.scrollSpeed.y)) : this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y), this.dragging === !1 && this.select(this.lastEvent);
    }
    select(e) {
      var t = this.style.get(e, this.extend, this.multiple);
      (this.mustSelect || !t.eq(this.view.state.selection) || t.main.assoc != this.view.state.selection.main.assoc) && this.view.dispatch({ selection: t, userEvent: "select.pointer" }), (this.mustSelect = !1);
    }
    update(e) {
      e.docChanged && this.dragging && (this.dragging = this.dragging.map(e.changes)), this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
    }
    constructor(e, t, i, n) {
      (this.view = e), (this.style = i), (this.mustSelect = n), (this.scrollSpeed = { x: 0, y: 0 }), (this.scrolling = -1), (this.lastEvent = t), (this.scrollParent = wv(e.contentDOM));
      var s = e.contentDOM.ownerDocument;
      s.addEventListener("mousemove", (this.move = this.move.bind(this))), s.addEventListener("mouseup", (this.up = this.up.bind(this))), (this.extend = t.shiftKey), (this.multiple = e.state.facet(le.allowMultipleSelections) && tk(e, t)), (this.dragMove = ik(e, t)), (this.dragging = rk(e, t) && lD(t) == 1 ? null : !1);
    }
  };
  h(qo, "MouseSelection");
  function tk(r, e) {
    var t = r.state.facet(Ng);
    return t.length ? t[0](e) : Y.mac ? e.metaKey : e.ctrlKey;
  }
  h(tk, "addsSelectionRange");
  function ik(r, e) {
    var t = r.state.facet(Vg);
    return t.length ? t[0](e) : Y.mac ? !e.altKey : !e.ctrlKey;
  }
  h(ik, "dragMovesSelection");
  function rk(r, e) {
    var _r_state_selection = r.state.selection,
      t = _r_state_selection.main;
    if (t.empty) return !1;
    var i = eu(r.root);
    if (!i || i.rangeCount == 0) return !0;
    var n = i.getRangeAt(0).getClientRects();
    for (var s = 0; s < n.length; s++) {
      var o = n[s];
      if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY) return !0;
    }
    return !1;
  }
  h(rk, "isInPrimarySelection");
  function ng(r, e) {
    if (!e.bubbles) return !0;
    if (e.defaultPrevented) return !1;
    for (var t = e.target, i; t != r.contentDOM; t = t.parentNode) if (!t || t.nodeType == 11 || ((i = De.get(t)) && i.ignoreEvent(e))) return !1;
    return !0;
  }
  h(ng, "eventBelongsToEditor");
  var Le = Object.create(null),
    lh = Object.create(null),
    sD = (Y.ie && Y.ie_version < 15) || (Y.ios && Y.webkit_version < 604);
  function nk(r) {
    var e = r.dom.parentNode;
    if (!e) return;
    var t = e.appendChild(document.createElement("textarea"));
    (t.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      t.focus(),
      setTimeout(() => {
        r.focus(), t.remove(), oD(r, t.value);
      }, 50);
  }
  h(nk, "capturePaste");
  function oD(r, e) {
    var t = r.state,
      i,
      n = 1,
      s = t.toText(e),
      o = s.lines == t.selection.ranges.length;
    if (ah != null && t.selection.ranges.every((l) => l.empty) && ah == s.toString()) {
      var l = -1;
      i = t.changeByRange((a) => {
        var c = t.doc.lineAt(a.from);
        if (c.from == l) return { range: a };
        l = c.from;
        var f = t.toText((o ? s.line(n++).text : e) + t.lineBreak);
        return { changes: { from: c.from, insert: f }, range: j.cursor(a.from + f.length) };
      });
    } else
      o
        ? (i = t.changeByRange((l) => {
            var a = s.line(n++);
            return { changes: { from: l.from, to: l.to, insert: a.text }, range: j.cursor(l.from + a.length) };
          }))
        : (i = t.replaceSelection(s));
    r.dispatch(i, { userEvent: "input.paste", scrollIntoView: !0 });
  }
  h(oD, "doPaste");
  Le.keydown = (r, e) => {
    r.inputState.setSelectionOrigin("select"), e.keyCode == 27 ? (r.inputState.lastEscPress = Date.now()) : nD.indexOf(e.keyCode) < 0 && (r.inputState.lastEscPress = 0);
  };
  Le.touchstart = (r, e) => {
    (r.inputState.lastTouchTime = Date.now()), r.inputState.setSelectionOrigin("select.pointer");
  };
  Le.touchmove = (r) => {
    r.inputState.setSelectionOrigin("select.pointer");
  };
  lh.touchstart = lh.touchmove = { passive: !0 };
  Le.mousedown = (r, e) => {
    if ((r.observer.flush(), r.inputState.lastTouchTime > Date.now() - 2e3)) return;
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.state.facet(zg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        if (((t = i(r, e)), t)) break;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if ((!t && e.button == 0 && (t = uk(r, e)), t)) {
      var i1 = r.root.activeElement != r.contentDOM;
      r.inputState.startMouseSelection(new qo(r, e, t, i1)), i1 && r.observer.ignore(() => Bg(r.contentDOM)), r.inputState.mouseSelection && r.inputState.mouseSelection.start(e);
    }
  };
  function sg(r, e, t, i) {
    if (i == 1) return j.cursor(e, t);
    if (i == 2) return Uv(r.state, e, t);
    {
      var n = Ve.find(r.docView, e),
        s = r.state.doc.lineAt(n ? n.posAtEnd : e),
        o = n ? n.posAtStart : s.from,
        u = n ? n.posAtEnd : s.to;
      return u < r.state.doc.length && u == s.to && u++, j.range(o, u);
    }
  }
  h(sg, "rangeForClick");
  var uD = h((r, e) => r >= e.top && r <= e.bottom, "insideY"),
    og = h((r, e, t) => uD(e, t) && r >= t.left && r <= t.right, "inside");
  function sk(r, e, t, i) {
    var n = Ve.find(r.docView, e);
    if (!n) return 1;
    var s = e - n.posAtStart;
    if (s == 0) return 1;
    if (s == n.length) return -1;
    var o = n.coordsAt(s, -1);
    if (o && og(t, i, o)) return -1;
    var u = n.coordsAt(s, 1);
    return u && og(t, i, u) ? 1 : o && uD(i, o) ? -1 : 1;
  }
  h(sk, "findPositionSide");
  function ug(r, e) {
    var t = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
    return { pos: t, bias: sk(r, t, e.clientX, e.clientY) };
  }
  h(ug, "queryPos");
  var ok = Y.ie && Y.ie_version <= 11,
    lg = null,
    ag = 0,
    hg = 0;
  function lD(r) {
    if (!ok) return r.detail;
    var e = lg,
      t = hg;
    return (lg = r), (hg = Date.now()), (ag = !e || (t > Date.now() - 400 && Math.abs(e.clientX - r.clientX) < 2 && Math.abs(e.clientY - r.clientY) < 2) ? (ag + 1) % 3 : 1);
  }
  h(lD, "getClickType");
  function uk(r, e) {
    var t = ug(r, e),
      i = lD(e),
      n = r.state.selection;
    return {
      update(s) {
        s.docChanged && ((t.pos = s.changes.mapPos(t.pos)), (n = n.map(s.changes)));
      },
      get(s, o, u) {
        var l = ug(r, s),
          a = sg(r, l.pos, l.bias, i);
        if (t.pos != l.pos && !o) {
          var c = sg(r, t.pos, t.bias, i),
            f = Math.min(c.from, a.from),
            d = Math.max(c.to, a.to);
          a = f < a.from ? j.range(f, d) : j.range(d, f);
        }
        return o ? n.replaceRange(n.main.extend(a.from, a.to)) : u && n.ranges.length > 1 && n.ranges.some((c) => c.eq(a)) ? lk(n, a) : u ? n.addRange(a) : j.create([a]);
      },
    };
  }
  h(uk, "basicMouseSelection");
  function lk(r, e) {
    for (var t = 0; ; t++) if (r.ranges[t].eq(e)) return j.create(r.ranges.slice(0, t).concat(r.ranges.slice(t + 1)), r.mainIndex == t ? 0 : r.mainIndex - (r.mainIndex > t ? 1 : 0));
  }
  h(lk, "removeRange");
  Le.dragstart = (r, e) => {
    var _r_state = r.state,
      _r_state_selection = _r_state.selection,
      t = _r_state_selection.main,
      _r_inputState = r.inputState,
      i = _r_inputState.mouseSelection;
    i && (i.dragging = t), e.dataTransfer && (e.dataTransfer.setData("Text", r.state.sliceDoc(t.from, t.to)), (e.dataTransfer.effectAllowed = "copyMove"));
  };
  function cg(r, e, t, i) {
    if (!t) return;
    var n = r.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
    e.preventDefault();
    var _r_inputState = r.inputState,
      s = _r_inputState.mouseSelection,
      o = i && s && s.dragging && s.dragMove ? { from: s.dragging.from, to: s.dragging.to } : null,
      u = { from: n, insert: t },
      l = r.state.changes(o ? [o, u] : u);
    r.focus(), r.dispatch({ changes: l, selection: { anchor: l.mapPos(n, -1), head: l.mapPos(n, 1) }, userEvent: o ? "move.drop" : "input.drop" });
  }
  h(cg, "dropText");
  Le.drop = (r, e) => {
    if (!e.dataTransfer) return;
    if (r.state.readOnly) return e.preventDefault();
    var t = e.dataTransfer.files;
    if (t && t.length) {
      var _loop = function (o) {
        var u = new FileReader();
        (u.onerror = s),
          (u.onload = () => {
            /[\x00-\x08\x0e-\x1f]{2}/.test(u.result) || (i[o] = u.result), s();
          }),
          u.readAsText(t[o]);
      };
      e.preventDefault();
      var i = Array(t.length),
        n = 0,
        s = h(() => {
          ++n == t.length && cg(r, e, i.filter((o) => o != null).join(r.state.lineBreak), !1);
        }, "finishFile");
      for (var o = 0; o < t.length; o++) _loop(o);
    } else cg(r, e, e.dataTransfer.getData("Text"), !0);
  };
  Le.paste = (r, e) => {
    if (r.state.readOnly) return e.preventDefault();
    r.observer.flush();
    var t = sD ? null : e.clipboardData;
    t ? (oD(r, t.getData("text/plain") || t.getData("text/uri-text")), e.preventDefault()) : nk(r);
  };
  function ak(r, e) {
    var t = r.dom.parentNode;
    if (!t) return;
    var i = t.appendChild(document.createElement("textarea"));
    (i.style.cssText = "position: fixed; left: -10000px; top: 10px"),
      (i.value = e),
      i.focus(),
      (i.selectionEnd = e.length),
      (i.selectionStart = 0),
      setTimeout(() => {
        i.remove(), r.focus();
      }, 50);
  }
  h(ak, "captureCopy");
  function hk(r) {
    var e = [],
      t = [],
      i = !1;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var n = _step.value;
        n.empty || (e.push(r.sliceDoc(n.from, n.to)), t.push(n));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!e.length) {
      var n1 = -1;
      var _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        for (var _iterator1 = r.selection.ranges[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
          var _step_value = _step1.value,
            s = _step_value.from;
          var o = r.doc.lineAt(s);
          o.number > n1 && (e.push(o.text), t.push({ from: o.from, to: Math.min(r.doc.length, o.to + 1) })), (n1 = o.number);
        }
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
            _iterator1.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
      i = !0;
    }
    return { text: e.join(r.lineBreak), ranges: t, linewise: i };
  }
  h(hk, "copiedRange");
  var ah = null;
  Le.copy = Le.cut = (r, e) => {
    var _hk = hk(r.state),
      t = _hk.text,
      i = _hk.ranges,
      n = _hk.linewise;
    if (!t && !n) return;
    ah = n ? t : null;
    var s = sD ? null : e.clipboardData;
    s ? (e.preventDefault(), s.clearData(), s.setData("text/plain", t)) : ak(r, t), e.type == "cut" && !r.state.readOnly && r.dispatch({ changes: i, scrollIntoView: !0, userEvent: "delete.cut" });
  };
  var aD = ut.define();
  function hD(r, e) {
    var t = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.facet(Hg)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i(r, e);
        n && t.push(n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t ? r.update({ effects: t, annotations: aD.of(!0) }) : null;
  }
  h(hD, "focusChangeTransaction");
  function cD(r) {
    setTimeout(() => {
      var e = r.hasFocus;
      if (e != r.inputState.notifiedFocused) {
        var t = hD(r.state, e);
        t ? r.dispatch(t) : r.update([]);
      }
    }, 10);
  }
  h(cD, "updateForFocusChange");
  Le.focus = (r) => {
    (r.inputState.lastFocusTime = Date.now()), !r.scrollDOM.scrollTop && (r.inputState.lastScrollTop || r.inputState.lastScrollLeft) && ((r.scrollDOM.scrollTop = r.inputState.lastScrollTop), (r.scrollDOM.scrollLeft = r.inputState.lastScrollLeft)), cD(r);
  };
  Le.blur = (r) => {
    r.observer.clearSelectionRange(), cD(r);
  };
  Le.compositionstart = Le.compositionupdate = (r) => {
    r.inputState.compositionFirstChange == null && (r.inputState.compositionFirstChange = !0), r.inputState.composing < 0 && (r.inputState.composing = 0);
  };
  Le.compositionend = (r) => {
    (r.inputState.composing = -1),
      (r.inputState.compositionEndedAt = Date.now()),
      (r.inputState.compositionFirstChange = null),
      Y.chrome && Y.android && r.observer.flushSoon(),
      setTimeout(() => {
        r.inputState.composing < 0 && r.docView.compositionDeco.size && r.update([]);
      }, 50);
  };
  Le.contextmenu = (r) => {
    r.inputState.lastContextMenu = Date.now();
  };
  Le.beforeinput = (r, e) => {
    var t;
    var i;
    if (Y.chrome && Y.android && (i = rD.find((n) => n.inputType == e.inputType)) && (r.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
      var n = ((t = window.visualViewport) === null || t === void 0 ? void 0 : t.height) || 0;
      setTimeout(() => {
        var s;
        (((s = window.visualViewport) === null || s === void 0 ? void 0 : s.height) || 0) > n + 10 && r.hasFocus && (r.contentDOM.blur(), r.focus());
      }, 100);
    }
  };
  var fg = ["pre-wrap", "normal", "pre-line", "break-spaces"],
    Io = class Io {
      heightForGap(e, t) {
        var i = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
        return this.lineWrapping && (i += Math.max(0, Math.ceil((t - e - i * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * i;
      }
      heightForLine(e) {
        return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
      }
      setDoc(e) {
        return (this.doc = e), this;
      }
      mustRefreshForWrapping(e) {
        return fg.indexOf(e) > -1 != this.lineWrapping;
      }
      mustRefreshForHeights(e) {
        var t = !1;
        for (var i = 0; i < e.length; i++) {
          var n = e[i];
          n < 0 ? i++ : this.heightSamples[Math.floor(n * 10)] || ((t = !0), (this.heightSamples[Math.floor(n * 10)] = !0));
        }
        return t;
      }
      refresh(e, t, i, n, s) {
        var o = fg.indexOf(e) > -1,
          u = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != o;
        if (((this.lineWrapping = o), (this.lineHeight = t), (this.charWidth = i), (this.lineLength = n), u)) {
          this.heightSamples = {};
          for (var l = 0; l < s.length; l++) {
            var a = s[l];
            a < 0 ? l++ : (this.heightSamples[Math.floor(a * 10)] = !0);
          }
        }
        return u;
      }
      constructor(e) {
        (this.lineWrapping = e), (this.doc = ce.empty), (this.heightSamples = {}), (this.lineHeight = 14), (this.charWidth = 7), (this.lineLength = 30), (this.heightChanged = !1);
      }
    };
  h(Io, "HeightOracle");
  var No = class No {
    get more() {
      return this.index < this.heights.length;
    }
    constructor(e, t) {
      (this.from = e), (this.heights = t), (this.index = 0);
    }
  };
  h(No, "MeasuredHeights");
  var bt = class bt1 {
    get to() {
      return this.from + this.length;
    }
    get bottom() {
      return this.top + this.height;
    }
    join(e) {
      var t = (Array.isArray(this.type) ? this.type : [this]).concat(Array.isArray(e.type) ? e.type : [e]);
      return new bt(this.from, this.length + e.length, this.top, this.height + e.height, t);
    }
    constructor(e, t, i, n, s) {
      (this.from = e), (this.length = t), (this.top = i), (this.height = n), (this.type = s);
    }
  };
  h(bt, "BlockInfo");
  var Ee = (function (r) {
      return (r[(r.ByPos = 0)] = "ByPos"), (r[(r.ByHeight = 1)] = "ByHeight"), (r[(r.ByPosNoHeight = 2)] = "ByPosNoHeight"), r;
    })(Ee || (Ee = {})),
    Vo = 0.001,
    We = class We1 {
      get outdated() {
        return (this.flags & 2) > 0;
      }
      set outdated(e) {
        this.flags = (e ? 2 : 0) | (this.flags & -3);
      }
      setHeight(e, t) {
        this.height != t && (Math.abs(this.height - t) > Vo && (e.heightChanged = !0), (this.height = t));
      }
      replace(e, t, i) {
        return We.of(i);
      }
      decomposeLeft(e, t) {
        t.push(this);
      }
      decomposeRight(e, t) {
        t.push(this);
      }
      applyChanges(e, t, i, n) {
        var s = this,
          o = i.doc;
        for (var u = n.length - 1; u >= 0; u--) {
          var _n_u = n[u],
            l = _n_u.fromA,
            a = _n_u.toA,
            c = _n_u.fromB,
            f = _n_u.toB,
            d = s.lineAt(l, Ee.ByPosNoHeight, i.setDoc(t), 0, 0),
            p = d.to >= a ? d : s.lineAt(a, Ee.ByPosNoHeight, i, 0, 0);
          for (f += p.to - a, a = p.to; u > 0 && d.from <= n[u - 1].toA; ) (l = n[u - 1].fromA), (c = n[u - 1].fromB), u--, l < d.from && (d = s.lineAt(l, Ee.ByPosNoHeight, i, 0, 0));
          (c += d.from - l), (l = d.from);
          var m = qr.build(i.setDoc(o), e, c, f);
          s = s.replace(l, a, m);
        }
        return s.updateHeight(i, 0);
      }
      static empty() {
        return new Ue(0, 0);
      }
      static of(e) {
        if (e.length == 1) return e[0];
        var t = 0,
          i = e.length,
          n = 0,
          s = 0;
        for (;;)
          if (t == i)
            if (n > s * 2) {
              var u = e[t - 1];
              u.break ? e.splice(--t, 1, u.left, null, u.right) : e.splice(--t, 1, u.left, u.right), (i += 1 + u.break), (n -= u.size);
            } else if (s > n * 2) {
              var u1 = e[i];
              u1.break ? e.splice(i, 1, u1.left, null, u1.right) : e.splice(i, 1, u1.left, u1.right), (i += 2 + u1.break), (s -= u1.size);
            } else break;
          else if (n < s) {
            var u2 = e[t++];
            u2 && (n += u2.size);
          } else {
            var u3 = e[--i];
            u3 && (s += u3.size);
          }
        var o = 0;
        return e[t - 1] == null ? ((o = 1), t--) : e[t] == null && ((o = 1), i++), new zo(We.of(e.slice(0, t)), o, We.of(e.slice(i)));
      }
      constructor(e, t, ref) {
        var i = ref === void 0 ? 2 : ref;
        (this.length = e), (this.height = t), (this.flags = i);
      }
    };
  h(We, "HeightMap");
  We.prototype.size = 1;
  var jn = class jn extends We {
    blockAt(e, t, i, n) {
      return new bt(n, this.length, i, this.height, this.type);
    }
    lineAt(e, t, i, n, s) {
      return this.blockAt(0, i, n, s);
    }
    forEachLine(e, t, i, n, s, o) {
      e <= s + this.length && t >= s && o(this.blockAt(0, i, n, s));
    }
    updateHeight(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
        n = arguments.length > 3 ? arguments[3] : void 0;
      return n && n.from <= t && n.more && this.setHeight(e, n.heights[n.index++]), (this.outdated = !1), this;
    }
    toString() {
      return "block(".concat(this.length, ")");
    }
    constructor(e, t, i) {
      super(e, t), (this.type = i);
    }
  };
  h(jn, "HeightMapBlock");
  var Ue = class Ue1 extends jn {
    replace(e, t, i) {
      var n = i[0];
      return i.length == 1 && (n instanceof Ue || (n instanceof Re && n.flags & 4)) && Math.abs(this.length - n.length) < 10 ? (n instanceof Re ? (n = new Ue(n.length, this.height)) : (n.height = this.height), this.outdated || (n.outdated = !1), n) : We.of(i);
    }
    updateHeight(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
        n = arguments.length > 3 ? arguments[3] : void 0;
      return n && n.from <= t && n.more ? this.setHeight(e, n.heights[n.index++]) : (i || this.outdated) && this.setHeight(e, Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed))), (this.outdated = !1), this;
    }
    toString() {
      return "line("
        .concat(this.length)
        .concat(this.collapsed ? -this.collapsed : "")
        .concat(this.widgetHeight ? ":" + this.widgetHeight : "", ")");
    }
    constructor(e, t) {
      super(e, t, Fe.Text), (this.collapsed = 0), (this.widgetHeight = 0);
    }
  };
  h(Ue, "HeightMapText");
  var Re = class Re1 extends We {
    heightMetrics(e, t) {
      var i = e.doc.lineAt(t).number,
        n = e.doc.lineAt(t + this.length).number,
        s = n - i + 1,
        o,
        u = 0;
      if (e.lineWrapping) {
        var l = Math.min(this.height, e.lineHeight * s);
        (o = l / s), (u = (this.height - l) / (this.length - s - 1));
      } else o = this.height / s;
      return { firstLine: i, lastLine: n, perLine: o, perChar: u };
    }
    blockAt(e, t, i, n) {
      var _this_heightMetrics = this.heightMetrics(t, n),
        s = _this_heightMetrics.firstLine,
        o = _this_heightMetrics.lastLine,
        u = _this_heightMetrics.perLine,
        l = _this_heightMetrics.perChar;
      if (t.lineWrapping) {
        var a = n + Math.round(Math.max(0, Math.min(1, (e - i) / this.height)) * this.length),
          c = t.doc.lineAt(a),
          f = u + c.length * l,
          d = Math.max(i, e - f / 2);
        return new bt(c.from, c.length, d, f, Fe.Text);
      } else {
        var a1 = Math.max(0, Math.min(o - s, Math.floor((e - i) / u))),
          _t_doc_line = t.doc.line(s + a1),
          c1 = _t_doc_line.from,
          f1 = _t_doc_line.length;
        return new bt(c1, f1, i + u * a1, u, Fe.Text);
      }
    }
    lineAt(e, t, i, n, s) {
      if (t == Ee.ByHeight) return this.blockAt(e, i, n, s);
      if (t == Ee.ByPosNoHeight) {
        var _i_doc_lineAt = i.doc.lineAt(e),
          p = _i_doc_lineAt.from,
          m = _i_doc_lineAt.to;
        return new bt(p, m - p, 0, 0, Fe.Text);
      }
      var _this_heightMetrics = this.heightMetrics(i, s),
        o = _this_heightMetrics.firstLine,
        u = _this_heightMetrics.perLine,
        l = _this_heightMetrics.perChar,
        a = i.doc.lineAt(e),
        c = u + a.length * l,
        f = a.number - o,
        d = n + u * f + l * (a.from - s - f);
      return new bt(a.from, a.length, Math.max(n, Math.min(d, n + this.height - c)), c, Fe.Text);
    }
    forEachLine(e, t, i, n, s, o) {
      (e = Math.max(e, s)), (t = Math.min(t, s + this.length));
      var _this_heightMetrics = this.heightMetrics(i, s),
        u = _this_heightMetrics.firstLine,
        l = _this_heightMetrics.perLine,
        a = _this_heightMetrics.perChar;
      for (var c = e, f = n; c <= t; ) {
        var d = i.doc.lineAt(c);
        if (c == e) {
          var m = d.number - u;
          f += l * m + a * (e - s - m);
        }
        var p = l + a * d.length;
        o(new bt(d.from, d.length, f, p, Fe.Text)), (f += p), (c = d.to + 1);
      }
    }
    replace(e, t, i) {
      var n = this.length - t;
      if (n > 0) {
        var s = i[i.length - 1];
        s instanceof Re ? (i[i.length - 1] = new Re(s.length + n)) : i.push(null, new Re(n - 1));
      }
      if (e > 0) {
        var s1 = i[0];
        s1 instanceof Re ? (i[0] = new Re(e + s1.length)) : i.unshift(new Re(e - 1), null);
      }
      return We.of(i);
    }
    decomposeLeft(e, t) {
      t.push(new Re(e - 1), null);
    }
    decomposeRight(e, t) {
      t.push(null, new Re(this.length - e - 1));
    }
    updateHeight(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
        n = arguments.length > 3 ? arguments[3] : void 0;
      var s = t + this.length;
      if (n && n.from <= t + this.length && n.more) {
        var o = [],
          u = Math.max(t, n.from),
          l = -1;
        for (n.from > t && o.push(new Re(n.from - t - 1).updateHeight(e, t)); u <= s && n.more; ) {
          var c = e.doc.lineAt(u).length;
          o.length && o.push(null);
          var f = n.heights[n.index++];
          l == -1 ? (l = f) : Math.abs(f - l) >= Vo && (l = -2);
          var d = new Ue(c, f);
          (d.outdated = !1), o.push(d), (u += c + 1);
        }
        u <= s && o.push(null, new Re(s - u).updateHeight(e, u));
        var a = We.of(o);
        return (l < 0 || Math.abs(a.height - this.height) >= Vo || Math.abs(l - this.heightMetrics(e, t).perLine) >= Vo) && (e.heightChanged = !0), a;
      } else (i || this.outdated) && (this.setHeight(e, e.heightForGap(t, t + this.length)), (this.outdated = !1));
      return this;
    }
    toString() {
      return "gap(".concat(this.length, ")");
    }
    constructor(e) {
      super(e, 0);
    }
  };
  h(Re, "HeightMapGap");
  var zo = class zo extends We {
    get break() {
      return this.flags & 1;
    }
    blockAt(e, t, i, n) {
      var s = i + this.left.height;
      return e < s ? this.left.blockAt(e, t, i, n) : this.right.blockAt(e, t, s, n + this.left.length + this.break);
    }
    lineAt(e, t, i, n, s) {
      var o = n + this.left.height,
        u = s + this.left.length + this.break,
        l = t == Ee.ByHeight ? e < o : e < u,
        a = l ? this.left.lineAt(e, t, i, n, s) : this.right.lineAt(e, t, i, o, u);
      if (this.break || (l ? a.to < u : a.from > u)) return a;
      var c = t == Ee.ByPosNoHeight ? Ee.ByPosNoHeight : Ee.ByPos;
      return l ? a.join(this.right.lineAt(u, c, i, o, u)) : this.left.lineAt(u, c, i, n, s).join(a);
    }
    forEachLine(e, t, i, n, s, o) {
      var u = n + this.left.height,
        l = s + this.left.length + this.break;
      if (this.break) e < l && this.left.forEachLine(e, t, i, n, s, o), t >= l && this.right.forEachLine(e, t, i, u, l, o);
      else {
        var a = this.lineAt(l, Ee.ByPos, i, n, s);
        e < a.from && this.left.forEachLine(e, a.from - 1, i, n, s, o), a.to >= e && a.from <= t && o(a), t > a.to && this.right.forEachLine(a.to + 1, t, i, u, l, o);
      }
    }
    replace(e, t, i) {
      var n = this.left.length + this.break;
      if (t < n) return this.balanced(this.left.replace(e, t, i), this.right);
      if (e > this.left.length) return this.balanced(this.left, this.right.replace(e - n, t - n, i));
      var s = [];
      e > 0 && this.decomposeLeft(e, s);
      var o = s.length;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var u = _step.value;
          s.push(u);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if ((e > 0 && dg(s, o - 1), t < this.length)) {
        var u1 = s.length;
        this.decomposeRight(t, s), dg(s, u1);
      }
      return We.of(s);
    }
    decomposeLeft(e, t) {
      var i = this.left.length;
      if (e <= i) return this.left.decomposeLeft(e, t);
      t.push(this.left), this.break && (i++, e >= i && t.push(null)), e > i && this.right.decomposeLeft(e - i, t);
    }
    decomposeRight(e, t) {
      var i = this.left.length,
        n = i + this.break;
      if (e >= n) return this.right.decomposeRight(e - n, t);
      e < i && this.left.decomposeRight(e, t), this.break && e < n && t.push(null), t.push(this.right);
    }
    balanced(e, t) {
      return e.size > 2 * t.size || t.size > 2 * e.size ? We.of(this.break ? [e, null, t] : [e, t]) : ((this.left = e), (this.right = t), (this.height = e.height + t.height), (this.outdated = e.outdated || t.outdated), (this.size = e.size + t.size), (this.length = e.length + this.break + t.length), this);
    }
    updateHeight(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1,
        n = arguments.length > 3 ? arguments[3] : void 0;
      var _this = this,
        s = _this.left,
        o = _this.right,
        u = t + s.length + this.break,
        l = null;
      return n && n.from <= t + s.length && n.more ? (l = s = s.updateHeight(e, t, i, n)) : s.updateHeight(e, t, i), n && n.from <= u + o.length && n.more ? (l = o = o.updateHeight(e, u, i, n)) : o.updateHeight(e, u, i), l ? this.balanced(s, o) : ((this.height = this.left.height + this.right.height), (this.outdated = !1), this);
    }
    toString() {
      return this.left + (this.break ? " " : "-") + this.right;
    }
    constructor(e, t, i) {
      super(e.length + t + i.length, e.height + i.height, t | (e.outdated || i.outdated ? 2 : 0)), (this.left = e), (this.right = i), (this.size = e.size + i.size);
    }
  };
  h(zo, "HeightMapBranch");
  function dg(r, e) {
    var t, i;
    r[e] == null && (t = r[e - 1]) instanceof Re && (i = r[e + 1]) instanceof Re && r.splice(e - 1, 3, new Re(t.length + 1 + i.length));
  }
  h(dg, "mergeGaps");
  var ck = 5,
    qr = class qr1 {
      get isCovered() {
        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
      }
      span(e, t) {
        if (this.lineStart > -1) {
          var i = Math.min(t, this.lineEnd),
            n = this.nodes[this.nodes.length - 1];
          n instanceof Ue ? (n.length += i - this.pos) : (i > this.pos || !this.isCovered) && this.nodes.push(new Ue(i - this.pos, -1)), (this.writtenTo = i), t > i && (this.nodes.push(null), this.writtenTo++, (this.lineStart = -1));
        }
        this.pos = t;
      }
      point(e, t, i) {
        if (e < t || i.heightRelevant) {
          var n = i.widget ? i.widget.estimatedHeight : 0;
          n < 0 && (n = this.oracle.lineHeight);
          var s = t - e;
          i.block ? this.addBlock(new jn(s, n, i.type)) : (s || n >= ck) && this.addLineDeco(n, s);
        } else t > e && this.span(e, t);
        this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
      }
      enterLine() {
        if (this.lineStart > -1) return;
        var _this_oracle_doc_lineAt = this.oracle.doc.lineAt(this.pos),
          e = _this_oracle_doc_lineAt.from,
          t = _this_oracle_doc_lineAt.to;
        (this.lineStart = e), (this.lineEnd = t), this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new Ue(this.pos - e, -1)), (this.writtenTo = this.pos);
      }
      blankContent(e, t) {
        var i = new Re(t - e);
        return this.oracle.doc.lineAt(e).to == t && (i.flags |= 4), i;
      }
      ensureLine() {
        this.enterLine();
        var e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
        if (e instanceof Ue) return e;
        var t = new Ue(0, -1);
        return this.nodes.push(t), t;
      }
      addBlock(e) {
        this.enterLine(), e.type == Fe.WidgetAfter && !this.isCovered && this.ensureLine(), this.nodes.push(e), (this.writtenTo = this.pos = this.pos + e.length), e.type != Fe.WidgetBefore && (this.covering = e);
      }
      addLineDeco(e, t) {
        var i = this.ensureLine();
        (i.length += t), (i.collapsed += t), (i.widgetHeight = Math.max(i.widgetHeight, e)), (this.writtenTo = this.pos = this.pos + t);
      }
      finish(e) {
        var t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
        this.lineStart > -1 && !(t instanceof Ue) && !this.isCovered ? this.nodes.push(new Ue(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
        var i = e;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            n instanceof Ue && n.updateHeight(this.oracle, i), (i += n ? n.length : 1);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return this.nodes;
      }
      static build(e, t, i, n) {
        var s = new qr(i, e);
        return pe.spans(t, i, n, s, 0), s.finish(i);
      }
      constructor(e, t) {
        (this.pos = e), (this.oracle = t), (this.nodes = []), (this.lineStart = -1), (this.lineEnd = -1), (this.covering = null), (this.writtenTo = e);
      }
    };
  h(qr, "NodeBuilder");
  function fk(r, e, t) {
    var i = new Wo();
    return pe.compare(r, e, t, i, 0), i.changes;
  }
  h(fk, "heightRelevantDecoChanges");
  var Wo = class Wo {
    compareRange() {}
    comparePoint(e, t, i, n) {
      (e < t || (i && i.heightRelevant) || (n && n.heightRelevant)) && rh(e, t, this.changes, 5);
    }
    constructor() {
      this.changes = [];
    }
  };
  h(Wo, "DecorationComparator");
  function dk(r, e) {
    var t = r.getBoundingClientRect(),
      i = r.ownerDocument,
      n = i.defaultView || window,
      s = Math.max(0, t.left),
      o = Math.min(n.innerWidth, t.right),
      u = Math.max(0, t.top),
      l = Math.min(n.innerHeight, t.bottom);
    for (var a = r.parentNode; a && a != i.body; )
      if (a.nodeType == 1) {
        var c = a,
          f = window.getComputedStyle(c);
        if ((c.scrollHeight > c.clientHeight || c.scrollWidth > c.clientWidth) && f.overflow != "visible") {
          var d = c.getBoundingClientRect();
          (s = Math.max(s, d.left)), (o = Math.min(o, d.right)), (u = Math.max(u, d.top)), (l = a == r.parentNode ? d.bottom : Math.min(l, d.bottom));
        }
        a = f.position == "absolute" || f.position == "fixed" ? c.offsetParent : c.parentNode;
      } else if (a.nodeType == 11) a = a.host;
      else break;
    return { left: s - t.left, right: Math.max(s, o) - t.left, top: u - (t.top + e), bottom: Math.max(u, l) - (t.top + e) };
  }
  h(dk, "visiblePixelRange");
  function pk(r, e) {
    var t = r.getBoundingClientRect();
    return { left: 0, right: t.right - t.left, top: e, bottom: t.bottom - (t.top + e) };
  }
  h(pk, "fullPixelRange");
  var Ir = class Ir {
    static same(e, t) {
      if (e.length != t.length) return !1;
      for (var i = 0; i < e.length; i++) {
        var n = e[i],
          s = t[i];
        if (n.from != s.from || n.to != s.to || n.size != s.size) return !1;
      }
      return !0;
    }
    draw(e) {
      return he.replace({ widget: new jo(this.size, e) }).range(this.from, this.to);
    }
    constructor(e, t, i) {
      (this.from = e), (this.to = t), (this.size = i);
    }
  };
  h(Ir, "LineGap");
  var jo = class jo extends Ht {
    eq(e) {
      return e.size == this.size && e.vertical == this.vertical;
    }
    toDOM() {
      var e = document.createElement("div");
      return this.vertical ? (e.style.height = this.size + "px") : ((e.style.width = this.size + "px"), (e.style.height = "2px"), (e.style.display = "inline-block")), e;
    }
    get estimatedHeight() {
      return this.vertical ? this.size : -1;
    }
    constructor(e, t) {
      super(), (this.size = e), (this.vertical = t);
    }
  };
  h(jo, "LineGapWidget");
  var Hn = class Hn {
    updateForViewport() {
      var _this = this,
        _loop = function (i) {
          var n = i ? t.head : t.anchor;
          if (
            !e.some((param) => {
              var s = param.from,
                o = param.to;
              return n >= s && n <= o;
            })
          ) {
            var _this_lineBlockAt = _this.lineBlockAt(n),
              s = _this_lineBlockAt.from,
              o = _this_lineBlockAt.to;
            e.push(new Ki(s, o));
          }
        };
      var e = [this.viewport],
        _this_state_selection = this.state.selection,
        t = _this_state_selection.main;
      for (var i = 0; i <= 1; i++) _loop(i);
      (this.viewports = e.sort((i, n) => i.from - n.from)), (this.scaler = this.heightMap.height <= 7e6 ? pg : new Ho(this.heightOracle, this.heightMap, this.viewports));
    }
    updateViewportLines() {
      (this.viewportLines = []),
        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
          this.viewportLines.push(this.scaler.scale == 1 ? e : Mn(e, this.scaler));
        });
    }
    update(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
      this.state = e.state;
      var i = this.stateDeco;
      this.stateDeco = this.state.facet(Qn).filter((a) => typeof a != "function");
      var n = e.changedRanges,
        s = ct.extendWithRanges(n, fk(i, this.stateDeco, e ? e.changes : we.empty(this.state.doc.length))),
        o = this.heightMap.height;
      (this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), s)), this.heightMap.height != o && (e.flags |= 2);
      var u = s.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
      ((t && (t.range.head < u.from || t.range.head > u.to)) || !this.viewportIsAppropriate(u)) && (u = this.getViewport(0, t));
      var l = !e.changes.empty || e.flags & 2 || u.from != this.viewport.from || u.to != this.viewport.to;
      (this.viewport = u),
        this.updateForViewport(),
        l && this.updateViewportLines(),
        (this.lineGaps.length || this.viewport.to - this.viewport.from > 2e3 << 1) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))),
        (e.flags |= this.computeVisibleRanges()),
        t && (this.scrollTarget = t),
        !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(Yg) && (this.mustEnforceCursorAssoc = !0);
    }
    measure(e) {
      var t = e.contentDOM,
        i = window.getComputedStyle(t),
        n = this.heightOracle,
        s = i.whiteSpace;
      this.defaultTextDirection = i.direction == "rtl" ? Oe.RTL : Oe.LTR;
      var o = this.heightOracle.mustRefreshForWrapping(s),
        u = t.getBoundingClientRect(),
        l = o || this.mustMeasureContent || this.contentDOMHeight != u.height;
      (this.contentDOMHeight = u.height), (this.mustMeasureContent = !1);
      var a = 0,
        c = 0,
        f = parseInt(i.paddingTop) || 0,
        d = parseInt(i.paddingBottom) || 0;
      (this.paddingTop != f || this.paddingBottom != d) && ((this.paddingTop = f), (this.paddingBottom = d), (a |= 10)), this.editorWidth != e.scrollDOM.clientWidth && (n.lineWrapping && (l = !0), (this.editorWidth = e.scrollDOM.clientWidth), (a |= 8));
      var p = (this.printing ? pk : dk)(t, this.paddingTop),
        m = p.top - this.pixelViewport.top,
        D = p.bottom - this.pixelViewport.bottom;
      this.pixelViewport = p;
      var g = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
      if ((g != this.inView && ((this.inView = g), g && (l = !0)), !this.inView && !this.scrollTarget)) return 0;
      var b = u.width;
      if (((this.contentDOMWidth != b || this.editorHeight != e.scrollDOM.clientHeight) && ((this.contentDOMWidth = u.width), (this.editorHeight = e.scrollDOM.clientHeight), (a |= 8)), l)) {
        var E = e.docView.measureVisibleLineHeights(this.viewport);
        if ((n.mustRefreshForHeights(E) && (o = !0), o || (n.lineWrapping && Math.abs(b - this.contentDOMWidth) > n.charWidth))) {
          var _e_docView_measureTextSize = e.docView.measureTextSize(),
            A = _e_docView_measureTextSize.lineHeight,
            _ = _e_docView_measureTextSize.charWidth;
          (o = A > 0 && n.refresh(s, A, _, b / _, E)), o && ((e.docView.minWidth = 0), (a |= 8));
        }
        m > 0 && D > 0 ? (c = Math.max(m, D)) : m < 0 && D < 0 && (c = Math.min(m, D)), (n.heightChanged = !1);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var A1 = _step.value;
            var _1 = A1.from == this.viewport.from ? E : e.docView.measureVisibleLineHeights(A1);
            this.heightMap = (o ? We.empty().applyChanges(this.stateDeco, ce.empty, this.heightOracle, [new ct(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(n, 0, o, new No(A1.from, _1));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        n.heightChanged && (a |= 2);
      }
      var F = !this.viewportIsAppropriate(this.viewport, c) || (this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to));
      return (
        F && (this.viewport = this.getViewport(c, this.scrollTarget)),
        this.updateForViewport(),
        (a & 2 || F) && this.updateViewportLines(),
        (this.lineGaps.length || this.viewport.to - this.viewport.from > 2e3 << 1) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)),
        (a |= this.computeVisibleRanges()),
        this.mustEnforceCursorAssoc && ((this.mustEnforceCursorAssoc = !1), e.docView.enforceCursorAssoc()),
        a
      );
    }
    get visibleTop() {
      return this.scaler.fromDOM(this.pixelViewport.top);
    }
    get visibleBottom() {
      return this.scaler.fromDOM(this.pixelViewport.bottom);
    }
    getViewport(e, t) {
      var i = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)),
        n = this.heightMap,
        s = this.heightOracle,
        _this = this,
        o = _this.visibleTop,
        u = _this.visibleBottom,
        l = new Ki(n.lineAt(o - i * 1e3, Ee.ByHeight, s, 0, 0).from, n.lineAt(u + (1 - i) * 1e3, Ee.ByHeight, s, 0, 0).to);
      if (t) {
        var _t_range = t.range,
          a = _t_range.head;
        if (a < l.from || a > l.to) {
          var c = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top),
            f = n.lineAt(a, Ee.ByPos, s, 0, 0),
            d;
          t.y == "center" ? (d = (f.top + f.bottom) / 2 - c / 2) : t.y == "start" || (t.y == "nearest" && a < l.from) ? (d = f.top) : (d = f.bottom - c), (l = new Ki(n.lineAt(d - 1e3 / 2, Ee.ByHeight, s, 0, 0).from, n.lineAt(d + c + 1e3 / 2, Ee.ByHeight, s, 0, 0).to));
        }
      }
      return l;
    }
    mapViewport(e, t) {
      var i = t.mapPos(e.from, -1),
        n = t.mapPos(e.to, 1);
      return new Ki(this.heightMap.lineAt(i, Ee.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(n, Ee.ByPos, this.heightOracle, 0, 0).to);
    }
    viewportIsAppropriate(param) {
      var e = param.from,
        t = param.to,
        i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      if (!this.inView) return !0;
      var _this_heightMap_lineAt = this.heightMap.lineAt(e, Ee.ByPos, this.heightOracle, 0, 0),
        n = _this_heightMap_lineAt.top,
        _this_heightMap_lineAt1 = this.heightMap.lineAt(t, Ee.ByPos, this.heightOracle, 0, 0),
        s = _this_heightMap_lineAt1.bottom,
        _this = this,
        o = _this.visibleTop,
        u = _this.visibleBottom;
      return (e == 0 || n <= o - Math.max(10, Math.min(-i, 250))) && (t == this.state.doc.length || s >= u + Math.max(10, Math.min(i, 250))) && n > o - 2 * 1e3 && s < u + 2 * 1e3;
    }
    mapLineGaps(e, t) {
      if (!e.length || t.empty) return e;
      var i = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          t.touchesRange(n.from, n.to) || i.push(new Ir(t.mapPos(n.from), t.mapPos(n.to), n.size));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i;
    }
    ensureLineGaps(e, t) {
      var i = this.heightOracle.lineWrapping,
        n = i ? 1e4 : 2e3,
        s = n >> 1,
        o = n << 1;
      if (this.defaultTextDirection != Oe.LTR && !i) return [];
      var u = [],
        l = h((a, c, f, d) => {
          if (c - a < s) return;
          var p = this.state.selection.main,
            m = [p.from];
          p.empty || m.push(p.to);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = m[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var g = _step.value;
              if (g > a && g < c) {
                l(a, g - 10, f, d), l(g + 10, c, f, d);
                return;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var D = gk(e, (g) => g.from >= f.from && g.to <= f.to && Math.abs(g.from - a) < s && Math.abs(g.to - c) < s && !m.some((b) => g.from < b && g.to > b));
          if (!D) {
            if (c < f.to && t && i && t.visibleRanges.some((g) => g.from <= c && g.to >= c)) {
              var g1 = t.moveToLineBoundary(j.cursor(c), !1, !0).head;
              g1 > a && (c = g1);
            }
            D = new Ir(a, c, this.gapSize(f, a, c, d));
          }
          u.push(D);
        }, "addGap");
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.viewportLines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var a = _step.value;
          if (a.length < o) continue;
          var c = mk(a.from, a.to, this.stateDeco);
          if (c.total < o) continue;
          var f = this.scrollTarget ? this.scrollTarget.range.head : null,
            d = void 0,
            p = void 0;
          if (i) {
            var m = (n / this.heightOracle.lineLength) * this.heightOracle.lineHeight,
              D = void 0,
              g = void 0;
            if (f != null) {
              var b = Bo(c, f),
                F = ((this.visibleBottom - this.visibleTop) / 2 + m) / a.height;
              (D = b - F), (g = b + F);
            } else (D = (this.visibleTop - a.top - m) / a.height), (g = (this.visibleBottom - a.top + m) / a.height);
            (d = So(c, D)), (p = So(c, g));
          } else {
            var m1 = c.total * this.heightOracle.charWidth,
              D1 = n * this.heightOracle.charWidth,
              g1 = void 0,
              b1 = void 0;
            if (f != null) {
              var F1 = Bo(c, f),
                E = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + D1) / m1;
              (g1 = F1 - E), (b1 = F1 + E);
            } else (g1 = (this.pixelViewport.left - D1) / m1), (b1 = (this.pixelViewport.right + D1) / m1);
            (d = So(c, g1)), (p = So(c, b1));
          }
          d > a.from && l(a.from, d, a, c), p < a.to && l(p, a.to, a, c);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return u;
    }
    gapSize(e, t, i, n) {
      var s = Bo(n, i) - Bo(n, t);
      return this.heightOracle.lineWrapping ? e.height * s : n.total * this.heightOracle.charWidth * s;
    }
    updateLineGaps(e) {
      Ir.same(e, this.lineGaps) || ((this.lineGaps = e), (this.lineGapDeco = he.set(e.map((t) => t.draw(this.heightOracle.lineWrapping)))));
    }
    computeVisibleRanges() {
      var e = this.stateDeco;
      this.lineGaps.length && (e = e.concat(this.lineGapDeco));
      var t = [];
      pe.spans(
        e,
        this.viewport.from,
        this.viewport.to,
        {
          span(n, s) {
            t.push({ from: n, to: s });
          },
          point() {},
        },
        20
      );
      var i = t.length != this.visibleRanges.length || this.visibleRanges.some((n, s) => n.from != t[s].from || n.to != t[s].to);
      return (this.visibleRanges = t), i ? 4 : 0;
    }
    lineBlockAt(e) {
      return (e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e)) || Mn(this.heightMap.lineAt(e, Ee.ByPos, this.heightOracle, 0, 0), this.scaler);
    }
    lineBlockAtHeight(e) {
      return Mn(this.heightMap.lineAt(this.scaler.fromDOM(e), Ee.ByHeight, this.heightOracle, 0, 0), this.scaler);
    }
    elementAtHeight(e) {
      return Mn(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
    }
    get docHeight() {
      return this.scaler.toDOM(this.heightMap.height);
    }
    get contentHeight() {
      return this.docHeight + this.paddingTop + this.paddingBottom;
    }
    constructor(e) {
      (this.state = e),
        (this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }),
        (this.inView = !0),
        (this.paddingTop = 0),
        (this.paddingBottom = 0),
        (this.contentDOMWidth = 0),
        (this.contentDOMHeight = 0),
        (this.editorHeight = 0),
        (this.editorWidth = 0),
        (this.scaler = pg),
        (this.scrollTarget = null),
        (this.printing = !1),
        (this.mustMeasureContent = !0),
        (this.defaultTextDirection = Oe.LTR),
        (this.visibleRanges = []),
        (this.mustEnforceCursorAssoc = !1);
      var t = e.facet(Dh).some((i) => typeof i != "function" && i.class == "cm-lineWrapping");
      (this.heightOracle = new Io(t)),
        (this.stateDeco = e.facet(Qn).filter((i) => typeof i != "function")),
        (this.heightMap = We.empty().applyChanges(this.stateDeco, ce.empty, this.heightOracle.setDoc(e.doc), [new ct(0, 0, 0, e.doc.length)])),
        (this.viewport = this.getViewport(0, null)),
        this.updateViewportLines(),
        this.updateForViewport(),
        (this.lineGaps = this.ensureLineGaps([])),
        (this.lineGapDeco = he.set(this.lineGaps.map((i) => i.draw(!1)))),
        this.computeVisibleRanges();
    }
  };
  h(Hn, "ViewState");
  var Ki = class Ki {
    constructor(e, t) {
      (this.from = e), (this.to = t);
    }
  };
  h(Ki, "Viewport");
  function mk(r, e, t) {
    var i = [],
      n = r,
      s = 0;
    return (
      pe.spans(
        t,
        r,
        e,
        {
          span() {},
          point(o, u) {
            o > n && (i.push({ from: n, to: o }), (s += o - n)), (n = u);
          },
        },
        20
      ),
      n < e && (i.push({ from: n, to: e }), (s += e - n)),
      { total: s, ranges: i }
    );
  }
  h(mk, "lineStructure");
  function So(param, t) {
    var r = param.total,
      e = param.ranges;
    if (t <= 0) return e[0].from;
    if (t >= 1) return e[e.length - 1].to;
    var i = Math.floor(r * t);
    for (var n = 0; ; n++) {
      var _e_n = e[n],
        s = _e_n.from,
        o = _e_n.to,
        u = o - s;
      if (i <= u) return s + i;
      i -= u;
    }
  }
  h(So, "findPosition");
  function Bo(r, e) {
    var t = 0;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _step_value = _step.value,
          i = _step_value.from,
          n = _step_value.to;
        if (e <= n) {
          t += e - i;
          break;
        }
        t += n - i;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t / r.total;
  }
  h(Bo, "findFraction");
  function gk(r, e) {
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        if (e(t)) return t;
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }
  h(gk, "find");
  var pg = {
      toDOM(r) {
        return r;
      },
      fromDOM(r) {
        return r;
      },
      scale: 1,
    },
    Ho = class Ho {
      toDOM(e) {
        for (var t = 0, i = 0, n = 0; ; t++) {
          var s = t < this.viewports.length ? this.viewports[t] : null;
          if (!s || e < s.top) return n + (e - i) * this.scale;
          if (e <= s.bottom) return s.domTop + (e - s.top);
          (i = s.bottom), (n = s.domBottom);
        }
      }
      fromDOM(e) {
        for (var t = 0, i = 0, n = 0; ; t++) {
          var s = t < this.viewports.length ? this.viewports[t] : null;
          if (!s || e < s.domTop) return i + (e - n) / this.scale;
          if (e <= s.domBottom) return s.top + (e - s.domTop);
          (i = s.bottom), (n = s.domBottom);
        }
      }
      constructor(e, t, i) {
        var n = 0,
          s = 0,
          o = 0;
        (this.viewports = i.map((param) => {
          var u = param.from,
            l = param.to;
          var a = t.lineAt(u, Ee.ByPos, e, 0, 0).top,
            c = t.lineAt(l, Ee.ByPos, e, 0, 0).bottom;
          return (n += c - a), { from: u, to: l, top: a, bottom: c, domTop: 0, domBottom: 0 };
        })),
          (this.scale = (7e6 - n) / (t.height - n));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.viewports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var u = _step.value;
            (u.domTop = o + (u.top - s) * this.scale), (o = u.domBottom = u.domTop + (u.bottom - u.top)), (s = u.bottom);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    };
  h(Ho, "BigScaler");
  function Mn(r, e) {
    if (e.scale == 1) return r;
    var t = e.toDOM(r.top),
      i = e.toDOM(r.bottom);
    return new bt(r.from, r.length, t, i - t, Array.isArray(r.type) ? r.type.map((n) => Mn(n, e)) : r.type);
  }
  h(Mn, "scaleBlock");
  var _o = U.define({ combine: (r) => r.join(" ") }),
    hh = U.define({ combine: (r) => r.indexOf(!0) > -1 }),
    ch = lt.newName(),
    fD = lt.newName(),
    dD = lt.newName(),
    pD = { "&light": "." + fD, "&dark": "." + dD };
  function fh(r, e, t) {
    return new lt(e, {
      finish(i) {
        return /&/.test(i)
          ? i.replace(/&\w*/, (n) => {
              if (n == "&") return r;
              if (!t || !t[n]) throw new RangeError("Unsupported selector: ".concat(n));
              return t[n];
            })
          : r + " " + i;
      },
    });
  }
  h(fh, "buildTheme");
  var Dk = fh(
      "." + ch,
      {
        "&": { position: "relative !important", boxSizing: "border-box", "&.cm-focused": { outline: "1px dotted #212121" }, display: "flex !important", flexDirection: "column" },
        ".cm-scroller": { display: "flex !important", alignItems: "flex-start !important", fontFamily: "monospace", lineHeight: 1.4, height: "100%", overflowX: "auto", position: "relative", zIndex: 0 },
        ".cm-content": { margin: 0, flexGrow: 2, flexShrink: 0, display: "block", whiteSpace: "pre", wordWrap: "normal", boxSizing: "border-box", padding: "4px 0", outline: "none", "&[contenteditable=true]": { WebkitUserModify: "read-write-plaintext-only" } },
        ".cm-lineWrapping": { whiteSpace_fallback: "pre-wrap", whiteSpace: "break-spaces", wordBreak: "break-word", overflowWrap: "anywhere", flexShrink: 1 },
        "&light .cm-content": { caretColor: "black" },
        "&dark .cm-content": { caretColor: "white" },
        ".cm-line": { display: "block", padding: "0 2px 0 6px" },
        ".cm-layer": { position: "absolute", left: 0, top: 0, contain: "size style", "& > *": { position: "absolute" } },
        "&light .cm-selectionBackground": { background: "#d9d9d9" },
        "&dark .cm-selectionBackground": { background: "#222" },
        "&light.cm-focused .cm-selectionBackground": { background: "#d7d4f0" },
        "&dark.cm-focused .cm-selectionBackground": { background: "#233" },
        ".cm-cursorLayer": { pointerEvents: "none" },
        "&.cm-focused .cm-cursorLayer": { animation: "steps(1) cm-blink 1.2s infinite" },
        "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
        ".cm-cursor, .cm-dropCursor": { borderLeft: "1.2px solid black", marginLeft: "-0.6px", pointerEvents: "none" },
        ".cm-cursor": { display: "none" },
        "&dark .cm-cursor": { borderLeftColor: "#444" },
        ".cm-dropCursor": { position: "absolute" },
        "&.cm-focused .cm-cursor": { display: "block" },
        "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
        "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
        "&light .cm-specialChar": { color: "red" },
        "&dark .cm-specialChar": { color: "#f78" },
        ".cm-gutters": { flexShrink: 0, display: "flex", height: "100%", boxSizing: "border-box", left: 0, zIndex: 200 },
        "&light .cm-gutters": { backgroundColor: "#f5f5f5", color: "#6c6c6c", borderRight: "1px solid #ddd" },
        "&dark .cm-gutters": { backgroundColor: "#333338", color: "#ccc" },
        ".cm-gutter": { display: "flex !important", flexDirection: "column", flexShrink: 0, boxSizing: "border-box", minHeight: "100%", overflow: "hidden" },
        ".cm-gutterElement": { boxSizing: "border-box" },
        ".cm-lineNumbers .cm-gutterElement": { padding: "0 3px 0 5px", minWidth: "20px", textAlign: "right", whiteSpace: "nowrap" },
        "&light .cm-activeLineGutter": { backgroundColor: "#e2f2ff" },
        "&dark .cm-activeLineGutter": { backgroundColor: "#222227" },
        ".cm-panels": { boxSizing: "border-box", position: "sticky", left: 0, right: 0 },
        "&light .cm-panels": { backgroundColor: "#f5f5f5", color: "black" },
        "&light .cm-panels-top": { borderBottom: "1px solid #ddd" },
        "&light .cm-panels-bottom": { borderTop: "1px solid #ddd" },
        "&dark .cm-panels": { backgroundColor: "#333338", color: "white" },
        ".cm-tab": { display: "inline-block", overflow: "hidden", verticalAlign: "bottom" },
        ".cm-widgetBuffer": { verticalAlign: "text-top", height: "1em", width: 0, display: "inline" },
        ".cm-placeholder": { color: "#888", display: "inline-block", verticalAlign: "top" },
        ".cm-highlightSpace:before": { content: "attr(data-display)", position: "absolute", pointerEvents: "none", color: "#888" },
        ".cm-highlightTab": { backgroundImage: 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>\')', backgroundSize: "auto 100%", backgroundPosition: "right 90%", backgroundRepeat: "no-repeat" },
        ".cm-trailingSpace": { backgroundColor: "#ff332255" },
        ".cm-button": { verticalAlign: "middle", color: "inherit", fontSize: "70%", padding: ".2em 1em", borderRadius: "1px" },
        "&light .cm-button": { backgroundImage: "linear-gradient(#eff1f5, #d9d9df)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)" } },
        "&dark .cm-button": { backgroundImage: "linear-gradient(#393939, #111)", border: "1px solid #888", "&:active": { backgroundImage: "linear-gradient(#111, #333)" } },
        ".cm-textfield": { verticalAlign: "middle", color: "inherit", fontSize: "70%", border: "1px solid silver", padding: ".2em .5em" },
        "&light .cm-textfield": { backgroundColor: "white" },
        "&dark .cm-textfield": { border: "1px solid #555", backgroundColor: "inherit" },
      },
      pD
    ),
    Uo = class Uo {
      constructor(e, t, i, n) {
        (this.typeOver = n), (this.bounds = null), (this.text = "");
        var _e_docView = e.docView,
          s = _e_docView.impreciseHead,
          o = _e_docView.impreciseAnchor;
        if (e.state.readOnly && t > -1) this.newSel = null;
        else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, i, 0))) {
          var u = s || o ? [] : Fk(e),
            l = new Nn(u, e.state);
          l.readRange(this.bounds.startDOM, this.bounds.endDOM), (this.text = l.text), (this.newSel = yk(u, this.bounds.from));
        } else {
          var u1 = e.observer.selectionRange,
            l1 = (s && s.node == u1.focusNode && s.offset == u1.focusOffset) || !zr(e.contentDOM, u1.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(u1.focusNode, u1.focusOffset),
            a = (o && o.node == u1.anchorNode && o.offset == u1.anchorOffset) || !zr(e.contentDOM, u1.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(u1.anchorNode, u1.anchorOffset);
          this.newSel = j.single(a, l1);
        }
      }
    };
  h(Uo, "DOMChange");
  function mD(r, e) {
    var t,
      i = e.newSel,
      n = r.state.selection.main;
    if (e.bounds) {
      var _e_bounds = e.bounds,
        s = _e_bounds.from,
        o = _e_bounds.to,
        u = n.from,
        l = null;
      ((r.inputState.lastKeyCode === 8 && r.inputState.lastKeyTime > Date.now() - 100) || (Y.android && e.text.length < o - s)) && ((u = n.to), (l = "end"));
      var a = bk(r.state.doc.sliceString(s, o, Si), e.text, u - s, l);
      a && (Y.chrome && r.inputState.lastKeyCode == 13 && a.toB == a.from + 2 && e.text.slice(a.from, a.toB) == Si + Si && a.toB--, (t = { from: s + a.from, to: s + a.toA, insert: ce.of(e.text.slice(a.from, a.toB).split(Si)) }));
    } else i && ((!r.hasFocus && r.state.facet(ou)) || i.main.eq(n)) && (i = null);
    if (!t && !i) return !1;
    if (
      (!t && e.typeOver && !n.empty && i && i.main.empty
        ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, n.to) })
        : t && t.from >= n.from && t.to <= n.to && (t.from != n.from || t.to != n.to) && n.to - n.from - (t.to - t.from) <= 4
        ? (t = { from: n.from, to: n.to, insert: r.state.doc.slice(n.from, t.from).append(t.insert).append(r.state.doc.slice(t.to, n.to)) })
        : (Y.mac || Y.android) && t && t.from == t.to && t.from == n.head - 1 && /^\. ?$/.test(t.insert.toString()) && r.contentDOM.getAttribute("autocorrect") == "off"
        ? (i && t.insert.length == 2 && (i = j.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: ce.of([" "]) }))
        : Y.chrome && t && t.from == t.to && t.from == n.head && t.insert.toString() == "\n " && r.lineWrapping && (i && (i = j.single(i.main.anchor - 1, i.main.head - 1)), (t = { from: n.from, to: n.to, insert: ce.of([" "]) })),
      t)
    ) {
      var s1 = r.state;
      if ((Y.ios && r.inputState.flushIOSKey(r)) || (Y.android && ((t.from == n.from && t.to == n.to && t.insert.length == 1 && t.insert.lines == 2 && Mr(r.contentDOM, "Enter", 13)) || (t.from == n.from - 1 && t.to == n.to && t.insert.length == 0 && Mr(r.contentDOM, "Backspace", 8)) || (t.from == n.from && t.to == n.to + 1 && t.insert.length == 0 && Mr(r.contentDOM, "Delete", 46))))) return !0;
      var o1 = t.insert.toString();
      if (r.state.facet(jg).some((a) => a(r, t.from, t.to, o1))) return !0;
      r.inputState.composing >= 0 && r.inputState.composing++;
      var u1;
      if (t.from >= n.from && t.to <= n.to && t.to - t.from >= (n.to - n.from) / 3 && (!i || (i.main.empty && i.main.from == t.from + t.insert.length)) && r.inputState.composing < 0) {
        var a1 = n.from < t.from ? s1.sliceDoc(n.from, t.from) : "",
          c = n.to > t.to ? s1.sliceDoc(t.to, n.to) : "";
        u1 = s1.replaceSelection(r.state.toText(a1 + t.insert.sliceString(0, void 0, r.state.lineBreak) + c));
      } else {
        var a2 = s1.changes(t),
          c1 = i && !s1.selection.main.eq(i.main) && i.main.to <= a2.newLength ? i.main : void 0;
        if (s1.selection.ranges.length > 1 && r.inputState.composing >= 0 && t.to <= n.to && t.to >= n.to - 10) {
          var f = r.state.sliceDoc(t.from, t.to),
            d = eD(r) || r.state.doc.lineAt(n.head),
            p = n.to - t.to,
            m = n.to - n.from;
          u1 = s1.changeByRange((D) => {
            if (D.from == n.from && D.to == n.to) return { changes: a2, range: c1 || D.map(a2) };
            var g = D.to - p,
              b = g - f.length;
            if (D.to - D.from != m || r.state.sliceDoc(b, g) != f || (d && D.to >= d.from && D.from <= d.to)) return { range: D };
            var F = s1.changes({ from: b, to: g, insert: t.insert }),
              E = D.to - n.to;
            return { changes: F, range: c1 ? j.range(Math.max(0, c1.anchor + E), Math.max(0, c1.head + E)) : D.map(F) };
          });
        } else u1 = { changes: a2, selection: c1 && s1.selection.replaceRange(c1) };
      }
      var l1 = "input.type";
      return r.composing && ((l1 += ".compose"), r.inputState.compositionFirstChange && ((l1 += ".start"), (r.inputState.compositionFirstChange = !1))), r.dispatch(u1, { scrollIntoView: !0, userEvent: l1 }), !0;
    } else if (i && !i.main.eq(n)) {
      var s2 = !1,
        o2 = "select";
      return r.inputState.lastSelectionTime > Date.now() - 50 && (r.inputState.lastSelectionOrigin == "select" && (s2 = !0), (o2 = r.inputState.lastSelectionOrigin)), r.dispatch({ selection: i, scrollIntoView: s2, userEvent: o2 }), !0;
    } else return !1;
  }
  h(mD, "applyDOMChange");
  function bk(r, e, t, i) {
    var n = Math.min(r.length, e.length),
      s = 0;
    for (; s < n && r.charCodeAt(s) == e.charCodeAt(s); ) s++;
    if (s == n && r.length == e.length) return null;
    var o = r.length,
      u = e.length;
    for (; o > 0 && u > 0 && r.charCodeAt(o - 1) == e.charCodeAt(u - 1); ) o--, u--;
    if (i == "end") {
      var l = Math.max(0, s - Math.min(o, u));
      t -= o + l - s;
    }
    if (o < s && r.length < e.length) {
      var l1 = t <= s && t >= o ? s - t : 0;
      (s -= l1), (u = s + (u - o)), (o = s);
    } else if (u < s) {
      var l2 = t <= s && t >= u ? s - t : 0;
      (s -= l2), (o = s + (o - u)), (u = s);
    }
    return { from: s, toA: o, toB: u };
  }
  h(bk, "findDiff");
  function Fk(r) {
    var e = [];
    if (r.root.activeElement != r.contentDOM) return e;
    var _r_observer_selectionRange = r.observer.selectionRange,
      t = _r_observer_selectionRange.anchorNode,
      i = _r_observer_selectionRange.anchorOffset,
      n = _r_observer_selectionRange.focusNode,
      s = _r_observer_selectionRange.focusOffset;
    return t && (e.push(new Vn(t, i)), (n != t || s != i) && e.push(new Vn(n, s))), e;
  }
  h(Fk, "selectionPoints");
  function yk(r, e) {
    if (r.length == 0) return null;
    var t = r[0].pos,
      i = r.length == 2 ? r[1].pos : t;
    return t > -1 && i > -1 ? j.single(t + e, i + e) : null;
  }
  h(yk, "selectionFromPoints");
  var Ck = { childList: !0, characterData: !0, subtree: !0, attributes: !0, characterDataOldValue: !0 },
    Ya = Y.ie && Y.ie_version <= 11,
    Yo = class Yo {
      onScrollChanged(e) {
        this.view.inputState.runScrollHandlers(this.view, e), this.intersecting && this.view.measure();
      }
      onScroll(e) {
        this.intersecting && this.flush(!1), this.onScrollChanged(e);
      }
      onResize() {
        this.resizeTimeout < 0 &&
          (this.resizeTimeout = setTimeout(() => {
            (this.resizeTimeout = -1), this.view.requestMeasure();
          }, 50));
      }
      onPrint() {
        (this.view.viewState.printing = !0),
          this.view.measure(),
          setTimeout(() => {
            (this.view.viewState.printing = !1), this.view.requestMeasure();
          }, 500);
      }
      updateGaps(e) {
        if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, i) => t != e[i]))) {
          this.gapIntersection.disconnect();
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              this.gapIntersection.observe(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          this.gaps = e;
        }
      }
      onSelectionChange(e) {
        var t = this.selectionChanged;
        if (!this.readSelectionRange() || this.delayedAndroidKey) return;
        var _this = this,
          i = _this.view,
          n = this.selectionRange;
        if (i.state.facet(ou) ? i.root.activeElement != this.dom : !Ro(i.dom, n)) return;
        var s = n.anchorNode && i.docView.nearest(n.anchorNode);
        if (s && s.ignoreEvent(e)) {
          t || (this.selectionChanged = !1);
          return;
        }
        ((Y.ie && Y.ie_version <= 11) || (Y.android && Y.chrome)) && !i.state.selection.main.empty && n.focusNode && tu(n.focusNode, n.focusOffset, n.anchorNode, n.anchorOffset) ? this.flushSoon() : this.flush(!1);
      }
      readSelectionRange() {
        var _this = this,
          e = _this.view,
          t = (Y.safari && e.root.nodeType == 11 && Ev(this.dom.ownerDocument) == this.dom && Ak(this.view)) || eu(e.root);
        if (!t || this.selectionRange.eq(t)) return !1;
        var i = Ro(this.dom, t);
        return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && Sv(this.dom, t) ? ((this.view.inputState.lastFocusTime = 0), e.docView.updateSelection(), !1) : (this.selectionRange.setRange(t), i && (this.selectionChanged = !0), !0);
      }
      setSelectionRange(e, t) {
        this.selectionRange.set(e.node, e.offset, t.node, t.offset), (this.selectionChanged = !1);
      }
      clearSelectionRange() {
        this.selectionRange.set(null, 0, null, 0);
      }
      listenForScroll() {
        this.parentCheck = -1;
        var e = 0,
          t = null;
        for (var i = this.dom; i; )
          if (i.nodeType == 1) !t && e < this.scrollTargets.length && this.scrollTargets[e] == i ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(i), (i = i.assignedSlot || i.parentNode);
          else if (i.nodeType == 11) i = i.host;
          else break;
        if ((e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t)) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i1 = _step.value;
              i1.removeEventListener("scroll", this.onScroll);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = (this.scrollTargets = t)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var i2 = _step1.value;
              i2.addEventListener("scroll", this.onScroll);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        }
      }
      ignore(e) {
        if (!this.active) return e();
        try {
          return this.stop(), e();
        } finally {
          this.start(), this.clear();
        }
      }
      start() {
        this.active || (this.observer.observe(this.dom, Ck), Ya && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), (this.active = !0));
      }
      stop() {
        this.active && ((this.active = !1), this.observer.disconnect(), Ya && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
      }
      clear() {
        this.processRecords(), (this.queue.length = 0), (this.selectionChanged = !1);
      }
      delayAndroidKey(e, t) {
        var i;
        if (!this.delayedAndroidKey) {
          var n = h(() => {
            var s = this.delayedAndroidKey;
            s && (this.clearDelayedAndroidKey(), !this.flush() && s.force && Mr(this.dom, s.key, s.keyCode));
          }, "flush");
          this.flushingAndroidKey = this.view.win.requestAnimationFrame(n);
        }
        (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = { key: e, keyCode: t, force: this.lastChange < Date.now() - 50 || !!(!((i = this.delayedAndroidKey) === null || i === void 0) && i.force) });
      }
      clearDelayedAndroidKey() {
        this.win.cancelAnimationFrame(this.flushingAndroidKey), (this.delayedAndroidKey = null), (this.flushingAndroidKey = -1);
      }
      flushSoon() {
        this.delayedFlush < 0 &&
          (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
            (this.delayedFlush = -1), this.flush();
          }));
      }
      forceFlush() {
        this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), (this.delayedFlush = -1)), this.flush();
      }
      processRecords() {
        var e = this.queue;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.observer.takeRecords()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            e.push(s);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        e.length && (this.queue = []);
        var t = -1,
          i = -1,
          n = !1;
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var s1 = _step1.value;
            var o = this.readMutation(s1);
            var ref;
            o && (o.typeOver && (n = !0), t == -1 ? ((ref = o), (t = ref.from), (i = ref.to), ref) : ((t = Math.min(o.from, t)), (i = Math.max(o.to, i))));
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return { from: t, to: i, typeOver: n };
      }
      readChange() {
        var _this_processRecords = this.processRecords(),
          e = _this_processRecords.from,
          t = _this_processRecords.to,
          i = _this_processRecords.typeOver,
          n = this.selectionChanged && Ro(this.dom, this.selectionRange);
        return e < 0 && !n ? null : (e > -1 && (this.lastChange = Date.now()), (this.view.inputState.lastFocusTime = 0), (this.selectionChanged = !1), new Uo(this.view, e, t, i));
      }
      flush() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
        if (this.delayedFlush >= 0 || this.delayedAndroidKey) return !1;
        e && this.readSelectionRange();
        var t = this.readChange();
        if (!t) return !1;
        var i = this.view.state,
          n = mD(this.view, t);
        return this.view.state == i && this.view.update([]), n;
      }
      readMutation(e) {
        var t = this.view.docView.nearest(e.target);
        if (!t || t.ignoreMutation(e)) return null;
        if ((t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.dirty |= 4), e.type == "childList")) {
          var i = mg(t, e.previousSibling || e.target.previousSibling, -1),
            n = mg(t, e.nextSibling || e.target.nextSibling, 1);
          return { from: i ? t.posAfter(i) : t.posAtStart, to: n ? t.posBefore(n) : t.posAtEnd, typeOver: !1 };
        } else return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
      }
      setWindow(e) {
        e != this.win && (this.removeWindowListeners(this.win), (this.win = e), this.addWindowListeners(this.win));
      }
      addWindowListeners(e) {
        e.addEventListener("resize", this.onResize), e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
      }
      removeWindowListeners(e) {
        e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
      }
      destroy() {
        var e, t, i, n;
        this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (i = this.resizeScroll) === null || i === void 0 || i.disconnect(), (n = this.resizeContent) === null || n === void 0 || n.disconnect();
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.scrollTargets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            s.removeEventListener("scroll", this.onScroll);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey);
      }
      constructor(e) {
        (this.view = e),
          (this.active = !1),
          (this.selectionRange = new $o()),
          (this.selectionChanged = !1),
          (this.delayedFlush = -1),
          (this.resizeTimeout = -1),
          (this.queue = []),
          (this.delayedAndroidKey = null),
          (this.flushingAndroidKey = -1),
          (this.lastChange = 0),
          (this.scrollTargets = []),
          (this.intersection = null),
          (this.resizeScroll = null),
          (this.resizeContent = null),
          (this.intersecting = !1),
          (this.gapIntersection = null),
          (this.gaps = []),
          (this.parentCheck = -1),
          (this.dom = e.contentDOM),
          (this.observer = new MutationObserver((t) => {
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var i = _step.value;
                this.queue.push(i);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            ((Y.ie && Y.ie_version <= 11) || (Y.ios && e.composing)) && t.some((i) => (i.type == "childList" && i.removedNodes.length) || (i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length)) ? this.flushSoon() : this.flush();
          })),
          Ya &&
            (this.onCharData = (t) => {
              this.queue.push({ target: t.target, type: "characterData", oldValue: t.prevValue }), this.flushSoon();
            }),
          (this.onSelectionChange = this.onSelectionChange.bind(this)),
          (this.onResize = this.onResize.bind(this)),
          (this.onPrint = this.onPrint.bind(this)),
          (this.onScroll = this.onScroll.bind(this)),
          typeof ResizeObserver == "function" &&
            ((this.resizeScroll = new ResizeObserver(() => {
              var t;
              ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
            })),
            this.resizeScroll.observe(e.scrollDOM),
            (this.resizeContent = new ResizeObserver(() => this.view.requestMeasure())),
            this.resizeContent.observe(e.contentDOM)),
          this.addWindowListeners((this.win = e.win)),
          this.start(),
          typeof IntersectionObserver == "function" &&
            ((this.intersection = new IntersectionObserver((t) => {
              this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && ((this.intersecting = !this.intersecting), this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
            }, {})),
            this.intersection.observe(this.dom),
            (this.gapIntersection = new IntersectionObserver((t) => {
              t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
            }, {}))),
          this.listenForScroll(),
          this.readSelectionRange();
      }
    };
  h(Yo, "DOMObserver");
  function mg(r, e, t) {
    for (; e; ) {
      var i = De.get(e);
      if (i && i.parent == r) return i;
      var n = e.parentNode;
      e = n != r.dom ? n : t > 0 ? e.nextSibling : e.previousSibling;
    }
    return null;
  }
  h(mg, "findChild");
  function Ak(r) {
    var e = null;
    function t(l) {
      l.preventDefault(), l.stopImmediatePropagation(), (e = l.getTargetRanges()[0]);
    }
    if ((h(t, "read"), r.contentDOM.addEventListener("beforeinput", t, !0), r.dom.ownerDocument.execCommand("indent"), r.contentDOM.removeEventListener("beforeinput", t, !0), !e)) return null;
    var i = e.startContainer,
      n = e.startOffset,
      s = e.endContainer,
      o = e.endOffset,
      u = r.docView.domAtPos(r.state.selection.main.anchor);
    var ref;
    return tu(u.node, u.offset, s, o) && ((ref = [s, o, i, n]), (i = ref[0]), (n = ref[1]), (s = ref[2]), (o = ref[3]), ref), { anchorNode: i, anchorOffset: n, focusNode: s, focusOffset: o };
  }
  h(Ak, "safariSelectionRangeHack");
  var te = class te1 {
    get state() {
      return this.viewState.state;
    }
    get viewport() {
      return this.viewState.viewport;
    }
    get visibleRanges() {
      return this.viewState.visibleRanges;
    }
    get inView() {
      return this.viewState.inView;
    }
    get composing() {
      return this.inputState.composing > 0;
    }
    get compositionStarted() {
      return this.inputState.composing >= 0;
    }
    get root() {
      return this._root;
    }
    get win() {
      return this.dom.ownerDocument.defaultView || window;
    }
    dispatch() {
      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
        e[_key] = arguments[_key];
      }
      this._dispatch(e.length == 1 && e[0] instanceof xe ? e[0] : this.state.update(...e));
    }
    update(e) {
      if (this.updateState != 0) throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
      var t = !1,
        i = !1,
        n,
        s = this.state;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var d = _step.value;
          if (d.startState != s) throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
          s = d.state;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      if (this.destroyed) {
        this.viewState.state = s;
        return;
      }
      var o = this.hasFocus,
        u = 0,
        l = null;
      e.some((d) => d.annotation(aD)) ? ((this.inputState.notifiedFocused = o), (u = 1)) : o != this.inputState.notifiedFocused && ((this.inputState.notifiedFocused = o), (l = hD(s, o)), l || (u = 1));
      var a = this.observer.delayedAndroidKey,
        c = null;
      if ((a ? (this.observer.clearDelayedAndroidKey(), (c = this.observer.readChange()), ((c && !this.state.doc.eq(s.doc)) || !this.state.selection.eq(s.selection)) && (c = null)) : this.observer.clear(), s.facet(le.phrases) != this.state.facet(le.phrases))) return this.setState(s);
      (n = Zi.create(this, s, e)), (n.flags |= u);
      var f = this.viewState.scrollTarget;
      try {
        this.updateState = 2;
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var d1 = _step1.value;
            if ((f && (f = f.map(d1.changes)), d1.scrollIntoView)) {
              var _d_state_selection = d1.state.selection,
                p = _d_state_selection.main;
              f = new Ji(p.empty ? p : j.cursor(p.head, p.head > p.anchor ? -1 : 1));
            }
            var _iteratorNormalCompletion2 = true,
              _didIteratorError2 = false,
              _iteratorError2 = undefined;
            try {
              for (var _iterator2 = d1.effects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var p1 = _step2.value;
                p1.is(Q0) && (f = p1.value);
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        this.viewState.update(n, f),
          (this.bidiCache = er.update(this.bidiCache, n.changes)),
          n.empty || (this.updatePlugins(n), this.inputState.update(n)),
          (t = this.docView.update(n)),
          this.state.facet($n) != this.styleModules && this.mountStyles(),
          (i = this.updateAttrs()),
          this.showAnnouncements(e),
          this.docView.updateSelection(
            t,
            e.some((d) => d.isUserEvent("select.pointer"))
          );
      } finally {
        this.updateState = 0;
      }
      var _iteratorNormalCompletion3 = true,
        _didIteratorError3 = false,
        _iteratorError3 = undefined;
      if ((n.startState.facet(_o) != n.state.facet(_o) && (this.viewState.mustMeasureContent = !0), (t || i || f || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), !n.empty))
        try {
          for (var _iterator3 = this.state.facet(nh)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var d2 = _step3.value;
            d2(n);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      (l || c) &&
        Promise.resolve().then(() => {
          l && this.state == l.startState && this.dispatch(l), c && !mD(this, c) && a.force && Mr(this.contentDOM, a.key, a.keyCode);
        });
    }
    setState(e) {
      if (this.updateState != 0) throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
      if (this.destroyed) {
        this.viewState.state = e;
        return;
      }
      this.updateState = 2;
      var t = this.hasFocus;
      try {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var i = _step.value;
            i.destroy(this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.viewState = new Hn(e)), (this.plugins = e.facet(Rn).map((i) => new Lr(i))), this.pluginMap.clear();
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var i1 = _step1.value;
            i1.update(this);
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        (this.docView = new zn(this)), this.inputState.ensureHandlers(this, this.plugins), this.mountStyles(), this.updateAttrs(), (this.bidiCache = []);
      } finally {
        this.updateState = 0;
      }
      t && this.focus(), this.requestMeasure();
    }
    updatePlugins(e) {
      var t = e.startState.facet(Rn),
        i = e.state.facet(Rn);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if (t != i) {
        var n = [];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var s = _step.value;
            var o = t.indexOf(s);
            if (o < 0) n.push(new Lr(s));
            else {
              var u = this.plugins[o];
              (u.mustUpdate = e), n.push(u);
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator1 = this.plugins[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
            var s1 = _step1.value;
            s1.mustUpdate != e && s1.destroy(this);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
        (this.plugins = n), this.pluginMap.clear(), this.inputState.ensureHandlers(this, this.plugins);
      } else
        try {
          for (var _iterator2 = this.plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
            var n1 = _step2.value;
            n1.mustUpdate = e;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      for (var n2 = 0; n2 < this.plugins.length; n2++) this.plugins[n2].update(this);
    }
    measure() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
      if (this.destroyed) return;
      this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), (this.measureScheduled = 0), e && this.observer.forceFlush();
      var t = null,
        _this_scrollDOM = this.scrollDOM,
        i = _this_scrollDOM.scrollHeight,
        n = _this_scrollDOM.scrollTop,
        s = _this_scrollDOM.clientHeight,
        o = n > i - s - 4 ? i : n;
      try {
        var _this = this,
          _loop = function (u) {
            _this.updateState = 1;
            var l = _this.viewport,
              a = _this.viewState.lineBlockAtHeight(o),
              c = _this.viewState.measure(_this);
            if (!c && !_this.measureRequests.length && _this.viewState.scrollTarget == null) return "break";
            if (u > 5) {
              console.warn(_this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
              return "break";
            }
            var f = [];
            var ref;
            c & 4 || ((ref = [f, _this.measureRequests]), (_this.measureRequests = ref[0]), (f = ref[1]), ref);
            var d = f.map((g) => {
                try {
                  return g.read(_this);
                } catch (b) {
                  return Ft(_this.state, b), gg;
                }
              }),
              p = Zi.create(_this, _this.state, []),
              m = !1,
              D = !1;
            (p.flags |= c), t ? (t.flags |= c) : (t = p), (_this.updateState = 2), p.empty || (_this.updatePlugins(p), _this.inputState.update(p), _this.updateAttrs(), (m = _this.docView.update(p)));
            for (var g = 0; g < f.length; g++)
              if (d[g] != gg)
                try {
                  var _$b = f[g];
                  _$b.write && _$b.write(d[g], _this);
                } catch (b) {
                  Ft(_this.state, b);
                }
            if (_this.viewState.editorHeight)
              if (_this.viewState.scrollTarget) _this.docView.scrollIntoView(_this.viewState.scrollTarget), (_this.viewState.scrollTarget = null), (D = !0);
              else {
                var g1 = _this.viewState.lineBlockAt(a.from).top - a.top;
                (g1 > 1 || g1 < -1) && ((_this.scrollDOM.scrollTop += g1), (D = !0));
              }
            if ((m && _this.docView.updateSelection(!0), _this.viewport.from == l.from && _this.viewport.to == l.to && !D && _this.measureRequests.length == 0)) return "break";
          };
        for (var u = 0; ; u++) {
          var _ret = _loop(u);
          if (_ret === "break") break;
        }
      } finally {
        (this.updateState = 0), (this.measureScheduled = -1);
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if (t && !t.empty)
        try {
          for (var _iterator = this.state.facet(nh)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var u1 = _step.value;
            u1(t);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
    }
    get themeClasses() {
      return ch + " " + (this.state.facet(hh) ? dD : fD) + " " + this.state.facet(_o);
    }
    updateAttrs() {
      var e = Dg(this, Gg, { class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses }),
        t = { spellcheck: "false", autocorrect: "off", autocapitalize: "off", translate: "no", contenteditable: this.state.facet(ou) ? "true" : "false", class: "cm-content", style: "".concat(Y.tabSize, ": ").concat(this.state.tabSize), role: "textbox", "aria-multiline": "true" };
      this.state.readOnly && (t["aria-readonly"] = "true"), Dg(this, Dh, t);
      var i = this.observer.ignore(() => {
        var n = ih(this.contentDOM, this.contentAttrs, t),
          s = ih(this.dom, this.editorAttrs, e);
        return n || s;
      });
      return (this.editorAttrs = e), (this.contentAttrs = t), i;
    }
    showAnnouncements(e) {
      var t = !0;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined,
        _iteratorNormalCompletion1 = true,
        _didIteratorError1 = false,
        _iteratorError1 = undefined;
      try {
        for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
          var i = _step.value;
          try {
            for (var _iterator1 = i.effects[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var n = _step1.value;
              if (n.is(te.announce)) {
                t && (this.announceDOM.textContent = ""), (t = !1);
                var s = this.announceDOM.appendChild(document.createElement("div"));
                s.textContent = n.value;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError1 = true;
        _iteratorError1 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion1 && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError1) {
            throw _iteratorError1;
          }
        }
      }
    }
    mountStyles() {
      (this.styleModules = this.state.facet($n)), lt.mount(this.root, this.styleModules.concat(Dk).reverse());
    }
    readMeasured() {
      if (this.updateState == 2) throw new Error("Reading the editor layout isn't allowed during an update");
      this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
    }
    requestMeasure(e) {
      if ((this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e)) {
        if (this.measureRequests.indexOf(e) > -1) return;
        if (e.key != null) {
          for (var t = 0; t < this.measureRequests.length; t++)
            if (this.measureRequests[t].key === e.key) {
              this.measureRequests[t] = e;
              return;
            }
        }
        this.measureRequests.push(e);
      }
    }
    plugin(e) {
      var t = this.pluginMap.get(e);
      return (t === void 0 || (t && t.spec != e)) && this.pluginMap.set(e, (t = this.plugins.find((i) => i.spec == e) || null)), t && t.update(this).value;
    }
    get documentTop() {
      return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
    }
    get documentPadding() {
      return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
    }
    elementAtHeight(e) {
      return this.readMeasured(), this.viewState.elementAtHeight(e);
    }
    lineBlockAtHeight(e) {
      return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
    }
    get viewportLineBlocks() {
      return this.viewState.viewportLines;
    }
    lineBlockAt(e) {
      return this.viewState.lineBlockAt(e);
    }
    get contentHeight() {
      return this.viewState.contentHeight;
    }
    moveByChar(e, t, i) {
      return Ua(this, e, rg(this, e, t, i));
    }
    moveByGroup(e, t) {
      return Ua(
        this,
        e,
        rg(this, e, t, (i) => Jv(this, e.head, i))
      );
    }
    moveToLineBoundary(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
      return Qv(this, e, t, i);
    }
    moveVertically(e, t, i) {
      return Ua(this, e, Zv(this, e, t, i));
    }
    domAtPos(e) {
      return this.docView.domAtPos(e);
    }
    posAtDOM(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return this.docView.posFromDOM(e, t);
    }
    posAtCoords(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      return this.readMeasured(), iD(this, e, t);
    }
    coordsAtPos(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      this.readMeasured();
      var i = this.docView.coordsAt(e, t);
      if (!i || i.left == i.right) return i;
      var n = this.state.doc.lineAt(e),
        s = this.bidiSpans(n),
        o = s[hi.find(s, e - n.from, -1, t)];
      return ph(i, (o.dir == Oe.LTR) == t > 0);
    }
    get defaultCharacterWidth() {
      return this.viewState.heightOracle.charWidth;
    }
    get defaultLineHeight() {
      return this.viewState.heightOracle.lineHeight;
    }
    get textDirection() {
      return this.viewState.defaultTextDirection;
    }
    textDirectionAt(e) {
      return !this.state.facet(Ug) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
    }
    get lineWrapping() {
      return this.viewState.heightOracle.lineWrapping;
    }
    bidiSpans(e) {
      if (e.length > Ek) return Jg(e.length);
      var t = this.textDirectionAt(e.from);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.bidiCache[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          if (n.from == e.from && n.dir == t) return n.order;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      var i = Iv(e.text, t);
      return this.bidiCache.push(new er(e.from, e.to, t, i)), i;
    }
    get hasFocus() {
      var e;
      return (this.dom.ownerDocument.hasFocus() || (Y.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4)) && this.root.activeElement == this.contentDOM;
    }
    focus() {
      this.observer.ignore(() => {
        Bg(this.contentDOM), this.docView.updateSelection();
      });
    }
    setRoot(e) {
      this._root != e && ((this._root = e), this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
    }
    destroy() {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var e = _step.value;
          e.destroy(this);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      (this.plugins = []), this.inputState.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), (this.destroyed = !0);
    }
    static scrollIntoView(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return Q0.of(new Ji(typeof e == "number" ? j.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
    }
    static domEventHandlers(e) {
      return ze.define(() => ({}), { eventHandlers: e });
    }
    static theme(e, t) {
      var i = lt.newName(),
        n = [_o.of(i), $n.of(fh(".".concat(i), e))];
      return t && t.dark && n.push(hh.of(!0)), n;
    }
    static baseTheme(e) {
      return Or.lowest($n.of(fh("." + ch, e, pD)));
    }
    static findFromDOM(e) {
      var t;
      var i = e.querySelector(".cm-content"),
        n = (i && De.get(i)) || De.get(e);
      return ((t = n === null || n === void 0 ? void 0 : n.rootView) === null || t === void 0 ? void 0 : t.view) || null;
    }
    constructor(ref) {
      var e = ref === void 0 ? {} : ref;
      (this.plugins = []),
        (this.pluginMap = new Map()),
        (this.editorAttrs = {}),
        (this.contentAttrs = {}),
        (this.bidiCache = []),
        (this.destroyed = !1),
        (this.updateState = 2),
        (this.measureScheduled = -1),
        (this.measureRequests = []),
        (this.contentDOM = document.createElement("div")),
        (this.scrollDOM = document.createElement("div")),
        (this.scrollDOM.tabIndex = -1),
        (this.scrollDOM.className = "cm-scroller"),
        this.scrollDOM.appendChild(this.contentDOM),
        (this.announceDOM = document.createElement("div")),
        (this.announceDOM.style.cssText = "position: fixed; top: -10000px"),
        this.announceDOM.setAttribute("aria-live", "polite"),
        (this.dom = document.createElement("div")),
        this.dom.appendChild(this.announceDOM),
        this.dom.appendChild(this.scrollDOM),
        (this._dispatch = e.dispatch || ((t) => this.update([t]))),
        (this.dispatch = this.dispatch.bind(this)),
        (this._root = e.root || xv(e.parent) || document),
        (this.viewState = new Hn(e.state || le.create(e))),
        (this.plugins = this.state.facet(Rn).map((t) => new Lr(t)));
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          t.update(this);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      (this.observer = new Yo(this)), (this.inputState = new Lo(this)), this.inputState.ensureHandlers(this, this.plugins), (this.docView = new zn(this)), this.mountStyles(), this.updateAttrs(), (this.updateState = 0), this.requestMeasure(), e.parent && e.parent.appendChild(this.dom);
    }
  };
  h(te, "EditorView");
  te.styleModule = $n;
  te.inputHandler = jg;
  te.focusChangeEffect = Hg;
  te.perLineTextDirection = Ug;
  te.exceptionSink = Wg;
  te.updateListener = nh;
  te.editable = ou;
  te.mouseSelectionStyle = zg;
  te.dragMovesSelection = Vg;
  te.clickAddsSelectionRange = Ng;
  te.decorations = Qn;
  te.atomicRanges = Kg;
  te.scrollMargins = Xg;
  te.darkTheme = hh;
  te.contentAttributes = Dh;
  te.editorAttributes = Gg;
  te.lineWrapping = te.contentAttributes.of({ class: "cm-lineWrapping" });
  te.announce = de.define();
  var Ek = 4096,
    gg = {},
    er = class er1 {
      static update(e, t) {
        if (t.empty) return e;
        var i = [],
          n = e.length ? e[e.length - 1].dir : Oe.LTR;
        for (var s = Math.max(0, e.length - 10); s < e.length; s++) {
          var o = e[s];
          o.dir == n && !t.touchesRange(o.from, o.to) && i.push(new er(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.order));
        }
        return i;
      }
      constructor(e, t, i, n) {
        (this.from = e), (this.to = t), (this.dir = i), (this.order = n);
      }
    };
  h(er, "CachedOrder");
  function Dg(r, e, t) {
    for (var i = r.state.facet(e), n = i.length - 1; n >= 0; n--) {
      var s = i[n],
        o = typeof s == "function" ? s(r) : s;
      o && th(o, t);
    }
    return t;
  }
  h(Dg, "attrsFromFacet");
  var vk = Y.mac ? "mac" : Y.windows ? "win" : Y.linux ? "linux" : "key";
  function kk(r, e) {
    var t = r.split(/-(?!$)/),
      i = t[t.length - 1];
    i == "Space" && (i = " ");
    var n, s, o, u;
    for (var l = 0; l < t.length - 1; ++l) {
      var a = t[l];
      if (/^(cmd|meta|m)$/i.test(a)) u = !0;
      else if (/^a(lt)?$/i.test(a)) n = !0;
      else if (/^(c|ctrl|control)$/i.test(a)) s = !0;
      else if (/^s(hift)?$/i.test(a)) o = !0;
      else if (/^mod$/i.test(a)) e == "mac" ? (u = !0) : (s = !0);
      else throw new Error("Unrecognized modifier name: " + a);
    }
    return n && (i = "Alt-" + i), s && (i = "Ctrl-" + i), u && (i = "Meta-" + i), o && (i = "Shift-" + i), i;
  }
  h(kk, "normalizeKeyName");
  function Oo(r, e, t) {
    return e.altKey && (r = "Alt-" + r), e.ctrlKey && (r = "Ctrl-" + r), e.metaKey && (r = "Meta-" + r), t !== !1 && e.shiftKey && (r = "Shift-" + r), r;
  }
  h(Oo, "modifiers");
  var wk = Or.default(
      te.domEventHandlers({
        keydown(r, e) {
          return _k(xk(e.state), r, e, "editor");
        },
      })
    ),
    bh = U.define({ enables: wk }),
    bg = new WeakMap();
  function xk(r) {
    var e = r.facet(bh),
      t = bg.get(e);
    return t || bg.set(e, (t = Bk(e.reduce((i, n) => i.concat(n), [])))), t;
  }
  h(xk, "getKeymap");
  var xi = null,
    Sk = 4e3;
  function Bk(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : vk;
    var t = Object.create(null),
      i = Object.create(null),
      n = h((o, u) => {
        var l = i[o];
        if (l == null) i[o] = u;
        else if (l != u) throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
      }, "checkPrefix"),
      s = h((o, u, l, a) => {
        var _loop = function (g) {
          var b = p.slice(0, g).join(" ");
          n(b, !0),
            d[b] ||
              (d[b] = {
                preventDefault: !0,
                run: [
                  (F) => {
                    var E = (xi = { view: F, prefix: b, scope: o });
                    return (
                      setTimeout(() => {
                        xi == E && (xi = null);
                      }, Sk),
                      !0
                    );
                  },
                ],
              });
        };
        var c, f;
        var d = t[o] || (t[o] = Object.create(null)),
          p = u.split(/ (?!$)/).map((g) => kk(g, e));
        for (var g = 1; g < p.length; g++) _loop(g);
        var m = p.join(" ");
        n(m, !1);
        var D = d[m] || (d[m] = { preventDefault: !1, run: ((f = (c = d._any) === null || c === void 0 ? void 0 : c.run) === null || f === void 0 ? void 0 : f.slice()) || [] });
        l && D.run.push(l), a && (D.preventDefault = !0);
      }, "add");
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var o = _step.value;
        var u = o.scope ? o.scope.split(" ") : ["editor"];
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        if (o.any)
          try {
            for (var _iterator1 = u[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var a = _step1.value;
              var c = t[a] || (t[a] = Object.create(null));
              c._any || (c._any = { preventDefault: !1, run: [] });
              for (var f in c) c[f].run.push(o.any);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        var l = o[e] || o.key;
        var _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        if (l)
          try {
            for (var _iterator2 = u[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var a1 = _step2.value;
              s(a1, l, o.run, o.preventDefault), o.shift && s(a1, "Shift-" + l, o.shift, o.preventDefault);
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(Bk, "buildKeymap");
  function _k(r, e, t, i) {
    var n = j0(e),
      s = Bn(n, 0),
      o = yo(s) == n.length && n != " ",
      u = "",
      l = !1;
    xi && xi.view == t && xi.scope == i && ((u = xi.prefix + " "), (l = nD.indexOf(e.keyCode) < 0) && (xi = null));
    var a = new Set(),
      c = h((m) => {
        if (m) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = m.run[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var D = _step.value;
              if (!a.has(D) && (a.add(D), D(t, e))) return !0;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          m.preventDefault && (l = !0);
        }
        return !1;
      }, "runFor"),
      f = r[i],
      d,
      p;
    if (f) {
      if (c(f[u + Oo(n, e, !o)])) return !0;
      if (o && (e.altKey || e.metaKey || e.ctrlKey) && !(Y.windows && e.ctrlKey && e.altKey) && (d = li[e.keyCode]) && d != n) {
        if (c(f[u + Oo(d, e, !0)])) return !0;
        if (e.shiftKey && (p = Tr[e.keyCode]) != n && p != d && c(f[u + Oo(p, e, !1)])) return !0;
      } else if (o && e.shiftKey && c(f[u + Oo(n, e, !0)])) return !0;
      if (c(f._any)) return !0;
    }
    return l;
  }
  h(_k, "runHandlers");
  var _i1 = class _i {
    draw() {
      var e = document.createElement("div");
      return (e.className = this.className), this.adjust(e), e;
    }
    update(e, t) {
      return t.className != this.className ? !1 : (this.adjust(e), !0);
    }
    adjust(e) {
      (e.style.left = this.left + "px"), (e.style.top = this.top + "px"), this.width != null && (e.style.width = this.width + "px"), (e.style.height = this.height + "px");
    }
    eq(e) {
      return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
    }
    static forRange(e, t, i) {
      if (i.empty) {
        var n = e.coordsAtPos(i.head, i.assoc || 1);
        if (!n) return [];
        var s = gD(e);
        return [new _i1(t, n.left - s.left, n.top - s.top, null, n.bottom - n.top)];
      } else return Ok(e, t, i);
    }
    constructor(e, t, i, n, s) {
      (this.className = e), (this.left = t), (this.top = i), (this.width = n), (this.height = s);
    }
  };
  h(_i1, "RectangleMarker");
  function gD(r) {
    var e = r.scrollDOM.getBoundingClientRect();
    return { left: (r.textDirection == Oe.LTR ? e.left : e.right - r.scrollDOM.clientWidth) - r.scrollDOM.scrollLeft, top: e.top - r.scrollDOM.scrollTop };
  }
  h(gD, "getBase");
  function Fg(r, e, t) {
    var i = j.cursor(e);
    return { from: Math.max(t.from, r.moveToLineBoundary(i, !1, !0).from), to: Math.min(t.to, r.moveToLineBoundary(i, !0, !0).from), type: Fe.Text };
  }
  h(Fg, "wrappedLine");
  function yg(r, e) {
    var t = r.lineBlockAt(e);
    if (Array.isArray(t.type)) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.type[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.to > e || (i.to == e && (i.to == t.to || i.type == Fe.Text))) return i;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return t;
  }
  h(yg, "blockAt");
  function Ok(r, e, t) {
    if (t.to <= r.viewport.from || t.from >= r.viewport.to) return [];
    var i = Math.max(t.from, r.viewport.from),
      n = Math.min(t.to, r.viewport.to),
      s = r.textDirection == Oe.LTR,
      o = r.contentDOM,
      u = o.getBoundingClientRect(),
      l = gD(r),
      a = o.querySelector(".cm-line"),
      c = a && window.getComputedStyle(a),
      f = u.left + (c ? parseInt(c.paddingLeft) + Math.min(0, parseInt(c.textIndent)) : 0),
      d = u.right - (c ? parseInt(c.paddingRight) : 0),
      p = yg(r, i),
      m = yg(r, n),
      D = p.type == Fe.Text ? p : null,
      g = m.type == Fe.Text ? m : null;
    if ((r.lineWrapping && (D && (D = Fg(r, i, D)), g && (g = Fg(r, n, g))), D && g && D.from == g.from)) return F(E(t.from, t.to, D));
    {
      var _ = D ? E(t.from, null, D) : A(p, !1),
        B = g ? E(null, t.to, g) : A(m, !0),
        I = [];
      return (D || p).to < (g || m).from - 1 ? I.push(b(f, _.bottom, d, B.top)) : _.bottom < B.top && r.elementAtHeight((_.bottom + B.top) / 2).type == Fe.Text && (_.bottom = B.top = (_.bottom + B.top) / 2), F(_).concat(I).concat(F(B));
    }
    function b(_, B, I, Q) {
      return new _i1(e, _ - l.left, B - l.top - 0.01, I - _, Q - B + 0.01);
    }
    h(b, "piece");
    function F(param) {
      var _ = param.top,
        B = param.bottom,
        I = param.horizontal;
      var Q = [];
      for (var W = 0; W < I.length; W += 2) Q.push(b(I[W], _, I[W + 1], B));
      return Q;
    }
    h(F, "pieces");
    function E(_, B, I) {
      var Q = 1e9,
        W = -1e9,
        H = [];
      function z(K, T, ee, ge, ye) {
        var fe = r.coordsAtPos(K, K == I.to ? -2 : 2),
          be = r.coordsAtPos(ee, ee == I.from ? 2 : -2);
        (Q = Math.min(fe.top, be.top, Q)), (W = Math.max(fe.bottom, be.bottom, W)), ye == Oe.LTR ? H.push(s && T ? f : fe.left, s && ge ? d : be.right) : H.push(!s && ge ? f : be.left, !s && T ? d : fe.right);
      }
      h(z, "addSpan");
      var oe = _ !== null && _ !== void 0 ? _ : I.from,
        ae = B !== null && B !== void 0 ? B : I.to;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var K = _step.value;
          if (K.to > oe && K.from < ae)
            for (var T = Math.max(K.from, oe), ee = Math.min(K.to, ae); ; ) {
              var ge = r.state.doc.lineAt(T);
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = r.bidiSpans(ge)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var ye = _step1.value;
                  var fe = ye.from + ge.from,
                    be = ye.to + ge.from;
                  if (fe >= ee) break;
                  be > T && z(Math.max(fe, T), _ == null && fe <= oe, Math.min(be, ee), B == null && be >= ae, ye.dir);
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
              if (((T = ge.to + 1), T >= ee)) break;
            }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return H.length == 0 && z(oe, _ == null, ae, B == null, r.textDirection), { top: Q, bottom: W, horizontal: H };
    }
    h(E, "drawForLine");
    function A(_, B) {
      var I = u.top + (B ? _.top : _.bottom);
      return { top: I, bottom: I, horizontal: [] };
    }
    h(A, "drawForWidget");
  }
  h(Ok, "rectanglesForRange");
  function Tk(r, e) {
    return r.constructor == e.constructor && r.eq(e);
  }
  h(Tk, "sameMarker");
  var Go = class Go {
    update(e) {
      e.startState.facet(Ko) != e.state.facet(Ko) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && e.view.requestMeasure(this.measureReq);
    }
    setOrder(e) {
      var t = 0,
        i = e.facet(Ko);
      for (; t < i.length && i[t] != this.layer; ) t++;
      this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
    }
    measure() {
      return this.layer.markers(this.view);
    }
    draw(e) {
      if (e.length != this.drawn.length || e.some((t, i) => !Tk(t, this.drawn[i]))) {
        var t = this.dom.firstChild,
          i = 0;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            n.update && t && n.constructor && this.drawn[i].constructor && n.update(t, this.drawn[i]) ? ((t = t.nextSibling), i++) : this.dom.insertBefore(n.draw(), t);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        for (; t; ) {
          var n1 = t.nextSibling;
          t.remove(), (t = n1);
        }
        this.drawn = e;
      }
    }
    destroy() {
      this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
    }
    constructor(e, t) {
      (this.view = e),
        (this.layer = t),
        (this.drawn = []),
        (this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }),
        (this.dom = e.scrollDOM.appendChild(document.createElement("div"))),
        this.dom.classList.add("cm-layer"),
        t.above && this.dom.classList.add("cm-layer-above"),
        t.class && this.dom.classList.add(t.class),
        this.dom.setAttribute("aria-hidden", "true"),
        this.setOrder(e.state),
        e.requestMeasure(this.measureReq),
        t.mount && t.mount(this.dom, e);
    }
  };
  h(Go, "LayerView");
  var Ko = U.define();
  function DD(r) {
    return [ze.define((e) => new Go(e, r)), Ko.of(r)];
  }
  h(DD, "layer");
  var bD = !Y.ios,
    Jn = U.define({
      combine(r) {
        return ui(r, { cursorBlinkRate: 1200, drawRangeCursor: !0 }, { cursorBlinkRate: (e, t) => Math.min(e, t), drawRangeCursor: (e, t) => e || t });
      },
    });
  function FD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [Jn.of(r), Rk, $k, Mk, Yg.of(!0)];
  }
  h(FD, "drawSelection");
  function yD(r) {
    return r.startState.facet(Jn) != r.state.facet(Jn);
  }
  h(yD, "configChanged");
  var Rk = DD({
    above: !0,
    markers(r) {
      var e = r.state,
        t = e.facet(Jn),
        i = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n == e.selection.main;
          if (n.empty ? !s || bD : t.drawRangeCursor) {
            var o = s ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary",
              u = n.empty ? n : j.cursor(n.head, n.head > n.anchor ? -1 : 1);
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = _i1.forRange(r, o, u)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var l = _step1.value;
                i.push(l);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i;
    },
    update(r, e) {
      r.transactions.some((i) => i.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
      var t = yD(r);
      return t && Cg(r.state, e), r.docChanged || r.selectionSet || t;
    },
    mount(r, e) {
      Cg(e.state, r);
    },
    class: "cm-cursorLayer",
  });
  function Cg(r, e) {
    e.style.animationDuration = r.facet(Jn).cursorBlinkRate + "ms";
  }
  h(Cg, "setBlinkRate");
  var $k = DD({
      above: !1,
      markers(r) {
        return r.state.selection.ranges.map((e) => (e.empty ? [] : _i1.forRange(r, "cm-selectionBackground", e))).reduce((e, t) => e.concat(t));
      },
      update(r, e) {
        return r.docChanged || r.selectionSet || r.viewportChanged || yD(r);
      },
      class: "cm-selectionLayer",
    }),
    CD = { ".cm-line": { "& ::selection": { backgroundColor: "transparent !important" }, "&::selection": { backgroundColor: "transparent !important" } } };
  bD && (CD[".cm-line"].caretColor = "transparent !important");
  var Mk = Or.highest(te.theme(CD)),
    AD = de.define({
      map(r, e) {
        return r == null ? null : e.mapPos(r);
      },
    }),
    Pn = Me.define({
      create() {
        return null;
      },
      update(r, e) {
        return r != null && (r = e.changes.mapPos(r)), e.effects.reduce((t, i) => (i.is(AD) ? i.value : t), r);
      },
    }),
    Pk = ze.fromClass(
      class {
        update(r) {
          var e;
          var t = r.state.field(Pn);
          t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), (this.cursor = null)) : (this.cursor || ((this.cursor = this.view.scrollDOM.appendChild(document.createElement("div"))), (this.cursor.className = "cm-dropCursor")), (r.startState.field(Pn) != t || r.docChanged || r.geometryChanged) && this.view.requestMeasure(this.measureReq));
        }
        readPos() {
          var r = this.view.state.field(Pn),
            e = r != null && this.view.coordsAtPos(r);
          if (!e) return null;
          var t = this.view.scrollDOM.getBoundingClientRect();
          return { left: e.left - t.left + this.view.scrollDOM.scrollLeft, top: e.top - t.top + this.view.scrollDOM.scrollTop, height: e.bottom - e.top };
        }
        drawCursor(r) {
          this.cursor && (r ? ((this.cursor.style.left = r.left + "px"), (this.cursor.style.top = r.top + "px"), (this.cursor.style.height = r.height + "px")) : (this.cursor.style.left = "-100000px"));
        }
        destroy() {
          this.cursor && this.cursor.remove();
        }
        setDropPos(r) {
          this.view.state.field(Pn) != r && this.view.dispatch({ effects: AD.of(r) });
        }
        constructor(r) {
          (this.view = r), (this.cursor = null), (this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) });
        }
      },
      {
        eventHandlers: {
          dragover(r) {
            this.setDropPos(this.view.posAtCoords({ x: r.clientX, y: r.clientY }));
          },
          dragleave(r) {
            (r.target == this.view.contentDOM || !this.view.contentDOM.contains(r.relatedTarget)) && this.setDropPos(null);
          },
          dragend() {
            this.setDropPos(null);
          },
          drop() {
            this.setDropPos(null);
          },
        },
      }
    );
  function ED() {
    return [Pn, Pk];
  }
  h(ED, "dropCursor");
  var fB = /x/.unicode != null ? "gu" : "g";
  var To = "-10000px",
    Un = class Un {
      update(e) {
        var t;
        var i = e.state.facet(this.facet),
          n = i.filter((o) => o);
        if (i === this.input) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var o = _step.value;
              o.update && o.update(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return !1;
        }
        var s = [];
        for (var o1 = 0; o1 < n.length; o1++) {
          var u = n[o1],
            l = -1;
          if (u) {
            for (var a = 0; a < this.tooltips.length; a++) {
              var c = this.tooltips[a];
              c && c.create == u.create && (l = a);
            }
            if (l < 0) s[o1] = this.createTooltipView(u);
            else {
              var a1 = (s[o1] = this.tooltipViews[l]);
              a1.update && a1.update(e);
            }
          }
        }
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator1 = this.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
            var o2 = _step1.value;
            s.indexOf(o2) < 0 && (o2.dom.remove(), (t = o2.destroy) === null || t === void 0 || t.call(o2));
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return (this.input = i), (this.tooltips = n), (this.tooltipViews = s), !0;
      }
      constructor(e, t, i) {
        (this.facet = t), (this.createTooltipView = i), (this.input = e.state.facet(t)), (this.tooltips = this.input.filter((n) => n)), (this.tooltipViews = this.tooltips.map(i));
      }
    };
  h(Un, "TooltipViewManager");
  function Lk(r) {
    var e = r.win;
    return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
  }
  h(Lk, "windowSpace");
  var Ga = U.define({
      combine: (r) => {
        var e, t, i;
        return { position: Y.ios ? "absolute" : ((e = r.find((n) => n.position)) === null || e === void 0 ? void 0 : e.position) || "fixed", parent: ((t = r.find((n) => n.parent)) === null || t === void 0 ? void 0 : t.parent) || null, tooltipSpace: ((i = r.find((n) => n.tooltipSpace)) === null || i === void 0 ? void 0 : i.tooltipSpace) || Lk };
      },
    }),
    Ag = new WeakMap(),
    qk = ze.fromClass(
      class {
        createContainer() {
          this.parent ? ((this.container = document.createElement("div")), (this.container.style.position = "relative"), (this.container.className = this.view.themeClasses), this.parent.appendChild(this.container)) : (this.container = this.view.dom);
        }
        observeIntersection() {
          if (this.intersectionObserver) {
            this.intersectionObserver.disconnect();
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                this.intersectionObserver.observe(r.dom);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        }
        measureSoon() {
          this.measureTimeout < 0 &&
            (this.measureTimeout = setTimeout(() => {
              (this.measureTimeout = -1), this.maybeMeasure();
            }, 50));
        }
        update(r) {
          r.transactions.length && (this.lastTransaction = Date.now());
          var e = this.manager.update(r);
          e && this.observeIntersection();
          var t = e || r.geometryChanged,
            i = r.state.facet(Ga);
          if (i.position != this.position) {
            this.position = i.position;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var n = _step.value;
                n.dom.style.position = this.position;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
            t = !0;
          }
          if (i.parent != this.parent) {
            this.parent && this.container.remove(), (this.parent = i.parent), this.createContainer();
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator1 = this.manager.tooltipViews[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                var n1 = _step1.value;
                this.container.appendChild(n1.dom);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            t = !0;
          } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
          t && this.maybeMeasure();
        }
        createTooltip(r) {
          var e = r.create(this.view);
          if ((e.dom.classList.add("cm-tooltip"), r.arrow && !e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow"))) {
            var t = document.createElement("div");
            (t.className = "cm-tooltip-arrow"), e.dom.appendChild(t);
          }
          return (e.dom.style.position = this.position), (e.dom.style.top = To), this.container.appendChild(e.dom), e.mount && e.mount(this.view), e;
        }
        destroy() {
          var r, e;
          this.view.win.removeEventListener("resize", this.measureSoon);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.dom.remove(), (r = t.destroy) === null || r === void 0 || r.call(t);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          (e = this.intersectionObserver) === null || e === void 0 || e.disconnect(), clearTimeout(this.measureTimeout);
        }
        readMeasure() {
          var r = this.view.dom.getBoundingClientRect();
          return {
            editor: r,
            parent: this.parent ? this.container.getBoundingClientRect() : r,
            pos: this.manager.tooltips.map((e, t) => {
              var i = this.manager.tooltipViews[t];
              return i.getCoords ? i.getCoords(e.pos) : this.view.coordsAtPos(e.pos);
            }),
            size: this.manager.tooltipViews.map((param) => {
              var e = param.dom;
              return e.getBoundingClientRect();
            }),
            space: this.view.state.facet(Ga).tooltipSpace(this.view),
          };
        }
        writeMeasure(r) {
          var e;
          var t = r.editor,
            i = r.space,
            n = [];
          for (var s = 0; s < this.manager.tooltips.length; s++) {
            var o = this.manager.tooltips[s],
              u = this.manager.tooltipViews[s],
              l = u.dom,
              a = r.pos[s],
              c = r.size[s];
            if (!a || a.bottom <= Math.max(t.top, i.top) || a.top >= Math.min(t.bottom, i.bottom) || a.right < Math.max(t.left, i.left) - 0.1 || a.left > Math.min(t.right, i.right) + 0.1) {
              l.style.top = To;
              continue;
            }
            var f = o.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null,
              d = f ? 7 : 0,
              p = c.right - c.left,
              m = (e = Ag.get(u)) !== null && e !== void 0 ? e : c.bottom - c.top,
              D = u.offset || Nk,
              g = this.view.textDirection == Oe.LTR,
              b = c.width > i.right - i.left ? (g ? i.left : i.right - c.width) : g ? Math.min(a.left - (f ? 14 : 0) + D.x, i.right - p) : Math.max(i.left, a.left - p + (f ? 14 : 0) - D.x),
              F = !!o.above;
            !o.strictSide && (F ? a.top - (c.bottom - c.top) - D.y < i.top : a.bottom + (c.bottom - c.top) + D.y > i.bottom) && F == i.bottom - a.bottom > a.top - i.top && (F = !F);
            var E = (F ? a.top - i.top : i.bottom - a.bottom) - d;
            if (E < m && u.resize !== !1) {
              if (E < this.view.defaultLineHeight) {
                l.style.top = To;
                continue;
              }
              Ag.set(u, m), (l.style.height = (m = E) + "px");
            } else l.style.height && (l.style.height = "");
            var A = F ? a.top - m - d - D.y : a.bottom + d + D.y,
              _ = b + p;
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            if (u.overlap !== !0)
              try {
                for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  var B = _step.value;
                  B.left < _ && B.right > b && B.top < A + m && B.bottom > A && (A = F ? B.top - m - 2 - d : B.bottom + d + 2);
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }
            this.position == "absolute" ? ((l.style.top = A - r.parent.top + "px"), (l.style.left = b - r.parent.left + "px")) : ((l.style.top = A + "px"), (l.style.left = b + "px")),
              f && (f.style.left = "".concat(a.left + (g ? D.x : -D.x) - (b + 14 - 7), "px")),
              u.overlap !== !0 && n.push({ left: b, top: A, right: _, bottom: A + m }),
              l.classList.toggle("cm-tooltip-above", F),
              l.classList.toggle("cm-tooltip-below", !F),
              u.positioned && u.positioned(r.space);
          }
        }
        maybeMeasure() {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && ((this.inView = this.view.inView), !this.inView)))
            try {
              for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var r = _step.value;
                r.dom.style.top = To;
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        constructor(r) {
          (this.view = r), (this.inView = !0), (this.lastTransaction = 0), (this.measureTimeout = -1);
          var e = r.state.facet(Ga);
          (this.position = e.position),
            (this.parent = e.parent),
            (this.classes = r.themeClasses),
            this.createContainer(),
            (this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }),
            (this.manager = new Un(r, Fh, (t) => this.createTooltip(t))),
            (this.intersectionObserver =
              typeof IntersectionObserver == "function"
                ? new IntersectionObserver(
                    (t) => {
                      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
                    },
                    { threshold: [1] }
                  )
                : null),
            this.observeIntersection(),
            r.win.addEventListener("resize", (this.measureSoon = this.measureSoon.bind(this))),
            this.maybeMeasure();
        }
      },
      {
        eventHandlers: {
          scroll() {
            this.maybeMeasure();
          },
        },
      }
    ),
    Ik = te.baseTheme({
      ".cm-tooltip": { zIndex: 100, boxSizing: "border-box" },
      "&light .cm-tooltip": { border: "1px solid #bbb", backgroundColor: "#f5f5f5" },
      "&light .cm-tooltip-section:not(:first-child)": { borderTop: "1px solid #bbb" },
      "&dark .cm-tooltip": { backgroundColor: "#333338", color: "white" },
      ".cm-tooltip-arrow": {
        height: "7px",
        width: "".concat(7 * 2, "px"),
        position: "absolute",
        zIndex: -1,
        overflow: "hidden",
        "&:before, &:after": { content: "''", position: "absolute", width: 0, height: 0, borderLeft: "7px solid transparent", borderRight: "7px solid transparent" },
        ".cm-tooltip-above &": { bottom: "-7px", "&:before": { borderTop: "7px solid #bbb" }, "&:after": { borderTop: "7px solid #f5f5f5", bottom: "1px" } },
        ".cm-tooltip-below &": { top: "-7px", "&:before": { borderBottom: "7px solid #bbb" }, "&:after": { borderBottom: "7px solid #f5f5f5", top: "1px" } },
      },
      "&dark .cm-tooltip .cm-tooltip-arrow": { "&:before": { borderTopColor: "#333338", borderBottomColor: "#333338" }, "&:after": { borderTopColor: "transparent", borderBottomColor: "transparent" } },
    }),
    Nk = { x: 0, y: 0 },
    Fh = U.define({ enables: [qk, Ik] }),
    ru = U.define(),
    Nr = class Nr1 {
      static create(e) {
        return new Nr(e);
      }
      createHostedView(e) {
        var t = e.create(this.view);
        return t.dom.classList.add("cm-tooltip-section"), this.dom.appendChild(t.dom), this.mounted && t.mount && t.mount(this.view), t;
      }
      mount(e) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            t.mount && t.mount(e);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.mounted = !0;
      }
      positioned(e) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.manager.tooltipViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            t.positioned && t.positioned(e);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      update(e) {
        this.manager.update(e);
      }
      constructor(e) {
        (this.view = e), (this.mounted = !1), (this.dom = document.createElement("div")), this.dom.classList.add("cm-tooltip-hover"), (this.manager = new Un(e, ru, (t) => this.createHostedView(t)));
      }
    };
  h(Nr, "HoverTooltipHost");
  var Vk = Fh.compute([ru], (r) => {
      var e = r.facet(ru).filter((t) => t);
      return e.length === 0 ? null : { pos: Math.min(...e.map((t) => t.pos)), end: Math.max(...e.filter((t) => t.end != null).map((t) => t.end)), create: Nr.create, above: e[0].above, arrow: e.some((t) => t.arrow) };
    }),
    Xo = class Xo {
      update() {
        this.pending && ((this.pending = null), clearTimeout(this.restartTimeout), (this.restartTimeout = setTimeout(() => this.startHover(), 20)));
      }
      get active() {
        return this.view.state.field(this.field);
      }
      checkHover() {
        if (((this.hoverTimeout = -1), this.active)) return;
        var e = Date.now() - this.lastMove.time;
        e < this.hoverTime ? (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e)) : this.startHover();
      }
      startHover() {
        clearTimeout(this.restartTimeout);
        var _this = this,
          e = _this.lastMove,
          t = this.view.contentDOM.contains(e.target) ? this.view.posAtCoords(e) : null;
        if (t == null) return;
        var i = this.view.coordsAtPos(t);
        if (i == null || e.y < i.top || e.y > i.bottom || e.x < i.left - this.view.defaultCharacterWidth || e.x > i.right + this.view.defaultCharacterWidth) return;
        var n = this.view.bidiSpans(this.view.state.doc.lineAt(t)).find((u) => u.from <= t && u.to >= t),
          s = n && n.dir == Oe.RTL ? -1 : 1,
          o = this.source(this.view, t, e.x < i.left ? -s : s);
        if (o === null || o === void 0 ? void 0 : o.then) {
          var u = (this.pending = { pos: t });
          o.then(
            (l) => {
              this.pending == u && ((this.pending = null), l && this.view.dispatch({ effects: this.setHover.of(l) }));
            },
            (l) => Ft(this.view.state, l, "hover tooltip")
          );
        } else o && this.view.dispatch({ effects: this.setHover.of(o) });
      }
      mousemove(e) {
        var t;
        (this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }), this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
        var i = this.active;
        if ((i && !Eg(this.lastMove.target)) || this.pending) {
          var _ref = i || this.pending,
            n = _ref.pos,
            s = (t = i === null || i === void 0 ? void 0 : i.end) !== null && t !== void 0 ? t : n;
          (n == s ? this.view.posAtCoords(this.lastMove) != n : !zk(this.view, n, s, e.clientX, e.clientY, 6)) && (this.view.dispatch({ effects: this.setHover.of(null) }), (this.pending = null));
        }
      }
      mouseleave(e) {
        clearTimeout(this.hoverTimeout), (this.hoverTimeout = -1), this.active && !Eg(e.relatedTarget) && this.view.dispatch({ effects: this.setHover.of(null) });
      }
      destroy() {
        clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
      }
      constructor(e, t, i, n, s) {
        (this.view = e),
          (this.source = t),
          (this.field = i),
          (this.setHover = n),
          (this.hoverTime = s),
          (this.hoverTimeout = -1),
          (this.restartTimeout = -1),
          (this.pending = null),
          (this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }),
          (this.checkHover = this.checkHover.bind(this)),
          e.dom.addEventListener("mouseleave", (this.mouseleave = this.mouseleave.bind(this))),
          e.dom.addEventListener("mousemove", (this.mousemove = this.mousemove.bind(this)));
      }
    };
  h(Xo, "HoverPlugin");
  function Eg(r) {
    for (var e = r; e; e = e.parentNode) if (e.nodeType == 1 && e.classList.contains("cm-tooltip")) return !0;
    return !1;
  }
  h(Eg, "isInTooltip");
  function zk(r, e, t, i, n, s) {
    var o = document.createRange(),
      u = r.domAtPos(e),
      l = r.domAtPos(t);
    o.setEnd(l.node, l.offset), o.setStart(u.node, u.offset);
    var a = o.getClientRects();
    o.detach();
    for (var c = 0; c < a.length; c++) {
      var f = a[c];
      if (Math.max(f.top - n, n - f.bottom, f.left - i, i - f.right) <= s) return !0;
    }
    return !1;
  }
  h(zk, "isOverRange");
  function vD(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var t = de.define(),
      i = Me.define({
        create() {
          return null;
        },
        update(n, s) {
          if (n && ((e.hideOnChange && (s.docChanged || s.selection)) || (e.hideOn && e.hideOn(s, n)))) return null;
          if (n && s.docChanged) {
            var o = s.changes.mapPos(n.pos, -1, Xe.TrackDel);
            if (o == null) return null;
            var u = Object.assign(Object.create(null), n);
            (u.pos = o), n.end != null && (u.end = s.changes.mapPos(n.end)), (n = u);
          }
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = s.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var o1 = _step.value;
              o1.is(t) && (n = o1.value), o1.is(Wk) && (n = null);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return n;
        },
        provide: (n) => ru.from(n),
      });
    return [i, ze.define((n) => new Xo(n, r, i, t, e.hoverTime || 300)), Vk];
  }
  h(vD, "hoverTooltip");
  var Wk = de.define();
  var vg = U.define({
    combine(r) {
      var e, t;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          (e = e || i.topContainer), (t = t || i.bottomContainer);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return { topContainer: e, bottomContainer: t };
    },
  });
  var jk = ze.fromClass(
      class {
        update(r) {
          var e = r.state.facet(vg);
          this.top.container != e.topContainer && (this.top.sync([]), (this.top = new Xi(r.view, !0, e.topContainer))), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), (this.bottom = new Xi(r.view, !1, e.bottomContainer))), this.top.syncClasses(), this.bottom.syncClasses();
          var t = r.state.facet(nu);
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          if (t != this.input) {
            var i = t.filter((l) => l),
              n = [],
              s = [],
              o = [],
              u = [];
            var _iteratorNormalCompletion1 = true,
              _didIteratorError1 = false,
              _iteratorError1 = undefined;
            try {
              for (var _iterator = i[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
                var l = _step.value;
                var a = this.specs.indexOf(l),
                  c = void 0;
                a < 0 ? ((c = l(r.view)), u.push(c)) : ((c = this.panels[a]), c.update && c.update(r)), n.push(c), (c.top ? s : o).push(c);
              }
            } catch (err) {
              _didIteratorError1 = true;
              _iteratorError1 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion1 && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError1) {
                  throw _iteratorError1;
                }
              }
            }
            (this.specs = i), (this.panels = n), this.top.sync(s), this.bottom.sync(o);
            var _iteratorNormalCompletion2 = true,
              _didIteratorError2 = false,
              _iteratorError2 = undefined;
            try {
              for (var _iterator1 = u[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
                var l1 = _step1.value;
                l1.dom.classList.add("cm-panel"), l1.mount && l1.mount();
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          } else
            try {
              for (var _iterator2 = this.panels[Symbol.iterator](), _step2; !(_iteratorNormalCompletion = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion = true) {
                var i1 = _step2.value;
                i1.update && i1.update(r);
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator2.return != null) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
        }
        destroy() {
          this.top.sync([]), this.bottom.sync([]);
        }
        constructor(r) {
          (this.input = r.state.facet(nu)), (this.specs = this.input.filter((t) => t)), (this.panels = this.specs.map((t) => t(r)));
          var e = r.state.facet(vg);
          (this.top = new Xi(r, !0, e.topContainer)), (this.bottom = new Xi(r, !1, e.bottomContainer)), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var t = _step.value;
              t.dom.classList.add("cm-panel"), t.mount && t.mount();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
      },
      {
        provide: (r) =>
          te.scrollMargins.of((e) => {
            var t = e.plugin(r);
            return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
          }),
      }
    ),
    Xi = class Xi {
      sync(e) {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            t.destroy && e.indexOf(t) < 0 && t.destroy();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.panels = e), this.syncDOM();
      }
      syncDOM() {
        if (this.panels.length == 0) {
          this.dom && (this.dom.remove(), (this.dom = void 0));
          return;
        }
        if (!this.dom) {
          (this.dom = document.createElement("div")), (this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom"), (this.dom.style[this.top ? "top" : "bottom"] = "0");
          var t = this.container || this.view.dom;
          t.insertBefore(this.dom, this.top ? t.firstChild : null);
        }
        var e = this.dom.firstChild;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.panels[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t1 = _step.value;
            if (t1.dom.parentNode == this.dom) {
              for (; e != t1.dom; ) e = kg(e);
              e = e.nextSibling;
            } else this.dom.insertBefore(t1.dom, e);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        for (; e; ) e = kg(e);
      }
      scrollMargin() {
        return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
      }
      syncClasses() {
        if (!(!this.container || this.classes == this.view.themeClasses)) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = this.classes.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              e && this.container.classList.remove(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = (this.classes = this.view.themeClasses).split(" ")[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var e1 = _step1.value;
              e1 && this.container.classList.add(e1);
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
        }
      }
      constructor(e, t, i) {
        (this.view = e), (this.top = t), (this.container = i), (this.dom = void 0), (this.classes = ""), (this.panels = []), this.syncClasses();
      }
    };
  h(Xi, "PanelGroup");
  function kg(r) {
    var e = r.nextSibling;
    return r.remove(), e;
  }
  h(kg, "rm");
  var nu = U.define({ enables: jk }),
    ft = class ft extends zt {
      compare(e) {
        return this == e || (this.constructor == e.constructor && this.eq(e));
      }
      eq(e) {
        return !1;
      }
      destroy(e) {}
    };
  h(ft, "GutterMarker");
  ft.prototype.elementClass = "";
  ft.prototype.toDOM = void 0;
  ft.prototype.mapMode = Xe.TrackBefore;
  ft.prototype.startSide = ft.prototype.endSide = -1;
  ft.prototype.point = !0;
  var Qo = U.define();
  var Jo = U.define();
  var dh = U.define({ combine: (r) => r.some((e) => e) });
  function Hk(r) {
    var e = [Uk];
    return r && r.fixed === !1 && e.push(dh.of(!0)), e;
  }
  h(Hk, "gutters");
  var Uk = ze.fromClass(
    class {
      update(r) {
        if (this.updateGutters(r)) {
          var e = this.prevViewport,
            t = r.view.viewport,
            i = Math.min(e.to, t.to) - Math.max(e.from, t.from);
          this.syncGutters(i < (t.to - t.from) * 0.8);
        }
        r.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight + "px"), this.view.state.facet(dh) != !this.fixed && ((this.fixed = !this.fixed), (this.dom.style.position = this.fixed ? "sticky" : "")), (this.prevViewport = r.view.viewport);
      }
      syncGutters(r) {
        var e = this.dom.nextSibling;
        r && this.dom.remove();
        var t = pe.iter(this.view.state.facet(Qo), this.view.viewport.from),
          i = [],
          n = this.gutters.map((s) => new Zo(s, this.view.viewport, -this.view.documentPadding.top));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.view.viewportLineBlocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            var o = void 0;
            if (Array.isArray(s.type)) {
              var _iteratorNormalCompletion1 = true,
                _didIteratorError1 = false,
                _iteratorError1 = undefined;
              try {
                for (var _iterator1 = s.type[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
                  var u = _step1.value;
                  if (u.type == Fe.Text) {
                    o = u;
                    break;
                  }
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                    _iterator1.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
            } else o = s.type == Fe.Text ? s : void 0;
            if (o) {
              i.length && (i = []), kD(t, i, s.from);
              var _iteratorNormalCompletion2 = true,
                _didIteratorError2 = false,
                _iteratorError2 = undefined;
              try {
                for (var _iterator2 = n[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  var u1 = _step2.value;
                  u1.line(this.view, o, i);
                }
              } catch (err) {
                _didIteratorError2 = true;
                _iteratorError2 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                    _iterator2.return();
                  }
                } finally {
                  if (_didIteratorError2) {
                    throw _iteratorError2;
                  }
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var _iteratorNormalCompletion3 = true,
          _didIteratorError3 = false,
          _iteratorError3 = undefined;
        try {
          for (var _iterator3 = n[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var s1 = _step3.value;
            s1.finish();
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
        r && this.view.scrollDOM.insertBefore(this.dom, e);
      }
      updateGutters(r) {
        var e = r.startState.facet(Jo),
          t = r.state.facet(Jo),
          i = r.docChanged || r.heightChanged || r.viewportChanged || !pe.eq(r.startState.facet(Qo), r.state.facet(Qo), r.view.viewport.from, r.view.viewport.to);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if (e == t)
          try {
            for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              n.update(r) && (i = !0);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        else {
          i = !0;
          var n1 = [];
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = t[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step1.value;
              var o = e.indexOf(s);
              o < 0 ? n1.push(new Yn(this.view, s)) : (this.gutters[o].update(r), n1.push(this.gutters[o]));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          var _iteratorNormalCompletion2 = true,
            _didIteratorError2 = false,
            _iteratorError2 = undefined;
          try {
            for (var _iterator2 = this.gutters[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var s1 = _step2.value;
              s1.dom.remove(), n1.indexOf(s1) < 0 && s1.destroy();
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          var _iteratorNormalCompletion3 = true,
            _didIteratorError3 = false,
            _iteratorError3 = undefined;
          try {
            for (var _iterator3 = n1[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var s2 = _step3.value;
              this.dom.appendChild(s2.dom);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
          this.gutters = n1;
        }
        return i;
      }
      destroy() {
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var r = _step.value;
            r.destroy();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.dom.remove();
      }
      constructor(r) {
        (this.view = r), (this.prevViewport = r.viewport), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutters"), this.dom.setAttribute("aria-hidden", "true"), (this.dom.style.minHeight = this.view.contentHeight + "px"), (this.gutters = r.state.facet(Jo).map((e) => new Yn(r, e)));
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.gutters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var e = _step.value;
            this.dom.appendChild(e.dom);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        (this.fixed = !r.state.facet(dh)), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), r.scrollDOM.insertBefore(this.dom, r.contentDOM);
      }
    },
    {
      provide: (r) =>
        te.scrollMargins.of((e) => {
          var t = e.plugin(r);
          return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == Oe.LTR ? { left: t.dom.offsetWidth } : { right: t.dom.offsetWidth };
        }),
    }
  );
  function wg(r) {
    return Array.isArray(r) ? r : [r];
  }
  h(wg, "asArray");
  function kD(r, e, t) {
    for (; r.value && r.from <= t; ) r.from == t && e.push(r.value), r.next();
  }
  h(kD, "advanceCursor");
  var Zo = class Zo {
    line(e, t, i) {
      var n = [];
      kD(this.cursor, n, t.from), i.length && (n = n.concat(i));
      var s = this.gutter.config.lineMarker(e, t, n);
      s && n.unshift(s);
      var o = this.gutter;
      if (n.length == 0 && !o.config.renderEmptyElements) return;
      var u = t.top - this.height;
      if (this.i == o.elements.length) {
        var l = new Gn(e, t.height, u, n);
        o.elements.push(l), o.dom.appendChild(l.dom);
      } else o.elements[this.i].update(e, t.height, u, n);
      (this.height = t.bottom), this.i++;
    }
    finish() {
      var e = this.gutter;
      for (; e.elements.length > this.i; ) {
        var t = e.elements.pop();
        e.dom.removeChild(t.dom), t.destroy();
      }
    }
    constructor(e, t, i) {
      (this.gutter = e), (this.height = i), (this.i = 0), (this.cursor = pe.iter(e.markers, t.from));
    }
  };
  h(Zo, "UpdateContext");
  var Yn = class Yn {
    update(e) {
      var t = this.markers;
      if (((this.markers = wg(this.config.markers(e.view))), this.spacer && this.config.updateSpacer)) {
        var n = this.config.updateSpacer(this.spacer.markers[0], e);
        n != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [n]);
      }
      var i = e.view.viewport;
      return !pe.eq(this.markers, t, i.from, i.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
    }
    destroy() {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var e = _step.value;
          e.destroy();
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    constructor(e, t) {
      var _this = this,
        _loop = function (i) {
          _this.dom.addEventListener(i, (n) => {
            var s = n.target,
              o;
            if (s != _this.dom && _this.dom.contains(s)) {
              for (; s.parentNode != _this.dom; ) s = s.parentNode;
              var l = s.getBoundingClientRect();
              o = (l.top + l.bottom) / 2;
            } else o = n.clientY;
            var u = e.lineBlockAtHeight(o - e.documentTop);
            t.domEventHandlers[i](e, u, n) && n.preventDefault();
          });
        };
      (this.view = e), (this.config = t), (this.elements = []), (this.spacer = null), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : ""));
      for (var i in t.domEventHandlers) _loop(i);
      (this.markers = wg(t.markers(e))), t.initialSpacer && ((this.spacer = new Gn(e, 0, 0, [t.initialSpacer(e)])), this.dom.appendChild(this.spacer.dom), (this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none"));
    }
  };
  h(Yn, "SingleGutterView");
  var Gn = class Gn {
    update(e, t, i, n) {
      this.height != t && (this.dom.style.height = (this.height = t) + "px"), this.above != i && (this.dom.style.marginTop = (this.above = i) ? i + "px" : ""), Yk(this.markers, n) || this.setMarkers(e, n);
    }
    setMarkers(e, t) {
      var i = "cm-gutterElement",
        n = this.dom.firstChild;
      for (var s = 0, o = 0; ; ) {
        var u = o,
          l = s < t.length ? t[s++] : null,
          a = !1;
        if (l) {
          var c = l.elementClass;
          c && (i += " " + c);
          for (var f = o; f < this.markers.length; f++)
            if (this.markers[f].compare(l)) {
              (u = f), (a = !0);
              break;
            }
        } else u = this.markers.length;
        for (; o < u; ) {
          var c1 = this.markers[o++];
          if (c1.toDOM) {
            c1.destroy(n);
            var f1 = n.nextSibling;
            n.remove(), (n = f1);
          }
        }
        if (!l) break;
        l.toDOM && (a ? (n = n.nextSibling) : this.dom.insertBefore(l.toDOM(e), n)), a && o++;
      }
      (this.dom.className = i), (this.markers = t);
    }
    destroy() {
      this.setMarkers(null, []);
    }
    constructor(e, t, i, n) {
      (this.height = -1), (this.above = 0), (this.markers = []), (this.dom = document.createElement("div")), (this.dom.className = "cm-gutterElement"), this.update(e, t, i, n);
    }
  };
  h(Gn, "GutterElement");
  function Yk(r, e) {
    if (r.length != e.length) return !1;
    for (var t = 0; t < r.length; t++) if (!r[t].compare(e[t])) return !1;
    return !0;
  }
  h(Yk, "sameMarkers");
  var Gk = U.define(),
    $r = U.define({
      combine(r) {
        return ui(
          r,
          { formatNumber: String, domEventHandlers: {} },
          {
            domEventHandlers(e, t) {
              var _loop = function (n) {
                var s = i[n],
                  o = t[n];
                i[n] = s ? (u, l, a) => s(u, l, a) || o(u, l, a) : o;
              };
              var i = Object.assign({}, e);
              for (var n in t) _loop(n);
              return i;
            },
          }
        );
      },
    }),
    Vr = class Vr extends ft {
      eq(e) {
        return this.number == e.number;
      }
      toDOM() {
        return document.createTextNode(this.number);
      }
      constructor(e) {
        super(), (this.number = e);
      }
    };
  h(Vr, "NumberMarker");
  function Ka(r, e) {
    return r.state.facet($r).formatNumber(e, r.state);
  }
  h(Ka, "formatNumber");
  var Kk = Jo.compute([$r], (r) => ({
    class: "cm-lineNumbers",
    renderEmptyElements: !1,
    markers(e) {
      return e.state.facet(Gk);
    },
    lineMarker(e, t, i) {
      return i.some((n) => n.toDOM) ? null : new Vr(Ka(e, e.state.doc.lineAt(t.from).number));
    },
    lineMarkerChange: (e) => e.startState.facet($r) != e.state.facet($r),
    initialSpacer(e) {
      return new Vr(Ka(e, xg(e.state.doc.lines)));
    },
    updateSpacer(e, t) {
      var i = Ka(t.view, xg(t.view.state.doc.lines));
      return i == e.number ? e : new Vr(i);
    },
    domEventHandlers: r.facet($r).domEventHandlers,
  }));
  function wD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [$r.of(r), Hk(), Kk];
  }
  h(wD, "lineNumbers");
  function xg(r) {
    var e = 9;
    for (; e < r; ) e = e * 10 + 9;
    return e;
  }
  h(xg, "maxLineNumber");
  var Xk = new (class extends ft {
      constructor() {
        super(...arguments), (this.elementClass = "cm-activeLineGutter");
      }
    })(),
    Qk = Qo.compute(["selection"], (r) => {
      var e = [],
        t = -1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = r.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = r.doc.lineAt(i.head).from;
          n > t && ((t = n), e.push(Xk.range(n)));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return pe.of(e);
    });
  function xD() {
    return Qk;
  }
  h(xD, "highlightActiveLineGutter");
  var Jk = 0,
    jr = class jr {
      constructor(e, t) {
        (this.from = e), (this.to = t);
      }
    };
  h(jr, "Range");
  var ue = class ue {
    add(e) {
      if (this.perNode) throw new RangeError("Can't add per-node props to node types");
      return (
        typeof e != "function" && (e = Ie.match(e)),
        (t) => {
          var i = e(t);
          return i === void 0 ? null : [this, i];
        }
      );
    }
    constructor(ref) {
      var e = ref === void 0 ? {} : ref;
      (this.id = Jk++),
        (this.perNode = !!e.perNode),
        (this.deserialize =
          e.deserialize ||
          (() => {
            throw new Error("This node type doesn't define a deserialize function");
          }));
    }
  };
  h(ue, "NodeProp");
  ue.closedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.openedBy = new ue({ deserialize: (r) => r.split(" ") });
  ue.group = new ue({ deserialize: (r) => r.split(" ") });
  ue.contextHash = new ue({ perNode: !0 });
  ue.lookAhead = new ue({ perNode: !0 });
  ue.mounted = new ue({ perNode: !0 });
  var Zk = Object.create(null),
    Ie = class Ie1 {
      static define(e) {
        var t = e.props && e.props.length ? Object.create(null) : Zk,
          i = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0),
          n = new Ie(e.name || "", t, e.id, i);
        if (e.props) {
          var _iteratorNormalCompletion = true,
            _didIteratorError = false,
            _iteratorError = undefined;
          try {
            for (var _iterator = e.props[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var s = _step.value;
              if ((Array.isArray(s) || (s = s(n)), s)) {
                if (s[0].perNode) throw new RangeError("Can't store a per-node prop on a node type");
                t[s[0].id] = s[1];
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }
        return n;
      }
      prop(e) {
        return this.props[e.id];
      }
      get isTop() {
        return (this.flags & 1) > 0;
      }
      get isSkipped() {
        return (this.flags & 2) > 0;
      }
      get isError() {
        return (this.flags & 4) > 0;
      }
      get isAnonymous() {
        return (this.flags & 8) > 0;
      }
      is(e) {
        if (typeof e == "string") {
          if (this.name == e) return !0;
          var t = this.prop(ue.group);
          return t ? t.indexOf(e) > -1 : !1;
        }
        return this.id == e;
      }
      static match(e) {
        var t = Object.create(null);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        for (var i in e)
          try {
            for (var _iterator = i.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var n = _step.value;
              t[n] = e[i];
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        return (i) => {
          for (var n = i.prop(ue.group), s = -1; s < (n ? n.length : 0); s++) {
            var o = t[s < 0 ? i.name : n[s]];
            if (o) return o;
          }
        };
      }
      constructor(e, t, i, ref) {
        var n = ref === void 0 ? 0 : ref;
        (this.name = e), (this.props = t), (this.id = i), (this.flags = n);
      }
    };
  h(Ie, "NodeType");
  Ie.none = new Ie("", Object.create(null), 0, 8);
  var Oi = class Oi1 {
    extend() {
      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
        e[_key] = arguments[_key];
      }
      var t = [];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.types[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = null;
          var _iteratorNormalCompletion1 = true,
            _didIteratorError1 = false,
            _iteratorError1 = undefined;
          try {
            for (var _iterator1 = e[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true) {
              var s = _step1.value;
              var o = s(i);
              o && (n || (n = Object.assign({}, i.props)), (n[o[0].id] = o[1]));
            }
          } catch (err) {
            _didIteratorError1 = true;
            _iteratorError1 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion1 && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError1) {
                throw _iteratorError1;
              }
            }
          }
          t.push(n ? new Ie(i.name, n, i.id, i.flags) : i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return new Oi(t);
    }
    constructor(e) {
      this.types = e;
      for (var t = 0; t < e.length; t++) if (e[t].id != t) throw new RangeError("Node type ids should correspond to array positions when creating a node set");
    }
  };
  h(Oi, "NodeSet");
  var uu = new WeakMap(),
    SD = new WeakMap(),
    qe;
  (function (r) {
    (r[(r.ExcludeBuffers = 1)] = "ExcludeBuffers"), (r[(r.IncludeAnonymous = 2)] = "IncludeAnonymous"), (r[(r.IgnoreMounts = 4)] = "IgnoreMounts"), (r[(r.IgnoreOverlays = 8)] = "IgnoreOverlays");
  })(qe || (qe = {}));
  var ve = class ve1 {
    toString() {
      var e = this.prop(ue.mounted);
      if (e && !e.overlay) return e.tree.toString();
      var t = "";
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          var n = i.toString();
          n && (t && (t += ","), (t += n));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
    }
    cursor() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return new tr(this.topNode, e);
    }
    cursorAt(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var n = uu.get(this) || this.topNode,
        s = new tr(n);
      return s.moveTo(e, t), uu.set(this, s._tree), s;
    }
    get topNode() {
      return new yt(this, 0, 0, null);
    }
    resolve(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var i = Ur(uu.get(this) || this.topNode, e, t, !1);
      return uu.set(this, i), i;
    }
    resolveInner(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var i = Ur(SD.get(this) || this.topNode, e, t, !0);
      return SD.set(this, i), i;
    }
    iterate(e) {
      var t = e.enter,
        i = e.leave,
        tmp = e.from,
        n = tmp === void 0 ? 0 : tmp,
        tmp1 = e.to,
        s = tmp1 === void 0 ? this.length : tmp1;
      for (var o = this.cursor((e.mode || 0) | qe.IncludeAnonymous); ; ) {
        var u = !1;
        if (o.from <= s && o.to >= n && (o.type.isAnonymous || t(o) !== !1)) {
          if (o.firstChild()) continue;
          u = !0;
        }
        for (; u && i && !o.type.isAnonymous && i(o), !o.nextSibling(); ) {
          if (!o.parent()) return;
          u = !0;
        }
      }
    }
    prop(e) {
      return e.perNode ? (this.props ? this.props[e.id] : void 0) : this.type.prop(e);
    }
    get propValues() {
      var e = [];
      if (this.props) for (var t in this.props) e.push([+t, this.props[t]]);
      return e;
    }
    balance() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return this.children.length <= 8 ? this : Ch(Ie.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, i, n) => new ve(this.type, t, i, n, this.propValues), e.makeTree || ((t, i, n) => new ve(Ie.none, t, i, n)));
    }
    static build(e) {
      return ew(e);
    }
    constructor(e, t, i, n, s) {
      if (((this.type = e), (this.children = t), (this.positions = i), (this.length = n), (this.props = null), s && s.length)) {
        this.props = Object.create(null);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step_value = _slicedToArray(_step.value, 2),
              o = _step_value[0],
              u = _step_value[1];
            this.props[typeof o == "number" ? o : o.id] = u;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }
  };
  h(ve, "Tree");
  ve.empty = new ve(Ie.none, [], [], 0);
  var Hr = class Hr1 {
    get id() {
      return this.buffer[this.index - 4];
    }
    get start() {
      return this.buffer[this.index - 3];
    }
    get end() {
      return this.buffer[this.index - 2];
    }
    get size() {
      return this.buffer[this.index - 1];
    }
    get pos() {
      return this.index;
    }
    next() {
      this.index -= 4;
    }
    fork() {
      return new Hr(this.buffer, this.index);
    }
    constructor(e, t) {
      (this.buffer = e), (this.index = t);
    }
  };
  h(Hr, "FlatBufferCursor");
  var Gt = class Gt1 {
    get type() {
      return Ie.none;
    }
    toString() {
      var e = [];
      for (var t = 0; t < this.buffer.length; ) e.push(this.childString(t)), (t = this.buffer[t + 3]);
      return e.join(",");
    }
    childString(e) {
      var t = this.buffer[e],
        i = this.buffer[e + 3],
        n = this.set.types[t],
        s = n.name;
      if ((/\W/.test(s) && !n.isError && (s = JSON.stringify(s)), (e += 4), i == e)) return s;
      var o = [];
      for (; e < i; ) o.push(this.childString(e)), (e = this.buffer[e + 3]);
      return s + "(" + o.join(",") + ")";
    }
    findChild(e, t, i, n, s) {
      var _this = this,
        o = _this.buffer,
        u = -1;
      for (var l = e; l != t && !(_D(s, n, o[l + 1], o[l + 2]) && ((u = l), i > 0)); l = o[l + 3]);
      return u;
    }
    slice(e, t, i) {
      var n = this.buffer,
        s = new Uint16Array(t - e),
        o = 0;
      for (var u = e, l = 0; u < t; ) {
        (s[l++] = n[u++]), (s[l++] = n[u++] - i);
        var a = (s[l++] = n[u++] - i);
        (s[l++] = n[u++] - e), (o = Math.max(o, a));
      }
      return new Gt(s, o, this.set);
    }
    constructor(e, t, i) {
      (this.buffer = e), (this.length = t), (this.set = i);
    }
  };
  h(Gt, "TreeBuffer");
  function _D(r, e, t, i) {
    switch (r) {
      case -2:
        return t < e;
      case -1:
        return i >= e && t < e;
      case 0:
        return t < e && i > e;
      case 1:
        return t <= e && i > e;
      case 2:
        return i > e;
      case 4:
        return !0;
    }
  }
  h(_D, "checkSide");
  function OD(r, e) {
    var t = r.childBefore(e);
    for (; t; ) {
      var i = t.lastChild;
      if (!i || i.to != t.to) break;
      i.type.isError && i.from == i.to ? ((r = t), (t = i.prevSibling)) : (t = i);
    }
    return r;
  }
  h(OD, "enterUnfinishedNodesBefore");
  function Ur(r, e, t, i) {
    for (var n; r.from == r.to || (t < 1 ? r.from >= e : r.from > e) || (t > -1 ? r.to <= e : r.to < e); ) {
      var o = !i && r instanceof yt && r.index < 0 ? null : r.parent;
      if (!o) return r;
      r = o;
    }
    var s = i ? 0 : qe.IgnoreOverlays;
    if (i) for (var o1 = r, u = o1.parent; u; o1 = u, u = o1.parent) o1 instanceof yt && o1.index < 0 && ((n = u.enter(e, t, s)) === null || n === void 0 ? void 0 : n.from) != o1.from && (r = u);
    for (;;) {
      var o2 = r.enter(e, t, s);
      if (!o2) return r;
      r = o2;
    }
  }
  h(Ur, "resolveNode");
  var yt = class yt1 {
    get type() {
      return this._tree.type;
    }
    get name() {
      return this._tree.type.name;
    }
    get to() {
      return this.from + this._tree.length;
    }
    nextChild(e, t, i, n) {
      var s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
      for (var o = this; ; ) {
        for (var _o__tree = o._tree, u = _o__tree.children, l = _o__tree.positions, a = t > 0 ? u.length : -1; e != a; e += t) {
          var c = u[e],
            f = l[e] + o.from;
          if (_D(n, i, f, f + c.length)) {
            if (c instanceof Gt) {
              if (s & qe.ExcludeBuffers) continue;
              var d = c.findChild(0, c.buffer.length, t, i - f, n);
              if (d > -1) return new Tt(new lu(o, c, e, f), null, d);
            } else if (s & qe.IncludeAnonymous || !c.type.isAnonymous || yh(c)) {
              var d1 = void 0;
              if (!(s & qe.IgnoreMounts) && c.props && (d1 = c.prop(ue.mounted)) && !d1.overlay) return new yt(d1.tree, f, e, o);
              var p = new yt(c, f, e, o);
              return s & qe.IncludeAnonymous || !p.type.isAnonymous ? p : p.nextChild(t < 0 ? c.children.length - 1 : 0, t, i, n);
            }
          }
        }
        if (s & qe.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? (e = o.index + t) : (e = t < 0 ? -1 : o._parent._tree.children.length), (o = o._parent), !o)) return null;
      }
    }
    get firstChild() {
      return this.nextChild(0, 1, 0, 4);
    }
    get lastChild() {
      return this.nextChild(this._tree.children.length - 1, -1, 0, 4);
    }
    childAfter(e) {
      return this.nextChild(0, 1, e, 2);
    }
    childBefore(e) {
      return this.nextChild(this._tree.children.length - 1, -1, e, -2);
    }
    enter(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var n;
      if (!(i & qe.IgnoreOverlays) && (n = this._tree.prop(ue.mounted)) && n.overlay) {
        var s = e - this.from;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = n.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _step_value = _step.value,
              o = _step_value.from,
              u = _step_value.to;
            if ((t > 0 ? o <= s : o < s) && (t < 0 ? u >= s : u > s)) return new yt(n.tree, n.overlay[0].from + this.from, -1, this);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
      return this.nextChild(0, 1, e, t, i);
    }
    nextSignificantParent() {
      var e = this;
      for (; e.type.isAnonymous && e._parent; ) e = e._parent;
      return e;
    }
    get parent() {
      return this._parent ? this._parent.nextSignificantParent() : null;
    }
    get nextSibling() {
      return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4) : null;
    }
    get prevSibling() {
      return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4) : null;
    }
    cursor() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return new tr(this, e);
    }
    get tree() {
      return this._tree;
    }
    toTree() {
      return this._tree;
    }
    resolve(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return Ur(this, e, t, !1);
    }
    resolveInner(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return Ur(this, e, t, !0);
    }
    enterUnfinishedNodesBefore(e) {
      return OD(this, e);
    }
    getChild(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      var n = cu(this, e, t, i);
      return n.length ? n[0] : null;
    }
    getChildren(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      return cu(this, e, t, i);
    }
    toString() {
      return this._tree.toString();
    }
    get node() {
      return this;
    }
    matchContext(e) {
      return fu(this, e);
    }
    constructor(e, t, i, n) {
      (this._tree = e), (this.from = t), (this.index = i), (this._parent = n);
    }
  };
  h(yt, "TreeNode");
  function cu(r, e, t, i) {
    var n = r.cursor(),
      s = [];
    if (!n.firstChild()) return s;
    if (t != null) {
      for (; !n.type.is(t); ) if (!n.nextSibling()) return s;
    }
    for (;;) {
      if (i != null && n.type.is(i)) return s;
      if ((n.type.is(e) && s.push(n.node), !n.nextSibling())) return i == null ? s : [];
    }
  }
  h(cu, "getChildren");
  function fu(r, e) {
    var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e.length - 1;
    for (var i = r.parent; t >= 0; i = i.parent) {
      if (!i) return !1;
      if (!i.type.isAnonymous) {
        if (e[t] && e[t] != i.name) return !1;
        t--;
      }
    }
    return !0;
  }
  h(fu, "matchNodeContext");
  var lu = class lu {
    constructor(e, t, i, n) {
      (this.parent = e), (this.buffer = t), (this.index = i), (this.start = n);
    }
  };
  h(lu, "BufferContext");
  var Tt = class Tt1 {
    get name() {
      return this.type.name;
    }
    get from() {
      return this.context.start + this.context.buffer.buffer[this.index + 1];
    }
    get to() {
      return this.context.start + this.context.buffer.buffer[this.index + 2];
    }
    child(e, t, i) {
      var _this_context = this.context,
        n = _this_context.buffer,
        s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.context.start, i);
      return s < 0 ? null : new Tt(this.context, this, s);
    }
    get firstChild() {
      return this.child(1, 0, 4);
    }
    get lastChild() {
      return this.child(-1, 0, 4);
    }
    childAfter(e) {
      return this.child(1, e, 2);
    }
    childBefore(e) {
      return this.child(-1, e, -2);
    }
    enter(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      if (i & qe.ExcludeBuffers) return null;
      var _this_context = this.context,
        n = _this_context.buffer,
        s = n.findChild(this.index + 4, n.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
      return s < 0 ? null : new Tt(this.context, this, s);
    }
    get parent() {
      return this._parent || this.context.parent.nextSignificantParent();
    }
    externalSibling(e) {
      return this._parent ? null : this.context.parent.nextChild(this.context.index + e, e, 0, 4);
    }
    get nextSibling() {
      var _this_context = this.context,
        e = _this_context.buffer,
        t = e.buffer[this.index + 3];
      return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new Tt(this.context, this._parent, t) : this.externalSibling(1);
    }
    get prevSibling() {
      var _this_context = this.context,
        e = _this_context.buffer,
        t = this._parent ? this._parent.index + 4 : 0;
      return this.index == t ? this.externalSibling(-1) : new Tt(this.context, this._parent, e.findChild(t, this.index, -1, 0, 4));
    }
    cursor() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return new tr(this, e);
    }
    get tree() {
      return null;
    }
    toTree() {
      var e = [],
        t = [],
        _this_context = this.context,
        i = _this_context.buffer,
        n = this.index + 4,
        s = i.buffer[this.index + 3];
      if (s > n) {
        var o = i.buffer[this.index + 1];
        e.push(i.slice(n, s, o)), t.push(0);
      }
      return new ve(this.type, e, t, this.to - this.from);
    }
    resolve(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return Ur(this, e, t, !1);
    }
    resolveInner(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return Ur(this, e, t, !0);
    }
    enterUnfinishedNodesBefore(e) {
      return OD(this, e);
    }
    toString() {
      return this.context.buffer.childString(this.index);
    }
    getChild(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      var n = cu(this, e, t, i);
      return n.length ? n[0] : null;
    }
    getChildren(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      return cu(this, e, t, i);
    }
    get node() {
      return this;
    }
    matchContext(e) {
      return fu(this, e);
    }
    constructor(e, t, i) {
      (this.context = e), (this._parent = t), (this.index = i), (this.type = e.buffer.set.types[e.buffer.buffer[i]]);
    }
  };
  h(Tt, "BufferNode");
  var tr = class tr {
    get name() {
      return this.type.name;
    }
    yieldNode(e) {
      return e ? ((this._tree = e), (this.type = e.type), (this.from = e.from), (this.to = e.to), !0) : !1;
    }
    yieldBuf(e, t) {
      this.index = e;
      var _this_buffer = this.buffer,
        i = _this_buffer.start,
        n = _this_buffer.buffer;
      return (this.type = t || n.set.types[n.buffer[e]]), (this.from = i + n.buffer[e + 1]), (this.to = i + n.buffer[e + 2]), !0;
    }
    yield(e) {
      return e ? (e instanceof yt ? ((this.buffer = null), this.yieldNode(e)) : ((this.buffer = e.context), this.yieldBuf(e.index, e.type))) : !1;
    }
    toString() {
      return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
    }
    enterChild(e, t, i) {
      if (!this.buffer) return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, i, this.mode));
      var _this_buffer = this.buffer,
        n = _this_buffer.buffer,
        s = n.findChild(this.index + 4, n.buffer[this.index + 3], e, t - this.buffer.start, i);
      return s < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(s));
    }
    firstChild() {
      return this.enterChild(1, 0, 4);
    }
    lastChild() {
      return this.enterChild(-1, 0, 4);
    }
    childAfter(e) {
      return this.enterChild(1, e, 2);
    }
    childBefore(e) {
      return this.enterChild(-1, e, -2);
    }
    enter(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.mode;
      return this.buffer ? (i & qe.ExcludeBuffers ? !1 : this.enterChild(1, e, t)) : this.yield(this._tree.enter(e, t, i));
    }
    parent() {
      if (!this.buffer) return this.yieldNode(this.mode & qe.IncludeAnonymous ? this._tree._parent : this._tree.parent);
      if (this.stack.length) return this.yieldBuf(this.stack.pop());
      var e = this.mode & qe.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
      return (this.buffer = null), this.yieldNode(e);
    }
    sibling(e) {
      if (!this.buffer) return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
      var _this_buffer = this.buffer,
        t = _this_buffer.buffer,
        i = this.stack.length - 1;
      if (e < 0) {
        var n = i < 0 ? 0 : this.stack[i] + 4;
        if (this.index != n) return this.yieldBuf(t.findChild(n, this.index, -1, 0, 4));
      } else {
        var n1 = t.buffer[this.index + 3];
        if (n1 < (i < 0 ? t.buffer.length : t.buffer[this.stack[i] + 3])) return this.yieldBuf(n1);
      }
      return i < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
    }
    nextSibling() {
      return this.sibling(1);
    }
    prevSibling() {
      return this.sibling(-1);
    }
    atLastNode(e) {
      var t,
        i,
        _this = this,
        n = _this.buffer;
      var ref;
      if (n) {
        if (e > 0) {
          if (this.index < n.buffer.buffer.length) return !1;
        } else for (var s = 0; s < this.index; s++) if (n.buffer.buffer[s + 3] < this.index) return !1;
        var ref1;
        (ref1 = n), (t = ref1.index), (i = ref1.parent), ref1;
      } else (ref = this._tree), (t = ref.index), (i = ref._parent), ref;
      var ref2;
      for (; i; ref2 = i, t = ref2.index, i = ref2._parent, ref2)
        if (t > -1)
          for (var s1 = t + e, o = e < 0 ? -1 : i._tree.children.length; s1 != o; s1 += e) {
            var u = i._tree.children[s1];
            if (this.mode & qe.IncludeAnonymous || u instanceof Gt || !u.type.isAnonymous || yh(u)) return !1;
          }
      return !0;
    }
    move(e, t) {
      if (t && this.enterChild(e, 0, 4)) return !0;
      for (;;) {
        if (this.sibling(e)) return !0;
        if (this.atLastNode(e) || !this.parent()) return !1;
      }
    }
    next() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
      return this.move(1, e);
    }
    prev() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
      return this.move(-1, e);
    }
    moveTo(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); );
      for (; this.enterChild(1, e, t); );
      return this;
    }
    get node() {
      if (!this.buffer) return this._tree;
      var e = this.bufferNode,
        t = null,
        i = 0;
      if (e && e.context == this.buffer)
        e: for (var n = this.index, s = this.stack.length; s >= 0; ) {
          for (var o = e; o; o = o._parent)
            if (o.index == n) {
              if (n == this.index) return o;
              (t = o), (i = s + 1);
              break e;
            }
          n = this.stack[--s];
        }
      for (var n1 = i; n1 < this.stack.length; n1++) t = new Tt(this.buffer, t, this.stack[n1]);
      return (this.bufferNode = new Tt(this.buffer, t, this.index));
    }
    get tree() {
      return this.buffer ? null : this._tree._tree;
    }
    iterate(e, t) {
      for (var i = 0; ; ) {
        var n = !1;
        if (this.type.isAnonymous || e(this) !== !1) {
          if (this.firstChild()) {
            i++;
            continue;
          }
          this.type.isAnonymous || (n = !0);
        }
        for (; n && t && t(this), (n = this.type.isAnonymous), !this.nextSibling(); ) {
          if (!i) return;
          this.parent(), i--, (n = !0);
        }
      }
    }
    matchContext(e) {
      if (!this.buffer) return fu(this.node, e);
      var _this_buffer = this.buffer,
        t = _this_buffer.buffer,
        _t_set = t.set,
        i = _t_set.types;
      for (var n = e.length - 1, s = this.stack.length - 1; n >= 0; s--) {
        if (s < 0) return fu(this.node, e, n);
        var o = i[t.buffer[this.stack[s]]];
        if (!o.isAnonymous) {
          if (e[n] && e[n] != o.name) return !1;
          n--;
        }
      }
      return !0;
    }
    constructor(e, ref) {
      var t = ref === void 0 ? 0 : ref;
      if (((this.mode = t), (this.buffer = null), (this.stack = []), (this.index = 0), (this.bufferNode = null), e instanceof yt)) this.yieldNode(e);
      else {
        (this._tree = e.context.parent), (this.buffer = e.context);
        for (var i = e._parent; i; i = i._parent) this.stack.unshift(i.index);
        (this.bufferNode = e), this.yieldBuf(e.index);
      }
    }
  };
  h(tr, "TreeCursor");
  function yh(r) {
    return r.children.some((e) => e instanceof Gt || !e.type.isAnonymous || yh(e));
  }
  h(yh, "hasChild");
  function ew(r) {
    var e;
    var t = r.buffer,
      i = r.nodeSet,
      tmp = r.maxBufferLength,
      n = tmp === void 0 ? 1024 : tmp,
      tmp1 = r.reused,
      s = tmp1 === void 0 ? [] : tmp1,
      tmp2 = r.minRepeatType,
      o = tmp2 === void 0 ? i.types.length : tmp2,
      u = Array.isArray(t) ? new Hr(t, t.length) : t,
      l = i.types,
      a = 0,
      c = 0;
    function f(A, _, B, I, Q) {
      var W = u.id,
        H = u.start,
        z = u.end,
        oe = u.size,
        ae = c;
      for (; oe < 0; )
        if ((u.next(), oe == -1)) {
          var ye = s[W];
          B.push(ye), I.push(H - A);
          return;
        } else if (oe == -3) {
          a = W;
          return;
        } else if (oe == -4) {
          c = W;
          return;
        } else throw new RangeError("Unrecognized record size: ".concat(oe));
      var K = l[W],
        T,
        ee,
        ge = H - A;
      if (z - H <= n && (ee = D(u.pos - _, Q))) {
        var ye1 = new Uint16Array(ee.size - ee.skip),
          fe = u.pos - ee.size,
          be = ye1.length;
        for (; u.pos > fe; ) be = g(ee.start, ye1, be);
        (T = new Gt(ye1, z - ee.start, i)), (ge = ee.start - A);
      } else {
        var ye2 = u.pos - oe;
        u.next();
        var fe1 = [],
          be1 = [],
          $e = W >= o ? W : -1,
          Ye = 0,
          mt = z;
        for (; u.pos > ye2; ) $e >= 0 && u.id == $e && u.size >= 0 ? (u.end <= mt - n && (p(fe1, be1, H, Ye, u.end, mt, $e, ae), (Ye = fe1.length), (mt = u.end)), u.next()) : f(H, ye2, fe1, be1, $e);
        if (($e >= 0 && Ye > 0 && Ye < fe1.length && p(fe1, be1, H, Ye, H, mt, $e, ae), fe1.reverse(), be1.reverse(), $e > -1 && Ye > 0)) {
          var mi = d(K);
          T = Ch(K, fe1, be1, 0, fe1.length, 0, z - H, mi, mi);
        } else T = m(K, fe1, be1, z - H, ae - z);
      }
      B.push(T), I.push(ge);
    }
    h(f, "takeNode");
    function d(A) {
      return (_, B, I) => {
        var Q = 0,
          W = _.length - 1,
          H,
          z;
        if (W >= 0 && (H = _[W]) instanceof ve) {
          if (!W && H.type == A && H.length == I) return H;
          (z = H.prop(ue.lookAhead)) && (Q = B[W] + H.length + z);
        }
        return m(A, _, B, I, Q);
      };
    }
    h(d, "makeBalanced");
    function p(A, _, B, I, Q, W, H, z) {
      var oe = [],
        ae = [];
      for (; A.length > I; ) oe.push(A.pop()), ae.push(_.pop() + B - Q);
      A.push(m(i.types[H], oe, ae, W - Q, z - W)), _.push(Q - B);
    }
    h(p, "makeRepeatLeaf");
    function m(A, _, B, I) {
      var Q = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0,
        W = arguments.length > 5 ? arguments[5] : void 0;
      if (a) {
        var H = [ue.contextHash, a];
        W = W ? [H].concat(W) : [H];
      }
      if (Q > 25) {
        var H1 = [ue.lookAhead, Q];
        W = W ? [H1].concat(W) : [H1];
      }
      return new ve(A, _, B, I, W);
    }
    h(m, "makeTree");
    function D(A, _) {
      var B = u.fork(),
        I = 0,
        Q = 0,
        W = 0,
        H = B.end - n,
        z = { size: 0, start: 0, skip: 0 };
      e: for (var oe = B.pos - A; B.pos > oe; ) {
        var ae = B.size;
        if (B.id == _ && ae >= 0) {
          (z.size = I), (z.start = Q), (z.skip = W), (W += 4), (I += 4), B.next();
          continue;
        }
        var K = B.pos - ae;
        if (ae < 0 || K < oe || B.start < H) break;
        var T = B.id >= o ? 4 : 0,
          ee = B.start;
        for (B.next(); B.pos > K; ) {
          if (B.size < 0)
            if (B.size == -3) T += 4;
            else break e;
          else B.id >= o && (T += 4);
          B.next();
        }
        (Q = ee), (I += ae), (W += T);
      }
      return (_ < 0 || I == A) && ((z.size = I), (z.start = Q), (z.skip = W)), z.size > 4 ? z : void 0;
    }
    h(D, "findBufferSize");
    function g(A, _, B) {
      var I = u.id,
        Q = u.start,
        W = u.end,
        H = u.size;
      if ((u.next(), H >= 0 && I < o)) {
        var z = B;
        if (H > 4) {
          var oe = u.pos - (H - 4);
          for (; u.pos > oe; ) B = g(A, _, B);
        }
        (_[--B] = z), (_[--B] = W - A), (_[--B] = Q - A), (_[--B] = I);
      } else H == -3 ? (a = I) : H == -4 && (c = I);
      return B;
    }
    h(g, "copyToBuffer");
    var b = [],
      F = [];
    for (; u.pos > 0; ) f(r.start || 0, r.bufferStart || 0, b, F, -1);
    var E = (e = r.length) !== null && e !== void 0 ? e : b.length ? F[0] + b[0].length : 0;
    return new ve(l[r.topID], b.reverse(), F.reverse(), E);
  }
  h(ew, "buildTree");
  var BD = new WeakMap();
  function au(r, e) {
    if (!r.isAnonymous || e instanceof Gt || e.type != r) return 1;
    var t = BD.get(e);
    if (t == null) {
      t = 1;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.type != r || !(i instanceof ve)) {
            t = 1;
            break;
          }
          t += au(r, i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      BD.set(e, t);
    }
    return t;
  }
  h(au, "nodeSize");
  function Ch(r, e, t, i, n, s, o, u, l) {
    var a = 0;
    for (var m = i; m < n; m++) a += au(r, e[m]);
    var c = Math.ceil((a * 1.5) / 8),
      f = [],
      d = [];
    function p(m, D, g, b, F) {
      for (var E = g; E < b; ) {
        var A = E,
          _ = D[E],
          B = au(r, m[E]);
        for (E++; E < b; E++) {
          var I = au(r, m[E]);
          if (B + I >= c) break;
          B += I;
        }
        if (E == A + 1) {
          if (B > c) {
            var I1 = m[A];
            p(I1.children, I1.positions, 0, I1.children.length, D[A] + F);
            continue;
          }
          f.push(m[A]);
        } else {
          var I2 = D[E - 1] + m[E - 1].length - _;
          f.push(Ch(r, m, D, A, E, _, I2, null, l));
        }
        d.push(_ + F - s);
      }
    }
    return h(p, "divide"), p(e, t, i, n, 0), (u || l)(f, d, o);
  }
  h(Ch, "balanceRange");
  var Rt = class Rt1 {
    get openStart() {
      return (this.open & 1) > 0;
    }
    get openEnd() {
      return (this.open & 2) > 0;
    }
    static addTree(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [],
        i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
      var n = [new Rt(0, e.length, e, 0, !1, i)];
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          s.to > e.length && n.push(s);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return n;
    }
    static applyChanges(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 128;
      if (!t.length) return e;
      var n = [],
        s = 1,
        o = e.length ? e[0] : null;
      for (var u = 0, l = 0, a = 0; ; u++) {
        var c = u < t.length ? t[u] : null,
          f = c ? c.fromA : 1e9;
        if (f - l >= i)
          for (; o && o.from < f; ) {
            var d = o;
            if (l >= d.from || f <= d.to || a) {
              var p = Math.max(d.from, l) - a,
                m = Math.min(d.to, f) - a;
              d = p >= m ? null : new Rt(p, m, d.tree, d.offset + a, u > 0, !!c);
            }
            if ((d && n.push(d), o.to > f)) break;
            o = s < e.length ? e[s++] : null;
          }
        if (!c) break;
        (l = c.toA), (a = c.toA - c.toB);
      }
      return n;
    }
    constructor(e, t, i, n, ref, ref1) {
      var s = ref === void 0 ? !1 : ref,
        o = ref1 === void 0 ? !1 : ref1;
      (this.from = e), (this.to = t), (this.tree = i), (this.offset = n), (this.open = (s ? 1 : 0) | (o ? 2 : 0));
    }
  };
  h(Rt, "TreeFragment");
  var ir = class ir {
    startParse(e, t, i) {
      return typeof e == "string" && (e = new hu(e)), (i = i ? (i.length ? i.map((n) => new jr(n.from, n.to)) : [new jr(0, 0)]) : [new jr(0, e.length)]), this.createParse(e, t || [], i);
    }
    parse(e, t, i) {
      var n = this.startParse(e, t, i);
      for (;;) {
        var s = n.advance();
        if (s) return s;
      }
    }
  };
  h(ir, "Parser");
  var hu = class hu {
    get length() {
      return this.string.length;
    }
    chunk(e) {
      return this.string.slice(e);
    }
    get lineChunks() {
      return !1;
    }
    read(e, t) {
      return this.string.slice(e, t);
    }
    constructor(e) {
      this.string = e;
    }
  };
  h(hu, "StringInput");
  var yB = new ue({ perNode: !0 });
  var tw = 0,
    dt = class dt1 {
      static define(e) {
        if (e === null || e === void 0 ? void 0 : e.base) throw new Error("Can not derive from a modified tag");
        var t = new dt([], null, []);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        if ((t.set.push(t), e))
          try {
            for (var _iterator = e.set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var i = _step.value;
              t.set.push(i);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        return t;
      }
      static defineModifier() {
        var e = new nr();
        return (t) =>
          t.modified.indexOf(e) > -1
            ? t
            : nr.get(
                t.base || t,
                t.modified.concat(e).sort((i, n) => i.id - n.id)
              );
      }
      constructor(e, t, i) {
        (this.set = e), (this.base = t), (this.modified = i), (this.id = tw++);
      }
    };
  h(dt, "Tag");
  var iw = 0,
    nr = class nr1 {
      static get(e, t) {
        if (!t.length) return e;
        var i = t[0].instances.find((u) => u.base == e && rw(t, u.modified));
        if (i) return i;
        var n = [],
          s = new dt(n, e, t);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = t[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var u = _step.value;
            u.instances.push(s);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        var o = nw(t);
        var _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined,
          _iteratorNormalCompletion2 = true,
          _didIteratorError2 = false,
          _iteratorError2 = undefined;
        try {
          for (var _iterator1 = e.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion2 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion2 = true) {
            var u1 = _step1.value;
            if (!u1.modified.length)
              try {
                for (var _iterator2 = o[Symbol.iterator](), _step2; !(_iteratorNormalCompletion1 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion1 = true) {
                  var l = _step2.value;
                  n.push(nr.get(u1, l));
                }
              } catch (err) {
                _didIteratorError1 = true;
                _iteratorError1 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion1 && _iterator2.return != null) {
                    _iterator2.return();
                  }
                } finally {
                  if (_didIteratorError1) {
                    throw _iteratorError1;
                  }
                }
              }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator1.return != null) {
              _iterator1.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
        return s;
      }
      constructor() {
        (this.instances = []), (this.id = iw++);
      }
    };
  h(nr, "Modifier");
  function rw(r, e) {
    return r.length == e.length && r.every((t, i) => t == e[i]);
  }
  h(rw, "sameArray");
  function nw(r) {
    var e = [[]];
    for (var t = 0; t < r.length; t++) for (var i = 0, n = e.length; i < n; i++) e.push(e[i].concat(r[t]));
    return e.sort((t, i) => i.length - t.length);
  }
  h(nw, "powerSet");
  function Du(r) {
    var e = Object.create(null);
    for (var t in r) {
      var i = r[t];
      Array.isArray(i) || (i = [i]);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = t.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          if (n) {
            var s = [],
              o = 2,
              u = n;
            for (var f = 0; ; ) {
              if (u == "..." && f > 0 && f + 3 == n.length) {
                o = 1;
                break;
              }
              var d = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(u);
              if (!d) throw new RangeError("Invalid path: " + n);
              if ((s.push(d[0] == "*" ? "" : d[0][0] == '"' ? JSON.parse(d[0]) : d[0]), (f += d[0].length), f == n.length)) break;
              var p = n[f++];
              if (f == n.length && p == "!") {
                o = 0;
                break;
              }
              if (p != "/") throw new RangeError("Invalid path: " + n);
              u = n.slice(f);
            }
            var l = s.length - 1,
              a = s[l];
            if (!a) throw new RangeError("Invalid path: " + n);
            var c = new sr(i, o, l > 0 ? s.slice(0, l) : null);
            e[a] = c.sort(e[a]);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
    return $D.add(e);
  }
  h(Du, "styleTags");
  var $D = new ue(),
    sr = class sr {
      get opaque() {
        return this.mode == 0;
      }
      get inherit() {
        return this.mode == 1;
      }
      sort(e) {
        return !e || e.depth < this.depth ? ((this.next = e), this) : ((e.next = this.sort(e.next)), e);
      }
      get depth() {
        return this.context ? this.context.length : 0;
      }
      constructor(e, t, i, n) {
        (this.tags = e), (this.mode = t), (this.context = i), (this.next = n);
      }
    };
  h(sr, "Rule");
  sr.empty = new sr([], 2, null);
  function vh(r, e) {
    var t = Object.create(null);
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined,
      _iteratorNormalCompletion1 = true,
      _didIteratorError1 = false,
      _iteratorError1 = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
        var s = _step.value;
        if (!Array.isArray(s.tag)) t[s.tag.id] = s.class;
        else
          try {
            for (var _iterator1 = s.tag[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
              var o = _step1.value;
              t[o.id] = s.class;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator1.return != null) {
                _iterator1.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
      }
    } catch (err) {
      _didIteratorError1 = true;
      _iteratorError1 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion1 && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError1) {
          throw _iteratorError1;
        }
      }
    }
    var _ref = e || {},
      i = _ref.scope,
      tmp = _ref.all,
      n = tmp === void 0 ? null : tmp;
    return {
      style: (s) => {
        var o = n;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined,
          _iteratorNormalCompletion1 = true,
          _didIteratorError1 = false,
          _iteratorError1 = undefined;
        try {
          for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true) {
            var u = _step.value;
            try {
              for (var _iterator1 = u.set[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true) {
                var l = _step1.value;
                var a = t[l.id];
                if (a) {
                  o = o ? o + " " + a : a;
                  break;
                }
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator1.return != null) {
                  _iterator1.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError1 = true;
          _iteratorError1 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion1 && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError1) {
              throw _iteratorError1;
            }
          }
        }
        return o;
      },
      scope: i,
    };
  }
  h(vh, "tagHighlighter");
  function sw(r, e) {
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var i = _step.value;
        var n = i.style(e);
        n && (t = t ? t + " " + n : n);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return t;
  }
  h(sw, "highlightTags");
  function MD(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0,
      n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : r.length;
    var s = new gu(i, Array.isArray(e) ? e : [e], t);
    s.highlightRange(r.cursor(), i, n, "", s.highlighters), s.flush(n);
  }
  h(MD, "highlightTree");
  var gu = class gu {
    startSpan(e, t) {
      t != this.class && (this.flush(e), e > this.at && (this.at = e), (this.class = t));
    }
    flush(e) {
      e > this.at && this.class && this.span(this.at, e, this.class);
    }
    highlightRange(e, t, i, n, s) {
      var o = e.type,
        u = e.from,
        l = e.to;
      if (u >= i || l <= t) return;
      o.isTop && (s = this.highlighters.filter((p) => !p.scope || p.scope(o)));
      var a = n,
        c = ow(e) || sr.empty,
        f = sw(s, c.tags);
      if ((f && (a && (a += " "), (a += f), c.mode == 1 && (n += (n ? " " : "") + f)), this.startSpan(e.from, a), c.opaque)) return;
      var d = e.tree && e.tree.prop(ue.mounted);
      if (d && d.overlay) {
        var p = e.node.enter(d.overlay[0].from + u, 1),
          m = this.highlighters.filter((g) => !g.scope || g.scope(d.tree.type)),
          D = e.firstChild();
        for (var g = 0, b = u; ; g++) {
          var F = g < d.overlay.length ? d.overlay[g] : null,
            E = F ? F.from + u : l,
            A = Math.max(t, b),
            _ = Math.min(i, E);
          if (A < _ && D) for (; e.from < _ && (this.highlightRange(e, A, _, n, s), this.startSpan(Math.min(_, e.to), a), !(e.to >= E || !e.nextSibling())); );
          if (!F || E > i) break;
          (b = F.to + u), b > t && (this.highlightRange(p.cursor(), Math.max(t, F.from + u), Math.min(i, b), n, m), this.startSpan(b, a));
        }
        D && e.parent();
      } else if (e.firstChild()) {
        do
          if (!(e.to <= t)) {
            if (e.from >= i) break;
            this.highlightRange(e, t, i, n, s), this.startSpan(Math.min(i, e.to), a);
          }
        while (e.nextSibling());
        e.parent();
      }
    }
    constructor(e, t, i) {
      (this.at = e), (this.highlighters = t), (this.span = i), (this.class = "");
    }
  };
  h(gu, "HighlightBuilder");
  function ow(r) {
    var e = r.type.prop($D);
    for (; e && e.context && !r.matchContext(e.context); ) e = e.next;
    return e || null;
  }
  h(ow, "getStyleTags");
  var L = dt.define,
    du = L(),
    Ti = L(),
    TD = L(Ti),
    RD = L(Ti),
    Ri = L(),
    pu = L(Ri),
    Ah = L(Ri),
    Qt = L(),
    rr = L(Qt),
    Kt = L(),
    Xt = L(),
    Eh = L(),
    Zn = L(Eh),
    mu = L(),
    O = {
      comment: du,
      lineComment: L(du),
      blockComment: L(du),
      docComment: L(du),
      name: Ti,
      variableName: L(Ti),
      typeName: TD,
      tagName: L(TD),
      propertyName: RD,
      attributeName: L(RD),
      className: L(Ti),
      labelName: L(Ti),
      namespace: L(Ti),
      macroName: L(Ti),
      literal: Ri,
      string: pu,
      docString: L(pu),
      character: L(pu),
      attributeValue: L(pu),
      number: Ah,
      integer: L(Ah),
      float: L(Ah),
      bool: L(Ri),
      regexp: L(Ri),
      escape: L(Ri),
      color: L(Ri),
      url: L(Ri),
      keyword: Kt,
      self: L(Kt),
      null: L(Kt),
      atom: L(Kt),
      unit: L(Kt),
      modifier: L(Kt),
      operatorKeyword: L(Kt),
      controlKeyword: L(Kt),
      definitionKeyword: L(Kt),
      moduleKeyword: L(Kt),
      operator: Xt,
      derefOperator: L(Xt),
      arithmeticOperator: L(Xt),
      logicOperator: L(Xt),
      bitwiseOperator: L(Xt),
      compareOperator: L(Xt),
      updateOperator: L(Xt),
      definitionOperator: L(Xt),
      typeOperator: L(Xt),
      controlOperator: L(Xt),
      punctuation: Eh,
      separator: L(Eh),
      bracket: Zn,
      angleBracket: L(Zn),
      squareBracket: L(Zn),
      paren: L(Zn),
      brace: L(Zn),
      content: Qt,
      heading: rr,
      heading1: L(rr),
      heading2: L(rr),
      heading3: L(rr),
      heading4: L(rr),
      heading5: L(rr),
      heading6: L(rr),
      contentSeparator: L(Qt),
      list: L(Qt),
      quote: L(Qt),
      emphasis: L(Qt),
      strong: L(Qt),
      link: L(Qt),
      monospace: L(Qt),
      strikethrough: L(Qt),
      inserted: L(),
      deleted: L(),
      changed: L(),
      invalid: L(),
      meta: mu,
      documentMeta: L(mu),
      annotation: L(mu),
      processingInstruction: L(mu),
      definition: dt.defineModifier(),
      constant: dt.defineModifier(),
      function: dt.defineModifier(),
      standard: dt.defineModifier(),
      local: dt.defineModifier(),
      special: dt.defineModifier(),
    },
    vB = vh([
      { tag: O.link, class: "tok-link" },
      { tag: O.heading, class: "tok-heading" },
      { tag: O.emphasis, class: "tok-emphasis" },
      { tag: O.strong, class: "tok-strong" },
      { tag: O.keyword, class: "tok-keyword" },
      { tag: O.atom, class: "tok-atom" },
      { tag: O.bool, class: "tok-bool" },
      { tag: O.url, class: "tok-url" },
      { tag: O.labelName, class: "tok-labelName" },
      { tag: O.inserted, class: "tok-inserted" },
      { tag: O.deleted, class: "tok-deleted" },
      { tag: O.literal, class: "tok-literal" },
      { tag: O.string, class: "tok-string" },
      { tag: O.number, class: "tok-number" },
      { tag: [O.regexp, O.escape, O.special(O.string)], class: "tok-string2" },
      { tag: O.variableName, class: "tok-variableName" },
      { tag: O.local(O.variableName), class: "tok-variableName tok-local" },
      { tag: O.definition(O.variableName), class: "tok-variableName tok-definition" },
      { tag: O.special(O.variableName), class: "tok-variableName2" },
      { tag: O.definition(O.propertyName), class: "tok-propertyName tok-definition" },
      { tag: O.typeName, class: "tok-typeName" },
      { tag: O.namespace, class: "tok-namespace" },
      { tag: O.className, class: "tok-className" },
      { tag: O.macroName, class: "tok-macroName" },
      { tag: O.propertyName, class: "tok-propertyName" },
      { tag: O.operator, class: "tok-operator" },
      { tag: O.comment, class: "tok-comment" },
      { tag: O.meta, class: "tok-meta" },
      { tag: O.invalid, class: "tok-invalid" },
      { tag: O.punctuation, class: "tok-punctuation" },
    ]);
  var kh,
    Yr = new ue();
  function lw(r) {
    return U.define({ combine: r ? (e) => e.concat(r) : void 0 });
  }
  h(lw, "defineLanguageFacet");
  var aw = new ue(),
    et = class et {
      isActiveAt(e, t) {
        var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
        return PD(e, t, i).type.prop(Yr) == this.data;
      }
      findRegions(e) {
        var t = e.facet(Gr);
        if ((t === null || t === void 0 ? void 0 : t.data) == this.data) return [{ from: 0, to: e.doc.length }];
        if (!t || !t.allowsNesting) return [];
        var i = [],
          n = h((s, o) => {
            if (s.prop(Yr) == this.data) {
              i.push({ from: o, to: o + s.length });
              return;
            }
            var u = s.prop(ue.mounted);
            if (u) {
              if (u.tree.prop(Yr) == this.data) {
                var _iteratorNormalCompletion = true,
                  _didIteratorError = false,
                  _iteratorError = undefined;
                if (u.overlay)
                  try {
                    for (var _iterator = u.overlay[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                      var l = _step.value;
                      i.push({ from: l.from + o, to: l.to + o });
                    }
                  } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                      }
                    } finally {
                      if (_didIteratorError) {
                        throw _iteratorError;
                      }
                    }
                  }
                else i.push({ from: o, to: o + s.length });
                return;
              } else if (u.overlay) {
                var l1 = i.length;
                if ((n(u.tree, u.overlay[0].from + o), i.length > l1)) return;
              }
            }
            for (var l2 = 0; l2 < s.children.length; l2++) {
              var a = s.children[l2];
              a instanceof ve && n(a, s.positions[l2] + o);
            }
          }, "explore");
        return n(ur(e), 0), i;
      }
      get allowsNesting() {
        return !0;
      }
      constructor(e, t, ref, ref1) {
        var i = ref === void 0 ? [] : ref,
          n = ref1 === void 0 ? "" : ref1;
        (this.data = e),
          (this.name = n),
          le.prototype.hasOwnProperty("tree") ||
            Object.defineProperty(le.prototype, "tree", {
              get() {
                return ur(this);
              },
            }),
          (this.parser = t),
          (this.extension = [
            Gr.of(this),
            le.languageData.of((s, o, u) => {
              var l = PD(s, o, u),
                a = l.type.prop(Yr);
              if (!a) return [];
              var c = s.facet(a),
                f = l.type.prop(aw);
              if (f) {
                var d = l.resolve(o - l.from, u);
                var _iteratorNormalCompletion = true,
                  _didIteratorError = false,
                  _iteratorError = undefined;
                try {
                  for (var _iterator = f[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var p = _step.value;
                    if (p.test(d, s)) {
                      var m = s.facet(p.facet);
                      return p.type == "replace" ? m : m.concat(c);
                    }
                  }
                } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion && _iterator.return != null) {
                      _iterator.return();
                    }
                  } finally {
                    if (_didIteratorError) {
                      throw _iteratorError;
                    }
                  }
                }
              }
              return c;
            }),
          ].concat(i));
      }
    };
  h(et, "Language");
  et.setState = de.define();
  function PD(r, e, t) {
    var i = r.facet(Gr),
      n = ur(r).topNode;
    if (!i || i.allowsNesting) for (var s = n; s; s = s.enter(e, t, qe.ExcludeBuffers)) s.type.isTop && (n = s);
    return n;
  }
  h(PD, "topNodeAt");
  var $i = class $i1 extends et {
    static define(e) {
      var t = lw(e.languageData);
      return new $i(t, e.parser.configure({ props: [Yr.add((i) => (i.isTop ? t : void 0))] }), e.name);
    }
    configure(e, t) {
      return new $i(this.data, this.parser.configure(e), t || this.name);
    }
    get allowsNesting() {
      return this.parser.hasWrappers();
    }
    constructor(e, t, i) {
      super(e, t, [], i), (this.parser = t);
    }
  };
  h($i, "LRLanguage");
  function ur(r) {
    var e = r.field(et.state, !1);
    return e ? e.tree : ve.empty;
  }
  h(ur, "syntaxTree");
  var bu = class bu {
    get length() {
      return this.doc.length;
    }
    syncTo(e) {
      return (this.string = this.cursor.next(e - this.cursorPos).value), (this.cursorPos = e + this.string.length), this.cursorPos - this.string.length;
    }
    chunk(e) {
      return this.syncTo(e), this.string;
    }
    get lineChunks() {
      return !0;
    }
    read(e, t) {
      var i = this.cursorPos - this.string.length;
      return e < i || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - i, t - i);
    }
    constructor(e) {
      (this.doc = e), (this.cursorPos = 0), (this.string = ""), (this.cursor = e.iter());
    }
  };
  h(bu, "DocInput");
  var es = null,
    or = class or1 {
      static create(e, t, i) {
        return new or(e, t, [], ve.empty, 0, i, [], null);
      }
      startParse() {
        return this.parser.startParse(new bu(this.state.doc), this.fragments);
      }
      work(e, t) {
        return (
          t != null && t >= this.state.doc.length && (t = void 0),
          this.tree != ve.empty && this.isDone(t !== null && t !== void 0 ? t : this.state.doc.length)
            ? (this.takeTree(), !0)
            : this.withContext(() => {
                var i;
                if (typeof e == "number") {
                  var n = Date.now() + e;
                  e = h(() => Date.now() > n, "until");
                }
                for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
                  var n1 = this.parse.advance();
                  if (n1)
                    if (((this.fragments = this.withoutTempSkipped(Rt.addTree(n1, this.fragments, this.parse.stoppedAt != null))), (this.treeLen = (i = this.parse.stoppedAt) !== null && i !== void 0 ? i : this.state.doc.length), (this.tree = n1), (this.parse = null), this.treeLen < (t !== null && t !== void 0 ? t : this.state.doc.length))) this.parse = this.startParse();
                    else return !0;
                  if (e()) return !1;
                }
              })
        );
      }
      takeTree() {
        var e, t;
        this.parse &&
          (e = this.parse.parsedPos) >= this.treeLen &&
          ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e),
          this.withContext(() => {
            for (; !(t = this.parse.advance()); );
          }),
          (this.treeLen = e),
          (this.tree = t),
          (this.fragments = this.withoutTempSkipped(Rt.addTree(this.tree, this.fragments, !0))),
          (this.parse = null));
      }
      withContext(e) {
        var t = es;
        es = this;
        try {
          return e();
        } finally {
          es = t;
        }
      }
      withoutTempSkipped(e) {
        for (var t; (t = this.tempSkipped.pop()); ) e = LD(e, t.from, t.to);
        return e;
      }
      changes(e, t) {
        var _this = this,
          i = _this.fragments,
          n = _this.tree,
          s = _this.treeLen,
          o = _this.viewport,
          u = _this.skipped;
        if ((this.takeTree(), !e.empty)) {
          var l = [];
          if ((e.iterChangedRanges((a, c, f, d) => l.push({ fromA: a, toA: c, fromB: f, toB: d })), (i = Rt.applyChanges(i, l)), (n = ve.empty), (s = 0), (o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }), this.skipped.length)) {
            u = [];
            var _iteratorNormalCompletion = true,
              _didIteratorError = false,
              _iteratorError = undefined;
            try {
              for (var _iterator = this.skipped[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var a = _step.value;
                var c = e.mapPos(a.from, 1),
                  f = e.mapPos(a.to, -1);
                c < f && u.push({ from: c, to: f });
              }
            } catch (err) {
              _didIteratorError = true;
              _iteratorError = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }
              } finally {
                if (_didIteratorError) {
                  throw _iteratorError;
                }
              }
            }
          }
        }
        return new or(this.parser, t, i, n, s, o, u, this.scheduleOn);
      }
      updateViewport(e) {
        if (this.viewport.from == e.from && this.viewport.to == e.to) return !1;
        this.viewport = e;
        var t = this.skipped.length;
        for (var i = 0; i < this.skipped.length; i++) {
          var _this_skipped_i = this.skipped[i],
            n = _this_skipped_i.from,
            s = _this_skipped_i.to;
          n < e.to && s > e.from && ((this.fragments = LD(this.fragments, n, s)), this.skipped.splice(i--, 1));
        }
        return this.skipped.length >= t ? !1 : (this.reset(), !0);
      }
      reset() {
        this.parse && (this.takeTree(), (this.parse = null));
      }
      skipUntilInView(e, t) {
        this.skipped.push({ from: e, to: t });
      }
      static getSkippingParser(e) {
        return new (class extends ir {
          createParse(t, i, n) {
            var s = n[0].from,
              o = n[n.length - 1].to;
            return {
              parsedPos: s,
              advance() {
                var l = es;
                if (l) {
                  var _iteratorNormalCompletion = true,
                    _didIteratorError = false,
                    _iteratorError = undefined;
                  try {
                    for (var _iterator = n[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                      var a = _step.value;
                      l.tempSkipped.push(a);
                    }
                  } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion && _iterator.return != null) {
                        _iterator.return();
                      }
                    } finally {
                      if (_didIteratorError) {
                        throw _iteratorError;
                      }
                    }
                  }
                  e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
                }
                return (this.parsedPos = o), new ve(Ie.none, [], [], o - s);
              },
              stoppedAt: null,
              stopAt() {},
            };
          }
        })();
      }
      isDone(e) {
        e = Math.min(e, this.state.doc.length);
        var t = this.fragments;
        return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
      }
      static get() {
        return es;
      }
      constructor(e, t, ref, n, s, o, u, l) {
        var i = ref === void 0 ? [] : ref;
        (this.parser = e), (this.state = t), (this.fragments = i), (this.tree = n), (this.treeLen = s), (this.viewport = o), (this.skipped = u), (this.scheduleOn = l), (this.parse = null), (this.tempSkipped = []);
      }
    };
  h(or, "ParseContext");
  function LD(r, e, t) {
    return Rt.applyChanges(r, [{ fromA: e, toA: t, fromB: e, toB: t }]);
  }
  h(LD, "cutFragments");
  var ci = class ci1 {
    apply(e) {
      if (!e.docChanged && this.tree == this.context.tree) return this;
      var t = this.context.changes(e.changes, e.state),
        i = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
      return t.work(20, i) || t.takeTree(), new ci(t);
    }
    static init(e) {
      var t = Math.min(3e3, e.doc.length),
        i = or.create(e.facet(Gr).parser, e, { from: 0, to: t });
      return i.work(20, t) || i.takeTree(), new ci(i);
    }
    constructor(e) {
      (this.context = e), (this.tree = e.tree);
    }
  };
  h(ci, "LanguageState");
  et.state = Me.define({
    create: ci.init,
    update(r, e) {
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var t = _step.value;
          if (t.is(et.setState)) return t.value;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return e.startState.facet(Gr) != e.state.facet(Gr) ? ci.init(e.state) : r.apply(e);
    },
  });
  var ND = h((r) => {
    var e = setTimeout(() => r(), 500);
    return () => clearTimeout(e);
  }, "requestIdle");
  typeof requestIdleCallback < "u" &&
    (ND = h((r) => {
      var e = -1,
        t = setTimeout(() => {
          e = requestIdleCallback(r, { timeout: 500 - 100 });
        }, 100);
      return () => (e < 0 ? clearTimeout(t) : cancelIdleCallback(e));
    }, "requestIdle"));
  var wh = typeof navigator < "u" && !((kh = navigator.scheduling) === null || kh === void 0) && kh.isInputPending ? () => navigator.scheduling.isInputPending() : null,
    hw = ze.fromClass(
      h(
        class {
          update(e) {
            var t = this.view.state.field(et.state).context;
            (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), e.docChanged && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
          }
          scheduleWork() {
            if (this.working) return;
            var _this_view = this.view,
              e = _this_view.state,
              t = e.field(et.state);
            (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = ND(this.work));
          }
          work(e) {
            this.working = null;
            var t = Date.now();
            if ((this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && ((this.chunkEnd = t + 3e4), (this.chunkBudget = 3e3)), this.chunkBudget <= 0)) return;
            var _this_view = this.view,
              i = _this_view.state,
              _this_view_viewport = _this_view.viewport,
              n = _this_view_viewport.to,
              s = i.field(et.state);
            if (s.tree == s.context.tree && s.context.isDone(n + 1e5)) return;
            var o = Date.now() + Math.min(this.chunkBudget, 100, e && !wh ? Math.max(25, e.timeRemaining() - 5) : 1e9),
              u = s.context.treeLen < n && i.doc.length > n + 1e3,
              l = s.context.work(() => (wh && wh()) || Date.now() > o, n + (u ? 0 : 1e5));
            (this.chunkBudget -= Date.now() - t), (l || this.chunkBudget <= 0) && (s.context.takeTree(), this.view.dispatch({ effects: et.setState.of(new ci(s.context)) })), this.chunkBudget > 0 && !(l && !u) && this.scheduleWork(), this.checkAsyncSchedule(s.context);
          }
          checkAsyncSchedule(e) {
            e.scheduleOn &&
              (this.workScheduled++,
              e.scheduleOn
                .then(() => this.scheduleWork())
                .catch((t) => Ft(this.view.state, t))
                .then(() => this.workScheduled--),
              (e.scheduleOn = null));
          }
          destroy() {
            this.working && this.working();
          }
          isWorking() {
            return !!(this.working || this.workScheduled > 0);
          }
          constructor(e) {
            (this.view = e), (this.working = null), (this.workScheduled = 0), (this.chunkEnd = -1), (this.chunkBudget = -1), (this.work = this.work.bind(this)), this.scheduleWork();
          }
        },
        "ParseWorker"
      ),
      {
        eventHandlers: {
          focus() {
            this.scheduleWork();
          },
        },
      }
    ),
    Gr = U.define({
      combine(r) {
        return r.length ? r[0] : null;
      },
      enables: (r) => [
        et.state,
        hw,
        te.contentAttributes.compute([r], (e) => {
          var t = e.facet(r);
          return t && t.name ? { "data-language": t.name } : {};
        }),
      ],
    }),
    is = class is {
      constructor(e, ref) {
        var t = ref === void 0 ? [] : ref;
        (this.language = e), (this.support = t), (this.extension = [e, t]);
      }
    };
  h(is, "LanguageSupport");
  var yu = U.define({
    combine: (r) => {
      if (!r.length) return "  ";
      var e = r[0];
      if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0])) throw new Error("Invalid indent unit: " + JSON.stringify(r[0]));
      return e;
    },
  });
  function VD(r) {
    var e = r.facet(yu);
    return e.charCodeAt(0) == 9 ? r.tabSize * e.length : e.length;
  }
  h(VD, "getIndentUnit");
  function zD(r, e) {
    var t = "",
      i = r.tabSize,
      n = r.facet(yu)[0];
    if (n == "	") {
      for (; e >= i; ) (t += "	"), (e -= i);
      n = " ";
    }
    for (var s = 0; s < e; s++) t += n;
    return t;
  }
  h(zD, "indentString");
  var fi = class fi1 {
    static define(e, t) {
      return new fi(e, t || {});
    }
    constructor(e, t) {
      this.specs = e;
      var i;
      function n(u) {
        var l = lt.newName();
        return ((i || (i = Object.create(null)))["." + l] = u), l;
      }
      h(n, "def");
      var s = typeof t.all == "string" ? t.all : t.all ? n(t.all) : void 0,
        o = t.scope;
      (this.scope = o instanceof et ? (u) => u.prop(Yr) == o.data : o ? (u) => u == o : void 0),
        (this.style = vh(
          e.map((u) => ({ tag: u.tag, class: u.class || n(Object.assign({}, u, { tag: null })) })),
          { all: s }
        ).style),
        (this.module = i ? new lt(i) : null),
        (this.themeType = t.themeType);
    }
  };
  h(fi, "HighlightStyle");
  var Bh = U.define(),
    WD = U.define({
      combine(r) {
        return r.length ? [r[0]] : null;
      },
    });
  function xh(r) {
    var e = r.facet(Bh);
    return e.length ? e : r.facet(WD);
  }
  h(xh, "getHighlighters");
  function jD(r, e) {
    var t = [cw],
      i;
    return r instanceof fi && (r.module && t.push(te.styleModule.of(r.module)), (i = r.themeType)), (e === null || e === void 0 ? void 0 : e.fallback) ? t.push(WD.of(r)) : i ? t.push(Bh.computeN([te.darkTheme], (n) => (n.facet(te.darkTheme) == (i == "dark") ? [r] : []))) : t.push(Bh.of(r)), t;
  }
  h(jD, "syntaxHighlighting");
  var Fu = class Fu {
    update(e) {
      var t = ur(e.state),
        i = xh(e.state),
        n = i != xh(e.startState);
      t.length < e.view.viewport.to && !n && t.type == this.tree.type ? (this.decorations = this.decorations.map(e.changes)) : (t != this.tree || e.viewportChanged || n) && ((this.tree = t), (this.decorations = this.buildDeco(e.view, i)));
    }
    buildDeco(e, t) {
      if (!t || !this.tree.length) return he.none;
      var i = new Wt();
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.visibleRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step_value = _step.value,
            n = _step_value.from,
            s = _step_value.to;
          MD(
            this.tree,
            t,
            (o, u, l) => {
              i.add(o, u, this.markCache[l] || (this.markCache[l] = he.mark({ class: l })));
            },
            n,
            s
          );
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return i.finish();
    }
    constructor(e) {
      (this.markCache = Object.create(null)), (this.tree = ur(e.state)), (this.decorations = this.buildDeco(e, xh(e.state)));
    }
  };
  h(Fu, "TreeHighlighter");
  var cw = Or.high(ze.fromClass(Fu, { decorations: (r) => r.decorations })),
    RB = fi.define([
      { tag: O.meta, color: "#404740" },
      { tag: O.link, textDecoration: "underline" },
      { tag: O.heading, textDecoration: "underline", fontWeight: "bold" },
      { tag: O.emphasis, fontStyle: "italic" },
      { tag: O.strong, fontWeight: "bold" },
      { tag: O.strikethrough, textDecoration: "line-through" },
      { tag: O.keyword, color: "#708" },
      { tag: [O.atom, O.bool, O.url, O.contentSeparator, O.labelName], color: "#219" },
      { tag: [O.literal, O.inserted], color: "#164" },
      { tag: [O.string, O.deleted], color: "#a11" },
      { tag: [O.regexp, O.escape, O.special(O.string)], color: "#e40" },
      { tag: O.definition(O.variableName), color: "#00f" },
      { tag: O.local(O.variableName), color: "#30a" },
      { tag: [O.typeName, O.namespace], color: "#085" },
      { tag: O.className, color: "#167" },
      { tag: [O.special(O.variableName), O.macroName], color: "#256" },
      { tag: O.definition(O.propertyName), color: "#00c" },
      { tag: O.comment, color: "#940" },
      { tag: O.invalid, color: "#f00" },
    ]),
    fw = te.baseTheme({ "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" }, "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" } }),
    HD = 1e4,
    UD = "()[]{}",
    YD = U.define({
      combine(r) {
        return ui(r, { afterCursor: !0, brackets: UD, maxScanDistance: HD, renderMatch: mw });
      },
    }),
    dw = he.mark({ class: "cm-matchingBracket" }),
    pw = he.mark({ class: "cm-nonmatchingBracket" });
  function mw(r) {
    var e = [],
      t = r.matched ? dw : pw;
    return e.push(t.range(r.start.from, r.start.to)), r.end && e.push(t.range(r.end.from, r.end.to)), e;
  }
  h(mw, "defaultRenderMatch");
  var gw = Me.define({
      create() {
        return he.none;
      },
      update(r, e) {
        if (!e.docChanged && !e.selection) return r;
        var t = [],
          i = e.state.facet(YD);
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.state.selection.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            if (!n.empty) continue;
            var s = ts(e.state, n.head, -1, i) || (n.head > 0 && ts(e.state, n.head - 1, 1, i)) || (i.afterCursor && (ts(e.state, n.head, 1, i) || (n.head < e.state.doc.length && ts(e.state, n.head + 1, -1, i))));
            s && (t = t.concat(i.renderMatch(s, e.state)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return he.set(t, !0);
      },
      provide: (r) => te.decorations.from(r),
    }),
    Dw = [gw, fw];
  function GD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [YD.of(r), Dw];
  }
  h(GD, "bracketMatching");
  var bw = new ue();
  function _h(r, e, t) {
    var i = r.prop(e < 0 ? ue.openedBy : ue.closedBy);
    if (i) return i;
    if (r.name.length == 1) {
      var n = t.indexOf(r.name);
      if (n > -1 && n % 2 == (e < 0 ? 1 : 0)) return [t[n + e]];
    }
    return null;
  }
  h(_h, "matchingNodes");
  function Oh(r) {
    var e = r.type.prop(bw);
    return e ? e(r.node) : r;
  }
  h(Oh, "findHandle");
  function ts(r, e, t) {
    var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var n = i.maxScanDistance || HD,
      s = i.brackets || UD,
      o = ur(r),
      u = o.resolveInner(e, t);
    for (var l = u; l; l = l.parent) {
      var a = _h(l.type, t, s);
      if (a && l.from < l.to) {
        var c = Oh(l);
        if (c && (t > 0 ? e >= c.from && e < c.to : e > c.from && e <= c.to)) return Fw(r, e, t, l, c, a, s);
      }
    }
    return yw(r, e, t, o, u.type, n, s);
  }
  h(ts, "matchBrackets");
  function Fw(r, e, t, i, n, s, o) {
    var u = i.parent,
      l = { from: n.from, to: n.to },
      a = 0,
      c = u === null || u === void 0 ? void 0 : u.cursor();
    if (c && (t < 0 ? c.childBefore(i.from) : c.childAfter(i.to)))
      do
        if (t < 0 ? c.to <= i.from : c.from >= i.to) {
          if (a == 0 && s.indexOf(c.type.name) > -1 && c.from < c.to) {
            var f = Oh(c);
            return { start: l, end: f ? { from: f.from, to: f.to } : void 0, matched: !0 };
          } else if (_h(c.type, t, o)) a++;
          else if (_h(c.type, -t, o)) {
            if (a == 0) {
              var f1 = Oh(c);
              return { start: l, end: f1 && f1.from < f1.to ? { from: f1.from, to: f1.to } : void 0, matched: !1 };
            }
            a--;
          }
        }
      while (t < 0 ? c.prevSibling() : c.nextSibling());
    return { start: l, matched: !1 };
  }
  h(Fw, "matchMarkedBrackets");
  function yw(r, e, t, i, n, s, o) {
    var u = t < 0 ? r.sliceDoc(e - 1, e) : r.sliceDoc(e, e + 1),
      l = o.indexOf(u);
    if (l < 0 || (l % 2 == 0) != t > 0) return null;
    var a = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e },
      c = r.doc.iterRange(e, t > 0 ? r.doc.length : 0),
      f = 0;
    for (var d = 0; !c.next().done && d <= s; ) {
      var p = c.value;
      t < 0 && (d += p.length);
      var m = e + d * t;
      for (var D = t > 0 ? 0 : p.length - 1, g = t > 0 ? p.length : -1; D != g; D += t) {
        var b = o.indexOf(p[D]);
        if (!(b < 0 || i.resolveInner(m + D, 1).type != n))
          if ((b % 2 == 0) == t > 0) f++;
          else {
            if (f == 1) return { start: a, end: { from: m + D, to: m + D + 1 }, matched: b >> 1 == l >> 1 };
            f--;
          }
      }
      t > 0 && (d += p.length);
    }
    return c.done ? { start: a, matched: !1 } : null;
  }
  h(yw, "matchPlainBrackets");
  var Cw = Object.create(null),
    qD = [Ie.none];
  var ID = [],
    Aw = Object.create(null);
  for (
    var _i2 = 0,
      _iter1 = [
        ["variable", "variableName"],
        ["variable-2", "variableName.special"],
        ["string-2", "string.special"],
        ["def", "variableName.definition"],
        ["tag", "tagName"],
        ["attribute", "attributeName"],
        ["type", "typeName"],
        ["builtin", "variableName.standard"],
        ["qualifier", "modifier"],
        ["error", "invalid"],
        ["header", "heading"],
        ["property", "propertyName"],
      ];
    _i2 < _iter1.length;
    _i2++
  ) {
    var _iter__i = _slicedToArray(_iter1[_i2], 2),
      r2 = _iter__i[0],
      e1 = _iter__i[1];
    Aw[r2] = Ew(Cw, e1);
  }
  function Sh(r, e) {
    ID.indexOf(r) > -1 || (ID.push(r), console.warn(e));
  }
  h(Sh, "warnForPart");
  function Ew(r, e) {
    var t = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = e.split(".")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var s = _step.value;
        var o = r[s] || O[s];
        o ? (typeof o == "function" ? (t ? (t = o(t)) : Sh(s, "Modifier ".concat(s, " used at start of tag"))) : t ? Sh(s, "Tag ".concat(s, " used as modifier")) : (t = o)) : Sh(s, "Unknown highlighting tag ".concat(s));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!t) return 0;
    var i = e.replace(/ /g, "_"),
      n = Ie.define({ id: qD.length, name: i, props: [Du({ [i]: t })] });
    return qD.push(n), n.id;
  }
  h(Ew, "createTokenType");
  var Rh = ut.define(),
    vw = ut.define(),
    kw = U.define(),
    KD = U.define({
      combine(r) {
        return ui(r, { minDepth: 100, newGroupDelay: 500, joinToEvent: (e, t) => t }, { minDepth: Math.max, newGroupDelay: Math.min, joinToEvent: (e, t) => (i, n) => e(i, n) || t(i, n) });
      },
    });
  function ww(r) {
    var e = 0;
    return r.iterChangedRanges((t, i) => (e = i)), e;
  }
  h(ww, "changeEnd");
  var XD = Me.define({
    create() {
      return pt.empty;
    },
    update(r, e) {
      var t = e.state.facet(KD),
        i = e.annotation(Rh);
      if (i) {
        var l = e.docChanged ? j.single(ww(e.changes)) : void 0,
          a = je.fromTransaction(e, l),
          c = i.side,
          f = c == 0 ? r.undone : r.done;
        return a ? (f = Cu(f, f.length, t.minDepth, a)) : (f = e11(f, e.startState.selection)), new pt(c == 0 ? i.rest : f, c == 0 ? f : i.rest);
      }
      var n = e.annotation(vw);
      if (((n == "full" || n == "before") && (r = r.isolate()), e.annotation(xe.addToHistory) === !1)) return e.changes.empty ? r : r.addMapping(e.changes.desc);
      var s = je.fromTransaction(e),
        o = e.annotation(xe.time),
        u = e.annotation(xe.userEvent);
      return s ? (r = r.addChanges(s, o, u, t, e)) : e.selection && (r = r.addSelection(e.startState.selection, o, u, t.newGroupDelay)), (n == "full" || n == "after") && (r = r.isolate()), r;
    },
    toJSON(r) {
      return { done: r.done.map((e) => e.toJSON()), undone: r.undone.map((e) => e.toJSON()) };
    },
    fromJSON(r) {
      return new pt(r.done.map(je.fromJSON), r.undone.map(je.fromJSON));
    },
  });
  function QD() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return [
      XD,
      KD.of(r),
      te.domEventHandlers({
        beforeinput(e, t) {
          var i = e.inputType == "historyUndo" ? JD : e.inputType == "historyRedo" ? $h : null;
          return i ? (e.preventDefault(), i(t)) : !1;
        },
      }),
    ];
  }
  h(QD, "history");
  function Au(r, e) {
    return function (param) {
      var t = param.state,
        i = param.dispatch;
      if (!e && t.readOnly) return !1;
      var n = t.field(XD, !1);
      if (!n) return !1;
      var s = n.pop(r, t, e);
      return s ? (i(s), !0) : !1;
    };
  }
  h(Au, "cmd");
  var JD = Au(0, !1),
    $h = Au(1, !1),
    xw = Au(0, !0),
    Sw = Au(1, !0);
  var je = class je1 {
    setSelAfter(e) {
      return new je(this.changes, this.effects, this.mapped, this.startSelection, e);
    }
    toJSON() {
      var e, t, i;
      return { changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(), mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(), startSelection: (i = this.startSelection) === null || i === void 0 ? void 0 : i.toJSON(), selectionsAfter: this.selectionsAfter.map((n) => n.toJSON()) };
    }
    static fromJSON(e) {
      return new je(e.changes && we.fromJSON(e.changes), [], e.mapped && Ze.fromJSON(e.mapped), e.startSelection && j.fromJSON(e.startSelection), e.selectionsAfter.map(j.fromJSON));
    }
    static fromTransaction(e, t) {
      var i = Ct;
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = e.startState.facet(kw)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var n = _step.value;
          var s = n(e);
          s.length && (i = i.concat(s));
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return !i.length && e.changes.empty ? null : new je(e.changes.invert(e.startState.doc), i, void 0, t || e.startState.selection, Ct);
    }
    static selection(e) {
      return new je(void 0, Ct, void 0, void 0, e);
    }
    constructor(e, t, i, n, s) {
      (this.changes = e), (this.effects = t), (this.mapped = i), (this.startSelection = n), (this.selectionsAfter = s);
    }
  };
  h(je, "HistEvent");
  function Cu(r, e, t, i) {
    var n = e + 1 > t + 20 ? e - t - 1 : 0,
      s = r.slice(n, e);
    return s.push(i), s;
  }
  h(Cu, "updateBranch");
  function Bw(r, e) {
    var t = [],
      i = !1;
    return (
      r.iterChangedRanges((n, s) => t.push(n, s)),
      e.iterChangedRanges((n, s, o, u) => {
        for (var l = 0; l < t.length; ) {
          var a = t[l++],
            c = t[l++];
          u >= a && o <= c && (i = !0);
        }
      }),
      i
    );
  }
  h(Bw, "isAdjacent");
  function _w(r, e) {
    return r.ranges.length == e.ranges.length && r.ranges.filter((t, i) => t.empty != e.ranges[i].empty).length === 0;
  }
  h(_w, "eqSelectionShape");
  function ZD(r, e) {
    return r.length ? (e.length ? r.concat(e) : r) : e;
  }
  h(ZD, "conc");
  var Ct = [],
    Ow = 200;
  function e11(r, e) {
    if (r.length) {
      var t = r[r.length - 1],
        i = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - Ow));
      return i.length && i[i.length - 1].eq(e) ? r : (i.push(e), Cu(r, r.length - 1, 1e9, t.setSelAfter(i)));
    } else return [je.selection([e])];
  }
  h(e11, "addSelection");
  function Tw(r) {
    var e = r[r.length - 1],
      t = r.slice();
    return (t[r.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1))), t;
  }
  h(Tw, "popSelection");
  function Th(r, e) {
    if (!r.length) return r;
    var t = r.length,
      i = Ct;
    for (; t; ) {
      var n = Rw(r[t - 1], e, i);
      if ((n.changes && !n.changes.empty) || n.effects.length) {
        var s = r.slice(0, t);
        return (s[t - 1] = n), s;
      } else (e = n.mapped), t--, (i = n.selectionsAfter);
    }
    return i.length ? [je.selection(i)] : Ct;
  }
  h(Th, "addMappingToBranch");
  function Rw(r, e, t) {
    var i = ZD(r.selectionsAfter.length ? r.selectionsAfter.map((u) => u.map(e)) : Ct, t);
    if (!r.changes) return je.selection(i);
    var n = r.changes.map(e),
      s = e.mapDesc(r.changes, !0),
      o = r.mapped ? r.mapped.composeDesc(s) : s;
    return new je(n, de.mapEffects(r.effects, e), o, r.startSelection.map(s), i);
  }
  h(Rw, "mapEvent");
  var $w = /^(input\.type|delete)($|\.)/,
    pt = class pt1 {
      isolate() {
        return this.prevTime ? new pt(this.done, this.undone) : this;
      }
      addChanges(e, t, i, n, s) {
        var o = this.done,
          u = o[o.length - 1];
        return (
          u && u.changes && !u.changes.empty && e.changes && (!i || $w.test(i)) && ((!u.selectionsAfter.length && t - this.prevTime < n.newGroupDelay && n.joinToEvent(s, Bw(u.changes, e.changes))) || i == "input.type.compose")
            ? (o = Cu(o, o.length - 1, n.minDepth, new je(e.changes.compose(u.changes), ZD(e.effects, u.effects), u.mapped, u.startSelection, Ct)))
            : (o = Cu(o, o.length, n.minDepth, e)),
          new pt(o, Ct, t, i)
        );
      }
      addSelection(e, t, i, n) {
        var s = this.done.length ? this.done[this.done.length - 1].selectionsAfter : Ct;
        return s.length > 0 && t - this.prevTime < n && i == this.prevUserEvent && i && /^select($|\.)/.test(i) && _w(s[s.length - 1], e) ? this : new pt(e11(this.done, e), this.undone, t, i);
      }
      addMapping(e) {
        return new pt(Th(this.done, e), Th(this.undone, e), this.prevTime, this.prevUserEvent);
      }
      pop(e, t, i) {
        var n = e == 0 ? this.done : this.undone;
        if (n.length == 0) return null;
        var s = n[n.length - 1];
        if (i && s.selectionsAfter.length) return t.update({ selection: s.selectionsAfter[s.selectionsAfter.length - 1], annotations: Rh.of({ side: e, rest: Tw(n) }), userEvent: e == 0 ? "select.undo" : "select.redo", scrollIntoView: !0 });
        if (s.changes) {
          var o = n.length == 1 ? Ct : n.slice(0, n.length - 1);
          return s.mapped && (o = Th(o, s.mapped)), t.update({ changes: s.changes, selection: s.startSelection, effects: s.effects, annotations: Rh.of({ side: e, rest: o }), filter: !1, userEvent: e == 0 ? "undo" : "redo", scrollIntoView: !0 });
        } else return null;
      }
      constructor(e, t, ref, ref1) {
        var i = ref === void 0 ? 0 : ref,
          n = ref1 === void 0 ? void 0 : ref1;
        (this.done = e), (this.undone = t), (this.prevTime = i), (this.prevUserEvent = n);
      }
    };
  h(pt, "HistoryState");
  pt.empty = new pt(Ct, Ct);
  var t1 = [
    { key: "Mod-z", run: JD, preventDefault: !0 },
    { key: "Mod-y", mac: "Mod-Shift-z", run: $h, preventDefault: !0 },
    { linux: "Ctrl-Shift-z", run: $h, preventDefault: !0 },
    { key: "Mod-u", run: xw, preventDefault: !0 },
    { key: "Alt-u", mac: "Mod-Shift-u", run: Sw, preventDefault: !0 },
  ];
  function i1(r, e) {
    var t = -1;
    return r.changeByRange((i) => {
      var n = [];
      for (var o = i.from; o <= i.to; ) {
        var u = r.doc.lineAt(o);
        u.number > t && (i.empty || i.to > u.from) && (e(u, n, i), (t = u.number)), (o = u.to + 1);
      }
      var s = r.changes(n);
      return { changes: n, range: j.range(s.mapPos(i.anchor, 1), s.mapPos(i.head, 1)) };
    });
  }
  h(i1, "changeBySelectedLine");
  var Mw = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              i1(r, (t, i) => {
                i.push({ from: t.from, insert: r.facet(yu) });
              }),
              { userEvent: "input.indent" }
            )
          ),
          !0);
    }, "indentMore"),
    Pw = h((param) => {
      var r = param.state,
        e = param.dispatch;
      return r.readOnly
        ? !1
        : (e(
            r.update(
              i1(r, (t, i) => {
                var n = /^\s*/.exec(t.text)[0];
                if (!n) return;
                var s = Ao(n, r.tabSize),
                  o = 0,
                  u = zD(r, Math.max(0, s - VD(r)));
                for (; o < n.length && o < u.length && n.charCodeAt(o) == u.charCodeAt(o); ) o++;
                i.push({ from: t.from + o, to: t.from + n.length, insert: u.slice(o) });
              }),
              { userEvent: "delete.dedent" }
            )
          ),
          !0);
    }, "indentLess");
  var r11 = { key: "Tab", run: Mw, shift: Pw };
  function At() {
    var r = arguments[0];
    typeof r == "string" && (r = document.createElement(r));
    var e = 1,
      t = arguments[1];
    if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
      for (var i in t)
        if (Object.prototype.hasOwnProperty.call(t, i)) {
          var n = t[i];
          typeof n == "string" ? r.setAttribute(i, n) : n != null && (r[i] = n);
        }
      e++;
    }
    for (; e < arguments.length; e++) n1(r, arguments[e]);
    return r;
  }
  h(At, "crelt");
  function n1(r, e) {
    if (typeof e == "string") r.appendChild(document.createTextNode(e));
    else if (e != null)
      if (e.nodeType != null) r.appendChild(e);
      else if (Array.isArray(e)) for (var t = 0; t < e.length; t++) n1(r, e[t]);
      else throw new RangeError("Unsupported child node: " + e);
  }
  h(n1, "add");
  var Eu = class Eu {
    constructor(e, t, i) {
      (this.from = e), (this.to = t), (this.diagnostic = i);
    }
  };
  h(Eu, "SelectedDiagnostic");
  var Jt = class Jt1 {
    static init(e, t, i) {
      var n = e,
        s = i.facet(lr).markerFilter;
      s && (n = s(n));
      var o = he.set(
        n.map((u) => (u.from == u.to || (u.from == u.to - 1 && i.doc.lineAt(u.from).to == u.from) ? he.widget({ widget: new vu(u), diagnostic: u }).range(u.from) : he.mark({ attributes: { class: "cm-lintRange cm-lintRange-" + u.severity }, diagnostic: u }).range(u.from, u.to))),
        !0
      );
      return new Jt(o, t, Xr(o));
    }
    constructor(e, t, i) {
      (this.diagnostics = e), (this.panel = t), (this.selected = i);
    }
  };
  h(Jt, "LintState");
  function Xr(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null,
      t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    var i = null;
    return (
      r.between(t, 1e9, (n, s, param) => {
        var o = param.spec;
        if (!(e && o.diagnostic != e)) return (i = new Eu(n, s, o.diagnostic)), !1;
      }),
      i
    );
  }
  h(Xr, "findDiagnostic");
  function Lw(r, e) {
    return !!(r.effects.some((t) => t.is(Ph)) || r.changes.touchesRange(e.pos));
  }
  h(Lw, "hideTooltip");
  function qw(r, e) {
    return r.field($t, !1)
      ? e
      : e.concat(
          de.appendConfig.of([
            $t,
            te.decorations.compute([$t], (t) => {
              var _t_field = t.field($t),
                i = _t_field.selected,
                n = _t_field.panel;
              return !i || !n || i.from == i.to ? he.none : he.set([Nw.range(i.from, i.to)]);
            }),
            vD(Vw, { hideOn: Lw }),
            Hw,
          ])
        );
  }
  h(qw, "maybeEnableLint");
  function Iw(r, e) {
    return { effects: qw(r, [Ph.of(e)]) };
  }
  h(Iw, "setDiagnostics");
  var Ph = de.define(),
    o1 = de.define(),
    u1 = de.define(),
    $t = Me.define({
      create() {
        return new Jt(he.none, null, null);
      },
      update(r, e) {
        if (e.docChanged) {
          var t = r.diagnostics.map(e.changes),
            i = null;
          if (r.selected) {
            var n = e.changes.mapPos(r.selected.from, 1);
            i = Xr(t, r.selected.diagnostic, n) || Xr(t, null, n);
          }
          r = new Jt(t, r.panel, i);
        }
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = e.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t1 = _step.value;
            t1.is(Ph) ? (r = Jt.init(t1.value, r.panel, e.state)) : t1.is(o1) ? (r = new Jt(r.diagnostics, t1.value ? Kr.open : null, r.selected)) : t1.is(u1) && (r = new Jt(r.diagnostics, r.panel, t1.value));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return r;
      },
      provide: (r) => [nu.from(r, (e) => e.panel), te.decorations.from(r, (e) => e.diagnostics)],
    });
  var Nw = he.mark({ class: "cm-lintRange cm-lintRange-active" });
  function Vw(r, e, t) {
    var _r_state_field = r.state.field($t),
      i = _r_state_field.diagnostics,
      n = [],
      s = 2e8,
      o = 0;
    i.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (l, a, param) => {
      var c = param.spec;
      e >= l && e <= a && (l == a || ((e > l || t > 0) && (e < a || t < 0))) && (n.push(c.diagnostic), (s = Math.min(l, s)), (o = Math.max(a, o)));
    });
    var u = r.state.facet(lr).tooltipFilter;
    return (
      u && (n = u(n)),
      n.length
        ? {
            pos: s,
            end: o,
            above: r.state.doc.lineAt(s).to < o,
            create() {
              return { dom: zw(r, n) };
            },
          }
        : null
    );
  }
  h(Vw, "lintTooltip");
  function zw(r, e) {
    return At(
      "ul",
      { class: "cm-tooltip-lint" },
      e.map((t) => h1(r, t, !1))
    );
  }
  h(zw, "diagnosticsTooltip");
  var s1 = h((r) => {
    var e = r.state.field($t, !1);
    return !e || !e.panel ? !1 : (r.dispatch({ effects: o1.of(!1) }), !0);
  }, "closeLintPanel");
  var Ww = ze.fromClass(
      class {
        run() {
          var r = Date.now();
          if (r < this.lintTime - 10) setTimeout(this.run, this.lintTime - r);
          else {
            this.set = !1;
            var _this_view = this.view,
              e = _this_view.state,
              _e_facet = e.facet(lr),
              t = _e_facet.sources;
            Promise.all(t.map((i) => Promise.resolve(i(this.view)))).then(
              (i) => {
                var n = i.reduce((s, o) => s.concat(o));
                this.view.state.doc == e.doc && this.view.dispatch(Iw(this.view.state, n));
              },
              (i) => {
                Ft(this.view.state, i);
              }
            );
          }
        }
        update(r) {
          var e = r.state.facet(lr);
          (r.docChanged || e != r.startState.facet(lr) || (e.needsRefresh && e.needsRefresh(r))) && ((this.lintTime = Date.now() + e.delay), this.set || ((this.set = !0), (this.timeout = setTimeout(this.run, e.delay))));
        }
        force() {
          this.set && ((this.lintTime = Date.now()), this.run());
        }
        destroy() {
          clearTimeout(this.timeout);
        }
        constructor(r) {
          (this.view = r), (this.timeout = -1), (this.set = !0);
          var _r_state_facet = r.state.facet(lr),
            e = _r_state_facet.delay;
          (this.lintTime = Date.now() + e), (this.run = this.run.bind(this)), (this.timeout = setTimeout(this.run, e));
        }
      }
    ),
    lr = U.define({
      combine(r) {
        return Object.assign(
          { sources: r.map((e) => e.source) },
          ui(
            r.map((e) => e.config),
            { delay: 750, markerFilter: null, tooltipFilter: null, needsRefresh: null },
            { needsRefresh: (e, t) => (e ? (t ? (i) => e(i) || t(i) : e) : t) }
          )
        );
      },
      enables: Ww,
    });
  function l1(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return lr.of({ source: r, config: e });
  }
  h(l1, "linter");
  function a1(r) {
    var e = [];
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    if (r)
      try {
        var _loop = function () {
          var _loop = function (i) {
            var n = t[i];
            if (/[a-zA-Z]/.test(n) && !e.some((s) => s.toLowerCase() == n.toLowerCase())) {
              e.push(n);
              return "continue|e";
            }
          };
          var _step_value = _step.value,
            t = _step_value.name;
          for (var i = 0; i < t.length; i++) {
            var _ret = _loop(i);
            switch (_ret) {
              case "continue|e":
                return "continue|e";
            }
          }
          e.push("");
        };
        e: for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _ret = _loop();
          switch (_ret) {
            case "continue|e":
              continue e;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    return e;
  }
  h(a1, "assignKeys");
  function h1(r, e, t) {
    var i;
    var n = t ? a1(e.actions) : [];
    return At(
      "li",
      { class: "cm-diagnostic cm-diagnostic-" + e.severity },
      At("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage() : e.message),
      (i = e.actions) === null || i === void 0
        ? void 0
        : i.map((s, o) => {
            var u = !1,
              l = h((d) => {
                if ((d.preventDefault(), u)) return;
                u = !0;
                var p = Xr(r.state.field($t).diagnostics, e);
                p && s.apply(r, p.from, p.to);
              }, "click"),
              a = s.name,
              c = n[o] ? a.indexOf(n[o]) : -1,
              f = c < 0 ? a : [a.slice(0, c), At("u", a.slice(c, c + 1)), a.slice(c + 1)];
            return At("button", { type: "button", class: "cm-diagnosticAction", onclick: l, onmousedown: l, "aria-label": " Action: ".concat(a).concat(c < 0 ? "" : ' (access key "'.concat(n[o], ')"'), ".") }, f);
          }),
      e.source && At("div", { class: "cm-diagnosticSource" }, e.source)
    );
  }
  h(h1, "renderDiagnostic");
  var vu = class vu extends Ht {
    eq(e) {
      return e.diagnostic == this.diagnostic;
    }
    toDOM() {
      return At("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
    }
    constructor(e) {
      super(), (this.diagnostic = e);
    }
  };
  h(vu, "DiagnosticWidget");
  var rs = class rs {
    constructor(e, t) {
      (this.diagnostic = t), (this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16)), (this.dom = h1(e, t, !0)), (this.dom.id = this.id), this.dom.setAttribute("role", "option");
    }
  };
  h(rs, "PanelItem");
  var Kr = class Kr1 {
    get selectedIndex() {
      var e = this.view.state.field($t).selected;
      if (!e) return -1;
      for (var t = 0; t < this.items.length; t++) if (this.items[t].diagnostic == e.diagnostic) return t;
      return -1;
    }
    update() {
      var _this_view_state_field = this.view.state.field($t),
        e = _this_view_state_field.diagnostics,
        t = _this_view_state_field.selected,
        i = 0,
        n = !1,
        s = null;
      for (
        e.between(0, this.view.state.doc.length, (o, u, param) => {
          var l = param.spec;
          var a = -1,
            c;
          for (var f = i; f < this.items.length; f++)
            if (this.items[f].diagnostic == l.diagnostic) {
              a = f;
              break;
            }
          a < 0 ? ((c = new rs(this.view, l.diagnostic)), this.items.splice(i, 0, c), (n = !0)) : ((c = this.items[a]), a > i && (this.items.splice(i, a - i), (n = !0))), t && c.diagnostic == t.diagnostic ? c.dom.hasAttribute("aria-selected") || (c.dom.setAttribute("aria-selected", "true"), (s = c)) : c.dom.hasAttribute("aria-selected") && c.dom.removeAttribute("aria-selected"), i++;
        });
        i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0);

      )
        (n = !0), this.items.pop();
      this.items.length == 0 && (this.items.push(new rs(this.view, { from: -1, to: -1, severity: "info", message: this.view.state.phrase("No diagnostics") })), (n = !0)),
        s
          ? (this.list.setAttribute("aria-activedescendant", s.id),
            this.view.requestMeasure({
              key: this,
              read: () => ({ sel: s.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
              write: (param) => {
                var o = param.sel,
                  u = param.panel;
                o.top < u.top ? (this.list.scrollTop -= u.top - o.top) : o.bottom > u.bottom && (this.list.scrollTop += o.bottom - u.bottom);
              },
            }))
          : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"),
        n && this.sync();
    }
    sync() {
      var e = this.list.firstChild;
      function t() {
        var i = e;
        (e = i.nextSibling), i.remove();
      }
      h(t, "rm");
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var i = _step.value;
          if (i.dom.parentNode == this.list) {
            for (; e != i.dom; ) t();
            e = i.dom.nextSibling;
          } else this.list.insertBefore(i.dom, e);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      for (; e; ) t();
    }
    moveSelection(e) {
      if (this.selectedIndex < 0) return;
      var t = this.view.state.field($t),
        i = Xr(t.diagnostics, this.items[e].diagnostic);
      i && this.view.dispatch({ selection: { anchor: i.from, head: i.to }, scrollIntoView: !0, effects: u1.of(i) });
    }
    static open(e) {
      return new Kr(e);
    }
    constructor(e) {
      (this.view = e), (this.items = []);
      var t = h((n) => {
          if (n.keyCode == 27) s1(this.view), this.view.focus();
          else if (n.keyCode == 38 || n.keyCode == 33) this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
          else if (n.keyCode == 40 || n.keyCode == 34) this.moveSelection((this.selectedIndex + 1) % this.items.length);
          else if (n.keyCode == 36) this.moveSelection(0);
          else if (n.keyCode == 35) this.moveSelection(this.items.length - 1);
          else if (n.keyCode == 13) this.view.focus();
          else if (n.keyCode >= 65 && n.keyCode <= 90 && this.selectedIndex >= 0) {
            var _this_items_this_selectedIndex = this.items[this.selectedIndex],
              s = _this_items_this_selectedIndex.diagnostic,
              o = a1(s.actions);
            for (var u = 0; u < o.length; u++)
              if (o[u].toUpperCase().charCodeAt(0) == n.keyCode) {
                var l = Xr(this.view.state.field($t).diagnostics, s);
                l && s.actions[u].apply(e, l.from, l.to);
              }
          } else return;
          n.preventDefault();
        }, "onkeydown"),
        i = h((n) => {
          for (var s = 0; s < this.items.length; s++) this.items[s].dom.contains(n.target) && this.moveSelection(s);
        }, "onclick");
      (this.list = At("ul", { tabIndex: 0, role: "listbox", "aria-label": this.view.state.phrase("Diagnostics"), onkeydown: t, onclick: i })), (this.dom = At("div", { class: "cm-panel-lint" }, this.list, At("button", { type: "button", name: "close", "aria-label": this.view.state.phrase("close"), onclick: () => s1(this.view) }, "\xd7"))), this.update();
    }
  };
  h(Kr, "LintPanel");
  function jw(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'viewBox="0 0 40 40"';
    return 'url(\'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" '.concat(e, ">").concat(encodeURIComponent(r), "</svg>')");
  }
  h(jw, "svg");
  function Mh(r) {
    return jw('<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="'.concat(r, '" fill="none" stroke-width=".7"/>'), 'width="6" height="3"');
  }
  h(Mh, "underline");
  var Hw = te.baseTheme({
    ".cm-diagnostic": { padding: "3px 6px 3px 8px", marginLeft: "-1px", display: "block", whiteSpace: "pre-wrap" },
    ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
    ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
    ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
    ".cm-diagnosticAction": { font: "inherit", border: "none", padding: "2px 4px", backgroundColor: "#444", color: "white", borderRadius: "3px", marginLeft: "8px", cursor: "pointer" },
    ".cm-diagnosticSource": { fontSize: "70%", opacity: 0.7 },
    ".cm-lintRange": { backgroundPosition: "left bottom", backgroundRepeat: "repeat-x", paddingBottom: "0.7px" },
    ".cm-lintRange-error": { backgroundImage: Mh("#d11") },
    ".cm-lintRange-warning": { backgroundImage: Mh("orange") },
    ".cm-lintRange-info": { backgroundImage: Mh("#999") },
    ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
    ".cm-tooltip-lint": { padding: 0, margin: 0 },
    ".cm-lintPoint": { position: "relative", "&:after": { content: '""', position: "absolute", bottom: 0, left: "-2px", borderLeft: "3px solid transparent", borderRight: "3px solid transparent", borderBottom: "4px solid #d11" } },
    ".cm-lintPoint-warning": { "&:after": { borderBottomColor: "orange" } },
    ".cm-lintPoint-info": { "&:after": { borderBottomColor: "#999" } },
    ".cm-panel.cm-panel-lint": {
      position: "relative",
      "& ul": { maxHeight: "100px", overflowY: "auto", "& [aria-selected]": { backgroundColor: "#ddd", "& u": { textDecoration: "underline" } }, "&:focus [aria-selected]": { background_fallback: "#bdf", backgroundColor: "Highlight", color_fallback: "white", color: "HighlightText" }, "& u": { textDecoration: "none" }, padding: 0, margin: 0 },
      "& [name=close]": { position: "absolute", top: "0", right: "2px", background: "inherit", border: "none", font: "inherit", padding: 0, margin: 0 },
    },
  });
  function Uw(r) {
    var e, t, i;
    return {
      c() {
        (e = R("button")),
          (e.innerHTML =
            '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" class="svelte-1ha11jr"><path d="M704 896H64V320h640v192h64V192c0-35-29-64-64-64H512C512 57 455 0 384 0S256 57 256 128H64c-35 0-64 29-64 64v704c0 35 29 64 64 64h640c35 0 64-29 64-64V768h-64v128zM192 192h64s64-29 64-64 29-64 64-64 64 29 64 64 32 64 64 64h64s64 29 64 64H128c0-39 28-64 64-64zm-64 512h128v-64H128v64zm448-128V448L320 640l256 192V704h320V576H576zM128 832h192v-64H128v64zm320-448H128v64h320v-64zM256 512H128v64h128v-64z"></path></svg>'),
          v(e, "class", "btn svelte-1ha11jr"),
          v(e, "id", "copy"),
          v(e, "title", "Copy bibtex"),
          kr(e, "copied", r[0]);
      },
      m(n, s) {
        C(n, e, s), t || ((i = Ce(e, "click", r[1])), (t = !0));
      },
      p(n, param) {
        var _param = _slicedToArray(param, 1),
          s = _param[0];
        s & 1 && kr(e, "copied", n[0]);
      },
      i: Se,
      o: Se,
      d(n) {
        n && y(e), (t = !1), i();
      },
    };
  }
  h(Uw, "create_fragment");
  function Yw(r, e, t) {
    var i,
      n = !1,
      s = e.bibtex,
      o = h(
        _asyncToGenerator(function () {
          var u;
          return __generator(this, function (_state) {
            switch (_state.label) {
              case 0:
                _state.trys.push([0, 2, , 3]);
                return [4, navigator.clipboard.writeText(s)];
              case 1:
                _state.sent(), t(0, (n = !0)), clearInterval(i), (i = setTimeout(() => t(0, (n = !1)), 3e3));
                return [3, 3];
              case 2:
                u = _state.sent();
                alert("Failed to copy");
                return [3, 3];
              case 3:
                return [2];
            }
          });
        }),
        "handleCopy"
      );
    return (
      (r.$$set = (u) => {
        "bibtex" in u && t(2, (s = u.bibtex));
      }),
      [n, o, s]
    );
  }
  h(Yw, "instance");
  var ku = class ku extends re {
    constructor(e) {
      super(), se(this, e, Yw, Uw, ne, { bibtex: 2 });
    }
  };
  h(ku, "CopyButton");
  var c1 = ku;
  var ar = class ar1 {
    toString() {
      return "["
        .concat(this.stack.filter((e, t) => t % 3 == 0).concat(this.state), "]@")
        .concat(this.pos)
        .concat(this.score ? "!" + this.score : "");
    }
    static start(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var n = e.parser.context;
      return new ar(e, [], t, i, i, 0, [], 0, n ? new ss(n, n.start) : null, 0, null);
    }
    get context() {
      return this.curContext ? this.curContext.context : null;
    }
    pushState(e, t) {
      this.stack.push(this.state, t, this.bufferBase + this.buffer.length), (this.state = e);
    }
    reduce(e) {
      var t;
      var i = e >> 19,
        n = e & 65535,
        _this_p = this.p,
        s = _this_p.parser,
        o = s.dynamicPrecedence(n);
      if ((o && (this.score += o), i == 0)) {
        this.pushState(s.getGoto(this.state, n, !0), this.reducePos), n < s.minRepeatTerm && this.storeNode(n, this.reducePos, this.reducePos, 4, !0), this.reduceContext(n, this.reducePos);
        return;
      }
      var u = this.stack.length - (i - 1) * 3 - (e & 262144 ? 6 : 0),
        l = u ? this.stack[u - 2] : this.p.ranges[0].from,
        a = this.reducePos - l;
      a >= 2e3 && !(!((t = this.p.parser.nodeSet.types[n]) === null || t === void 0) && t.isAnonymous) && (l == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, (this.p.lastBigReductionSize = a)) : this.p.lastBigReductionSize < a && ((this.p.bigReductionCount = 1), (this.p.lastBigReductionStart = l), (this.p.lastBigReductionSize = a)));
      var c = u ? this.stack[u - 1] : 0,
        f = this.bufferBase + this.buffer.length - c;
      if (n < s.minRepeatTerm || e & 131072) {
        var d = s.stateFlag(this.state, 1) ? this.pos : this.reducePos;
        this.storeNode(n, l, d, f + 4, !0);
      }
      if (e & 262144) this.state = this.stack[u];
      else {
        var d1 = this.stack[u - 3];
        this.state = s.getGoto(d1, n, !0);
      }
      for (; this.stack.length > u; ) this.stack.pop();
      this.reduceContext(n, l);
    }
    storeNode(e, t, i) {
      var n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 4,
        s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
      if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
        var o = this,
          u = this.buffer.length;
        if ((u == 0 && o.parent && ((u = o.bufferBase - o.parent.bufferBase), (o = o.parent)), u > 0 && o.buffer[u - 4] == 0 && o.buffer[u - 1] > -1)) {
          if (t == i) return;
          if (o.buffer[u - 2] >= t) {
            o.buffer[u - 2] = i;
            return;
          }
        }
      }
      if (!s || this.pos == i) this.buffer.push(e, t, i, n);
      else {
        var o1 = this.buffer.length;
        if (o1 > 0 && this.buffer[o1 - 4] != 0) for (; o1 > 0 && this.buffer[o1 - 2] > i; ) (this.buffer[o1] = this.buffer[o1 - 4]), (this.buffer[o1 + 1] = this.buffer[o1 - 3]), (this.buffer[o1 + 2] = this.buffer[o1 - 2]), (this.buffer[o1 + 3] = this.buffer[o1 - 1]), (o1 -= 4), n > 4 && (n -= 4);
        (this.buffer[o1] = e), (this.buffer[o1 + 1] = t), (this.buffer[o1 + 2] = i), (this.buffer[o1 + 3] = n);
      }
    }
    shift(e, t, i) {
      var n = this.pos;
      if (e & 131072) this.pushState(e & 65535, this.pos);
      else if (e & 262144) (this.pos = i), this.shiftContext(t, n), t <= this.p.parser.maxNode && this.buffer.push(t, n, i, 4);
      else {
        var s = e,
          _this_p = this.p,
          o = _this_p.parser;
        (i > this.pos || t <= o.maxNode) && ((this.pos = i), o.stateFlag(s, 1) || (this.reducePos = i)), this.pushState(s, n), this.shiftContext(t, n), t <= o.maxNode && this.buffer.push(t, n, i, 4);
      }
    }
    apply(e, t, i) {
      e & 65536 ? this.reduce(e) : this.shift(e, t, i);
    }
    useNode(e, t) {
      var i = this.p.reused.length - 1;
      (i < 0 || this.p.reused[i] != e) && (this.p.reused.push(e), i++);
      var n = this.pos;
      (this.reducePos = this.pos = n + e.length), this.pushState(t, n), this.buffer.push(i, n, this.reducePos, -1), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
    }
    split() {
      var e = this,
        t = e.buffer.length;
      for (; t > 0 && e.buffer[t - 2] > e.reducePos; ) t -= 4;
      var i = e.buffer.slice(t),
        n = e.bufferBase + t;
      for (; e && n == e.bufferBase; ) e = e.parent;
      return new ar(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, i, n, this.curContext, this.lookAhead, e);
    }
    recoverByDelete(e, t) {
      var i = e <= this.p.parser.maxNode;
      i && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, i ? 8 : 4), (this.pos = this.reducePos = t), (this.score -= 190);
    }
    canShift(e) {
      for (var t = new wu(this); ; ) {
        var i = this.p.parser.stateSlot(t.state, 4) || this.p.parser.hasAction(t.state, e);
        if (i == 0) return !1;
        if (!(i & 65536)) return !0;
        t.reduce(i);
      }
    }
    recoverByInsert(e) {
      if (this.stack.length >= 300) return [];
      var t = this.p.parser.nextStates(this.state);
      if (t.length > 4 << 1 || this.stack.length >= 120) {
        var _loop = function (s1) {
          var o = t[s1 + 1];
          n.some((u, l) => l & 1 && u == o) || n.push(t[s1], o);
        };
        var n = [];
        for (var s = 0, o; s < t.length; s += 2) (o = t[s + 1]) != this.state && this.p.parser.hasAction(o, e) && n.push(t[s], o);
        if (this.stack.length < 120) for (var s1 = 0; n.length < 4 << 1 && s1 < t.length; s1 += 2) _loop(s1);
        t = n;
      }
      var i = [];
      for (var n1 = 0; n1 < t.length && i.length < 4; n1 += 2) {
        var s2 = t[n1 + 1];
        if (s2 == this.state) continue;
        var o1 = this.split();
        o1.pushState(s2, this.pos), o1.storeNode(0, o1.pos, o1.pos, 4, !0), o1.shiftContext(t[n1], this.pos), (o1.score -= 200), i.push(o1);
      }
      return i;
    }
    forceReduce() {
      var e = this.p.parser.stateSlot(this.state, 5);
      if (!(e & 65536)) return !1;
      var _this_p = this.p,
        t = _this_p.parser;
      if (!t.validAction(this.state, e)) {
        var i = e >> 19,
          n = e & 65535,
          s = this.stack.length - i * 3;
        if (s < 0 || t.getGoto(this.stack[s], n, !1) < 0) return !1;
        this.storeNode(0, this.reducePos, this.reducePos, 4, !0), (this.score -= 100);
      }
      return (this.reducePos = this.pos), this.reduce(e), !0;
    }
    forceAll() {
      for (; !this.p.parser.stateFlag(this.state, 2); )
        if (!this.forceReduce()) {
          this.storeNode(0, this.pos, this.pos, 4, !0);
          break;
        }
      return this;
    }
    get deadEnd() {
      if (this.stack.length != 3) return !1;
      var _this_p = this.p,
        e = _this_p.parser;
      return e.data[e.stateSlot(this.state, 1)] == 65535 && !e.stateSlot(this.state, 4);
    }
    restart() {
      (this.state = this.stack[0]), (this.stack.length = 0);
    }
    sameState(e) {
      if (this.state != e.state || this.stack.length != e.stack.length) return !1;
      for (var t = 0; t < this.stack.length; t += 3) if (this.stack[t] != e.stack[t]) return !1;
      return !0;
    }
    get parser() {
      return this.p.parser;
    }
    dialectEnabled(e) {
      return this.p.parser.dialect.flags[e];
    }
    shiftContext(e, t) {
      this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
    }
    reduceContext(e, t) {
      this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
    }
    emitContext() {
      var e = this.buffer.length - 1;
      (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3);
    }
    emitLookAhead() {
      var e = this.buffer.length - 1;
      (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4);
    }
    updateContext(e) {
      if (e != this.curContext.context) {
        var t = new ss(this.curContext.tracker, e);
        t.hash != this.curContext.hash && this.emitContext(), (this.curContext = t);
      }
    }
    setLookAhead(e) {
      e > this.lookAhead && (this.emitLookAhead(), (this.lookAhead = e));
    }
    close() {
      this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
    }
    constructor(e, t, i, n, s, o, u, l, a, ref, f) {
      var c = ref === void 0 ? 0 : ref;
      (this.p = e), (this.stack = t), (this.state = i), (this.reducePos = n), (this.pos = s), (this.score = o), (this.buffer = u), (this.bufferBase = l), (this.curContext = a), (this.lookAhead = c), (this.parent = f);
    }
  };
  h(ar, "Stack");
  var ss = class ss {
    constructor(e, t) {
      (this.tracker = e), (this.context = t), (this.hash = e.strict ? e.hash(t) : 0);
    }
  };
  h(ss, "StackContext");
  var f1;
  (function (r) {
    (r[(r.Insert = 200)] = "Insert"), (r[(r.Delete = 190)] = "Delete"), (r[(r.Reduce = 100)] = "Reduce"), (r[(r.MaxNext = 4)] = "MaxNext"), (r[(r.MaxInsertStackDepth = 300)] = "MaxInsertStackDepth"), (r[(r.DampenInsertStackDepth = 120)] = "DampenInsertStackDepth"), (r[(r.MinBigReduction = 2e3)] = "MinBigReduction");
  })(f1 || (f1 = {}));
  var wu = class wu {
    reduce(e) {
      var t = e & 65535,
        i = e >> 19;
      i == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), (this.base += 3)) : (this.base -= (i - 1) * 3);
      var n = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
      this.state = n;
    }
    constructor(e) {
      (this.start = e), (this.state = e.state), (this.stack = e.stack), (this.base = this.stack.length);
    }
  };
  h(wu, "SimulatedStack");
  var hr = class hr1 {
    static create(e) {
      var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.bufferBase + e.buffer.length;
      return new hr(e, t, t - e.bufferBase);
    }
    maybeNext() {
      var e = this.stack.parent;
      e != null && ((this.index = this.stack.bufferBase - e.bufferBase), (this.stack = e), (this.buffer = e.buffer));
    }
    get id() {
      return this.buffer[this.index - 4];
    }
    get start() {
      return this.buffer[this.index - 3];
    }
    get end() {
      return this.buffer[this.index - 2];
    }
    get size() {
      return this.buffer[this.index - 1];
    }
    next() {
      (this.index -= 4), (this.pos -= 4), this.index == 0 && this.maybeNext();
    }
    fork() {
      return new hr(this.stack, this.pos, this.index);
    }
    constructor(e, t, i) {
      (this.stack = e), (this.pos = t), (this.index = i), (this.buffer = e.buffer), this.index == 0 && this.maybeNext();
    }
  };
  h(hr, "StackBufferCursor");
  function ns(r) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Uint16Array;
    if (typeof r != "string") return r;
    var t = null;
    for (var i = 0, n = 0; i < r.length; ) {
      var s = 0;
      for (;;) {
        var o = r.charCodeAt(i++),
          u = !1;
        if (o == 126) {
          s = 65535;
          break;
        }
        o >= 92 && o--, o >= 34 && o--;
        var l = o - 32;
        if ((l >= 46 && ((l -= 46), (u = !0)), (s += l), u)) break;
        s *= 46;
      }
      t ? (t[n++] = s) : (t = new e(s));
    }
    return t;
  }
  h(ns, "decodeArray");
  var cr = class cr {
    constructor() {
      (this.start = -1), (this.value = -1), (this.end = -1), (this.extended = -1), (this.lookAhead = 0), (this.mask = 0), (this.context = 0);
    }
  };
  h(cr, "CachedToken");
  var d1 = new cr(),
    xu = class xu {
      resolveOffset(e, t) {
        var i = this.range,
          n = this.rangeIndex,
          s = this.pos + e;
        for (; s < i.from; ) {
          if (!n) return null;
          var o = this.ranges[--n];
          (s -= i.from - o.to), (i = o);
        }
        for (; t < 0 ? s > i.to : s >= i.to; ) {
          if (n == this.ranges.length - 1) return null;
          var o1 = this.ranges[++n];
          (s += o1.from - i.to), (i = o1);
        }
        return s;
      }
      clipPos(e) {
        if (e >= this.range.from && e < this.range.to) return e;
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var t = _step.value;
            if (t.to > e) return Math.max(e, t.from);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return this.end;
      }
      peek(e) {
        var t = this.chunkOff + e,
          i,
          n;
        if (t >= 0 && t < this.chunk.length) (i = this.pos + e), (n = this.chunk.charCodeAt(t));
        else {
          var s = this.resolveOffset(e, 1);
          if (s == null) return -1;
          if (((i = s), i >= this.chunk2Pos && i < this.chunk2Pos + this.chunk2.length)) n = this.chunk2.charCodeAt(i - this.chunk2Pos);
          else {
            var o = this.rangeIndex,
              u = this.range;
            for (; u.to <= i; ) u = this.ranges[++o];
            (this.chunk2 = this.input.chunk((this.chunk2Pos = i))), i + this.chunk2.length > u.to && (this.chunk2 = this.chunk2.slice(0, u.to - i)), (n = this.chunk2.charCodeAt(0));
          }
        }
        return i >= this.token.lookAhead && (this.token.lookAhead = i + 1), n;
      }
      acceptToken(e) {
        var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        var i = t ? this.resolveOffset(t, -1) : this.pos;
        if (i == null || i < this.token.start) throw new RangeError("Token end out of bounds");
        (this.token.value = e), (this.token.end = i);
      }
      getChunk() {
        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
          var _this = this,
            e = _this.chunk,
            t = _this.chunkPos;
          (this.chunk = this.chunk2), (this.chunkPos = this.chunk2Pos), (this.chunk2 = e), (this.chunk2Pos = t), (this.chunkOff = this.pos - this.chunkPos);
        } else {
          (this.chunk2 = this.chunk), (this.chunk2Pos = this.chunkPos);
          var e1 = this.input.chunk(this.pos),
            t1 = this.pos + e1.length;
          (this.chunk = t1 > this.range.to ? e1.slice(0, this.range.to - this.pos) : e1), (this.chunkPos = this.pos), (this.chunkOff = 0);
        }
      }
      readNext() {
        return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? (this.next = -1) : (this.next = this.chunk.charCodeAt(this.chunkOff));
      }
      advance() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
        for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
          if (this.rangeIndex == this.ranges.length - 1) return this.setDone();
          (e -= this.range.to - this.pos), (this.range = this.ranges[++this.rangeIndex]), (this.pos = this.range.from);
        }
        return (this.pos += e), this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
      }
      setDone() {
        return (this.pos = this.chunkPos = this.end), (this.range = this.ranges[(this.rangeIndex = this.ranges.length - 1)]), (this.chunk = ""), (this.next = -1);
      }
      reset(e, t) {
        if ((t ? ((this.token = t), (t.start = e), (t.lookAhead = e + 1), (t.value = t.extended = -1)) : (this.token = d1), this.pos != e)) {
          if (((this.pos = e), e == this.end)) return this.setDone(), this;
          for (; e < this.range.from; ) this.range = this.ranges[--this.rangeIndex];
          for (; e >= this.range.to; ) this.range = this.ranges[++this.rangeIndex];
          e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? (this.chunkOff = e - this.chunkPos) : ((this.chunk = ""), (this.chunkOff = 0)), this.readNext();
        }
        return this;
      }
      read(e, t) {
        if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length) return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
        if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length) return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
        if (e >= this.range.from && t <= this.range.to) return this.input.read(e, t);
        var i = "";
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = this.ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var n = _step.value;
            if (n.from >= t) break;
            n.to > e && (i += this.input.read(Math.max(n.from, e), Math.min(n.to, t)));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return i;
      }
      constructor(e, t) {
        (this.input = e), (this.ranges = t), (this.chunk = ""), (this.chunkOff = 0), (this.chunk2 = ""), (this.chunk2Pos = 0), (this.next = -1), (this.token = d1), (this.rangeIndex = 0), (this.pos = this.chunkPos = t[0].from), (this.range = t[0]), (this.end = t[t.length - 1].to), this.readNext();
      }
    };
  h(xu, "InputStream");
  var pi = class pi {
    token(e, t) {
      var _t_p = t.p,
        i = _t_p.parser;
      y1(this.data, e, t, this.id, i.data, i.tokenPrecTable);
    }
    constructor(e, t) {
      (this.data = e), (this.id = t);
    }
  };
  h(pi, "TokenGroup");
  pi.prototype.contextual = pi.prototype.fallback = pi.prototype.extend = !1;
  var Su = class Su {
    token(e, t) {
      var i = e.pos,
        n;
      for (; (n = e.pos), y1(this.data, e, t, 0, this.data, this.precTable), !(e.token.value > -1); ) {
        if (this.elseToken == null) return;
        if (e.next < 0) break;
        e.advance(), e.reset(n + 1, e.token);
      }
      n > i && (e.reset(i, e.token), e.acceptToken(this.elseToken, n - i));
    }
    constructor(e, t, i) {
      (this.precTable = t), (this.elseToken = i), (this.data = typeof e == "string" ? ns(e) : e);
    }
  };
  h(Su, "LocalTokenGroup");
  Su.prototype.contextual = pi.prototype.fallback = pi.prototype.extend = !1;
  function y1(r, e, t, i, n, s) {
    var o = 0,
      u = 1 << i,
      _t_p_parser = t.p.parser,
      l = _t_p_parser.dialect;
    e: for (; u & r[o]; ) {
      var a = r[o + 1];
      for (var p = o + 3; p < a; p += 2)
        if ((r[p + 1] & u) > 0) {
          var m = r[p];
          if (l.allows(m) && (e.token.value == -1 || e.token.value == m || Kw(m, e.token.value, n, s))) {
            e.acceptToken(m);
            break;
          }
        }
      var c = e.next,
        f = 0,
        d = r[o + 2];
      if (e.next < 0 && d > f && r[a + d * 3 - 3] == 65535 && r[a + d * 3 - 3] == 65535) {
        o = r[a + d * 3 - 1];
        continue e;
      }
      for (; f < d; ) {
        var p1 = (f + d) >> 1,
          m1 = a + p1 + (p1 << 1),
          D = r[m1],
          g = r[m1 + 1] || 65536;
        if (c < D) d = p1;
        else if (c >= g) f = p1 + 1;
        else {
          (o = r[m1 + 2]), e.advance();
          continue e;
        }
      }
      break;
    }
  }
  h(y1, "readToken");
  function p1(r, e, t) {
    for (var i = e, n; (n = r[i]) != 65535; i++) if (n == t) return i - e;
    return -1;
  }
  h(p1, "findOffset");
  function Kw(r, e, t, i) {
    var n = p1(t, i, e);
    return n < 0 || p1(t, i, r) < n;
  }
  h(Kw, "overrides");
  var Mt = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG),
    Lh = null,
    m1;
  (function (r) {
    r[(r.Margin = 25)] = "Margin";
  })(m1 || (m1 = {}));
  function g1(r, e, t) {
    var i = r.cursor(qe.IncludeAnonymous);
    for (i.moveTo(e); ; )
      if (!(t < 0 ? i.childBefore(e) : i.childAfter(e)))
        for (;;) {
          if ((t < 0 ? i.to < e : i.from > e) && !i.type.isError) return t < 0 ? Math.max(0, Math.min(i.to - 1, e - 25)) : Math.min(r.length, Math.max(i.from + 1, e + 25));
          if (t < 0 ? i.prevSibling() : i.nextSibling()) break;
          if (!i.parent()) return t < 0 ? 0 : r.length;
        }
  }
  h(g1, "cutAt");
  var Bu = class Bu {
    nextFragment() {
      var e = (this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++]);
      if (e) {
        for (this.safeFrom = e.openStart ? g1(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? g1(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; ) this.trees.pop(), this.start.pop(), this.index.pop();
        this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), (this.nextStart = this.safeFrom);
      } else this.nextStart = 1e9;
    }
    nodeAt(e) {
      if (e < this.nextStart) return null;
      for (; this.fragment && this.safeTo <= e; ) this.nextFragment();
      if (!this.fragment) return null;
      for (;;) {
        var t = this.trees.length - 1;
        if (t < 0) return this.nextFragment(), null;
        var i = this.trees[t],
          n = this.index[t];
        if (n == i.children.length) {
          this.trees.pop(), this.start.pop(), this.index.pop();
          continue;
        }
        var s = i.children[n],
          o = this.start[t] + i.positions[n];
        if (o > e) return (this.nextStart = o), null;
        if (s instanceof ve) {
          if (o == e) {
            if (o < this.safeFrom) return null;
            var u = o + s.length;
            if (u <= this.safeTo) {
              var l = s.prop(ue.lookAhead);
              if (!l || u + l < this.fragment.to) return s;
            }
          }
          this.index[t]++, o + s.length >= Math.max(this.safeFrom, e) && (this.trees.push(s), this.start.push(o), this.index.push(0));
        } else this.index[t]++, (this.nextStart = o + s.length);
      }
    }
    constructor(e, t) {
      (this.fragments = e), (this.nodeSet = t), (this.i = 0), (this.fragment = null), (this.safeFrom = -1), (this.safeTo = -1), (this.trees = []), (this.start = []), (this.index = []), this.nextFragment();
    }
  };
  h(Bu, "FragmentCursor");
  var _u = class _u {
    getActions(e) {
      var t = 0,
        i = null,
        _e_p = e.p,
        n = _e_p.parser,
        s = n.tokenizers,
        o = n.stateSlot(e.state, 3),
        u = e.curContext ? e.curContext.hash : 0,
        l = 0;
      for (var a = 0; a < s.length; a++) {
        if (!((1 << a) & o)) continue;
        var c = s[a],
          f = this.tokens[a];
        if (!(i && !c.fallback) && ((c.contextual || f.start != e.pos || f.mask != o || f.context != u) && (this.updateCachedToken(f, c, e), (f.mask = o), (f.context = u)), f.lookAhead > f.end + 25 && (l = Math.max(f.lookAhead, l)), f.value != 0)) {
          var d = t;
          if ((f.extended > -1 && (t = this.addActions(e, f.extended, f.end, t)), (t = this.addActions(e, f.value, f.end, t)), !c.extend && ((i = f), t > d))) break;
        }
      }
      for (; this.actions.length > t; ) this.actions.pop();
      return l && e.setLookAhead(l), !i && e.pos == this.stream.end && ((i = new cr()), (i.value = e.p.parser.eofTerm), (i.start = i.end = e.pos), (t = this.addActions(e, i.value, i.end, t))), (this.mainToken = i), this.actions;
    }
    getMainToken(e) {
      if (this.mainToken) return this.mainToken;
      var t = new cr(),
        i = e.pos,
        n = e.p;
      return (t.start = i), (t.end = Math.min(i + 1, n.stream.end)), (t.value = i == n.stream.end ? n.parser.eofTerm : 0), t;
    }
    updateCachedToken(e, t, i) {
      var n = this.stream.clipPos(i.pos);
      if ((t.token(this.stream.reset(n, e), i), e.value > -1)) {
        var _i_p = i.p,
          s = _i_p.parser;
        for (var o = 0; o < s.specialized.length; o++)
          if (s.specialized[o] == e.value) {
            var u = s.specializers[o](this.stream.read(e.start, e.end), i);
            if (u >= 0 && i.p.parser.dialect.allows(u >> 1)) {
              u & 1 ? (e.extended = u >> 1) : (e.value = u >> 1);
              break;
            }
          }
      } else (e.value = 0), (e.end = this.stream.clipPos(n + 1));
    }
    putAction(e, t, i, n) {
      for (var s = 0; s < n; s += 3) if (this.actions[s] == e) return n;
      return (this.actions[n++] = e), (this.actions[n++] = t), (this.actions[n++] = i), n;
    }
    addActions(e, t, i, n) {
      var s = e.state,
        _e_p = e.p,
        o = _e_p.parser,
        u = o.data;
      for (var l = 0; l < 2; l++)
        for (var a = o.stateSlot(s, l ? 2 : 1); ; a += 3) {
          if (u[a] == 65535)
            if (u[a + 1] == 1) a = di(u, a + 2);
            else {
              n == 0 && u[a + 1] == 2 && (n = this.putAction(di(u, a + 2), t, i, n));
              break;
            }
          u[a] == t && (n = this.putAction(di(u, a + 1), t, i, n));
        }
      return n;
    }
    constructor(e, t) {
      (this.stream = t), (this.tokens = []), (this.mainToken = null), (this.actions = []), (this.tokens = e.tokenizers.map((i) => new cr()));
    }
  };
  h(_u, "TokenCache");
  var D1;
  (function (r) {
    (r[(r.Distance = 5)] = "Distance"),
      (r[(r.MaxRemainingPerStep = 3)] = "MaxRemainingPerStep"),
      (r[(r.MinBufferLengthPrune = 500)] = "MinBufferLengthPrune"),
      (r[(r.ForceReduceLimit = 10)] = "ForceReduceLimit"),
      (r[(r.CutDepth = 15e3)] = "CutDepth"),
      (r[(r.CutTo = 9e3)] = "CutTo"),
      (r[(r.MaxLeftAssociativeReductionCount = 300)] = "MaxLeftAssociativeReductionCount"),
      (r[(r.MaxStackCount = 12)] = "MaxStackCount");
  })(D1 || (D1 = {}));
  var Ou = class Ou {
    get parsedPos() {
      return this.minStackPos;
    }
    advance() {
      var e = this.stacks,
        t = this.minStackPos,
        i = (this.stacks = []),
        n,
        s;
      if (this.bigReductionCount > 300 && e.length == 1) {
        var _e = _slicedToArray(e, 1),
          o = _e[0];
        for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; );
        this.bigReductionCount = this.lastBigReductionSize = 0;
      }
      for (var o1 = 0; o1 < e.length; o1++) {
        var u = e[o1];
        for (;;) {
          if (((this.tokens.mainToken = null), u.pos > t)) i.push(u);
          else {
            if (this.advanceStack(u, i, e)) continue;
            {
              n || ((n = []), (s = [])), n.push(u);
              var l = this.tokens.getMainToken(u);
              s.push(l.value, l.end);
            }
          }
          break;
        }
      }
      if (!i.length) {
        var o2 = n && Xw(n);
        if (o2) return this.stackToTree(o2);
        if (this.parser.strict) throw (Mt && n && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t));
        this.recovering || (this.recovering = 5);
      }
      if (this.recovering && n) {
        var o3 = this.stoppedAt != null && n[0].pos > this.stoppedAt ? n[0] : this.runRecovery(n, s, i);
        if (o3) return this.stackToTree(o3.forceAll());
      }
      if (this.recovering) {
        var o4 = this.recovering == 1 ? 1 : this.recovering * 3;
        if (i.length > o4) for (i.sort((u, l) => l.score - u.score); i.length > o4; ) i.pop();
        i.some((u) => u.reducePos > t) && this.recovering--;
      } else if (i.length > 1) {
        e: for (var o5 = 0; o5 < i.length - 1; o5++) {
          var u1 = i[o5];
          for (var l1 = o5 + 1; l1 < i.length; l1++) {
            var a = i[l1];
            if (u1.sameState(a) || (u1.buffer.length > 500 && a.buffer.length > 500))
              if ((u1.score - a.score || u1.buffer.length - a.buffer.length) > 0) i.splice(l1--, 1);
              else {
                i.splice(o5--, 1);
                continue e;
              }
          }
        }
        i.length > 12 && i.splice(12, i.length - 12);
      }
      this.minStackPos = i[0].pos;
      for (var o6 = 1; o6 < i.length; o6++) i[o6].pos < this.minStackPos && (this.minStackPos = i[o6].pos);
      return null;
    }
    stopAt(e) {
      if (this.stoppedAt != null && this.stoppedAt < e) throw new RangeError("Can't move stoppedAt forward");
      this.stoppedAt = e;
    }
    advanceStack(e, t, i) {
      var n = e.pos,
        _this = this,
        s = _this.parser,
        o = Mt ? this.stackID(e) + " -> " : "";
      if (this.stoppedAt != null && n > this.stoppedAt) return e.forceReduce() ? e : null;
      if (this.fragments) {
        var a = e.curContext && e.curContext.tracker.strict,
          c = a ? e.curContext.hash : 0;
        for (var f = this.fragments.nodeAt(n); f; ) {
          var d = this.parser.nodeSet.types[f.type.id] == f.type ? s.getGoto(e.state, f.type.id) : -1;
          if (d > -1 && f.length && (!a || (f.prop(ue.contextHash) || 0) == c)) return e.useNode(f, d), Mt && console.log(o + this.stackID(e) + " (via reuse of ".concat(s.getName(f.type.id), ")")), !0;
          if (!(f instanceof ve) || f.children.length == 0 || f.positions[0] > 0) break;
          var p = f.children[0];
          if (p instanceof ve && f.positions[0] == 0) f = p;
          else break;
        }
      }
      var u = s.stateSlot(e.state, 4);
      if (u > 0) return e.reduce(u), Mt && console.log(o + this.stackID(e) + " (via always-reduce ".concat(s.getName(u & 65535), ")")), !0;
      if (e.stack.length >= 15e3) for (; e.stack.length > 9e3 && e.forceReduce(); );
      var l = this.tokens.getActions(e);
      for (var a1 = 0; a1 < l.length; ) {
        var c1 = l[a1++],
          f1 = l[a1++],
          d1 = l[a1++],
          p1 = a1 == l.length || !i,
          m = p1 ? e : e.split();
        if (
          (m.apply(c1, f1, d1),
          Mt &&
            console.log(
              o +
                this.stackID(m) +
                " (via "
                  .concat(c1 & 65536 ? "reduce of ".concat(s.getName(c1 & 65535)) : "shift", " for ")
                  .concat(s.getName(f1), " @ ")
                  .concat(n)
                  .concat(m == e ? "" : ", split", ")")
            ),
          p1)
        )
          return !0;
        m.pos > n ? t.push(m) : i.push(m);
      }
      return !1;
    }
    advanceFully(e, t) {
      var i = e.pos;
      for (;;) {
        if (!this.advanceStack(e, null, null)) return !1;
        if (e.pos > i) return b1(e, t), !0;
      }
    }
    runRecovery(e, t, i) {
      var n = null,
        s = !1;
      for (var o = 0; o < e.length; o++) {
        var u = e[o],
          l = t[o << 1],
          a = t[(o << 1) + 1],
          c = Mt ? this.stackID(u) + " -> " : "";
        if (u.deadEnd && (s || ((s = !0), u.restart(), Mt && console.log(c + this.stackID(u) + " (restarted)"), this.advanceFully(u, i)))) continue;
        var f = u.split(),
          d = c;
        for (var p = 0; f.forceReduce() && p < 10 && (Mt && console.log(d + this.stackID(f) + " (via force-reduce)"), !this.advanceFully(f, i)); p++) Mt && (d = this.stackID(f) + " -> ");
        var _iteratorNormalCompletion = true,
          _didIteratorError = false,
          _iteratorError = undefined;
        try {
          for (var _iterator = u.recoverByInsert(l)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var p1 = _step.value;
            Mt && console.log(c + this.stackID(p1) + " (via recover-insert)"), this.advanceFully(p1, i);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.stream.end > u.pos ? (a == u.pos && (a++, (l = 0)), u.recoverByDelete(l, a), Mt && console.log(c + this.stackID(u) + " (via recover-delete ".concat(this.parser.getName(l), ")")), b1(u, i)) : (!n || n.score < u.score) && (n = u);
      }
      return n;
    }
    stackToTree(e) {
      return e.close(), ve.build({ buffer: hr.create(e), nodeSet: this.parser.nodeSet, topID: this.topTerm, maxBufferLength: this.parser.bufferLength, reused: this.reused, start: this.ranges[0].from, length: e.pos - this.ranges[0].from, minRepeatType: this.parser.minRepeatTerm });
    }
    stackID(e) {
      var t = (Lh || (Lh = new WeakMap())).get(e);
      return t || Lh.set(e, (t = String.fromCodePoint(this.nextStackID++))), t + e;
    }
    constructor(e, t, i, n) {
      (this.parser = e), (this.input = t), (this.ranges = n), (this.recovering = 0), (this.nextStackID = 9812), (this.minStackPos = 0), (this.reused = []), (this.stoppedAt = null), (this.lastBigReductionStart = -1), (this.lastBigReductionSize = 0), (this.bigReductionCount = 0), (this.stream = new xu(t, n)), (this.tokens = new _u(e, this.stream)), (this.topTerm = e.top[1]);
      var _n_ = n[0],
        s = _n_.from;
      (this.stacks = [ar.start(this, e.top[0], s)]), (this.fragments = i.length && this.stream.end - s > e.bufferLength * 4 ? new Bu(i, e.nodeSet) : null);
    }
  };
  h(Ou, "Parse");
  function b1(r, e) {
    for (var t = 0; t < e.length; t++) {
      var i = e[t];
      if (i.pos == r.pos && i.sameState(r)) {
        e[t].score < r.score && (e[t] = r);
        return;
      }
    }
    e.push(r);
  }
  h(b1, "pushStackDedup");
  var Tu = class Tu {
    allows(e) {
      return !this.disabled || this.disabled[e] == 0;
    }
    constructor(e, t, i) {
      (this.source = e), (this.flags = t), (this.disabled = i);
    }
  };
  h(Tu, "Dialect");
  var Mi = class Mi1 extends ir {
    createParse(e, t, i) {
      var n = new Ou(this, e, t, i);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      try {
        for (var _iterator = this.wrappers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var s = _step.value;
          n = s(n, e, t, i);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
      return n;
    }
    getGoto(e, t) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
      var n = this.goto;
      if (t >= n[0]) return -1;
      for (var s = n[t + 1]; ; ) {
        var o = n[s++],
          u = o & 1,
          l = n[s++];
        if (u && i) return l;
        for (var a = s + (o >> 1); s < a; s++) if (n[s] == e) return l;
        if (u) return -1;
      }
    }
    hasAction(e, t) {
      var i = this.data;
      for (var n = 0; n < 2; n++)
        for (var s = this.stateSlot(e, n ? 2 : 1), o = void 0; ; s += 3) {
          if ((o = i[s]) == 65535)
            if (i[s + 1] == 1) o = i[(s = di(i, s + 2))];
            else {
              if (i[s + 1] == 2) return di(i, s + 2);
              break;
            }
          if (o == t || o == 0) return di(i, s + 1);
        }
      return 0;
    }
    stateSlot(e, t) {
      return this.states[e * 6 + t];
    }
    stateFlag(e, t) {
      return (this.stateSlot(e, 0) & t) > 0;
    }
    validAction(e, t) {
      if (t == this.stateSlot(e, 4)) return !0;
      for (var i = this.stateSlot(e, 1); ; i += 3) {
        if (this.data[i] == 65535)
          if (this.data[i + 1] == 1) i = di(this.data, i + 2);
          else return !1;
        if (t == di(this.data, i + 1)) return !0;
      }
    }
    nextStates(e) {
      var _this = this,
        _loop = function (i1) {
          if (_this.data[i1] == 65535)
            if (_this.data[i1 + 1] == 1) i1 = di(_this.data, i1 + 2);
            else return (i = i1), "break";
          if (!(_this.data[i1 + 2] & 1)) {
            var n = _this.data[i1 + 1];
            t.some((s, o) => o & 1 && s == n) || t.push(_this.data[i1], n);
          }
          (i = i1), void 0;
        };
      var t = [];
      for (var i = this.stateSlot(e, 1); ; i += 3) {
        var _ret = _loop(i);
        if (_ret === "break") break;
      }
      return t;
    }
    configure(e) {
      var t = Object.assign(Object.create(Mi.prototype), this);
      if ((e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top)) {
        var i = this.topRules[e.top];
        if (!i) throw new RangeError("Invalid top rule name ".concat(e.top));
        t.top = i;
      }
      return (
        e.tokenizers &&
          (t.tokenizers = this.tokenizers.map((i) => {
            var n = e.tokenizers.find((s) => s.from == i);
            return n ? n.to : i;
          })),
        e.specializers &&
          ((t.specializers = this.specializers.slice()),
          (t.specializerSpecs = this.specializerSpecs.map((i, n) => {
            var s = e.specializers.find((u) => u.from == i.external);
            if (!s) return i;
            var o = Object.assign(Object.assign({}, i), { external: s.to });
            return (t.specializers[n] = F1(o)), o;
          }))),
        e.contextTracker && (t.context = e.contextTracker),
        e.dialect && (t.dialect = this.parseDialect(e.dialect)),
        e.strict != null && (t.strict = e.strict),
        e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)),
        e.bufferLength != null && (t.bufferLength = e.bufferLength),
        t
      );
    }
    hasWrappers() {
      return this.wrappers.length > 0;
    }
    getName(e) {
      return this.termNames ? this.termNames[e] : String((e <= this.maxNode && this.nodeSet.types[e].name) || e);
    }
    get eofTerm() {
      return this.maxNode + 1;
    }
    get topNode() {
      return this.nodeSet.types[this.top[1]];
    }
    dynamicPrecedence(e) {
      var t = this.dynamicPrecedences;
      return t == null ? 0 : t[e] || 0;
    }
    parseDialect(e) {
      var t = Object.keys(this.dialects),
        i = t.map(() => !1);
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if (e)
        try {
          for (var _iterator = e.split(" ")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var s = _step.value;
            var o = t.indexOf(s);
            o >= 0 && (i[o] = !0);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      var n = null;
      for (var s1 = 0; s1 < t.length; s1++) if (!i[s1]) for (var o1 = this.dialects[t[s1]], u = void 0; (u = this.data[o1++]) != 65535; ) (n || (n = new Uint8Array(this.maxTerm + 1)))[u] = 1;
      return new Tu(e, i, n);
    }
    static deserialize(e) {
      return new Mi(e);
    }
    constructor(e) {
      if ((super(), (this.wrappers = []), e.version != 14)) throw new RangeError("Parser version (".concat(e.version, ") doesn't match runtime version (14)"));
      var t = e.nodeNames.split(" ");
      this.minRepeatTerm = t.length;
      for (var u = 0; u < e.repeatNodeCount; u++) t.push("");
      var i = Object.keys(e.topRules).map((u) => e.topRules[u][1]),
        n = [];
      for (var u1 = 0; u1 < t.length; u1++) n.push([]);
      function s(u, l, a) {
        n[u].push([l, l.deserialize(String(a))]);
      }
      var _iteratorNormalCompletion = true,
        _didIteratorError = false,
        _iteratorError = undefined;
      if ((h(s, "setProp"), e.nodeProps))
        try {
          for (var _iterator = e.nodeProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var u2 = _step.value;
            var l = u2[0];
            typeof l == "string" && (l = ue[l]);
            for (var a = 1; a < u2.length; ) {
              var c = u2[a++];
              if (c >= 0) s(c, l, u2[a++]);
              else {
                var f = u2[a + -c];
                for (var d = -c; d > 0; d--) s(u2[a++], l, f);
                a++;
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      (this.nodeSet = new Oi(t.map((u, l) => Ie.define({ name: l >= this.minRepeatTerm ? void 0 : u, id: l, props: n[l], top: i.indexOf(l) > -1, error: l == 0, skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1 })))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), (this.strict = !1), (this.bufferLength = 1024);
      var o = ns(e.tokenData);
      (this.context = e.context), (this.specializerSpecs = e.specialized || []), (this.specialized = new Uint16Array(this.specializerSpecs.length));
      for (var u3 = 0; u3 < this.specializerSpecs.length; u3++) this.specialized[u3] = this.specializerSpecs[u3].term;
      (this.specializers = this.specializerSpecs.map(F1)),
        (this.states = ns(e.states, Uint32Array)),
        (this.data = ns(e.stateData)),
        (this.goto = ns(e.goto)),
        (this.maxTerm = e.maxTerm),
        (this.tokenizers = e.tokenizers.map((u) => (typeof u == "number" ? new pi(o, u) : u))),
        (this.topRules = e.topRules),
        (this.dialects = e.dialects || {}),
        (this.dynamicPrecedences = e.dynamicPrecedences || null),
        (this.tokenPrecTable = e.tokenPrec),
        (this.termNames = e.termNames || null),
        (this.maxNode = this.nodeSet.types.length - 1),
        (this.dialect = this.parseDialect()),
        (this.top = this.topRules[Object.keys(this.topRules)[0]]);
    }
  };
  h(Mi, "LRParser");
  function di(r, e) {
    return r[e] | (r[e + 1] << 16);
  }
  h(di, "pair");
  function Xw(r) {
    var e = null;
    var _iteratorNormalCompletion = true,
      _didIteratorError = false,
      _iteratorError = undefined;
    try {
      for (var _iterator = r[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var t = _step.value;
        var i = t.p.stoppedAt;
        (t.pos == t.p.stream.end || (i != null && t.pos > i)) && t.p.parser.stateFlag(t.state, 2) && (!e || e.score < t.score) && (e = t);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    return e;
  }
  h(Xw, "findFinished");
  function F1(r) {
    if (r.external) {
      var e = r.extend ? 1 : 0;
      return (t, i) => (r.external(t, i) << 1) | e;
    }
    return r.get;
  }
  h(F1, "getSpecializer");
  var C1 = Mi.deserialize({
    version: 14,
    states:
      "'[QVQPOOOhQPO'#CsOmQPO'#CwOrQPO'#CzOOQO'#Cp'#CpOOQO'#Ci'#CiQVQPOOOwQPO'#CpO|QQO,59_O![QQO,59cO!aQSO,59fOOQO-E6g-E6gO!fQWO'#C_OOQO,59[,59[OOQO'#Cu'#CuO!qQPO'#CtO!|QPO1G.yO#RQPO'#CxO#WQPO1G.}O#]QPO1G/QO#bQWO'#CjO#mQPO,58yOOQO,58y,58yO#mQPO,58yO|QQO'#CkO#uQPO,59`OOQO7+$e7+$eO|QQO,59dOOQO7+$i7+$iO![QQO7+$lOOQO,59U,59UOOQO-E6h-E6hOOQO1G.e1G.eO$QQPO1G.eOOQO,59V,59VOOQO-E6i-E6iOOQO1G/O1G/OO$YQPO<<HWOOQO7+$P7+$PO$bQQOAN=rO$jQPOAN=rOOQOAN=rAN=rOOQO,59W,59WOOQOG23^G23^O$rQQOG23^OOQO-E6j-E6jOOQOLD(xLD(xP![QQO'#Cl",
    stateData: "$z~OcOS~OQVOTPOXQOYRO[SO~OeWO~OeXO~OeYO~Oe[O~OU^OV^OW^Oe[O~OWaO~OZcO~OSgOe[OffO~OjhOfhXohX~OfjO~OmkO~OflO~OomO~OSnOe^Xf^X~Oe[OfpO~OjhOfhaoha~Oe[OfvO~OfyOowO~OWaOf{O~Of{Oo|O~OWaOf!OO~O",
    goto: "#^oPPPpPPPPPPPPP!O!U!`!fPPP!lPP!p!t!zP!p#RP!pQ]VU^WhkXd[egqQUORZUQe[SoeqRqgQi_RsiQxuR}xTTOUTSOUQ`WRtkS_WkRrhQbXQumVzw|!P",
    nodeNames: "⚠ Program CommentCommand Braced BraceContent PreambleCommand Quoted Number Identifier StringCommand Command Key Comment",
    maxTerm: 31,
    skippedNodes: [0],
    repeatNodeCount: 4,
    tokenData:
      "!<f~R|OX#{X^$g^p#{pq$gqr#{rs&]st+[t|#{|}+r}!Q#{!Q![,Y![!_#{!_!`,v!`!b#{!b!c-^!c!}Kx!}#R#{#R#SKx#S#T#{#T#bKx#b#cNO#c#oKx#o#p!<[#p#q#{#q#r!<a#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{W$QTSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{W$dP;=`<%l#{~$niSWc~OX#{X^$g^p#{pq$gq#o#{#p#q#{#r#y#{#y#z$g#z$f#{$f$g$g$g#BY#{#BY#BZ$g#BZ$IS#{$IS$I_$g$I_$I|#{$I|$JO$g$JO$JT#{$JT$JU$g$JU$KV#{$KV$KW$g$KW&FU#{&FU&FV$g&FV;'S#{;'S;=`$a<%lO#{Y&bZSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y'[TUQSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y'pZSWOr&]rs(cs#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Y(jZUQSWOr&]rs'Ts#O&]#O#P'k#P#o&]#o#p)]#p#q&]#q#r)]#r;'S&];'S;=`+U<%lO&]Q)`VOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q)zOUQQ)}VOr)]rs*ds#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q*iVUQOr)]rs)us#O)]#O#P)z#P;'S)];'S;=`+O<%lO)]Q+RP;=`<%l)]Y+XP;=`<%l&]X+cTjPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X+yToPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{Y,aVVQSWO!Q#{!Q![,Y![#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X,}TmPSWO#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{~-cfSWO!c#{!c!e.w!e!f0{!f!r.w!r!s9|!s!u.w!u!vDW!v!}.w!}#R#{#R#S.w#S#T#{#T#V.w#V#W0{#W#d.w#d#e9|#e#g.w#g#hDW#h#o.w#p#q#{#r;'S#{;'S;=`$a<%lO#{~.|^SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~0P^Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~1QbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!q/x!q!r2Y!r!}/x!}#R#{#R#S/x#S#T#{#T#c/x#c#d2Y#d#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~2abY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p3i!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b3i#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~3pbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p4x!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b4x#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~5PbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h6X!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y6X#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~6`bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!q7h!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#c7h#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~7obY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!w8w!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#i8w#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~9Q^Q~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~:RbSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!u;Z!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#g;Z#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~;bbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!h<j!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#Y<j#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~<q`Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d=s!d!}/x!}#R#{#R#S/x#S#T#{#T#U=s#U#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~=zbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!o/x!o!p?S!p!}/x!}#R#{#R#S/x#S#T#{#T#a/x#a#b?S#b#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~?ZbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!d/x!d!e@c!e!}/x!}#R#{#R#S/x#S#T#{#T#U/x#U#V@c#V#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~@jbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!n/x!n!oAr!o!}/x!}#R#{#R#S/x#S#T#{#T#`/x#`#aAr#a#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~AybY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!g/x!g!hCR!h!}/x!}#R#{#R#S/x#S#T#{#T#X/x#X#YCR#Y#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~C[^T~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~D]bSWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!v/x!v!wEe!w!}/x!}#R#{#R#S/x#S#T#{#T#h/x#h#iEe#i#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~ElbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!t/x!t!uFt!u!}/x!}#R#{#R#S/x#S#T#{#T#f/x#f#gFt#g#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~F{bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!k/x!k!lHT!l!}/x!}#R#{#R#S/x#S#T#{#T#]/x#]#^HT#^#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~H[bY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!p/x!p!qId!q!}/x!}#R#{#R#S/x#S#T#{#T#b/x#b#cId#c#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~IkbY~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!i/x!i!jJs!j!}/x!}#R#{#R#S/x#S#T#{#T#Z/x#Z#[Js#[#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{~J|^X~Y~SWO}#{}!O/x!O!Q#{!Q![/x![!c#{!c!}/x!}#R#{#R#S/x#S#T#{#T#o/x#p#q#{#r;'S#{;'S;=`$a<%lO#{^K}^SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{^MS^WQZSSWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_NT`SWO}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#cLy#c#d! V#d#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{_! ``WQZSSWOp#{pq!!bq}#{}!OLy!O!Q#{!Q![Ly![!c#{!c!}Ly!}#R#{#R#SLy#S#T#{#T#oLy#p#q#{#r;'S#{;'S;=`$a<%lO#{X!!gVSWO#]#{#]#^!!|#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#RVSWO#W#{#W#X!#h#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!#mVSWO#X#{#X#Y!$S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$XVSWO#T#{#T#U!$n#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!$sVSWOp#{pq!%Yq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%_VSWO#k#{#k#l!%t#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!%yVSWO#[#{#[#]!&`#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!&eVSWO#m#{#m#n!&z#n#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'PVSWOp#{pq!'fq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!'kVSWO#h#{#h#i!(Q#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(VVSWO#[#{#[#]!(l#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!(qVSWO#]#{#]#^!)W#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)]VSWO#g#{#g#h!)r#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!)wVSWOp#{pq!*^q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*cVSWO#g#{#g#h!*x#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!*}VSWO#h#{#h#i!+d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!+iVSWO#f#{#f#g!,O#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,TVSWO#]#{#]#^!,j#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!,oVSWO#b#{#b#c!-U#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-ZVSWO#Z#{#Z#[!-p#[#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!-uVSWOp#{pq!.[q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.aVSWO#]#{#]#^!.v#^#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!.{VSWO#g#{#g#h!/b#h#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!/gVSWOp#{pq!/|q#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0RVSWO#b#{#b#c!0h#c#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!0mVSWO#X#{#X#Y!1S#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1XVSWO#X#{#X#Y!1n#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!1sVSWO#W#{#W#X!2Y#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2_VSWO#X#{#X#Y!2t#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!2yVSWO#W#{#W#X!3`#X#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!3eVSWOp#{pq!3zq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4PVSWO#U#{#U#V!4f#V#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!4kVSWO#i#{#i#j!5Q#j#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5VVSWO#h#{#h#i!5l#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!5qVSWOp#{pq!6Wq#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6]VSWO#k#{#k#l!6r#l#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!6wVSWO#[#{#[#]!7^#]#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7cVSWO#T#{#T#U!7x#U#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!7}VSWO#h#{#h#i!8d#i#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!8iVSWO#X#{#X#Y!9O#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9TVSWO#j#{#j#k!9j#k#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!9oVSWO#X#{#X#Y!:U#Y#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:ZVSWO#f#{#f#g!:p#g#o#{#p#q#{#r;'S#{;'S;=`$a<%lO#{X!:uXSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!;iX[PSWOp!;bpq#{q!b!;b!b!c#{!c#o!;b#p#q!;b#r;'S!;b;'S;=`!<U<%lO!;bX!<XP;=`<%l!;b~!<aOe~~!<fOf~",
    tokenizers: [0, 1, 2, 3],
    topRules: { Program: [0, 1] },
    tokenPrec: 4,
  });
  var Qw = $i.define({ parser: C1.configure({ props: [Du({ Identifier: O.variableName, Comment: O.comment, Key: O.name, Number: O.number, BraceContent: O.string, Quoted: O.string, Command: O.className, CommentCommand: O.className, PreambleCommand: O.className, StringCommand: O.className, Field: O.variableName })] }) }),
    Jw = fi.define([
      { tag: O.comment, color: "var(--light5)" },
      { tag: O.name, color: "var(--orange)" },
      { tag: O.number, color: "var(--light-blue)" },
      { tag: O.string, color: "var(--green)" },
      { tag: O.className, color: "var(--pink)" },
      { tag: O.variableName, color: "white" },
    ]);
  function A1() {
    return new is(Qw);
  }
  h(A1, "bibtexLanguage");
  function E1() {
    return jD(Jw);
  }
  h(E1, "bibtexSyntaxHighlighting");
  function Zw(r) {
    var e, t, i;
    return (
      (t = new c1({ props: { bibtex: r[0] } })),
      {
        c() {
          (e = R("main")), P(t.$$.fragment), v(e, "id", "editor"), v(e, "class", "svelte-x4zh2g");
        },
        m(n, s) {
          C(n, e, s), M(t, e, null), r[5](e), (i = !0);
        },
        p(n, param) {
          var _param = _slicedToArray(param, 1),
            s = _param[0];
          var o = {};
          s & 1 && (o.bibtex = n[0]), t.$set(o);
        },
        i(n) {
          i || (x(t.$$.fragment, n), (i = !0));
        },
        o(n) {
          S(t.$$.fragment, n), (i = !1);
        },
        d(n) {
          n && y(e), $(t), r[5](null);
        },
      }
    );
  }
  h(Zw, "create_fragment");
  function e4(r, e, t) {
    var i = e.bibtex,
      n = e.error,
      s,
      o,
      u;
    ka(() => {
      var a = te.updateListener.of((c) => {
        o && c.docChanged && t(0, (i = o.state.doc.toString()));
      });
      t(4, (u = new oi())), t(3, (o = new te({ parent: s, state: le.create({ doc: i, extensions: [wD(), xD(), ED(), le.allowMultipleSelections.of(!0), GD(), FD(), A1(), E1(), bh.of([...t1, r11]), QD(), a, u.of([])] }) }))), o.focus(), (window.cmEditor = o);
    });
    function l(a) {
      X[a ? "unshift" : "push"](() => {
        (s = a), t(1, s);
      });
    }
    return (
      h(l, "main_binding"),
      (r.$$set = (a) => {
        "bibtex" in a && t(0, (i = a.bibtex)), "error" in a && t(2, (n = a.error));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 28)
          e: o == null ||
            o.dispatch({
              effects: u.reconfigure(
                l1(() => {
                  if (n && o) {
                    var a = o.state.doc.line(n.line),
                      c = a.from,
                      f = a.to;
                    return [{ from: c, to: f, severity: "error", message: "Syntax Error" }];
                  } else return [];
                })
              ),
            });
        if (r.$$.dirty & 9) e: o && i !== o.state.doc.toString() && o.dispatch({ changes: { from: 0, to: o.state.doc.length, insert: i } });
      }),
      [i, s, n, o, u, l]
    );
  }
  h(e4, "instance");
  var Ru = class Ru extends re {
    constructor(e) {
      super(), se(this, e, e4, Zw, ne, { bibtex: 0, error: 2 });
    }
  };
  h(Ru, "Editor");
  var v1 = Ru;
  function t4(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[3].default,
      u = gi(o, r, r[2], null);
    return {
      c() {
        (e = R("details")), (t = R("summary")), (i = G(r[0])), (n = q()), u && u.c(), v(t, "class", "svelte-ee92zc"), (e.open = r[1]), v(e, "class", "svelte-ee92zc");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(t, i), V(e, n), u && u.m(e, null), (s = !0);
      },
      p(l, param) {
        var _param = _slicedToArray(param, 1),
          a = _param[0];
        (!s || a & 1) && Ke(i, l[0]), u && u.p && (!s || a & 4) && bi(u, o, l, l[2], s ? Di(o, l[2], a, null) : Fi(l[2]), null), (!s || a & 2) && (e.open = l[1]);
      },
      i(l) {
        s || (x(u, l), (s = !0));
      },
      o(l) {
        S(u, l), (s = !1);
      },
      d(l) {
        l && y(e), u && u.d(l);
      },
    };
  }
  h(t4, "create_fragment");
  function i4(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = e.title,
      tmp1 = e.open,
      o = tmp1 === void 0 ? !1 : tmp1;
    return (
      (r.$$set = (u) => {
        "title" in u && t(0, (s = u.title)), "open" in u && t(1, (o = u.open)), "$$scope" in u && t(2, (n = u.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h(i4, "instance");
  var $u = class $u extends re {
    constructor(e) {
      super(), se(this, e, i4, t4, ne, { title: 0, open: 1 });
    }
  };
  h($u, "Collapsible");
  var tt = $u;
  function r4(r) {
    var e, t, i;
    return {
      c() {
        (e = R("input")), v(e, "type", "checkbox"), v(e, "name", r[1]), v(e, "class", "svelte-doypik");
      },
      m(n, s) {
        C(n, e, s), (e.checked = r[0]), t || ((i = [Ce(e, "change", r[3]), Ce(e, "change", r[4])]), (t = !0));
      },
      p(n, param) {
        var _param = _slicedToArray(param, 1),
          s = _param[0];
        s & 2 && v(e, "name", n[1]), s & 1 && (e.checked = n[0]);
      },
      i: Se,
      o: Se,
      d(n) {
        n && y(e), (t = !1), It(i);
      },
    };
  }
  h(r4, "create_fragment");
  function n4(r, e, t) {
    var i = e.name,
      tmp = e.checked,
      n = tmp === void 0 ? void 0 : tmp,
      s = Wi();
    function o() {
      (n = this.checked), t(0, n);
    }
    h(o, "input_change_handler");
    var u = h(() => s("change"), "change_handler");
    return (
      (r.$$set = (l) => {
        "name" in l && t(1, (i = l.name)), "checked" in l && t(0, (n = l.checked));
      }),
      [n, i, s, o, u]
    );
  }
  h(n4, "instance");
  var Mu = class Mu extends re {
    constructor(e) {
      super(), se(this, e, n4, r4, ne, { name: 1, checked: 0 });
    }
  };
  h(Mu, "Checkbox");
  var fr = Mu;
  function s4(r) {
    var e,
      t,
      i = r[3].default,
      n = gi(i, r, r[2], null);
    return {
      c() {
        (e = R("label")), n && n.c(), v(e, "title", r[0]), v(e, "class", "svelte-a2tm3u"), kr(e, "inset", r[1]);
      },
      m(s, o) {
        C(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _slicedToArray(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 4) && bi(n, i, s, s[2], t ? Di(i, s[2], o, null) : Fi(s[2]), null), (!t || o & 1) && v(e, "title", s[0]), (!t || o & 2) && kr(e, "inset", s[1]);
      },
      i(s) {
        t || (x(n, s), (t = !0));
      },
      o(s) {
        S(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(s4, "create_fragment");
  function o4(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      tmp1 = e.title,
      s = tmp1 === void 0 ? void 0 : tmp1,
      tmp2 = e.inset,
      o = tmp2 === void 0 ? void 0 : tmp2;
    return (
      (r.$$set = (u) => {
        "title" in u && t(0, (s = u.title)), "inset" in u && t(1, (o = u.inset)), "$$scope" in u && t(2, (n = u.$$scope));
      }),
      [s, o, n, i]
    );
  }
  h(o4, "instance");
  var Pu = class Pu extends re {
    constructor(e) {
      super(), se(this, e, o4, s4, ne, { title: 0, inset: 1 });
    }
  };
  h(Pu, "Label");
  var it = Pu;
  function u4(r) {
    var e,
      t,
      i = r[1].default,
      n = gi(i, r, r[0], null);
    return {
      c() {
        (e = R("div")), n && n.c(), v(e, "class", "suboptions svelte-1gkj6ol");
      },
      m(s, o) {
        C(s, e, o), n && n.m(e, null), (t = !0);
      },
      p(s, param) {
        var _param = _slicedToArray(param, 1),
          o = _param[0];
        n && n.p && (!t || o & 1) && bi(n, i, s, s[0], t ? Di(i, s[0], o, null) : Fi(s[0]), null);
      },
      i(s) {
        t || (x(n, s), (t = !0));
      },
      o(s) {
        S(n, s), (t = !1);
      },
      d(s) {
        s && y(e), n && n.d(s);
      },
    };
  }
  h(u4, "create_fragment");
  function l4(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope;
    return (
      (r.$$set = (s) => {
        "$$scope" in s && t(0, (n = s.$$scope));
      }),
      [n, i]
    );
  }
  h(l4, "instance");
  var Lu = class Lu extends re {
    constructor(e) {
      super(), se(this, e, l4, u4, ne, {});
    }
  };
  h(Lu, "SubOptions");
  var qu = Lu;
  function a4(r) {
    var e,
      t,
      i,
      n = r[3].title + "",
      s,
      o;
    function u(a) {
      r[6](a);
    }
    h(u, "checkbox_checked_binding");
    var l = { name: r[1] };
    return (
      r[0] !== void 0 && (l.checked = r[0]),
      (e = new fr({ props: l })),
      X.push(() => Z(e, "checked", u)),
      e.$on("change", r[7]),
      {
        c() {
          P(e.$$.fragment), (i = q()), (s = G(n));
        },
        m(a, c) {
          M(e, a, c), C(a, i, c), C(a, s, c), (o = !0);
        },
        p(a, c) {
          var f = {};
          c & 2 && (f.name = a[1]), !t && c & 1 && ((t = !0), (f.checked = a[0]), J(() => (t = !1))), e.$set(f);
        },
        i(a) {
          o || (x(e.$$.fragment, a), (o = !0));
        },
        o(a) {
          S(e.$$.fragment, a), (o = !1);
        },
        d(a) {
          $(e, a), a && y(i), a && y(s);
        },
      }
    );
  }
  h(a4, "create_default_slot_1");
  function k1(r) {
    var e,
      t,
      i = r[0] && w1(r);
    return {
      c() {
        i && i.c(), (e = ii());
      },
      m(n, s) {
        i && i.m(n, s), C(n, e, s), (t = !0);
      },
      p(n, s) {
        n[0]
          ? i
            ? (i.p(n, s), s & 1 && x(i, 1))
            : ((i = w1(n)), i.c(), x(i, 1), i.m(e.parentNode, e))
          : i &&
            (ri(),
            S(i, 1, 1, () => {
              i = null;
            }),
            ni());
      },
      i(n) {
        t || (x(i), (t = !0));
      },
      o(n) {
        S(i), (t = !1);
      },
      d(n) {
        i && i.d(n), n && y(e);
      },
    };
  }
  h(k1, "create_if_block");
  function w1(r) {
    var e, t;
    return (
      (e = new qu({ props: { $$slots: { default: [h4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 256 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(w1, "create_if_block_1");
  function h4(r) {
    var e,
      t = r[5].default,
      i = gi(t, r, r[8], null);
    return {
      c() {
        i && i.c();
      },
      m(n, s) {
        i && i.m(n, s), (e = !0);
      },
      p(n, s) {
        i && i.p && (!e || s & 256) && bi(i, t, n, n[8], e ? Di(t, n[8], s, null) : Fi(n[8]), null);
      },
      i(n) {
        e || (x(i, n), (e = !0));
      },
      o(n) {
        S(i, n), (e = !1);
      },
      d(n) {
        i && i.d(n);
      },
    };
  }
  h(h4, "create_default_slot");
  function c4(r) {
    var o;
    var e, t, i, n;
    e = new it({ props: { title: (o = r[3].description) == null ? void 0 : o.join("\n"), inset: !0, $$slots: { default: [a4] }, $$scope: { ctx: r } } });
    var s = r[4].default && k1(r);
    return {
      c() {
        P(e.$$.fragment), (t = q()), s && s.c(), (i = ii());
      },
      m(u, l) {
        M(e, u, l), C(u, t, l), s && s.m(u, l), C(u, i, l), (n = !0);
      },
      p(u, param) {
        var _param = _slicedToArray(param, 1),
          l = _param[0];
        var a = {};
        l & 259 && (a.$$scope = { dirty: l, ctx: u }),
          e.$set(a),
          u[4].default
            ? s
              ? (s.p(u, l), l & 16 && x(s, 1))
              : ((s = k1(u)), s.c(), x(s, 1), s.m(i.parentNode, i))
            : s &&
              (ri(),
              S(s, 1, 1, () => {
                s = null;
              }),
              ni());
      },
      i(u) {
        n || (x(e.$$.fragment, u), x(s), (n = !0));
      },
      o(u) {
        S(e.$$.fragment, u), S(s), (n = !1);
      },
      d(u) {
        $(e, u), u && y(t), s && s.d(u), u && y(i);
      },
    };
  }
  h(c4, "create_fragment");
  function f4(r, e, t) {
    var tmp = e.$$slots,
      i = tmp === void 0 ? {} : tmp,
      n = e.$$scope,
      s = jm(i),
      o = e.option,
      tmp1 = e.checked,
      u = tmp1 === void 0 ? void 0 : tmp1,
      l = Wi(),
      a = g0[o];
    function c(d) {
      (u = d), t(0, u);
    }
    h(c, "checkbox_checked_binding");
    var f = h(() => l("change", u), "change_handler");
    return (
      (r.$$set = (d) => {
        "option" in d && t(1, (o = d.option)), "checked" in d && t(0, (u = d.checked)), "$$scope" in d && t(8, (n = d.$$scope));
      }),
      [u, o, l, a, s, i, c, f, n]
    );
  }
  h(f4, "instance");
  var Iu = class Iu extends re {
    constructor(e) {
      super(), se(this, e, f4, c4, ne, { option: 1, checked: 0 });
    }
  };
  h(Iu, "Option");
  var me = Iu;
  function d4(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = G("Fields to omit:\n		")), (t = R("textarea")), (i = q()), (n = R("p")), (n.innerHTML = "Space delimited, e.g: <code>id type publisher author</code>"), v(t, "name", "omitList"), v(t, "class", "omit svelte-1t0249j"), v(t, "placeholder", "e.g. abstract keywords"), v(t, "spellcheck", "false");
      },
      m(u, l) {
        C(u, e, l), C(u, t, l), Ae(t, r[1]), C(u, i, l), C(u, n, l), s || ((o = Ce(t, "input", r[9])), (s = !0));
      },
      p(u, l) {
        l & 2 && Ae(t, u[1]);
      },
      d(u) {
        u && y(e), u && y(t), u && y(i), u && y(n), (s = !1), o();
      },
    };
  }
  h(d4, "create_default_slot_2");
  function p4(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Template:\n			")), (i = R("textarea")), (n = q()), (s = R("p")), (s.innerHTML = '<a href="./manual/key-generation.html" target="_blank">Template documentation</a>'), v(i, "name", "generateKeysTemplate");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[7]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[14])), (o = !0));
      },
      p(l, a) {
        a & 128 && Ae(i, l[7]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(p4, "create_default_slot_1");
  function m4(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, D, g, b, F;
    function E(T) {
      r[10](T);
    }
    h(E, "option0_checked_binding");
    var A = { option: "omit", $$slots: { default: [d4] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (A.checked = r[0]), (e = new me({ props: A })), X.push(() => Z(e, "checked", E));
    function _(T) {
      r[11](T);
    }
    h(_, "option1_checked_binding");
    var B = { option: "stripComments" };
    r[2] !== void 0 && (B.checked = r[2]), (n = new me({ props: B })), X.push(() => Z(n, "checked", _));
    function I(T) {
      r[12](T);
    }
    h(I, "option2_checked_binding");
    var Q = { option: "tidyComments" };
    r[3] !== void 0 && (Q.checked = r[3]), (u = new me({ props: Q })), X.push(() => Z(u, "checked", I));
    function W(T) {
      r[13](T);
    }
    h(W, "option3_checked_binding");
    var H = { option: "lowercase" };
    r[4] !== void 0 && (H.checked = r[4]), (c = new me({ props: H })), X.push(() => Z(c, "checked", W));
    function z(T) {
      r[15](T);
    }
    h(z, "option4_checked_binding");
    var oe = { option: "generateKeys", $$slots: { default: [p4] }, $$scope: { ctx: r } };
    r[6] !== void 0 && (oe.checked = r[6]), (p = new me({ props: oe })), X.push(() => Z(p, "checked", z));
    function ae(T) {
      r[16](T);
    }
    h(ae, "option5_checked_binding");
    var K = { option: "trailingCommas" };
    return (
      r[5] !== void 0 && (K.checked = r[5]),
      (g = new me({ props: K })),
      X.push(() => Z(g, "checked", ae)),
      {
        c() {
          P(e.$$.fragment), (i = q()), P(n.$$.fragment), (o = q()), P(u.$$.fragment), (a = q()), P(c.$$.fragment), (d = q()), P(p.$$.fragment), (D = q()), P(g.$$.fragment);
        },
        m(T, ee) {
          M(e, T, ee), C(T, i, ee), M(n, T, ee), C(T, o, ee), M(u, T, ee), C(T, a, ee), M(c, T, ee), C(T, d, ee), M(p, T, ee), C(T, D, ee), M(g, T, ee), (F = !0);
        },
        p(T, ee) {
          var ge = {};
          ee & 16777218 && (ge.$$scope = { dirty: ee, ctx: T }), !t && ee & 1 && ((t = !0), (ge.checked = T[0]), J(() => (t = !1))), e.$set(ge);
          var ye = {};
          !s && ee & 4 && ((s = !0), (ye.checked = T[2]), J(() => (s = !1))), n.$set(ye);
          var fe = {};
          !l && ee & 8 && ((l = !0), (fe.checked = T[3]), J(() => (l = !1))), u.$set(fe);
          var be = {};
          !f && ee & 16 && ((f = !0), (be.checked = T[4]), J(() => (f = !1))), c.$set(be);
          var $e = {};
          ee & 16777344 && ($e.$$scope = { dirty: ee, ctx: T }), !m && ee & 64 && ((m = !0), ($e.checked = T[6]), J(() => (m = !1))), p.$set($e);
          var Ye = {};
          !b && ee & 32 && ((b = !0), (Ye.checked = T[5]), J(() => (b = !1))), g.$set(Ye);
        },
        i(T) {
          F || (x(e.$$.fragment, T), x(n.$$.fragment, T), x(u.$$.fragment, T), x(c.$$.fragment, T), x(p.$$.fragment, T), x(g.$$.fragment, T), (F = !0));
        },
        o(T) {
          S(e.$$.fragment, T), S(n.$$.fragment, T), S(u.$$.fragment, T), S(c.$$.fragment, T), S(p.$$.fragment, T), S(g.$$.fragment, T), (F = !1);
        },
        d(T) {
          $(e, T), T && y(i), $(n, T), T && y(o), $(u, T), T && y(a), $(c, T), T && y(d), $(p, T), T && y(D), $(g, T);
        },
      }
    );
  }
  h(m4, "create_default_slot");
  function g4(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "Clean up", open: !0, $$slots: { default: [m4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 16777471 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(g4, "create_fragment");
  function D4(r, e, t) {
    var i, n, s, o, u, l, a;
    var c = e.options,
      f = c.omit !== void 0 && c.omit.length > 0,
      d = (n = (i = c.omit) === null || i === void 0 ? void 0 : i.join(" ")) !== null && n !== void 0 ? n : "",
      p = (s = c.stripComments) !== null && s !== void 0 ? s : !1,
      m = (o = c.tidyComments) !== null && o !== void 0 ? o : !1,
      D = (u = c.lowercase) !== null && u !== void 0 ? u : !1,
      g = (l = c.trailingCommas) !== null && l !== void 0 ? l : !1,
      b = c.generateKeys !== void 0 && c.generateKeys.length > 0,
      F = (a = c.generateKeys) !== null && a !== void 0 ? a : "[auth:required:lower][year:required][veryshorttitle:lower][duplicateNumber]";
    function E() {
      (d = this.value), t(1, d);
    }
    h(E, "textarea_input_handler");
    function A(z) {
      (f = z), t(0, f);
    }
    h(A, "option0_checked_binding");
    function _(z) {
      (p = z), t(2, p);
    }
    h(_, "option1_checked_binding");
    function B(z) {
      (m = z), t(3, m);
    }
    h(B, "option2_checked_binding");
    function I(z) {
      (D = z), t(4, D);
    }
    h(I, "option3_checked_binding");
    function Q() {
      (F = this.value), t(7, F);
    }
    h(Q, "textarea_input_handler_1");
    function W(z) {
      (b = z), t(6, b);
    }
    h(W, "option4_checked_binding");
    function H(z) {
      (g = z), t(5, g);
    }
    return (
      h(H, "option5_checked_binding"),
      (r.$$set = (z) => {
        "options" in z && t(8, (c = z.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 255) e: t(8, (c.omit = f && d.length > 0 ? d.split(/[\n\t ,]+/) : void 0), c), t(8, (c.stripComments = p), c), t(8, (c.tidyComments = m), c), t(8, (c.lowercase = D), c), t(8, (c.trailingCommas = g), c), t(8, (c.generateKeys = b ? F : void 0), c);
      }),
      [f, d, p, m, D, g, b, F, c, E, A, _, B, I, Q, W, H]
    );
  }
  h(D4, "instance");
  var Nu = class Nu extends re {
    constructor(e) {
      super(), se(this, e, D4, g4, ne, { options: 8 });
    }
  };
  h(Nu, "CleanupOptions");
  var x1 = Nu;
  function S1(r) {
    return vn
      .map((e) => {
        var t;
        return (t = e.toCLI) == null ? void 0 : t.call(e, r[e.key], r);
      })
      .filter((e) => typeof e == "string");
  }
  h(S1, "optionsToCLIArgs");
  function B1(r, e, t) {
    var i = r.slice();
    return (i[2] = e[t][0]), (i[3] = e[t][1]), i;
  }
  h(B1, "get_each_context");
  function _1(r) {
    var e,
      t,
      i = r[3] + "",
      n,
      s;
    return {
      c() {
        (e = G("=")), (t = R("span")), (n = G(i)), (s = q()), v(t, "class", "opt-val svelte-1xnx1c1");
      },
      m(o, u) {
        C(o, e, u), C(o, t, u), V(t, n), C(o, s, u);
      },
      p(o, u) {
        u & 1 && i !== (i = o[3] + "") && Ke(n, i);
      },
      d(o) {
        o && y(e), o && y(t), o && y(s);
      },
    };
  }
  h(_1, "create_if_block");
  function O1(r) {
    var e,
      t = r[2] + "",
      i,
      n = " ",
      s,
      o = r[3] && r[3].length > 0 && _1(r);
    return {
      c() {
        (e = R("span")), (i = G(t)), o && o.c(), (s = G(n)), v(e, "class", "opt-name svelte-1xnx1c1");
      },
      m(u, l) {
        C(u, e, l), V(e, i), o && o.m(u, l), C(u, s, l);
      },
      p(u, l) {
        l & 1 && t !== (t = u[2] + "") && Ke(i, t), u[3] && u[3].length > 0 ? (o ? o.p(u, l) : ((o = _1(u)), o.c(), o.m(s.parentNode, s))) : o && (o.d(1), (o = null));
      },
      d(u) {
        u && y(e), o && o.d(u), u && y(s);
      },
    };
  }
  h(O1, "create_each_block");
  function b4(r) {
    var e,
      t,
      i,
      n,
      s,
      o = r[0],
      u = [];
    for (var l = 0; l < o.length; l += 1) u[l] = O1(B1(r, o, l));
    return {
      c() {
        (e = R("p")), (e.textContent = "To run this configuration on the command line:"), (t = q()), (i = R("code")), (n = G("bibtex-tidy "));
        for (var l = 0; l < u.length; l += 1) u[l].c();
        (s = G(" YOUR_FILE.bib")), v(i, "id", "cli"), v(i, "class", "svelte-1xnx1c1");
      },
      m(l, a) {
        C(l, e, a), C(l, t, a), C(l, i, a), V(i, n);
        for (var c = 0; c < u.length; c += 1) u[c].m(i, null);
        V(i, s);
      },
      p(l, a) {
        if (a & 1) {
          o = l[0];
          var c;
          for (c = 0; c < o.length; c += 1) {
            var f = B1(l, o, c);
            u[c] ? u[c].p(f, a) : ((u[c] = O1(f)), u[c].c(), u[c].m(i, s));
          }
          for (; c < u.length; c += 1) u[c].d(1);
          u.length = o.length;
        }
      },
      d(l) {
        l && y(e), l && y(t), l && y(i), Dn(u, l);
      },
    };
  }
  h(b4, "create_default_slot");
  function F4(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "CLI", $$slots: { default: [b4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 65 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(F4, "create_fragment");
  function y4(r, e, t) {
    var i = e.options,
      n;
    return (
      (r.$$set = (s) => {
        "options" in s && t(1, (i = s.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 2)
          e: t(
            0,
            (n = S1(i).map((s) => {
              var o = s.indexOf("=");
              return o === -1 ? [s] : [s.slice(0, o), s.slice(o + 1)];
            }))
          );
      }),
      [n, i]
    );
  }
  h(y4, "instance");
  var Vu = class Vu extends re {
    constructor(e) {
      super(), se(this, e, y4, F4, ne, { options: 1 });
    }
  };
  h(Vu, "Cli");
  var T1 = Vu;
  function C4(r) {
    var e, t, i;
    return {
      c() {
        (e = R("input")), v(e, "type", "radio"), v(e, "name", r[1]), (e.__value = r[2]), (e.value = e.__value), v(e, "class", "svelte-qhlda7"), r[4][0].push(e);
      },
      m(n, s) {
        C(n, e, s), (e.checked = e.__value === r[0]), t || ((i = Ce(e, "change", r[3])), (t = !0));
      },
      p(n, param) {
        var _param = _slicedToArray(param, 1),
          s = _param[0];
        s & 2 && v(e, "name", n[1]), s & 4 && ((e.__value = n[2]), (e.value = e.__value)), s & 1 && (e.checked = e.__value === n[0]);
      },
      i: Se,
      o: Se,
      d(n) {
        n && y(e), r[4][0].splice(r[4][0].indexOf(e), 1), (t = !1), i();
      },
    };
  }
  h(C4, "create_fragment");
  function A4(r, e, t) {
    var i = e.name,
      n = e.group,
      tmp = e.value,
      s = tmp === void 0 ? void 0 : tmp,
      o = [[]];
    function u() {
      (n = this.__value), t(0, n);
    }
    return (
      h(u, "input_change_handler"),
      (r.$$set = (l) => {
        "name" in l && t(1, (i = l.name)), "group" in l && t(0, (n = l.group)), "value" in l && t(2, (s = l.value));
      }),
      [n, i, s, u, o]
    );
  }
  h(A4, "instance");
  var zu = class zu extends re {
    constructor(e) {
      super(), se(this, e, A4, C4, ne, { name: 1, group: 0, value: 2 });
    }
  };
  h(zu, "Radio");
  var Pi = zu;
  function E4(r) {
    var e, t, i, n;
    function s(u) {
      r[8](u);
    }
    h(s, "checkbox_checked_binding");
    var o = { name: "uniqKEY" };
    return (
      r[1] !== void 0 && (o.checked = r[1]),
      (e = new fr({ props: o })),
      X.push(() => Z(e, "checked", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n			Matching Keys"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 2 && ((t = !0), (a.checked = u[1]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(E4, "create_default_slot_10");
  function v4(r) {
    var e, t, i, n;
    function s(u) {
      r[9](u);
    }
    h(s, "checkbox_checked_binding_1");
    var o = { name: "uniqDOI" };
    return (
      r[2] !== void 0 && (o.checked = r[2]),
      (e = new fr({ props: o })),
      X.push(() => Z(e, "checked", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n			Matching DOIs"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 4 && ((t = !0), (a.checked = u[2]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(v4, "create_default_slot_9");
  function k4(r) {
    var e, t, i, n;
    function s(u) {
      r[10](u);
    }
    h(s, "checkbox_checked_binding_2");
    var o = { name: "uniqCIT" };
    return (
      r[3] !== void 0 && (o.checked = r[3]),
      (e = new fr({ props: o })),
      X.push(() => Z(e, "checked", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n			Similar author and title"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 8 && ((t = !0), (a.checked = u[3]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(k4, "create_default_slot_8");
  function w4(r) {
    var e, t, i, n;
    function s(u) {
      r[11](u);
    }
    h(s, "checkbox_checked_binding_3");
    var o = { name: "uniqABS" };
    return (
      r[4] !== void 0 && (o.checked = r[4]),
      (e = new fr({ props: o })),
      X.push(() => Z(e, "checked", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n			Similar abstracts"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 16 && ((t = !0), (a.checked = u[4]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(w4, "create_default_slot_7");
  function x4(r) {
    var e, t, i, n, s, o, u, l, a, c;
    return (
      (i = new it({ props: { $$slots: { default: [E4] }, $$scope: { ctx: r } } })),
      (s = new it({ props: { $$slots: { default: [v4] }, $$scope: { ctx: r } } })),
      (u = new it({ props: { $$slots: { default: [k4] }, $$scope: { ctx: r } } })),
      (a = new it({ props: { $$slots: { default: [w4] }, $$scope: { ctx: r } } })),
      {
        c() {
          (e = R("p")), (e.textContent = "What to check:"), (t = q()), P(i.$$.fragment), (n = q()), P(s.$$.fragment), (o = q()), P(u.$$.fragment), (l = q()), P(a.$$.fragment);
        },
        m(f, d) {
          C(f, e, d), C(f, t, d), M(i, f, d), C(f, n, d), M(s, f, d), C(f, o, d), M(u, f, d), C(f, l, d), M(a, f, d), (c = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217730 && (p.$$scope = { dirty: d, ctx: f }), i.$set(p);
          var m = {};
          d & 134217732 && (m.$$scope = { dirty: d, ctx: f }), s.$set(m);
          var D = {};
          d & 134217736 && (D.$$scope = { dirty: d, ctx: f }), u.$set(D);
          var g = {};
          d & 134217744 && (g.$$scope = { dirty: d, ctx: f }), a.$set(g);
        },
        i(f) {
          c || (x(i.$$.fragment, f), x(s.$$.fragment, f), x(u.$$.fragment, f), x(a.$$.fragment, f), (c = !0));
        },
        o(f) {
          S(i.$$.fragment, f), S(s.$$.fragment, f), S(u.$$.fragment, f), S(a.$$.fragment, f), (c = !1);
        },
        d(f) {
          f && y(e), f && y(t), $(i, f), f && y(n), $(s, f), f && y(o), $(u, f), f && y(l), $(a, f);
        },
      }
    );
  }
  h(x4, "create_default_slot_6");
  function S4(r) {
    var e, t, i, n, s;
    function o(l) {
      r[13](l);
    }
    h(o, "radio_group_binding");
    var u = { name: "mergeStrategy", value: "combine" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new Pi({ props: u })),
      X.push(() => Z(e, "group", o)),
      {
        c() {
          P(e.$$.fragment), (i = q()), (n = R("span")), (n.innerHTML = "<strong>Combine</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates if they do not\n					already exist</small>");
        },
        m(l, a) {
          M(e, l, a), C(l, i, a), C(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (x(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          S(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          $(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(S4, "create_default_slot_5");
  function B4(r) {
    var e, t, i, n, s;
    function o(l) {
      r[14](l);
    }
    h(o, "radio_group_binding_1");
    var u = { name: "mergeStrategy", value: "overwrite" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new Pi({ props: u })),
      X.push(() => Z(e, "group", o)),
      {
        c() {
          P(e.$$.fragment), (i = q()), (n = R("span")), (n.innerHTML = "<strong>Overwrite</strong><br/> \n				<small>Keep original entry and merge in fields of duplicates, overwriting\n					existing fields if they exist</small>");
        },
        m(l, a) {
          M(e, l, a), C(l, i, a), C(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (x(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          S(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          $(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(B4, "create_default_slot_4");
  function _4(r) {
    var e, t, i, n, s;
    function o(l) {
      r[15](l);
    }
    h(o, "radio_group_binding_2");
    var u = { name: "mergeStrategy", value: "first" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new Pi({ props: u })),
      X.push(() => Z(e, "group", o)),
      {
        c() {
          P(e.$$.fragment), (i = q()), (n = R("span")), (n.innerHTML = "<strong>First</strong><br/> \n				<small>Only keep the original entry</small>");
        },
        m(l, a) {
          M(e, l, a), C(l, i, a), C(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (x(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          S(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          $(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(_4, "create_default_slot_3");
  function O4(r) {
    var e, t, i, n, s;
    function o(l) {
      r[16](l);
    }
    h(o, "radio_group_binding_3");
    var u = { name: "mergeStrategy", value: "last" };
    return (
      r[6] !== void 0 && (u.group = r[6]),
      (e = new Pi({ props: u })),
      X.push(() => Z(e, "group", o)),
      {
        c() {
          P(e.$$.fragment), (i = q()), (n = R("span")), (n.innerHTML = "<strong>Last</strong><br/> \n				<small>Only keep the last found duplicate</small>");
        },
        m(l, a) {
          M(e, l, a), C(l, i, a), C(l, n, a), (s = !0);
        },
        p(l, a) {
          var c = {};
          !t && a & 64 && ((t = !0), (c.group = l[6]), J(() => (t = !1))), e.$set(c);
        },
        i(l) {
          s || (x(e.$$.fragment, l), (s = !0));
        },
        o(l) {
          S(e.$$.fragment, l), (s = !1);
        },
        d(l) {
          $(e, l), l && y(i), l && y(n);
        },
      }
    );
  }
  h(O4, "create_default_slot_2");
  function T4(r) {
    var e, t, i, n, s, o, u, l;
    return (
      (e = new it({ props: { $$slots: { default: [S4] }, $$scope: { ctx: r } } })),
      (i = new it({ props: { $$slots: { default: [B4] }, $$scope: { ctx: r } } })),
      (s = new it({ props: { $$slots: { default: [_4] }, $$scope: { ctx: r } } })),
      (u = new it({ props: { $$slots: { default: [O4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment), (t = q()), P(i.$$.fragment), (n = q()), P(s.$$.fragment), (o = q()), P(u.$$.fragment);
        },
        m(a, c) {
          M(e, a, c), C(a, t, c), M(i, a, c), C(a, n, c), M(s, a, c), C(a, o, c), M(u, a, c), (l = !0);
        },
        p(a, c) {
          var f = {};
          c & 134217792 && (f.$$scope = { dirty: c, ctx: a }), e.$set(f);
          var d = {};
          c & 134217792 && (d.$$scope = { dirty: c, ctx: a }), i.$set(d);
          var p = {};
          c & 134217792 && (p.$$scope = { dirty: c, ctx: a }), s.$set(p);
          var m = {};
          c & 134217792 && (m.$$scope = { dirty: c, ctx: a }), u.$set(m);
        },
        i(a) {
          l || (x(e.$$.fragment, a), x(i.$$.fragment, a), x(s.$$.fragment, a), x(u.$$.fragment, a), (l = !0));
        },
        o(a) {
          S(e.$$.fragment, a), S(i.$$.fragment, a), S(s.$$.fragment, a), S(u.$$.fragment, a), (l = !1);
        },
        d(a) {
          $(e, a), a && y(t), $(i, a), a && y(n), $(s, a), a && y(o), $(u, a);
        },
      }
    );
  }
  h(T4, "create_default_slot_1");
  function R4(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[12](f);
    }
    h(u, "option0_checked_binding");
    var l = { option: "duplicates", $$slots: { default: [x4] }, $$scope: { ctx: r } };
    r[0] !== void 0 && (l.checked = r[0]), (e = new me({ props: l })), X.push(() => Z(e, "checked", u));
    function a(f) {
      r[17](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "merge", $$slots: { default: [T4] }, $$scope: { ctx: r } };
    return (
      r[5] !== void 0 && (c.checked = r[5]),
      (n = new me({ props: c })),
      X.push(() => Z(n, "checked", a)),
      {
        c() {
          P(e.$$.fragment), (i = q()), P(n.$$.fragment);
        },
        m(f, d) {
          M(e, f, d), C(f, i, d), M(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 134217758 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 1 && ((t = !0), (p.checked = f[0]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 134217792 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 32 && ((s = !0), (m.checked = f[5]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (x(e.$$.fragment, f), x(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          $(e, f), f && y(i), $(n, f);
        },
      }
    );
  }
  h(R4, "create_default_slot");
  function $4(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "Duplicates", open: !0, $$slots: { default: [R4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 134217855 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h($4, "create_fragment");
  function M4(r, e, t) {
    var i, n, s, o, u, l, a, c, f;
    var d = e.options,
      p = d.duplicates !== void 0,
      m = (n = (i = d.duplicates) === null || i === void 0 ? void 0 : i.includes("key")) !== null && n !== void 0 ? n : !0,
      D = (o = (s = d.duplicates) === null || s === void 0 ? void 0 : s.includes("doi")) !== null && o !== void 0 ? o : !1,
      g = (l = (u = d.duplicates) === null || u === void 0 ? void 0 : u.includes("citation")) !== null && l !== void 0 ? l : !1,
      b = (c = (a = d.duplicates) === null || a === void 0 ? void 0 : a.includes("abstract")) !== null && c !== void 0 ? c : !1,
      F = d.merge !== void 0,
      E = (f = d.merge) !== null && f !== void 0 ? f : "combine";
    function A(K) {
      (m = K), t(1, m);
    }
    h(A, "checkbox_checked_binding");
    function _(K) {
      (D = K), t(2, D);
    }
    h(_, "checkbox_checked_binding_1");
    function B(K) {
      (g = K), t(3, g);
    }
    h(B, "checkbox_checked_binding_2");
    function I(K) {
      (b = K), t(4, b);
    }
    h(I, "checkbox_checked_binding_3");
    function Q(K) {
      (p = K), t(0, p);
    }
    h(Q, "option0_checked_binding");
    function W(K) {
      (E = K), t(6, E);
    }
    h(W, "radio_group_binding");
    function H(K) {
      (E = K), t(6, E);
    }
    h(H, "radio_group_binding_1");
    function z(K) {
      (E = K), t(6, E);
    }
    h(z, "radio_group_binding_2");
    function oe(K) {
      (E = K), t(6, E);
    }
    h(oe, "radio_group_binding_3");
    function ae(K) {
      (F = K), t(5, F);
    }
    return (
      h(ae, "option1_checked_binding"),
      (r.$$set = (K) => {
        "options" in K && t(7, (d = K.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 255) e: p ? (t(7, (d.duplicates = []), d), m && d.duplicates.push("key"), D && d.duplicates.push("doi"), g && d.duplicates.push("citation"), b && d.duplicates.push("abstract")) : t(7, (d.duplicates = void 0), d), t(7, (d.merge = F ? E : void 0), d);
      }),
      [p, m, D, g, b, F, E, d, A, _, B, I, Q, W, H, z, oe, ae]
    );
  }
  h(M4, "instance");
  var Wu = class Wu extends re {
    constructor(e) {
      super(), se(this, e, M4, $4, ne, { options: 7 });
    }
  };
  h(Wu, "DuplicateOptions");
  var R1 = Wu;
  function P4(r) {
    var e, t, i, n, s, o;
    return {
      c() {
        (e = R("strong")), (e.textContent = "There's a problem with the bibtex"), (t = R("br")), (i = G("\n			Unknown error: ")), (n = G(r[0])), (s = R("br")), (o = G("\n			This is probably a bug."));
      },
      m(u, l) {
        C(u, e, l), C(u, t, l), C(u, i, l), C(u, n, l), C(u, s, l), C(u, o, l);
      },
      p(u, l) {
        l & 1 && Ke(n, u[0]);
      },
      d(u) {
        u && y(e), u && y(t), u && y(i), u && y(n), u && y(s), u && y(o);
      },
    };
  }
  h(P4, "create_else_block_1");
  function L4(r) {
    var e,
      t,
      i,
      n = r[0].name + "",
      s,
      o,
      u = r[0].line + "",
      l,
      a,
      c = r[0].column + "",
      f,
      d,
      p,
      m;
    function D(F, E) {
      return F[0].hint ? I4 : q4;
    }
    h(D, "select_block_type_1");
    var g = D(r, -1),
      b = g(r);
    return {
      c() {
        (e = R("strong")), (e.textContent = "There's a problem with the bibtex"), (t = R("br")), (i = q()), (s = G(n)), (o = G(" on line ")), (l = G(u)), (a = G(" column ")), (f = G(c)), (d = R("br")), (p = q()), b.c(), (m = ii());
      },
      m(F, E) {
        C(F, e, E), C(F, t, E), C(F, i, E), C(F, s, E), C(F, o, E), C(F, l, E), C(F, a, E), C(F, f, E), C(F, d, E), C(F, p, E), b.m(F, E), C(F, m, E);
      },
      p(F, E) {
        E & 1 && n !== (n = F[0].name + "") && Ke(s, n), E & 1 && u !== (u = F[0].line + "") && Ke(l, u), E & 1 && c !== (c = F[0].column + "") && Ke(f, c), g === (g = D(F, E)) && b ? b.p(F, E) : (b.d(1), (b = g(F)), b && (b.c(), b.m(m.parentNode, m)));
      },
      d(F) {
        F && y(e), F && y(t), F && y(i), F && y(s), F && y(o), F && y(l), F && y(a), F && y(f), F && y(d), F && y(p), b.d(F), F && y(m);
      },
    };
  }
  h(L4, "create_if_block");
  function q4(r) {
    var e,
      t = JSON.stringify(r[0].char) + "",
      i,
      n,
      s = r[0].node.type + "",
      o,
      u;
    return {
      c() {
        (e = G("Unexpected ")), (i = G(t)), (n = G(" in ")), (o = G(s)), (u = G("."));
      },
      m(l, a) {
        C(l, e, a), C(l, i, a), C(l, n, a), C(l, o, a), C(l, u, a);
      },
      p(l, a) {
        a & 1 && t !== (t = JSON.stringify(l[0].char) + "") && Ke(i, t), a & 1 && s !== (s = l[0].node.type + "") && Ke(o, s);
      },
      d(l) {
        l && y(e), l && y(i), l && y(n), l && y(o), l && y(u);
      },
    };
  }
  h(q4, "create_else_block");
  function I4(r) {
    var e = r[0].hint + "",
      t;
    return {
      c() {
        t = G(e);
      },
      m(i, n) {
        C(i, t, n);
      },
      p(i, n) {
        n & 1 && e !== (e = i[0].hint + "") && Ke(t, e);
      },
      d(i) {
        i && y(t);
      },
    };
  }
  h(I4, "create_if_block_1");
  function N4(r) {
    var e, t, i, n, s, o, u;
    function l(f, d) {
      return f[0] instanceof st ? L4 : P4;
    }
    h(l, "select_block_type");
    var a = l(r, -1),
      c = a(r);
    return {
      c() {
        (e = R("div")),
          (t = Nt("svg")),
          (i = Nt("circle")),
          (n = Nt("line")),
          (s = Nt("line")),
          (o = q()),
          (u = R("div")),
          c.c(),
          v(i, "cx", "12"),
          v(i, "cy", "12"),
          v(i, "r", "10"),
          v(i, "class", "svelte-176xcb"),
          v(n, "x1", "12"),
          v(n, "y1", "8"),
          v(n, "x2", "12"),
          v(n, "y2", "12"),
          v(n, "class", "svelte-176xcb"),
          v(s, "x1", "12"),
          v(s, "y1", "16"),
          v(s, "x2", "12.01"),
          v(s, "y2", "16"),
          v(s, "class", "svelte-176xcb"),
          v(t, "xmlns", "http://www.w3.org/2000/svg"),
          v(t, "width", "24"),
          v(t, "height", "24"),
          v(t, "viewBox", "0 0 24 24"),
          v(t, "fill", "none"),
          v(t, "stroke", "currentColor"),
          v(t, "stroke-width", "2"),
          v(t, "stroke-linecap", "round"),
          v(t, "stroke-linejoin", "round"),
          v(t, "class", "svelte-176xcb"),
          v(u, "class", "text"),
          v(e, "class", "container svelte-176xcb");
      },
      m(f, d) {
        C(f, e, d), V(e, t), V(t, i), V(t, n), V(t, s), V(e, o), V(e, u), c.m(u, null);
      },
      p(f, param) {
        var _param = _slicedToArray(param, 1),
          d = _param[0];
        a === (a = l(f, d)) && c ? c.p(f, d) : (c.d(1), (c = a(f)), c && (c.c(), c.m(u, null)));
      },
      i: Se,
      o: Se,
      d(f) {
        f && y(e), c.d();
      },
    };
  }
  h(N4, "create_fragment");
  function V4(r, e, t) {
    var i = e.error;
    return (
      (r.$$set = (n) => {
        "error" in n && t(0, (i = n.error));
      }),
      [i]
    );
  }
  h(V4, "instance");
  var ju = class ju extends re {
    constructor(e) {
      super(), se(this, e, V4, N4, ne, { error: 0 });
    }
  };
  h(ju, "FeedbackError");
  var $1 = ju;
  function M1(r, e, t) {
    var i = r.slice();
    return (i[4] = e[t]), i;
  }
  h(M1, "get_each_context");
  function P1(r, e, t) {
    var i = r.slice();
    return (i[7] = e[t]), i;
  }
  h(P1, "get_each_context_1");
  function z4(r) {
    var e,
      t = r[2],
      i = [];
    for (var n = 0; n < t.length; n += 1) i[n] = L1(P1(r, t, n));
    return {
      c() {
        e = R("ul");
        for (var n = 0; n < i.length; n += 1) i[n].c();
      },
      m(n, s) {
        C(n, e, s);
        for (var o = 0; o < i.length; o += 1) i[o].m(e, null);
      },
      p(n, s) {
        if (s & 4) {
          t = n[2];
          var o;
          for (o = 0; o < t.length; o += 1) {
            var u = P1(n, t, o);
            i[o] ? i[o].p(u, s) : ((i[o] = L1(u)), i[o].c(), i[o].m(e, null));
          }
          for (; o < i.length; o += 1) i[o].d(1);
          i.length = t.length;
        }
      },
      d(n) {
        n && y(e), Dn(i, n);
      },
    };
  }
  h(z4, "create_if_block_2");
  function L1(r) {
    var e,
      t,
      i = r[7].message + "",
      n;
    return {
      c() {
        (e = R("li")), (t = G("$")), (n = G(i));
      },
      m(s, o) {
        C(s, e, o), V(e, t), V(e, n);
      },
      p: Se,
      d(s) {
        s && y(e);
      },
    };
  }
  h(L1, "create_each_block_1");
  function q1(r) {
    var e;
    function t(s, o) {
      return s[3].length === 0 ? j4 : W4;
    }
    h(t, "select_block_type");
    var n = t(r, -1)(r);
    return {
      c() {
        n.c(), (e = ii());
      },
      m(s, o) {
        n.m(s, o), C(s, e, o);
      },
      p(s, o) {
        n.p(s, o);
      },
      d(s) {
        n.d(s), s && y(e);
      },
    };
  }
  h(q1, "create_if_block");
  function W4(r) {
    var e,
      t,
      i,
      n = r[3],
      s = [];
    for (var o = 0; o < n.length; o += 1) s[o] = I1(M1(r, n, o));
    return {
      c() {
        (e = R("strong")), (e.textContent = "".concat(r[3].length, " merged:")), (t = q()), (i = R("ul"));
        for (var o = 0; o < s.length; o += 1) s[o].c();
        v(e, "class", "svelte-yy7yvg");
      },
      m(o, u) {
        C(o, e, u), C(o, t, u), C(o, i, u);
        for (var l = 0; l < s.length; l += 1) s[l].m(i, null);
      },
      p(o, u) {
        if (u & 8) {
          n = o[3];
          var l;
          for (l = 0; l < n.length; l += 1) {
            var a = M1(o, n, l);
            s[l] ? s[l].p(a, u) : ((s[l] = I1(a)), s[l].c(), s[l].m(i, null));
          }
          for (; l < s.length; l += 1) s[l].d(1);
          s.length = n.length;
        }
      },
      d(o) {
        o && y(e), o && y(t), o && y(i), Dn(s, o);
      },
    };
  }
  h(W4, "create_else_block");
  function j4(r) {
    var e;
    return {
      c() {
        e = G("No duplicates");
      },
      m(t, i) {
        C(t, e, i);
      },
      p: Se,
      d(t) {
        t && y(e);
      },
    };
  }
  h(j4, "create_if_block_1");
  function I1(r) {
    var e,
      t = r[4].message + "",
      i;
    return {
      c() {
        (e = R("li")), (i = G(t));
      },
      m(n, s) {
        C(n, e, s), V(e, i);
      },
      p: Se,
      d(n) {
        n && y(e);
      },
    };
  }
  h(I1, "create_each_block");
  function H4(r) {
    var e,
      t,
      i,
      n,
      s,
      o,
      u,
      l,
      a,
      c,
      f = r[1].count + "",
      d,
      p,
      m,
      D = r[2].length > 0 && z4(r),
      g = r[0].merge && q1(r);
    return {
      c() {
        (e = R("div")),
          (t = Nt("svg")),
          (i = Nt("circle")),
          (n = Nt("line")),
          (s = Nt("line")),
          (o = q()),
          (u = R("div")),
          (l = R("strong")),
          (l.textContent = "Successful!"),
          (a = R("br")),
          (c = G("\n		Tidied ")),
          (d = G(f)),
          (p = G(" entries.\n\n		")),
          D && D.c(),
          (m = q()),
          g && g.c(),
          v(i, "cx", "12"),
          v(i, "cy", "12"),
          v(i, "r", "10"),
          v(i, "class", "svelte-yy7yvg"),
          v(n, "x1", "12"),
          v(n, "y1", "16"),
          v(n, "x2", "12"),
          v(n, "y2", "12"),
          v(n, "class", "svelte-yy7yvg"),
          v(s, "x1", "12"),
          v(s, "y1", "8"),
          v(s, "x2", "12.01"),
          v(s, "y2", "8"),
          v(s, "class", "svelte-yy7yvg"),
          v(t, "xmlns", "http://www.w3.org/2000/svg"),
          v(t, "width", "24"),
          v(t, "height", "24"),
          v(t, "viewBox", "0 0 24 24"),
          v(t, "fill", "none"),
          v(t, "stroke", "currentColor"),
          v(t, "stroke-width", "2"),
          v(t, "stroke-linecap", "round"),
          v(t, "stroke-linejoin", "round"),
          v(t, "class", "feather feather-info svelte-yy7yvg"),
          v(l, "class", "svelte-yy7yvg"),
          v(u, "class", "text"),
          v(e, "class", "container svelte-yy7yvg");
      },
      m(b, F) {
        C(b, e, F), V(e, t), V(t, i), V(t, n), V(t, s), V(e, o), V(e, u), V(u, l), V(u, a), V(u, c), V(u, d), V(u, p), D && D.m(u, null), V(u, m), g && g.m(u, null);
      },
      p(b, param) {
        var _param = _slicedToArray(param, 1),
          F = _param[0];
        F & 2 && f !== (f = b[1].count + "") && Ke(d, f), b[2].length > 0 && D.p(b, F), b[0].merge ? (g ? g.p(b, F) : ((g = q1(b)), g.c(), g.m(u, null))) : g && (g.d(1), (g = null));
      },
      i: Se,
      o: Se,
      d(b) {
        b && y(e), D && D.d(), g && g.d();
      },
    };
  }
  h(H4, "create_fragment");
  function U4(r, e, t) {
    var i = e.options,
      n = e.result,
      s = n.warnings.filter((u) => u.code !== "DUPLICATE_ENTRY"),
      o = n.warnings.filter((u) => u.code === "DUPLICATE_ENTRY");
    return (
      (r.$$set = (u) => {
        "options" in u && t(0, (i = u.options)), "result" in u && t(1, (n = u.result));
      }),
      [i, n, s, o]
    );
  }
  h(U4, "instance");
  var Hu = class Hu extends re {
    constructor(e) {
      super(), se(this, e, U4, H4, ne, { options: 0, result: 1 });
    }
  };
  h(Hu, "FeedbackSuccess");
  var N1 = Hu;
  function Y4(r) {
    var e, t;
    return (
      (e = new $1({ props: { error: r[1].error } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 2 && (s.error = i[1].error), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(Y4, "create_else_block");
  function G4(r) {
    var e, t;
    return (
      (e = new N1({ props: { options: r[0], result: r[1].result } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.result = i[1].result), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(G4, "create_if_block");
  function K4(r) {
    var e,
      t,
      i,
      n,
      s = [G4, Y4],
      o = [];
    function u(l, a) {
      return l[1].status === "success" ? 0 : 1;
    }
    return (
      h(u, "select_block_type"),
      (t = u(r, -1)),
      (i = o[t] = s[t](r)),
      {
        c() {
          (e = R("div")), i.c(), v(e, "data-test-feedback", ""), v(e, "class", "svelte-1pqmac");
        },
        m(l, a) {
          C(l, e, a), o[t].m(e, null), (n = !0);
        },
        p(l, param) {
          var _param = _slicedToArray(param, 1),
            a = _param[0];
          var c = t;
          (t = u(l, a)),
            t === c
              ? o[t].p(l, a)
              : (ri(),
                S(o[c], 1, 1, () => {
                  o[c] = null;
                }),
                ni(),
                (i = o[t]),
                i ? i.p(l, a) : ((i = o[t] = s[t](l)), i.c()),
                x(i, 1),
                i.m(e, null));
        },
        i(l) {
          n || (x(i), (n = !0));
        },
        o(l) {
          S(i), (n = !1);
        },
        d(l) {
          l && y(e), o[t].d();
        },
      }
    );
  }
  h(K4, "create_fragment");
  function X4(r, e, t) {
    var i = e.options,
      n = e.status;
    return (
      (r.$$set = (s) => {
        "options" in s && t(0, (i = s.options)), "status" in s && t(1, (n = s.status));
      }),
      [i, n]
    );
  }
  h(X4, "instance");
  var Uu = class Uu extends re {
    constructor(e) {
      super(), se(this, e, X4, K4, ne, { options: 0, status: 1 });
    }
  };
  h(Uu, "Feedback");
  var V1 = Uu;
  function Q4(r) {
    var e, t, i, n;
    function s(u) {
      r[3](u);
    }
    h(s, "radio_group_binding");
    var o = { name: "indent", value: "tabs" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new Pi({ props: o })),
      X.push(() => Z(e, "group", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n		Indent with tabs"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 1 && ((t = !0), (a.group = u[0]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(Q4, "create_default_slot_3");
  function J4(r) {
    var e, t, i, n;
    function s(u) {
      r[4](u);
    }
    h(s, "radio_group_binding_1");
    var o = { name: "indent", value: "spaces" };
    return (
      r[0] !== void 0 && (o.group = r[0]),
      (e = new Pi({ props: o })),
      X.push(() => Z(e, "group", s)),
      {
        c() {
          P(e.$$.fragment), (i = G("\n		Indent with spaces"));
        },
        m(u, l) {
          M(e, u, l), C(u, i, l), (n = !0);
        },
        p(u, l) {
          var a = {};
          !t && l & 1 && ((t = !0), (a.group = u[0]), J(() => (t = !1))), e.$set(a);
        },
        i(u) {
          n || (x(e.$$.fragment, u), (n = !0));
        },
        o(u) {
          S(e.$$.fragment, u), (n = !1);
        },
        d(u) {
          $(e, u), u && y(i);
        },
      }
    );
  }
  h(J4, "create_default_slot_2");
  function z1(r) {
    var e, t;
    return (
      (e = new qu({ props: { $$slots: { default: [Z4] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 66 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(z1, "create_if_block");
  function Z4(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = R("label")), (t = G("Spaces: ")), (i = R("input")), v(i, "name", "spaces"), v(i, "type", "number");
      },
      m(o, u) {
        C(o, e, u), V(e, t), V(e, i), Ae(i, r[1]), n || ((s = Ce(i, "input", r[5])), (n = !0));
      },
      p(o, u) {
        u & 2 && xt(i.value) !== o[1] && Ae(i, o[1]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(Z4, "create_default_slot_1");
  function e3(r) {
    var e, t, i, n, s, o;
    (e = new it({ props: { title: "Indent fields with tabs", $$slots: { default: [Q4] }, $$scope: { ctx: r } } })), (i = new it({ props: { title: "Indent fields with spaces", $$slots: { default: [J4] }, $$scope: { ctx: r } } }));
    var u = r[0] === "spaces" && z1(r);
    return {
      c() {
        P(e.$$.fragment), (t = q()), P(i.$$.fragment), (n = q()), u && u.c(), (s = ii());
      },
      m(l, a) {
        M(e, l, a), C(l, t, a), M(i, l, a), C(l, n, a), u && u.m(l, a), C(l, s, a), (o = !0);
      },
      p(l, a) {
        var c = {};
        a & 65 && (c.$$scope = { dirty: a, ctx: l }), e.$set(c);
        var f = {};
        a & 65 && (f.$$scope = { dirty: a, ctx: l }),
          i.$set(f),
          l[0] === "spaces"
            ? u
              ? (u.p(l, a), a & 1 && x(u, 1))
              : ((u = z1(l)), u.c(), x(u, 1), u.m(s.parentNode, s))
            : u &&
              (ri(),
              S(u, 1, 1, () => {
                u = null;
              }),
              ni());
      },
      i(l) {
        o || (x(e.$$.fragment, l), x(i.$$.fragment, l), x(u), (o = !0));
      },
      o(l) {
        S(e.$$.fragment, l), S(i.$$.fragment, l), S(u), (o = !1);
      },
      d(l) {
        $(e, l), l && y(t), $(i, l), l && y(n), u && u.d(l), l && y(s);
      },
    };
  }
  h(e3, "create_default_slot");
  function t3(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "Indent", open: !0, $$slots: { default: [e3] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 67 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(t3, "create_fragment");
  function i3(r, e, t) {
    var i = e.options,
      n = i.tab ? "tabs" : "spaces",
      s = i.space;
    function o(a) {
      (n = a), t(0, n);
    }
    h(o, "radio_group_binding");
    function u(a) {
      (n = a), t(0, n);
    }
    h(u, "radio_group_binding_1");
    function l() {
      (s = xt(this.value)), t(1, s);
    }
    return (
      h(l, "input_input_handler"),
      (r.$$set = (a) => {
        "options" in a && t(2, (i = a.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 3) e: t(2, (i.space = s), i), t(2, (i.tab = n === "tabs"), i);
      }),
      [n, s, i, o, u, l]
    );
  }
  h(i3, "instance");
  var Yu = class Yu extends re {
    constructor(e) {
      super(), se(this, e, i3, t3, ne, { options: 2 });
    }
  };
  h(Yu, "IndentOptions");
  var W1 = Yu;
  function r3(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Fields to sort by:\n			")), (i = R("textarea")), (n = q()), (s = R("p")), (s.innerHTML = "Space delimited, e.g: <code>key type publisher author</code>. For\n			descending order, prefix the field name with a dash, e.g.\n			<code>-year author</code>."), v(i, "name", "sortList"), v(i, "spellcheck", "false");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[3]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[5])), (o = !0));
      },
      p(l, a) {
        a & 8 && Ae(i, l[3]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(r3, "create_default_slot_2");
  function n3(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Field order:\n			")), (i = R("textarea")), (n = q()), (s = R("p")), (s.innerHTML = "Space delimited, e.g: <code>title author year</code>"), v(i, "name", "sortFieldList"), v(i, "spellcheck", "false");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[1]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[7])), (o = !0));
      },
      p(l, a) {
        a & 2 && Ae(i, l[1]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(n3, "create_default_slot_1");
  function s3(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[6](f);
    }
    h(u, "option0_checked_binding");
    var l = { option: "sort", $$slots: { default: [r3] }, $$scope: { ctx: r } };
    r[2] !== void 0 && (l.checked = r[2]), (e = new me({ props: l })), X.push(() => Z(e, "checked", u));
    function a(f) {
      r[8](f);
    }
    h(a, "option1_checked_binding");
    var c = { option: "sortFields", $$slots: { default: [n3] }, $$scope: { ctx: r } };
    return (
      r[0] !== void 0 && (c.checked = r[0]),
      (n = new me({ props: c })),
      X.push(() => Z(n, "checked", a)),
      {
        c() {
          P(e.$$.fragment), (i = q()), P(n.$$.fragment);
        },
        m(f, d) {
          M(e, f, d), C(f, i, d), M(n, f, d), (o = !0);
        },
        p(f, d) {
          var p = {};
          d & 2056 && (p.$$scope = { dirty: d, ctx: f }), !t && d & 4 && ((t = !0), (p.checked = f[2]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 2050 && (m.$$scope = { dirty: d, ctx: f }), !s && d & 1 && ((s = !0), (m.checked = f[0]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (x(e.$$.fragment, f), x(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          $(e, f), f && y(i), $(n, f);
        },
      }
    );
  }
  h(s3, "create_default_slot");
  function o3(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "Sorting", open: !0, $$slots: { default: [s3] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 2063 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(o3, "create_fragment");
  function u3(r, e, t) {
    var i, n;
    var s = e.options,
      o = s.sortFields !== void 0 && s.sortFields.length > 0,
      u = ((i = s.sortFields) !== null && i !== void 0 ? i : fo).join(" "),
      l = s.sort !== void 0 && s.sort.length > 0,
      a = ((n = s.sort) !== null && n !== void 0 ? n : _a).join(" ");
    function c() {
      (a = this.value), t(3, a);
    }
    h(c, "textarea_input_handler");
    function f(m) {
      (l = m), t(2, l);
    }
    h(f, "option0_checked_binding");
    function d() {
      (u = this.value), t(1, u);
    }
    h(d, "textarea_input_handler_1");
    function p(m) {
      (o = m), t(0, o);
    }
    return (
      h(p, "option1_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(4, (s = m.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 15) e: t(4, (s.sortFields = o && u.length > 0 ? u.split(/[\n\t ,]+/) : void 0), s), t(4, (s.sort = l && a.length > 0 ? a.split(/[\n\t ,]+/) : void 0), s);
      }),
      [o, u, l, a, s, c, f, d, p]
    );
  }
  h(u3, "instance");
  var Gu = class Gu extends re {
    constructor(e) {
      super(), se(this, e, u3, o3, ne, { options: 4 });
    }
  };
  h(Gu, "SortingOptions");
  var j1 = Gu;
  function l3(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Fields to enclose in double braces:\n			")), (i = R("textarea")), (n = q()), (s = R("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), v(i, "name", "enclosingBracesList"), v(i, "spellcheck", "false");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[11]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[16])), (o = !0));
      },
      p(l, a) {
        a[0] & 2048 && Ae(i, l[11]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(l3, "create_default_slot_3");
  function a3(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Remove braces from values of these fields:\n			")), (i = R("textarea")), (n = q()), (s = R("p")), (s.innerHTML = "Space delimited, e.g: <code>title journal</code>."), v(i, "name", "removeBracesList"), v(i, "spellcheck", "false");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[13]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[18])), (o = !0));
      },
      p(l, a) {
        a[0] & 8192 && Ae(i, l[13]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(a3, "create_default_slot_2");
  function h3(r) {
    var e, t, i, n, s, o, u;
    return {
      c() {
        (e = R("label")), (t = G("Maximum number of authors:\n			")), (i = R("input")), (n = q()), (s = R("p")), (s.textContent = 'Author lists longer than this will be truncated to "and others".'), v(i, "name", "maxAuthorsNum"), v(i, "type", "number");
      },
      m(l, a) {
        C(l, e, a), V(e, t), V(e, i), Ae(i, r[9]), C(l, n, a), C(l, s, a), o || ((u = Ce(i, "input", r[27])), (o = !0));
      },
      p(l, a) {
        a[0] & 512 && xt(i.value) !== l[9] && Ae(i, l[9]);
      },
      d(l) {
        l && y(e), l && y(n), l && y(s), (o = !1), u();
      },
    };
  }
  h(h3, "create_default_slot_1");
  function c3(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, D, g, b, F, E, A, _, B, I, Q, W, H, z, oe, ae, K, T, ee, ge, ye, fe;
    function be(w) {
      r[15](w);
    }
    h(be, "option0_checked_binding");
    var $e = { option: "curly" };
    r[0] !== void 0 && ($e.checked = r[0]), (i = new me({ props: $e })), X.push(() => Z(i, "checked", be));
    function Ye(w) {
      r[17](w);
    }
    h(Ye, "option1_checked_binding");
    var mt = { option: "enclosingBraces", $$slots: { default: [l3] }, $$scope: { ctx: r } };
    r[10] !== void 0 && (mt.checked = r[10]), (o = new me({ props: mt })), X.push(() => Z(o, "checked", Ye));
    function mi(w) {
      r[19](w);
    }
    h(mi, "option2_checked_binding");
    var Li = { option: "removeBraces", $$slots: { default: [a3] }, $$scope: { ctx: r } };
    r[12] !== void 0 && (Li.checked = r[12]), (a = new me({ props: Li })), X.push(() => Z(a, "checked", mi));
    function Qr(w) {
      r[20](w);
    }
    h(Qr, "option3_checked_binding");
    var qi = { option: "stripEnclosingBraces" };
    r[1] !== void 0 && (qi.checked = r[1]), (d = new me({ props: qi })), X.push(() => Z(d, "checked", Qr));
    function _e(w) {
      r[21](w);
    }
    h(_e, "option4_checked_binding");
    var N = { option: "numeric" };
    r[2] !== void 0 && (N.checked = r[2]), (D = new me({ props: N })), X.push(() => Z(D, "checked", _e));
    function Qe(w) {
      r[22](w);
    }
    h(Qe, "option5_checked_binding");
    var Jr = { option: "dropAllCaps" };
    r[3] !== void 0 && (Jr.checked = r[3]), (F = new me({ props: Jr })), X.push(() => Z(F, "checked", Qe));
    function os(w) {
      r[23](w);
    }
    h(os, "option6_checked_binding");
    var Zr = { option: "escape" };
    r[4] !== void 0 && (Zr.checked = r[4]), (_ = new me({ props: Zr })), X.push(() => Z(_, "checked", os));
    function us(w) {
      r[24](w);
    }
    h(us, "option7_checked_binding");
    var en = { option: "encodeUrls" };
    r[5] !== void 0 && (en.checked = r[5]), (Q = new me({ props: en })), X.push(() => Z(Q, "checked", us));
    function ls(w) {
      r[25](w);
    }
    h(ls, "option8_checked_binding");
    var tn = { option: "removeEmptyFields" };
    r[6] !== void 0 && (tn.checked = r[6]), (z = new me({ props: tn })), X.push(() => Z(z, "checked", ls));
    function Q1(w) {
      r[26](w);
    }
    h(Q1, "option9_checked_binding");
    var qh = { option: "removeDuplicateFields" };
    r[7] !== void 0 && (qh.checked = r[7]), (K = new me({ props: qh })), X.push(() => Z(K, "checked", Q1));
    function J1(w) {
      r[28](w);
    }
    h(J1, "option10_checked_binding");
    var Ih = { option: "maxAuthors", $$slots: { default: [h3] }, $$scope: { ctx: r } };
    return (
      r[8] !== void 0 && (Ih.checked = r[8]),
      (ge = new me({ props: Ih })),
      X.push(() => Z(ge, "checked", J1)),
      {
        c() {
          (e = R("div")), (t = q()), P(i.$$.fragment), (s = q()), P(o.$$.fragment), (l = q()), P(a.$$.fragment), (f = q()), P(d.$$.fragment), (m = q()), P(D.$$.fragment), (b = q()), P(F.$$.fragment), (A = q()), P(_.$$.fragment), (I = q()), P(Q.$$.fragment), (H = q()), P(z.$$.fragment), (ae = q()), P(K.$$.fragment), (ee = q()), P(ge.$$.fragment), v(e, "id", "valueOptions");
        },
        m(w, ie) {
          C(w, e, ie), C(w, t, ie), M(i, w, ie), C(w, s, ie), M(o, w, ie), C(w, l, ie), M(a, w, ie), C(w, f, ie), M(d, w, ie), C(w, m, ie), M(D, w, ie), C(w, b, ie), M(F, w, ie), C(w, A, ie), M(_, w, ie), C(w, I, ie), M(Q, w, ie), C(w, H, ie), M(z, w, ie), C(w, ae, ie), M(K, w, ie), C(w, ee, ie), M(ge, w, ie), (fe = !0);
        },
        p(w, ie) {
          var Nh = {};
          !n && ie[0] & 1 && ((n = !0), (Nh.checked = w[0]), J(() => (n = !1))), i.$set(Nh);
          var Zu = {};
          (ie[0] & 2048) | (ie[1] & 2048) && (Zu.$$scope = { dirty: ie, ctx: w }), !u && ie[0] & 1024 && ((u = !0), (Zu.checked = w[10]), J(() => (u = !1))), o.$set(Zu);
          var el = {};
          (ie[0] & 8192) | (ie[1] & 2048) && (el.$$scope = { dirty: ie, ctx: w }), !c && ie[0] & 4096 && ((c = !0), (el.checked = w[12]), J(() => (c = !1))), a.$set(el);
          var Vh = {};
          !p && ie[0] & 2 && ((p = !0), (Vh.checked = w[1]), J(() => (p = !1))), d.$set(Vh);
          var zh = {};
          !g && ie[0] & 4 && ((g = !0), (zh.checked = w[2]), J(() => (g = !1))), D.$set(zh);
          var Wh = {};
          !E && ie[0] & 8 && ((E = !0), (Wh.checked = w[3]), J(() => (E = !1))), F.$set(Wh);
          var jh = {};
          !B && ie[0] & 16 && ((B = !0), (jh.checked = w[4]), J(() => (B = !1))), _.$set(jh);
          var Hh = {};
          !W && ie[0] & 32 && ((W = !0), (Hh.checked = w[5]), J(() => (W = !1))), Q.$set(Hh);
          var Uh = {};
          !oe && ie[0] & 64 && ((oe = !0), (Uh.checked = w[6]), J(() => (oe = !1))), z.$set(Uh);
          var Yh = {};
          !T && ie[0] & 128 && ((T = !0), (Yh.checked = w[7]), J(() => (T = !1))), K.$set(Yh);
          var tl = {};
          (ie[0] & 512) | (ie[1] & 2048) && (tl.$$scope = { dirty: ie, ctx: w }), !ye && ie[0] & 256 && ((ye = !0), (tl.checked = w[8]), J(() => (ye = !1))), ge.$set(tl);
        },
        i(w) {
          fe || (x(i.$$.fragment, w), x(o.$$.fragment, w), x(a.$$.fragment, w), x(d.$$.fragment, w), x(D.$$.fragment, w), x(F.$$.fragment, w), x(_.$$.fragment, w), x(Q.$$.fragment, w), x(z.$$.fragment, w), x(K.$$.fragment, w), x(ge.$$.fragment, w), (fe = !0));
        },
        o(w) {
          S(i.$$.fragment, w), S(o.$$.fragment, w), S(a.$$.fragment, w), S(d.$$.fragment, w), S(D.$$.fragment, w), S(F.$$.fragment, w), S(_.$$.fragment, w), S(Q.$$.fragment, w), S(z.$$.fragment, w), S(K.$$.fragment, w), S(ge.$$.fragment, w), (fe = !1);
        },
        d(w) {
          w && y(e), w && y(t), $(i, w), w && y(s), $(o, w), w && y(l), $(a, w), w && y(f), $(d, w), w && y(m), $(D, w), w && y(b), $(F, w), w && y(A), $(_, w), w && y(I), $(Q, w), w && y(H), $(z, w), w && y(ae), $(K, w), w && y(ee), $(ge, w);
        },
      }
    );
  }
  h(c3, "create_default_slot");
  function f3(r) {
    var e, t;
    return (
      (e = new tt({ props: { open: !0, title: "Values", $$slots: { default: [c3] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          (n[0] & 16383) | (n[1] & 2048) && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(f3, "create_fragment");
  function d3(r, e, t) {
    var i, n, s, o, u, l, a, c, f, d, p, m, D;
    var g = e.options,
      b = (i = g.curly) !== null && i !== void 0 ? i : !1,
      F = (n = g.stripEnclosingBraces) !== null && n !== void 0 ? n : !1,
      E = (s = g.numeric) !== null && s !== void 0 ? s : !1,
      A = (o = g.dropAllCaps) !== null && o !== void 0 ? o : !1,
      _ = (u = g.escape) !== null && u !== void 0 ? u : !1,
      B = (l = g.encodeUrls) !== null && l !== void 0 ? l : !1,
      I = (a = g.removeEmptyFields) !== null && a !== void 0 ? a : !1,
      Q = (c = g.removeDuplicateFields) !== null && c !== void 0 ? c : !1,
      W = g.maxAuthors !== void 0,
      H = (f = g.maxAuthors) !== null && f !== void 0 ? f : 3,
      z = g.enclosingBraces !== void 0 && g.enclosingBraces.length > 0,
      oe = (p = (d = g.enclosingBraces) === null || d === void 0 ? void 0 : d.join(" ")) !== null && p !== void 0 ? p : "title",
      ae = g.removeBraces !== void 0 && g.removeBraces.length > 0,
      K = (D = (m = g.enclosingBraces) === null || m === void 0 ? void 0 : m.join(" ")) !== null && D !== void 0 ? D : "title";
    function T(N) {
      (b = N), t(0, b);
    }
    h(T, "option0_checked_binding");
    function ee() {
      (oe = this.value), t(11, oe);
    }
    h(ee, "textarea_input_handler");
    function ge(N) {
      (z = N), t(10, z);
    }
    h(ge, "option1_checked_binding");
    function ye() {
      (K = this.value), t(13, K);
    }
    h(ye, "textarea_input_handler_1");
    function fe(N) {
      (ae = N), t(12, ae);
    }
    h(fe, "option2_checked_binding");
    function be(N) {
      (F = N), t(1, F);
    }
    h(be, "option3_checked_binding");
    function $e(N) {
      (E = N), t(2, E);
    }
    h($e, "option4_checked_binding");
    function Ye(N) {
      (A = N), t(3, A);
    }
    h(Ye, "option5_checked_binding");
    function mt(N) {
      (_ = N), t(4, _);
    }
    h(mt, "option6_checked_binding");
    function mi(N) {
      (B = N), t(5, B);
    }
    h(mi, "option7_checked_binding");
    function Li(N) {
      (I = N), t(6, I);
    }
    h(Li, "option8_checked_binding");
    function Qr(N) {
      (Q = N), t(7, Q);
    }
    h(Qr, "option9_checked_binding");
    function qi() {
      (H = xt(this.value)), t(9, H);
    }
    h(qi, "input_input_handler");
    function _e(N) {
      (W = N), t(8, W);
    }
    return (
      h(_e, "option10_checked_binding"),
      (r.$$set = (N) => {
        "options" in N && t(14, (g = N.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty[0] & 16383)
          e: t(14, (g.curly = b), g),
            t(14, (g.stripEnclosingBraces = F), g),
            t(14, (g.numeric = E), g),
            t(14, (g.dropAllCaps = A), g),
            t(14, (g.escape = _), g),
            t(14, (g.encodeUrls = B), g),
            t(14, (g.removeEmptyFields = I), g),
            t(14, (g.removeDuplicateFields = Q), g),
            t(14, (g.maxAuthors = W ? H : void 0), g),
            t(14, (g.enclosingBraces = z && oe.length > 0 ? oe.split(/[\n\t ,]+/) : void 0), g),
            t(14, (g.removeBraces = ae && K.length > 0 ? K.split(/[\n\t ,]+/) : void 0), g);
      }),
      [b, F, E, A, _, B, I, Q, W, H, z, oe, ae, K, g, T, ee, ge, ye, fe, be, $e, Ye, mt, mi, Li, Qr, qi, _e]
    );
  }
  h(d3, "instance");
  var Ku = class Ku extends re {
    constructor(e) {
      super(), se(this, e, d3, f3, ne, { options: 14 }, null, [-1, -1]);
    }
  };
  h(Ku, "ValueOptions");
  var H1 = Ku;
  function m3(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = R("label")), (t = G("Column:\n			")), (i = R("input")), v(i, "name", "alignnum"), v(i, "type", "number");
      },
      m(o, u) {
        C(o, e, u), V(e, t), V(e, i), Ae(i, r[2]), n || ((s = Ce(i, "input", r[5])), (n = !0));
      },
      p(o, u) {
        u & 4 && xt(i.value) !== o[2] && Ae(i, o[2]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(m3, "create_default_slot_2");
  function g3(r) {
    var e, t, i, n, s;
    return {
      c() {
        (e = R("label")), (t = G("Column:\n			")), (i = R("input")), v(i, "name", "wrapnum"), v(i, "type", "number");
      },
      m(o, u) {
        C(o, e, u), V(e, t), V(e, i), Ae(i, r[4]), n || ((s = Ce(i, "input", r[7])), (n = !0));
      },
      p(o, u) {
        u & 16 && xt(i.value) !== o[4] && Ae(i, o[4]);
      },
      d(o) {
        o && y(e), (n = !1), s();
      },
    };
  }
  h(g3, "create_default_slot_1");
  function D3(r) {
    var e, t, i, n, s, o, u, l, a;
    function c(g) {
      r[6](g);
    }
    h(c, "option0_checked_binding");
    var f = { option: "align", $$slots: { default: [m3] }, $$scope: { ctx: r } };
    r[1] !== void 0 && (f.checked = r[1]), (e = new me({ props: f })), X.push(() => Z(e, "checked", c));
    function d(g) {
      r[8](g);
    }
    h(d, "option1_checked_binding");
    var p = { option: "wrap", $$slots: { default: [g3] }, $$scope: { ctx: r } };
    r[3] !== void 0 && (p.checked = r[3]), (n = new me({ props: p })), X.push(() => Z(n, "checked", d));
    function m(g) {
      r[9](g);
    }
    h(m, "option2_checked_binding");
    var D = { option: "blankLines" };
    return (
      r[0].blankLines !== void 0 && (D.checked = r[0].blankLines),
      (u = new me({ props: D })),
      X.push(() => Z(u, "checked", m)),
      {
        c() {
          P(e.$$.fragment), (i = q()), P(n.$$.fragment), (o = q()), P(u.$$.fragment);
        },
        m(g, b) {
          M(e, g, b), C(g, i, b), M(n, g, b), C(g, o, b), M(u, g, b), (a = !0);
        },
        p(g, b) {
          var F = {};
          b & 2052 && (F.$$scope = { dirty: b, ctx: g }), !t && b & 2 && ((t = !0), (F.checked = g[1]), J(() => (t = !1))), e.$set(F);
          var E = {};
          b & 2064 && (E.$$scope = { dirty: b, ctx: g }), !s && b & 8 && ((s = !0), (E.checked = g[3]), J(() => (s = !1))), n.$set(E);
          var A = {};
          !l && b & 1 && ((l = !0), (A.checked = g[0].blankLines), J(() => (l = !1))), u.$set(A);
        },
        i(g) {
          a || (x(e.$$.fragment, g), x(n.$$.fragment, g), x(u.$$.fragment, g), (a = !0));
        },
        o(g) {
          S(e.$$.fragment, g), S(n.$$.fragment, g), S(u.$$.fragment, g), (a = !1);
        },
        d(g) {
          $(e, g), g && y(i), $(n, g), g && y(o), $(u, g);
        },
      }
    );
  }
  h(D3, "create_default_slot");
  function b3(r) {
    var e, t;
    return (
      (e = new tt({ props: { title: "Whitespace", open: !0, $$slots: { default: [D3] }, $$scope: { ctx: r } } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, param) {
          var _param = _slicedToArray(param, 1),
            n = _param[0];
          var s = {};
          n & 2079 && (s.$$scope = { dirty: n, ctx: i }), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(b3, "create_fragment");
  function F3(r, e, t) {
    var i;
    var n = e.options,
      s = n.align > 1,
      o = s ? n.align : 13,
      u = n.wrap !== void 0,
      l = (i = n.wrap) !== null && i !== void 0 ? i : 80;
    function a() {
      (o = xt(this.value)), t(2, o);
    }
    h(a, "input_input_handler");
    function c(m) {
      (s = m), t(1, s);
    }
    h(c, "option0_checked_binding");
    function f() {
      (l = xt(this.value)), t(4, l);
    }
    h(f, "input_input_handler_1");
    function d(m) {
      (u = m), t(3, u);
    }
    h(d, "option1_checked_binding");
    function p(m) {
      r.$$.not_equal(n.blankLines, m) && ((n.blankLines = m), t(0, n), t(1, s), t(2, o), t(3, u), t(4, l));
    }
    return (
      h(p, "option2_checked_binding"),
      (r.$$set = (m) => {
        "options" in m && t(0, (n = m.options));
      }),
      (r.$$.update = () => {
        if (r.$$.dirty & 30) e: t(0, (n.align = s ? o : 1), n), t(0, (n.wrap = u ? l : void 0), n);
      }),
      [n, s, o, u, l, a, c, f, d, p]
    );
  }
  h(F3, "instance");
  var Xu = class Xu extends re {
    constructor(e) {
      super(), se(this, e, F3, b3, ne, { options: 0 });
    }
  };
  h(Xu, "WhitespaceOptions");
  var U1 = Xu;
  function Y1(r) {
    var e, t;
    return (
      (e = new V1({ props: { options: r[0], status: r[1] } })),
      {
        c() {
          P(e.$$.fragment);
        },
        m(i, n) {
          M(e, i, n), (t = !0);
        },
        p(i, n) {
          var s = {};
          n & 1 && (s.options = i[0]), n & 2 && (s.status = i[1]), e.$set(s);
        },
        i(i) {
          t || (x(e.$$.fragment, i), (t = !0));
        },
        o(i) {
          S(e.$$.fragment, i), (t = !1);
        },
        d(i) {
          $(e, i);
        },
      }
    );
  }
  h(Y1, "create_if_block");
  function y3(r) {
    var e, t, i, n, s, o, u, l, a, c, f, d, p, m, D, g, b, F, E, A, _, B, I, Q, W, H, z, oe, ae, K, T;
    function ee(N) {
      r[4](N);
    }
    h(ee, "indentoptions_options_binding");
    var ge = {};
    r[0] !== void 0 && (ge.options = r[0]), (s = new W1({ props: ge })), X.push(() => Z(s, "options", ee));
    function ye(N) {
      r[5](N);
    }
    h(ye, "whitespaceoptions_options_binding");
    var fe = {};
    r[0] !== void 0 && (fe.options = r[0]), (l = new U1({ props: fe })), X.push(() => Z(l, "options", ye));
    function be(N) {
      r[6](N);
    }
    h(be, "valueoptions_options_binding");
    var $e = {};
    r[0] !== void 0 && ($e.options = r[0]), (f = new H1({ props: $e })), X.push(() => Z(f, "options", be));
    function Ye(N) {
      r[7](N);
    }
    h(Ye, "sortingoptions_options_binding");
    var mt = {};
    r[0] !== void 0 && (mt.options = r[0]), (m = new j1({ props: mt })), X.push(() => Z(m, "options", Ye));
    function mi(N) {
      r[8](N);
    }
    h(mi, "duplicateoptions_options_binding");
    var Li = {};
    r[0] !== void 0 && (Li.options = r[0]), (b = new R1({ props: Li })), X.push(() => Z(b, "options", mi));
    function Qr(N) {
      r[9](N);
    }
    h(Qr, "cleanupoptions_options_binding");
    var qi = {};
    r[0] !== void 0 && (qi.options = r[0]), (A = new x1({ props: qi })), X.push(() => Z(A, "options", Qr)), (I = new T1({ props: { options: r[0] } }));
    var _e = r[1] && Y1(r);
    return {
      c() {
        (e = R("aside")),
          (t = R("form")),
          (i = R("header")),
          (i.innerHTML = '<h1 class="svelte-kvjsp8">BibTeX Tidy</h1> \n			<p>This tool tidies bibtex files by fixing inconsistent whitespace,\n				removing duplicates, removing unwanted fields, and sorting entries.</p> \n			<p><a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy">Github</a> \n				<a class="btn" href="https://github.com/FlamingTempura/bibtex-tidy/issues">Report a bug</a></p>'),
          (n = q()),
          P(s.$$.fragment),
          (u = q()),
          P(l.$$.fragment),
          (c = q()),
          P(f.$$.fragment),
          (p = q()),
          P(m.$$.fragment),
          (g = q()),
          P(b.$$.fragment),
          (E = q()),
          P(A.$$.fragment),
          (B = q()),
          P(I.$$.fragment),
          (Q = q()),
          (W = R("div")),
          _e && _e.c(),
          (H = q()),
          (z = R("button")),
          (oe = G("Tidy")),
          v(i, "class", "intro svelte-kvjsp8"),
          v(t, "class", "svelte-kvjsp8"),
          v(z, "id", "tidy"),
          (z.disabled = r[2]),
          v(z, "class", "svelte-kvjsp8"),
          v(W, "class", "run svelte-kvjsp8"),
          v(e, "id", "sidebar"),
          v(e, "class", "svelte-kvjsp8");
      },
      m(N, Qe) {
        C(N, e, Qe), V(e, t), V(t, i), V(t, n), M(s, t, null), V(t, u), M(l, t, null), V(t, c), M(f, t, null), V(t, p), M(m, t, null), V(t, g), M(b, t, null), V(t, E), M(A, t, null), V(t, B), M(I, t, null), V(e, Q), V(e, W), _e && _e.m(W, null), V(W, H), V(W, z), V(z, oe), (ae = !0), K || ((T = [Ce(t, "submit", C3), Ce(z, "click", r[10])]), (K = !0));
      },
      p(N, param) {
        var _param = _slicedToArray(param, 1),
          Qe = _param[0];
        var Jr = {};
        !o && Qe & 1 && ((o = !0), (Jr.options = N[0]), J(() => (o = !1))), s.$set(Jr);
        var os = {};
        !a && Qe & 1 && ((a = !0), (os.options = N[0]), J(() => (a = !1))), l.$set(os);
        var Zr = {};
        !d && Qe & 1 && ((d = !0), (Zr.options = N[0]), J(() => (d = !1))), f.$set(Zr);
        var us = {};
        !D && Qe & 1 && ((D = !0), (us.options = N[0]), J(() => (D = !1))), m.$set(us);
        var en = {};
        !F && Qe & 1 && ((F = !0), (en.options = N[0]), J(() => (F = !1))), b.$set(en);
        var ls = {};
        !_ && Qe & 1 && ((_ = !0), (ls.options = N[0]), J(() => (_ = !1))), A.$set(ls);
        var tn = {};
        Qe & 1 && (tn.options = N[0]),
          I.$set(tn),
          N[1]
            ? _e
              ? (_e.p(N, Qe), Qe & 2 && x(_e, 1))
              : ((_e = Y1(N)), _e.c(), x(_e, 1), _e.m(W, H))
            : _e &&
              (ri(),
              S(_e, 1, 1, () => {
                _e = null;
              }),
              ni()),
          (!ae || Qe & 4) && (z.disabled = N[2]);
      },
      i(N) {
        ae || (x(s.$$.fragment, N), x(l.$$.fragment, N), x(f.$$.fragment, N), x(m.$$.fragment, N), x(b.$$.fragment, N), x(A.$$.fragment, N), x(I.$$.fragment, N), x(_e), (ae = !0));
      },
      o(N) {
        S(s.$$.fragment, N), S(l.$$.fragment, N), S(f.$$.fragment, N), S(m.$$.fragment, N), S(b.$$.fragment, N), S(A.$$.fragment, N), S(I.$$.fragment, N), S(_e), (ae = !1);
      },
      d(N) {
        N && y(e), $(s), $(l), $(f), $(m), $(b), $(A), $(I), _e && _e.d(), (K = !1), It(T);
      },
    };
  }
  h(y3, "create_fragment");
  var C3 = h(() => !1, "submit_handler");
  function A3(r, e, t) {
    var i = e.status,
      n = e.running,
      s = e.options,
      o = Wi();
    function u(m) {
      (s = m), t(0, s);
    }
    h(u, "indentoptions_options_binding");
    function l(m) {
      (s = m), t(0, s);
    }
    h(l, "whitespaceoptions_options_binding");
    function a(m) {
      (s = m), t(0, s);
    }
    h(a, "valueoptions_options_binding");
    function c(m) {
      (s = m), t(0, s);
    }
    h(c, "sortingoptions_options_binding");
    function f(m) {
      (s = m), t(0, s);
    }
    h(f, "duplicateoptions_options_binding");
    function d(m) {
      (s = m), t(0, s);
    }
    h(d, "cleanupoptions_options_binding");
    var p = h(() => o("tidy"), "click_handler");
    return (
      (r.$$set = (m) => {
        "status" in m && t(1, (i = m.status)), "running" in m && t(2, (n = m.running)), "options" in m && t(0, (s = m.options));
      }),
      [s, i, n, o, u, l, a, c, f, d, p]
    );
  }
  h(A3, "instance");
  var Qu = class Qu extends re {
    constructor(e) {
      super(), se(this, e, A3, y3, ne, { status: 1, running: 2, options: 0 });
    }
  };
  h(Qu, "Sidebar");
  var G1 = Qu;
  var K1 =
    'Click Tidy to clean up the entries below      \n@Book{sweig42,\n  Author =	 { Stefa{n} Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n@article{steward03,\n  author =	 {Martha Steward},\n  title =	 {Cooking behind bars}, publisher = "Culinary Expert Series",\n  year = {2003}\n}\n@Book{impossible,\n  Author =	 { Stefan Sweig },\n  title =	 { The impossible book },\n  publisher =	 { Dead Poet Society},\n  year =	 1942,\n  month =        mar\n}\n';
  function E3(r) {
    var e, t, i, n, s, o;
    function u(f) {
      r[6](f);
    }
    h(u, "editor_bibtex_binding");
    var l = { error: r[4] };
    r[2] !== void 0 && (l.bibtex = r[2]), (e = new v1({ props: l })), X.push(() => Z(e, "bibtex", u));
    function a(f) {
      r[7](f);
    }
    h(a, "sidebar_options_binding");
    var c = { status: r[3], running: r[1] };
    return (
      r[0] !== void 0 && (c.options = r[0]),
      (n = new G1({ props: c })),
      X.push(() => Z(n, "options", a)),
      n.$on("tidy", r[5]),
      {
        c() {
          P(e.$$.fragment), (i = q()), P(n.$$.fragment);
        },
        m(f, d) {
          M(e, f, d), C(f, i, d), M(n, f, d), (o = !0);
        },
        p(f, param) {
          var _param = _slicedToArray(param, 1),
            d = _param[0];
          var p = {};
          d & 16 && (p.error = f[4]), !t && d & 4 && ((t = !0), (p.bibtex = f[2]), J(() => (t = !1))), e.$set(p);
          var m = {};
          d & 8 && (m.status = f[3]), d & 2 && (m.running = f[1]), !s && d & 1 && ((s = !0), (m.options = f[0]), J(() => (s = !1))), n.$set(m);
        },
        i(f) {
          o || (x(e.$$.fragment, f), x(n.$$.fragment, f), (o = !0));
        },
        o(f) {
          S(e.$$.fragment, f), S(n.$$.fragment, f), (o = !1);
        },
        d(f) {
          $(e, f), f && y(i), $(n, f);
        },
      }
    );
  }
  h(E3, "create_fragment");
  function v3(r, e, t) {
    var i;
    var n = kn({ tab: !0, align: 13, curly: !0, numeric: !0, escape: !1, duplicates: ["key"], sortFields: !0, removeDuplicateFields: !1 }),
      s = !1,
      o = K1,
      u = (i = f()) !== null && i !== void 0 ? i : n,
      l,
      a;
    function c() {
      t(1, (s = !0)),
        t(3, (l = void 0)),
        t(4, (a = void 0)),
        setTimeout(() => {
          try {
            var _$m = D0(o, u);
            t(2, (o = _$m.bibtex)), t(3, (l = { status: "success", result: _$m }));
          } catch (m) {
            console.error("bibtex parse problem:", m), t(3, (l = { status: "error", error: m })), m instanceof st && t(4, (a = m));
          } finally {
            t(1, (s = !1));
          }
        }, 100);
    }
    h(c, "handleTidy");
    function f() {
      var m = window.location.search,
        g = new URLSearchParams(m).get("opt");
      if (g)
        try {
          return kn(JSON.parse(g));
        } catch (b) {
          console.error("Error parsing options in URL");
          return;
        }
    }
    h(f, "getOptionsFromURL"),
      window.addEventListener("popstate", () => {
        var m;
        t(0, (u = (m = f()) !== null && m !== void 0 ? m : n));
      });
    function d(m) {
      (o = m), t(2, o);
    }
    h(d, "editor_bibtex_binding");
    function p(m) {
      (u = m), t(0, u);
    }
    return (
      h(p, "sidebar_options_binding"),
      (r.$$.update = () => {
        if (r.$$.dirty & 1)
          e: {
            var m = JSON.stringify(u),
              D = new URLSearchParams([["opt", m]]);
            window.history.pushState(u, "", "index.html?".concat(D.toString()));
          }
      }),
      [u, s, o, l, a, c, d, p]
    );
  }
  h(v3, "instance");
  var Ju = class Ju extends re {
    constructor(e) {
      super(), se(this, e, v3, E3, ne, {});
    }
  };
  h(Ju, "App");
  var X1 = Ju;
  new X1({ target: document.body });
})();
